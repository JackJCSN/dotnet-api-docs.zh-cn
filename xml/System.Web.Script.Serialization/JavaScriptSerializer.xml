<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8897b73ce8836425e828803bf5d7382d1bbf72f4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69051483" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7765e-101">应对 <see href="https://www.newtonsoft.com/json">Json.NET</see> 使用序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="7765e-101"><see href="https://www.newtonsoft.com/json">Json.NET</see> should be used for serialization and deserialization.</span></span> <span data-ttu-id="7765e-102">为启用 AJAX 的应用程序提供序列化和反序列化功能。</span><span class="sxs-lookup"><span data-stu-id="7765e-102">Provides serialization and deserialization functionality for AJAX-enabled applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-103"><xref:System.Web.Script.Serialization.JavaScriptSerializer>类由异步通信层在内部使用, 用于序列化和反序列化浏览器与 Web 服务器之间传递的数据。</span><span class="sxs-lookup"><span data-stu-id="7765e-103">The <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server.</span></span> <span data-ttu-id="7765e-104">您无法访问该序列化程序的实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-104">You cannot access that instance of the serializer.</span></span> <span data-ttu-id="7765e-105">但是, 此类公开公共 API。</span><span class="sxs-lookup"><span data-stu-id="7765e-105">However, this class exposes a public API.</span></span> <span data-ttu-id="7765e-106">因此, 当您想要在托管代码中使用 JavaScript 对象表示法 (JSON) 时, 可以使用类。</span><span class="sxs-lookup"><span data-stu-id="7765e-106">Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.</span></span>  
  
 <span data-ttu-id="7765e-107">若要序列化对象, 请<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="7765e-107">To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method.</span></span> <span data-ttu-id="7765e-108">若要反序列化 JSON 字符串, <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>请<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>使用或方法。</span><span class="sxs-lookup"><span data-stu-id="7765e-108">To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods.</span></span> <span data-ttu-id="7765e-109">若要序列化和反序列化不受本机<xref:System.Web.Script.Serialization.JavaScriptSerializer>支持的类型, 请<xref:System.Web.Script.Serialization.JavaScriptConverter>使用类实现自定义转换器。</span><span class="sxs-lookup"><span data-stu-id="7765e-109">To serialize and deserialize types that are not natively supported by <xref:System.Web.Script.Serialization.JavaScriptSerializer>, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span> <span data-ttu-id="7765e-110">然后, 使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法注册转换器。</span><span class="sxs-lookup"><span data-stu-id="7765e-110">Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.</span></span>  
  
## <a name="mapping-between-managed-types-and-json"></a><span data-ttu-id="7765e-111">托管类型与 JSON 之间的映射</span><span class="sxs-lookup"><span data-stu-id="7765e-111">Mapping Between Managed Types and JSON</span></span>  
 <span data-ttu-id="7765e-112">下表显示了用于序列化进程的托管类型和 JSON 的映射。</span><span class="sxs-lookup"><span data-stu-id="7765e-112">The following table shows the mapping between managed types and JSON for the serialization process.</span></span> <span data-ttu-id="7765e-113">这些托管类型受本机支持<xref:System.Web.Script.Serialization.JavaScriptSerializer>。</span><span class="sxs-lookup"><span data-stu-id="7765e-113">These managed types are natively supported by <xref:System.Web.Script.Serialization.JavaScriptSerializer>.</span></span> <span data-ttu-id="7765e-114">从 JSON 字符串反序列化为托管类型时, 将应用相同的映射。</span><span class="sxs-lookup"><span data-stu-id="7765e-114">When you are deserializing from a JSON string to a managed type, the same mapping applies.</span></span> <span data-ttu-id="7765e-115">但是, 反序列化可能是非对称的;并非所有可序列化托管类型都可以从 JSON 反序列化。</span><span class="sxs-lookup"><span data-stu-id="7765e-115">However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7765e-116">多维数组序列化为一维数组, 您应将其用作平面数组。</span><span class="sxs-lookup"><span data-stu-id="7765e-116">A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.</span></span>  
  
|<span data-ttu-id="7765e-117">托管类型</span><span class="sxs-lookup"><span data-stu-id="7765e-117">Managed type</span></span>|<span data-ttu-id="7765e-118">JSON 等效项</span><span class="sxs-lookup"><span data-stu-id="7765e-118">JSON equivalent</span></span>|  
|------------------|---------------------|  
|<span data-ttu-id="7765e-119"><xref:System.String>(仅限 UTF-8 编码)。</span><span class="sxs-lookup"><span data-stu-id="7765e-119"><xref:System.String> (UTF-8 encoding only).</span></span>|<span data-ttu-id="7765e-120">String</span><span class="sxs-lookup"><span data-stu-id="7765e-120">String</span></span>|  
|<xref:System.Char>|<span data-ttu-id="7765e-121">String</span><span class="sxs-lookup"><span data-stu-id="7765e-121">String</span></span>|  
|<span data-ttu-id="7765e-122">单空字符 (如, \ 0)</span><span class="sxs-lookup"><span data-stu-id="7765e-122">Single null char (such as, \0 )</span></span>|<span data-ttu-id="7765e-123">null</span><span class="sxs-lookup"><span data-stu-id="7765e-123">Null</span></span>|  
|<xref:System.Boolean>|<span data-ttu-id="7765e-124">布尔值。</span><span class="sxs-lookup"><span data-stu-id="7765e-124">Boolean.</span></span> <span data-ttu-id="7765e-125">在 JSON 中表示`true`为或`false`</span><span class="sxs-lookup"><span data-stu-id="7765e-125">Represented in JSON as `true` or `false`</span></span>|  
|<span data-ttu-id="7765e-126">`null`(`null`对象引用和<xref:System.Nullable>值类型)。</span><span class="sxs-lookup"><span data-stu-id="7765e-126">`null` (`null` object references and <xref:System.Nullable> value types).</span></span>|<span data-ttu-id="7765e-127">字符串值为 null</span><span class="sxs-lookup"><span data-stu-id="7765e-127">A string value of null</span></span>|  
|<xref:System.DBNull>|<span data-ttu-id="7765e-128">字符串值为 null</span><span class="sxs-lookup"><span data-stu-id="7765e-128">A string value of null</span></span>|  
|<span data-ttu-id="7765e-129">基元数值 (或与数字兼容的类型) <xref:System.Byte>: <xref:System.SByte>、 <xref:System.Int16> <xref:System.UInt16> <xref:System.UInt64> <xref:System.Int64> <xref:System.Int32> <xref:System.Single>、、 、<xref:System.Double>、、、、和。 <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="7765e-129">Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>.</span></span> <span data-ttu-id="7765e-130">使用区域性固定字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7765e-130">The culture-invariant string representation is used.</span></span>|<span data-ttu-id="7765e-131">数字</span><span class="sxs-lookup"><span data-stu-id="7765e-131">Number</span></span>|  
|<xref:System.DateTime>|<span data-ttu-id="7765e-132">Date 对象, 以 JSON 表示为 "\\/Date (计时周期数)\\/"。</span><span class="sxs-lookup"><span data-stu-id="7765e-132">Date object, represented in JSON as "\\/Date(number of ticks)\\/".</span></span> <span data-ttu-id="7765e-133">计时周期数是一个正值或负长的值, 它指示自01年1月 1 1970 日午夜起经过的计时周期数 (毫秒)。</span><span class="sxs-lookup"><span data-stu-id="7765e-133">The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.</span></span><br /><br /> <span data-ttu-id="7765e-134">支持的最大日期值<xref:System.DateTime.MaxValue>为 (12/31/9999 11:59:59 PM), 受支持的最小<xref:System.DateTime.MinValue>日期值为 (1/1/0001 12:00:00 AM)。</span><span class="sxs-lookup"><span data-stu-id="7765e-134">The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).</span></span>|  
|<span data-ttu-id="7765e-135">整数类型的枚举</span><span class="sxs-lookup"><span data-stu-id="7765e-135">Enumerations of integer type</span></span>|<span data-ttu-id="7765e-136">枚举值的整数等效项</span><span class="sxs-lookup"><span data-stu-id="7765e-136">Integer equivalent of the enumeration value</span></span>|  
|<span data-ttu-id="7765e-137">实现<xref:System.Collections.IEnumerable>或<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>也不<xref:System.Collections.IDictionary>是或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>的实现的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-137">Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7765e-138">这包括诸如<xref:System.Array>、 <xref:System.Collections.ArrayList>和<xref:System.Collections.Generic.List%601>的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-138">This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.</span></span>|<span data-ttu-id="7765e-139">使用 JSON 数组语法的数组</span><span class="sxs-lookup"><span data-stu-id="7765e-139">Array that uses JSON array syntax</span></span>|  
|<span data-ttu-id="7765e-140">实现<xref:System.Collections.IDictionary> 或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-140">Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7765e-141">这包括诸如<xref:System.Collections.Generic.Dictionary%602>和<xref:System.Collections.Hashtable>之类的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-141">This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.</span></span>|<span data-ttu-id="7765e-142">使用 JSON 字典语法的 JavaScript 对象</span><span class="sxs-lookup"><span data-stu-id="7765e-142">JavaScript object that uses JSON dictionary syntax</span></span>|  
|<span data-ttu-id="7765e-143">具有具有 get 访问器或公共实例字段的公共实例属性的自定义具体 (非抽象) 类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-143">Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.</span></span><br /><br /> <span data-ttu-id="7765e-144">请注意, 在这些类型中, 公共只写属性、标记有的<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>公共属性或公共字段属性以及这些类型的公共索引属性都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="7765e-144">Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.</span></span>|<span data-ttu-id="7765e-145">使用 JSON 字典语法的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-145">JavaScript object that uses JSON dictionary syntax.</span></span> <span data-ttu-id="7765e-146">包含一个名为 "__type" 的特殊元数据属性, 以确保反序列化正确。</span><span class="sxs-lookup"><span data-stu-id="7765e-146">A special metadata property named "__type" is included to ensure correct deserialization.</span></span> <span data-ttu-id="7765e-147">请确保公共实例属性具有 get 和 set 访问器, 以确保反序列化正确。</span><span class="sxs-lookup"><span data-stu-id="7765e-147">Make sure that public instance properties have get and set accessors to ensure correct deserialization.</span></span>|  
|<xref:System.Guid>|<span data-ttu-id="7765e-148">GUID 的字符串表示形式</span><span class="sxs-lookup"><span data-stu-id="7765e-148">String representation of a GUID</span></span>|  
|<xref:System.Uri>|<span data-ttu-id="7765e-149">返回值的字符串表示形式<xref:System.Uri.GetComponents%2A></span><span class="sxs-lookup"><span data-stu-id="7765e-149">String representation of the return value of <xref:System.Uri.GetComponents%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7765e-150">第一个示例简单阐释了如何序列化和反序列化数据对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-150">The first example provides a simple illustration of how to serialize and deserialize data objects.</span></span> <span data-ttu-id="7765e-151">它需要一个名为 Person 的类, 如下所示。</span><span class="sxs-lookup"><span data-stu-id="7765e-151">It requires a class named Person which is shown below.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 <span data-ttu-id="7765e-152">下一个示例演示一个更复杂的、完整的项目, <xref:System.Web.Script.Serialization.JavaScriptSerializer>该项目使用类来保存和还原对象的状态 (使用 JSON 序列化)。</span><span class="sxs-lookup"><span data-stu-id="7765e-152">The next example shows a more complicated and complete project that uses the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to save and restore the state of an object by using JSON serialization.</span></span> <span data-ttu-id="7765e-153">此代码使用为<xref:System.Web.Script.Serialization.JavaScriptConverter>类提供的自定义转换器。</span><span class="sxs-lookup"><span data-stu-id="7765e-153">This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582"><span data-ttu-id="7765e-154">在 ASP.NET AJAX 中使用 Web 服务</span><span class="sxs-lookup"><span data-stu-id="7765e-154">Using Web Services in ASP.NET AJAX</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0"><span data-ttu-id="7765e-155">从 ASP.NET AJAX 中的客户端脚本调用 Web 服务</span><span class="sxs-lookup"><span data-stu-id="7765e-155">Calling Web Services from Client Script in ASP.NET AJAX</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7765e-156">初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-156">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7765e-157">初始化不具有类型解析程序的 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-157">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-158">不具有类型解析<xref:System.Web.Script.Serialization.JavaScriptSerializer>程序的类的实例不在序列化的 JSON 字符串中包含类型元数据属性 (名为 "__type")。</span><span class="sxs-lookup"><span data-stu-id="7765e-158">An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named "__type") in the serialized JSON string.</span></span> <span data-ttu-id="7765e-159">类型元数据属性由<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>和<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法用于确定 JSON 字符串将转换为的适当托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-159">A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted.</span></span> <span data-ttu-id="7765e-160">有关类型解析程序的信息, 请<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>参见类。</span><span class="sxs-lookup"><span data-stu-id="7765e-160">For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver"><span data-ttu-id="7765e-161">自定义类型解析程序对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-161">The custom type-resolver object.</span></span></param>
        <summary><span data-ttu-id="7765e-162">初始化具有自定义类型解析程序的 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-162">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-163">序列化对象时, <xref:System.Web.Script.Serialization.JavaScriptSerializer>类`resolver`使用参数来确定要包含在类型元数据属性 ("__type") 的序列化 JSON 字符串中的相应值。</span><span class="sxs-lookup"><span data-stu-id="7765e-163">When it is serializing an object, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class uses the `resolver` parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property ("__type").</span></span> <span data-ttu-id="7765e-164">同样, 当<xref:System.Web.Script.Serialization.JavaScriptSerializer>类反序列化 JSON 字符串时, 它会使用解析器实例将类型元数据属性值解析为适当的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-164">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.</span></span>  
  
 <span data-ttu-id="7765e-165">您可以将`resolver`参数设置为`null`, 这等效于调用<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="7765e-165">You can set the `resolver` parameter to `null`, which is equivalent to calling the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="7765e-166">用于从客户<xref:System.Web.Script.Serialization.JavaScriptSerializer>端脚本中调用 Web 服务的异步通信层使用特殊类型解析程序的实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-166">The instance of <xref:System.Web.Script.Serialization.JavaScriptSerializer> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver.</span></span> <span data-ttu-id="7765e-167">此类型解析程序将可以反序列化的类型限制为在 Web 服务的方法签名中定义的类型或已<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>应用的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-167">This type resolver restricts the types that can be deserialized to those defined in the Web service's method signature, or the ones that have the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applied.</span></span> <span data-ttu-id="7765e-168">无法以编程方式修改此内置类型解析程序。</span><span class="sxs-lookup"><span data-stu-id="7765e-168">You cannot modify this built-in type resolver programmatically.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7765e-169">使用通过自定义类型解析器初始化的此对象的实例可能会带来安全风险。</span><span class="sxs-lookup"><span data-stu-id="7765e-169">Using an instance of this object initialized with a custom type-resolver can present a security risk.</span></span> <span data-ttu-id="7765e-170">仅将此对象与受信任的数据一起使用。</span><span class="sxs-lookup"><span data-stu-id="7765e-170">Use this object only with trusted data.</span></span> <span data-ttu-id="7765e-171">有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="7765e-171">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582"><span data-ttu-id="7765e-172">在 ASP.NET AJAX 中使用 Web 服务</span><span class="sxs-lookup"><span data-stu-id="7765e-172">Using Web Services in ASP.NET AJAX</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7765e-173">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-173">The object to convert.</span></span></param>
        <param name="targetType"><span data-ttu-id="7765e-174">对象要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-174">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="7765e-175">将指定对象转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-175">Converts the specified object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="7765e-176">序列化的 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-176">The serialized JSON string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-177">当实例序列化自定义转换器注册到的类型时, 序列化程序将<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>调用方法以获取将转换为 JSON 格式字符串的名称/值对的字典。 <xref:System.Web.Script.Serialization.JavaScriptSerializer></span><span class="sxs-lookup"><span data-stu-id="7765e-177">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.</span></span>  
  
 <span data-ttu-id="7765e-178">如果<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>对象图太复杂, 或的<xref:System.Web.Script.Serialization.JavaScriptConverter>已注册实例导致了转换器递归, 则方法也可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="7765e-178">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-179">所生成的 JSON 格式字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-179">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-180">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-180">-or-</span></span> 
 <span data-ttu-id="7765e-181"><paramref name="obj" /> 包含循环引用。</span><span class="sxs-lookup"><span data-stu-id="7765e-181"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="7765e-182">循环引用出现在子对象引用父对象，而父对象又引用子对象时。</span><span class="sxs-lookup"><span data-stu-id="7765e-182">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-183">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-183">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7765e-184"><paramref name="obj" /> 将转换成的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-184">The type to which <paramref name="obj" /> will be converted.</span></span></typeparam>
        <param name="obj"><span data-ttu-id="7765e-185">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-185">The object to convert.</span></span></param>
        <summary><span data-ttu-id="7765e-186">将给定对象转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-186">Converts the given object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="7765e-187">已转换为目标类型的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-187">The object that has been converted to the target type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-188">此<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法尝试将由`obj`表示的对象实例转换为类型`T`的实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-188">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method tries to convert the object instance that is represented by `obj` to an instance of type `T`.</span></span> <span data-ttu-id="7765e-189">在此转换过程中, 不能保证保留对象引用相等性。</span><span class="sxs-lookup"><span data-stu-id="7765e-189">During this conversion there is no guarantee that object reference equality is maintained.</span></span> <span data-ttu-id="7765e-190">因此, 您不能假定`obj`和`T`引用相同的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-190">Therefore, you cannot assume that `obj` and `T` refer to the same object.</span></span>  
  
 <span data-ttu-id="7765e-191"><xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>如果实现从<xref:System.Web.Script.Serialization.JavaScriptConverter>派生的类, 则应使用。</span><span class="sxs-lookup"><span data-stu-id="7765e-191"><xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> is intended to be used if you implement a class that derives from <xref:System.Web.Script.Serialization.JavaScriptConverter>.</span></span> <span data-ttu-id="7765e-192">转换器代码必须能够获取序列化程序传递给它的字典中的值, 然后将该值转换为类型`T`的实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-192">Converter code must be able to take a value that is in the dictionary that the serializer passes to it, and then convert that value to an instance of type `T`.</span></span> <span data-ttu-id="7765e-193">你可以从转换器代码调用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法, 而不是重新实现自定义转换代码来执行此任务。</span><span class="sxs-lookup"><span data-stu-id="7765e-193">Instead of re-implementing the custom conversion code to perform this task, you can call the <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method from the converter code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-194">下面的示例演示如何使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法从传递给转换器的字典中的值<xref:System.Web.UI.WebControls.ListItem>获取对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-194">The following example shows how to use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method to obtain a <xref:System.Web.UI.WebControls.ListItem> object from a value in the dictionary that is passed to the converter.</span></span> <span data-ttu-id="7765e-195">此代码示例是为<xref:System.Web.Script.Serialization.JavaScriptSerializer>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="7765e-195">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-196"><paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示自定义类型的“__type”属性，但是与序列化程序关联的类型解析程序找不到相应的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-196"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="7765e-197">或</span><span class="sxs-lookup"><span data-stu-id="7765e-197">-or-</span></span> 
 <span data-ttu-id="7765e-198"><paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-198"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="7765e-199">或</span><span class="sxs-lookup"><span data-stu-id="7765e-199">-or-</span></span> 
 <span data-ttu-id="7765e-200"><paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。</span><span class="sxs-lookup"><span data-stu-id="7765e-200"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="7765e-201">或</span><span class="sxs-lookup"><span data-stu-id="7765e-201">-or-</span></span> 
<span data-ttu-id="7765e-202">尝试将 <paramref name="obj" /> 转换为类似数组的托管类型，该类型不可用作反序列化目标。</span><span class="sxs-lookup"><span data-stu-id="7765e-202">An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.</span></span>  
  
<span data-ttu-id="7765e-203">或</span><span class="sxs-lookup"><span data-stu-id="7765e-203">-or-</span></span> 
<span data-ttu-id="7765e-204">不能将 <paramref name="obj" /> 转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-204">It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-205"><paramref name="obj" /> 是字典类型但遇到一个非字符串键值。</span><span class="sxs-lookup"><span data-stu-id="7765e-205"><paramref name="obj" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="7765e-206">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-206">-or-</span></span> 
 <span data-ttu-id="7765e-207"><paramref name="obj" /> 包括不可用于 <paramref name="T" /> 类型的成员定义。</span><span class="sxs-lookup"><span data-stu-id="7765e-207"><paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="7765e-208">要反序列化的 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-208">The JSON string to deserialize.</span></span></param>
        <param name="targetType"><span data-ttu-id="7765e-209">所生成对象的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-209">The type of the resulting object.</span></span></param>
        <summary><span data-ttu-id="7765e-210">将 JSON 格式字符串转换为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-210">Converts a JSON-formatted string to an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="7765e-211">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-211">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-212">此反序列化方法不会尝试将对象图的根强制转换为特定类型, <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法与方法相同。</span><span class="sxs-lookup"><span data-stu-id="7765e-212">This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method does.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7765e-213"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-213"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-214"><paramref name="input" /> 的长度超过了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-214">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-215">或</span><span class="sxs-lookup"><span data-stu-id="7765e-215">-or-</span></span> 
<span data-ttu-id="7765e-216">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-216">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="7765e-217">或</span><span class="sxs-lookup"><span data-stu-id="7765e-217">-or-</span></span> 
 <span data-ttu-id="7765e-218"><paramref name="input" /> 包含意外的字符序列。</span><span class="sxs-lookup"><span data-stu-id="7765e-218"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="7765e-219">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-219">-or-</span></span> 
 <span data-ttu-id="7765e-220"><paramref name="input" /> 是字典类型但遇到一个非字符串键值。</span><span class="sxs-lookup"><span data-stu-id="7765e-220"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="7765e-221">或</span><span class="sxs-lookup"><span data-stu-id="7765e-221">-or-</span></span> 
 <span data-ttu-id="7765e-222"><paramref name="input" /> 包括不可用于目标类型的成员定义。</span><span class="sxs-lookup"><span data-stu-id="7765e-222"><paramref name="input" /> includes member definitions that are not available on the target type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-223"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是当前与序列化程序关联的类型解析程序找不到相应的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-223"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="7765e-224">或</span><span class="sxs-lookup"><span data-stu-id="7765e-224">-or-</span></span> 
 <span data-ttu-id="7765e-225"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-225"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="7765e-226">或</span><span class="sxs-lookup"><span data-stu-id="7765e-226">-or-</span></span> 
 <span data-ttu-id="7765e-227"><paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。</span><span class="sxs-lookup"><span data-stu-id="7765e-227"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="7765e-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-228">-or-</span></span> 
<span data-ttu-id="7765e-229">尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。</span><span class="sxs-lookup"><span data-stu-id="7765e-229">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="7765e-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-230">-or-</span></span> 
<span data-ttu-id="7765e-231">不能将 <paramref name="input" /> 转换为目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-231">It is not possible to convert <paramref name="input" /> to the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7765e-232">所生成对象的类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-232">The type of the resulting object.</span></span></typeparam>
        <param name="input"><span data-ttu-id="7765e-233">要进行反序列化的 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-233">The JSON string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="7765e-234">将指定的 JSON 字符串转换为 <paramref name="T" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-234">Converts the specified JSON string to an object of type <paramref name="T" />.</span></span></summary>
        <returns><span data-ttu-id="7765e-235">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-235">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-236">方法等效于首先<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>使用方法获取对象图, 然后尝试将结果强制转换为类型`T`。 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A></span><span class="sxs-lookup"><span data-stu-id="7765e-236">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method is equivalent to first using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> method to obtain an object graph and then trying to cast the result to type `T`.</span></span>  
  
 <span data-ttu-id="7765e-237">在反序列化过程中, 将引用序列化程序的当前类型解析程序, 它确定在转换嵌套在数组和字典类型中的元素时要使用的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-237">During deserialization, the serializer's current type resolver is referenced, which determines the managed type to use when converting elements that are nested inside arrays and dictionary types.</span></span> <span data-ttu-id="7765e-238">因此, 反序列化进程将循环访问的`input`所有嵌套元素。</span><span class="sxs-lookup"><span data-stu-id="7765e-238">As a result, the deserialization process iterates through all nested elements of `input`.</span></span> <span data-ttu-id="7765e-239">有关类型解析程序的详细信息, 请<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>参阅类。</span><span class="sxs-lookup"><span data-stu-id="7765e-239">For more information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="7765e-240">下面的示例提供了如何序列化和反序列化数据对象的简单阐释。</span><span class="sxs-lookup"><span data-stu-id="7765e-240">The following example provides a simple illustration of how to serialize and deserialize data objects.</span></span>  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

<span data-ttu-id="7765e-241">它需要名为`Person`的类, 如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="7765e-241">It requires a class named `Person`, which is shown in the following example.</span></span> 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-242"><paramref name="input" /> 长度超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-242">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-243">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-243">-or-</span></span> 
<span data-ttu-id="7765e-244">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-244">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="7765e-245">或</span><span class="sxs-lookup"><span data-stu-id="7765e-245">-or-</span></span> 
 <span data-ttu-id="7765e-246"><paramref name="input" /> 包含意外的字符序列。</span><span class="sxs-lookup"><span data-stu-id="7765e-246"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="7765e-247">或</span><span class="sxs-lookup"><span data-stu-id="7765e-247">-or-</span></span> 
 <span data-ttu-id="7765e-248"><paramref name="input" /> 是字典类型但遇到一个非字符串键值。</span><span class="sxs-lookup"><span data-stu-id="7765e-248"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="7765e-249">或</span><span class="sxs-lookup"><span data-stu-id="7765e-249">-or-</span></span> 
 <span data-ttu-id="7765e-250"><paramref name="input" /> 包括不可用于 <paramref name="T" /> 类型的成员定义。</span><span class="sxs-lookup"><span data-stu-id="7765e-250"><paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7765e-251"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-251"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-252"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是与序列化程序关联的类型解析程序找不到相应的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-252"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="7765e-253">或</span><span class="sxs-lookup"><span data-stu-id="7765e-253">-or-</span></span> 
 <span data-ttu-id="7765e-254"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-254"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="7765e-255">或</span><span class="sxs-lookup"><span data-stu-id="7765e-255">-or-</span></span> 
 <span data-ttu-id="7765e-256"><paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。</span><span class="sxs-lookup"><span data-stu-id="7765e-256"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).</span></span>  
  
<span data-ttu-id="7765e-257">或</span><span class="sxs-lookup"><span data-stu-id="7765e-257">-or-</span></span> 
<span data-ttu-id="7765e-258">尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。</span><span class="sxs-lookup"><span data-stu-id="7765e-258">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="7765e-259">或</span><span class="sxs-lookup"><span data-stu-id="7765e-259">-or-</span></span> 
<span data-ttu-id="7765e-260">不能将 <paramref name="input" /> 转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-260">It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="7765e-261">要进行反序列化的 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-261">The JSON string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="7765e-262">将指定的 JSON 字符串转换为对象图。</span><span class="sxs-lookup"><span data-stu-id="7765e-262">Converts the specified JSON string to an object graph.</span></span></summary>
        <returns><span data-ttu-id="7765e-263">反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-263">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-264">与<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法一样, 此反序列化方法不会尝试将对象图的根强制转换为特定类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-264">This deserialization method does not try to cast the root of the object graph to a specific type, as with the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7765e-265"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-265"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-266"><paramref name="input" /> 长度超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-266">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-267">-or-</span></span> 
<span data-ttu-id="7765e-268">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-268">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="7765e-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-269">-or-</span></span> 
 <span data-ttu-id="7765e-270"><paramref name="input" /> 包含意外的字符序列。</span><span class="sxs-lookup"><span data-stu-id="7765e-270"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="7765e-271">或</span><span class="sxs-lookup"><span data-stu-id="7765e-271">-or-</span></span> 
 <span data-ttu-id="7765e-272"><paramref name="input" /> 是字典类型但遇到一个非字符串键值。</span><span class="sxs-lookup"><span data-stu-id="7765e-272"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="7765e-273">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-273">-or-</span></span> 
 <span data-ttu-id="7765e-274"><paramref name="input" /> 包括不可用于目标类型的成员定义。</span><span class="sxs-lookup"><span data-stu-id="7765e-274"><paramref name="input" /> includes member definitions that are not available on the target type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-275"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是当前与序列化程序关联的类型解析程序找不到相应的托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-275"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="7765e-276">或</span><span class="sxs-lookup"><span data-stu-id="7765e-276">-or-</span></span> 
 <span data-ttu-id="7765e-277"><paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-277"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="7765e-278">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-278">-or-</span></span> 
 <span data-ttu-id="7765e-279"><paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。</span><span class="sxs-lookup"><span data-stu-id="7765e-279"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="7765e-280">或</span><span class="sxs-lookup"><span data-stu-id="7765e-280">-or-</span></span> 
<span data-ttu-id="7765e-281">尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。</span><span class="sxs-lookup"><span data-stu-id="7765e-281">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="7765e-282">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7765e-282">-or-</span></span> 
<span data-ttu-id="7765e-283">不能将 <paramref name="input" /> 转换为目标类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-283">It is not possible to convert <paramref name="input" /> to the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7765e-284">获取或设置 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类接受的 JSON 字符串的最大长度。</span><span class="sxs-lookup"><span data-stu-id="7765e-284">Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</span></span></summary>
        <value><span data-ttu-id="7765e-285">JSON 字符串的最大长度。</span><span class="sxs-lookup"><span data-stu-id="7765e-285">The maximum length of JSON strings.</span></span> <span data-ttu-id="7765e-286">默认值为2097152个字符, 它等效于 4 MB 的 Unicode 字符串数据。</span><span class="sxs-lookup"><span data-stu-id="7765e-286">The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-287">仅当显式创建<xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> <xref:System.Web.Script.Serialization.JavaScriptSerializer>类的实例时, 属性的值才适用。</span><span class="sxs-lookup"><span data-stu-id="7765e-287">The value of the <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> property applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="7765e-288">使用配置文件的元素设置异步通信层使用的内部序列化程序实例的最大长度。`jsonSerialization`</span><span class="sxs-lookup"><span data-stu-id="7765e-288">Use the `jsonSerialization` element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer.</span></span> <span data-ttu-id="7765e-289">有关序列化的配置元素的详细信息, 请[参阅如何:在 Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)中配置 ASP.NET 服务。</span><span class="sxs-lookup"><span data-stu-id="7765e-289">For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7765e-290">该属性设置为小于 1 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-290">The property is set to a value that is less than one.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7765e-291">获取或设置用于约束要处理的对象级别的数目的限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-291">Gets or sets the limit for constraining the number of object levels to process.</span></span></summary>
        <value><span data-ttu-id="7765e-292">对象级别的数目。</span><span class="sxs-lookup"><span data-stu-id="7765e-292">The number of object levels.</span></span> <span data-ttu-id="7765e-293">默认值为 100。</span><span class="sxs-lookup"><span data-stu-id="7765e-293">The default is 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-294">属性指的是在以下情况下<xref:System.Web.Script.Serialization.JavaScriptSerializer>将处理的对象层次结构中的级别数: <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A></span><span class="sxs-lookup"><span data-stu-id="7765e-294">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> property refers to the number of levels in the object hierarchy that <xref:System.Web.Script.Serialization.JavaScriptSerializer> will process in the following cases:</span></span>  
  
-   <span data-ttu-id="7765e-295"><xref:System.Web.Script.Serialization.JavaScriptSerializer>类反序列化 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-295">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is deserializing a JSON string.</span></span>  
  
-   <span data-ttu-id="7765e-296"><xref:System.Web.Script.Serialization.JavaScriptSerializer>当类在序列化过程中遍历对象图时。</span><span class="sxs-lookup"><span data-stu-id="7765e-296">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is walking an object graph during serialization.</span></span>  
  
 <span data-ttu-id="7765e-297">仅当显式<xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>创建<xref:System.Web.Script.Serialization.JavaScriptSerializer>类的实例时, 的值才适用。</span><span class="sxs-lookup"><span data-stu-id="7765e-297">The value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="7765e-298">使用配置文件的元素,为异步通信层使用的内部序列化程序实例设置要处理的对象级别数。`jsonSerialization`</span><span class="sxs-lookup"><span data-stu-id="7765e-298">Use the `jsonSerialization` element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer.</span></span> <span data-ttu-id="7765e-299">有关序列化的配置元素的详细信息, 请[参阅如何:在 Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)中配置 ASP.NET 服务。</span><span class="sxs-lookup"><span data-stu-id="7765e-299">For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7765e-300">该属性设置为小于 1 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-300">The property is set to a value that is less than one.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters"><span data-ttu-id="7765e-301">包含要注册自定义转换器的数组。</span><span class="sxs-lookup"><span data-stu-id="7765e-301">An array that contains the custom converters to be registered.</span></span></param>
        <summary><span data-ttu-id="7765e-302">使用 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 实例注册自定义转换器。</span><span class="sxs-lookup"><span data-stu-id="7765e-302">Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-303">您可以通过<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>使用方法将一个或多个<xref:System.Web.Script.Serialization.JavaScriptSerializer>自定义转换器注册到一个实例。</span><span class="sxs-lookup"><span data-stu-id="7765e-303">You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.</span></span> <span data-ttu-id="7765e-304">注册自定义转换器后, <xref:System.Web.Script.Serialization.JavaScriptSerializer>将使用转换器来序列化托管类型和将 JSON 字符串反序列化为托管类型。</span><span class="sxs-lookup"><span data-stu-id="7765e-304">When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.</span></span>  
  
 <span data-ttu-id="7765e-305">可以向同一<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例注册多个转换器, 这些转换器可以指示对同一类型的支持。</span><span class="sxs-lookup"><span data-stu-id="7765e-305">Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type.</span></span> <span data-ttu-id="7765e-306">因此, 为特定类型注册的最后一个转换器是将用于<xref:System.Web.Script.Serialization.JavaScriptSerializer>序列化该类型的。</span><span class="sxs-lookup"><span data-stu-id="7765e-306">As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type.</span></span>  
  
 <span data-ttu-id="7765e-307">有关自定义转换器的详细信息, 请<xref:System.Web.Script.Serialization.JavaScriptConverter>参阅类。</span><span class="sxs-lookup"><span data-stu-id="7765e-307">For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-308">下面的示例演示如何向<xref:System.Web.Script.Serialization.JavaScriptSerializer>实例注册自定义转换器。</span><span class="sxs-lookup"><span data-stu-id="7765e-308">The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance.</span></span> <span data-ttu-id="7765e-309">此代码示例是为<xref:System.Web.Script.Serialization.JavaScriptSerializer>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="7765e-309">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7765e-310"><paramref name="converters" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-310"><paramref name="converters" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7765e-311">将对象转换为 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-311">Converts an object to a JSON string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7765e-312">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-312">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="7765e-313">将对象转换为 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-313">Converts an object to a JSON string.</span></span></summary>
        <returns><span data-ttu-id="7765e-314">序列化的 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="7765e-314">The serialized JSON string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-315">当实例序列化自定义转换器注册到的类型时, 序列化程序将<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>调用方法以获取将转换为 JSON 字符串的名称/值对的字典。 <xref:System.Web.Script.Serialization.JavaScriptSerializer></span><span class="sxs-lookup"><span data-stu-id="7765e-315">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</span></span>  
  
 <span data-ttu-id="7765e-316">如果<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>对象图太复杂, 或的<xref:System.Web.Script.Serialization.JavaScriptConverter>已注册实例导致了转换器递归, 则方法也可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="7765e-316">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="7765e-317">下面的示例提供了如何序列化和反序列化数据对象的简单阐释。</span><span class="sxs-lookup"><span data-stu-id="7765e-317">The following example provides a simple illustration of how to serialize and deserialize data objects.</span></span>  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

<span data-ttu-id="7765e-318">它需要名为`Person`的类, 如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="7765e-318">It requires a class named `Person`, which is shown in the following example.</span></span> 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-319">所生成的 JSON 字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-319">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-320">或</span><span class="sxs-lookup"><span data-stu-id="7765e-320">-or-</span></span> 
 <span data-ttu-id="7765e-321"><paramref name="obj" /> 包含循环引用。</span><span class="sxs-lookup"><span data-stu-id="7765e-321"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="7765e-322">循环引用出现在子对象引用父对象，而父对象又引用子对象时。</span><span class="sxs-lookup"><span data-stu-id="7765e-322">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-323">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-323">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7765e-324">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-324">The object to serialize.</span></span></param>
        <param name="output"><span data-ttu-id="7765e-325">用于写 JSON 字符串的 <see cref="T:System.Text.StringBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-325">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</span></span></param>
        <summary><span data-ttu-id="7765e-326">序列化对象并将生成的 JSON 字符串写入指定的 <see cref="T:System.Text.StringBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="7765e-326">Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-327">当实例序列化自定义转换器注册到的类型时, 序列化程序将<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>调用方法以获取将转换为 JSON 字符串的名称/值对的字典。 <xref:System.Web.Script.Serialization.JavaScriptSerializer></span><span class="sxs-lookup"><span data-stu-id="7765e-327">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</span></span>  
  
 <span data-ttu-id="7765e-328">如果<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>对象图太复杂, 或的<xref:System.Web.Script.Serialization.JavaScriptConverter>已注册实例导致了转换器递归, 则方法也可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="7765e-328">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7765e-329">所生成的 JSON 字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7765e-329">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="7765e-330">或</span><span class="sxs-lookup"><span data-stu-id="7765e-330">-or-</span></span> 
 <span data-ttu-id="7765e-331"><paramref name="obj" /> 包含循环引用。</span><span class="sxs-lookup"><span data-stu-id="7765e-331"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="7765e-332">循环引用出现在子对象引用父对象，而父对象又引用子对象时。</span><span class="sxs-lookup"><span data-stu-id="7765e-332">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7765e-333">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</span><span class="sxs-lookup"><span data-stu-id="7765e-333">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7765e-334"><paramref name="output" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7765e-334"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
