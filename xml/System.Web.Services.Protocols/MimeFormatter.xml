<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21c13f63563ac6f45b9e5d9c268839da1c57b946" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64023643" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为使用 HTTP 实现但不支持 SOAP 的 Web 服务和客户端提供所有读取器和编写器的抽象基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务作者和读者序列化和反序列化，分别之间 Web 方法的参数或返回对象和 HTTP 请求或响应流。 <xref:System.Web.Services.Protocols.MimeFormatter>类建立通用接口和功能，对于读取器和编写器类，在客户端和服务端。  
  
 <xref:System.Web.Services.Protocols.MimeFormatter>类支持通过 HTTP GET 和 HTTP POST 操作的 Web 服务的.NET Framework 的实现。 在 HTTP GET 操作中请求参数进行编码在 HTTP 请求的统一资源定位器 (URL)。 在 HTTP POST 操作中，请求参数在 HTTP 请求正文中，编码与 HTML 窗体一样。 使用这两个实现，返回值将显示在 HTTP 响应正文中作为非 SOAP XML 文档。  
  
 开发人员通常不必直接使用<xref:System.Web.Services.Protocols.MimeFormatter>或其子代类。 相反，当 Wsdl.exe 工具生成的 HTTP GET 或 HTTP POST 实现根据客户端代理代码，它适用<xref:System.Web.Services.Protocols.HttpMethodAttribute>每个 Web 方法和设置的特性<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>和<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>为适当的类型的属性派生自<xref:System.Web.Services.Protocols.MimeFormatter>类。 在服务器上，根据设置 ASP.NET 配置文件 (Web.config) 中使用相应的派生的类型。 在客户端上从 WSDL 确定相应的派生的类型。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">要创建其实例的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</param>
        <param name="initializer">用于初始化早期通过派生类的 <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> 方法的实现获取的实例的对象。</param>
        <summary>创建和初始化从 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 派生的具体类的实例。</summary>
        <returns>一个 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>方法创建派生类的实例并调用抽象的派生的类的实现<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>在处理请求或响应时调用方法。  
  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。 初始值设定项作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>方法从另一个实例的派生类中，通过调用获得<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>在客户端或服务初始化过程中的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在派生类中重写时，返回指定方法的初始值设定项。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</param>
        <summary>在派生类中重写时，返回指定方法的初始值设定项。</summary>
        <returns>包含指定方法的初始值设定项的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。  
  
 派生的类的实现<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>在客户端或服务初始化期间调用实例方法。 更高版本，在处理请求或响应时，初始值设定项对象传递给静态<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>方法，用于创建派生的类，然后到另一个对象的实例<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法对其进行初始化。 另一个对象执行实际的读取或写入。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">为其获取初始值设定项的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</param>
        <param name="methodInfo"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</param>
        <summary>返回指定方法的初始值设定项。</summary>
        <returns>一个 <see cref="T:System.Object" /> 对象，其中包含指定方法的初始值设定项。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。  
  
 静态<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>方法将调用派生的类的<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>方法中，隐式创建派生类的实例。 在处理请求或响应时，初始值设定项对象传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生的类的另一个实例方法。 后一种对象执行实际的读取或写入。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在派生类中重写时，返回与方法定义的输入数组对应的初始值设定项对象的数组。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">一个 Web 方法数组，对于每个方法，都将从该数组中获取一个对象，获取的对象与返回的初始值设定项数组中相应的索引对应。</param>
        <summary>在派生类中重写时，返回与方法定义的输入数组对应的初始值设定项对象的数组。</summary>
        <returns>与方法定义的输入数组对应的初始值设定项对象的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。  
  
 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>实例方法调用<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>实例方法，为每个输入 Web 方法。 这意味着派生自的类的实例<xref:System.Web.Services.Protocols.MimeFormatter>已创建。 在处理请求或响应时，初始值设定项传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生的类的另一个实例方法。 后一种对象执行实际的读取或写入。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">为其获取初始值设定项的派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的类型。</param>
        <param name="methodInfos"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 类型的数组，指定为其获取初始值设定项的 Web 方法。</param>
        <summary>返回与派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的指定类的方法定义输入数组对应的初始值设定项对象的数组。</summary>
        <returns>与派生自 <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 的指定类的方法定义输入数组对应的初始值设定项对象的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始值设定项是一个对象作为参数传递给<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>方法。  
  
 静态<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>方法的调用将导致<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>属于指定的派生类方法`type`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">适用于实现该方法的特定类的类型的对象。</param>
        <summary>在派生类中重写时，初始化一个实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>在处理请求或响应时调用方法; 但是，通过调用获取初始值设定项<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>在客户端或服务初始化过程中的另一个实例上的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>