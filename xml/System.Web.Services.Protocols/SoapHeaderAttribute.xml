<Type Name="SoapHeaderAttribute" FullName="System.Web.Services.Protocols.SoapHeaderAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19484810560a156e12f97ea83888c903ea82bccc" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67724740" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapHeaderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapHeaderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapHeaderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeaderAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapHeaderAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This attribute is applied to an XML Web service method or an XML Web service client to specify a SOAP header that the XML Web service method or XML Web service client can process. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基本步骤来接收和处理 SOAP 标头：  
  
1.  创建一个派生自的类<xref:System.Web.Services.Protocols.SoapHeader>SOAP 标头中表示的数据传递。  
  
2.  将成员添加到 XML Web 服务类或在步骤 1 中创建的类型的 XML Web 服务客户端代理类。  
  
3.  将应用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>到 XML Web 服务方法或代理类中的相应方法，指定在步骤 2 中创建的成员<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。  
  
4.  在 XML Web 服务方法或 XML Web 服务客户端代码中，访问<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性来处理 SOAP 标头中发送的数据。  
  
 有关更多详细信息，请参阅<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。  
  
   
  
## Examples  
 以下`MyWebService`XML Web 服务定义了一个<xref:System.Web.Services.Protocols.SoapHeader>类型的`MyHeader`。 `Hello` XML Web 服务方法要求客户端调用 XML Web 服务方法与此<xref:System.Web.Services.Protocols.SoapHeader>。 `Hello` XML Web 服务还捕获任何 SOAP 标头以外`MyHeader`。  
  
 [!code-aspx-csharp[Classic SoapHeaderAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHeaderAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute Example/VB/sourcevb.asmx)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHeaderAttribute (string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHeaderAttribute(System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapHeaderAttribute : string -&gt; System.Web.Services.Protocols.SoapHeaderAttribute" Usage="new System.Web.Services.Protocols.SoapHeaderAttribute memberName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">The member of the XML Web service class representing the SOAP header contents. The <see cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" /> property will be set to the value of this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" /> class, setting the member of the XML Web service class representing the SOAP header contents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服务客户端或 XML Web 服务可以指定想要处理的特定 XML Web 服务方法通过应用的 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>到 XML Web 服务类或代理类中的相应方法中的 XML Web 服务方法。 为了使要接收的 SOAP 标头的内容的 XML Web 服务方法，成员添加到 XML Web 服务类的<xref:System.Type>派生自<xref:System.Web.Services.Protocols.SoapHeader>。 同样，XML Web 服务客户端将成员添加到代理类派生自<xref:System.Web.Services.Protocols.SoapHeader>。 该<xref:System.Type>从派生<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 标头的内容，由 XML Web 服务或想要接收的 SOAP 标头的 XML Web 服务客户端的开发人员创建。 创建的类，一旦<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以应用于 XML Web 服务方法或指定要接收的 SOAP 标头内容的成员的 XML Web 服务客户端代理类中的相应方法`memberName`此构造函数参数或<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。  
  
 XML Web 服务方法可以通过将多个成员添加到 XML Web 服务类或 XML Web 服务代理类和又应用多个接收多个 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>属性到 XML Web 服务方法。  
  
 若要接收和编写 XML Web 服务时处理未知的 SOAP 标头，指定<xref:System.Type>的成员可以<xref:System.Web.Services.Protocols.SoapUnknownHeader>，<xref:System.Web.Services.Protocols.SoapHeader>或其中一个类的数组。  
  
   
  
## Examples  
 以下`MyWebService`XML Web 服务定义了一个<xref:System.Web.Services.Protocols.SoapHeader>类型的`MyHeader`。 `Hello` XML Web 服务方法指定`myHeader`作为成员<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性中接收的内容`MyHeader`SOAP 标头传递到 XML Web 服务方法。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapHeaderDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SoapHeaderDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderDirection Direction { System::Web::Services::Protocols::SoapHeaderDirection get(); void set(System::Web::Services::Protocols::SoapHeaderDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.Services.Protocols.SoapHeaderDirection with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the SOAP header is intended for the XML Web service or the XML Web service client or both.</summary>
        <value>SOAP 标头的目标接收方。 默认值是<see cref="F:System.Web.Services.Protocols.SoapHeaderDirection.In" />，这意味着预期的接收方是仅使用 XML Web 服务。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下`MyWebService`XML Web 服务定义了一个<xref:System.Web.Services.Protocols.SoapHeader>类型的`MyHeader`。 `Hello` XML Web 服务方法指定`MyHeader`必须发送到 XML Web 服务方法和客户端以 invocate XML Web 服务方法。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the member of the XML Web service class representing the SOAP header contents.</summary>
        <value>表示 SOAP 标头内容的 XML Web 服务类的成员。 没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服务或 XML Web 服务客户端可以指定它想要通过应用处理的 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>到 XML Web 服务类或代理类中的相应方法中的 XML Web 服务方法。 为了使要接收的 SOAP 标头的内容的 XML Web 服务方法，成员添加到派生类型的 XML Web 服务类<xref:System.Web.Services.Protocols.SoapHeader>。 同样，XML Web 服务客户端将成员添加到代理类派生自<xref:System.Web.Services.Protocols.SoapHeader>。 <xref:System.Type>从派生<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 标头的内容，由 XML Web 服务或想要接收的 SOAP 标头的 XML Web 服务客户端的开发人员创建。 创建的类，一旦<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以应用于 XML Web 服务方法或指定要接收的 SOAP 标头内容的成员的 XML Web 服务客户端代理类中的相应方法<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性。  
  
 XML Web 服务方法可以通过将多个成员添加到 XML Web 服务类或 XML Web 服务代理类和又应用多个接收多个 SOAP 标头<xref:System.Web.Services.Protocols.SoapHeaderAttribute>属性到 XML Web 服务方法。  
  
 若要接收和编写 XML Web 服务时处理未知的 SOAP 标头，指定的成员为类型<xref:System.Web.Services.Protocols.SoapUnknownHeader>，<xref:System.Web.Services.Protocols.SoapHeader>或其中一个类的数组。  
  
   
  
## Examples  
 以下`MyWebService`XML Web 服务定义了一个<xref:System.Web.Services.Protocols.SoapHeader>类型的`MyHeader`。 `Hello` XML Web 服务方法指定`myHeader`作为成员<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性中接收的内容`MyHeader`SOAP 标头传递到 XML Web 服务方法。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="public bool Required { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Required" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberSignature Language="VB.NET" Value="Public Property Required As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Required { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Required : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This property will be removed from a future version. The presence of a particular header in a SOAP message is no longer enforced", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is obsolete and has no functionality.</summary>
        <value>一个 <see cref="T:System.Boolean" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要验证的 SOAP 标头已发送到 XML Web 服务，请确认该成员中指定<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>属性是`null`。 如果它是`null`，未发送的 SOAP 标头。  
  
 在 1.0 版中的.NET Framework SDK，<xref:System.Web.Services.Protocols.SoapHeaderAttribute.Required%2A>属性指示是否必须理解和处理的接收方 XML Web 服务或 XML Web 服务客户端的 SOAP 标头。 如果收件人未处理的 SOAP 标头时引发异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>