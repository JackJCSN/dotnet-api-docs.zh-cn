<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87c809c6dbdb72c673222f1899cf438a87173874" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67724763" /></Metadata><TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpPostClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The base class for XML Web service client proxies that use the HTTP-POST protocol.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 XML Web 服务客户端使用 HTTP POST 协议，通过默认参数内使用 URL 编码规则的 HTTP 正文编码，并使用纯 XML 响应。 此协议使用派生的类<xref:System.Web.Services.Protocols.MimeFormatter>进行编码的参数和返回值到标准的 MIME 格式。 服务说明中指定要使用的编码器。  
  
 如果要生成的 XML Web 服务客户端，然后使用 ASP.NET，间接派生的代理类，或直接从<xref:System.Web.Services.Protocols.WebClientProtocol>需要为你想要调用 XML Web 服务创建。 在 XML Web 服务客户端使用 HTTP 调用时，派生代理类<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，它又派生<xref:System.Web.Services.Protocols.WebClientProtocol>。  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> 并<xref:System.Web.Services.Protocols.HttpPostClientProtocol>派生自<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，为调用 XML Web 服务方法分别使用 HTTP GET 和 HTTP POST 提供支持。 调用 XML Web 服务使用 SOAP 的客户端应派生自<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>。  
  
 生成代理类的详细信息，请参阅[创建 XML Web 服务代理](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100))。  
  
   
  
## Examples  
 下面的示例是 Wsdl.exe 实用工具为生成的代理类`Math`下面的 XML Web 服务。 代理类派生自<xref:System.Web.Services.Protocols.HttpPostClientProtocol>，又派生自抽象<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>类。  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 下面的示例是`Math`XML Web 服务，从其创建以前的代理类。  
  
 [!code-aspx-csharp[Classic HttpPostClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpPostClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/sourcevb.asmx)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpPostClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</summary>
        <returns>The <see cref="T:System.Net.WebRequest" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写的基础版本<xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A>来指定使用 HTTP POST 使对 XML Web 服务的 HTTP 请求。 通过重写此方法，可以自定义<xref:System.Net.WebRequest>对象，然后才能进行 XML Web 服务请求。 例如，可以将自定义标头添加到请求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null or has a length of zero.</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>