<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddbecf0fb6f86cf2309eb940f31b0df1734172db" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759849" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dcc0f-101">使用 ASP.NET 创建的 XML Web services 的 SOAP 扩展的基类。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-101">The base class for SOAP extensions for XML Web services created using ASP.NET.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-102">ASP.NET 允许 SOAP 相关的基础结构生成通过扩展性机制。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-102">ASP.NET allows a SOAP-related infrastructure to be built by means of an extensibility mechanism.</span></span> <span data-ttu-id="dcc0f-103">ASP.NET SOAP 扩展体系结构围绕一个扩展，可以检查或修改在客户端或服务器上处理的消息中的特定阶段的一条消息。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-103">The ASP.NET SOAP extension architecture revolves around an extension that can inspect or modify a message at specific stages in message processing on either the client or the server.</span></span>  
  
 <span data-ttu-id="dcc0f-104">派生自 ASP.NET SOAP 扩展<xref:System.Web.Services.Protocols.SoapExtension>类。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-104">ASP.NET SOAP extensions derive from the <xref:System.Web.Services.Protocols.SoapExtension> class.</span></span> <span data-ttu-id="dcc0f-105"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>和<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法提供替代机制，用于初始化 SOAP 扩展以提高性能。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-105">The <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> and <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods provide alternative mechanisms for initializing the SOAP extension to enhance performance.</span></span> <span data-ttu-id="dcc0f-106"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 因为在中定义每个阶段调用的方法就是大多数 SOAP 扩展，核心<xref:System.Web.Services.Protocols.SoapMessageStage>，允许 SOAP 扩展来执行该特定的 SOAP 扩展的所需的行为。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-106"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> is the heart of most SOAP extensions, as the method is called at each stage defined in <xref:System.Web.Services.Protocols.SoapMessageStage>, allowing the SOAP extension to perform the desired behavior of that specific SOAP extension.</span></span> <span data-ttu-id="dcc0f-107">为需要的 SOAP 扩展修改 SOAP 请求或 SOAP 响应<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>提供要接收建议的数据以跨网络发送的机会。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-107">For SOAP extensions that need to modify the SOAP request or SOAP response, <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> provides an opportunity to receive the proposed data to be sent across the wire.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc0f-108">以下`TraceExtension`SOAP 扩展输出 SOAP 请求和对指定的文件时应用于 XML Web 服务方法的 SOAP 响应。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-108">The following `TraceExtension` SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method.</span></span> <span data-ttu-id="dcc0f-109">如果安装了以下 SOAP 扩展要与 XML Web 服务一起运行，ASPNET 用户帐户必须有权写入到在其中写入日志文件的目录。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-109">If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.</span></span>  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcc0f-110">初始化 <see cref="T:System.Web.Services.Protocols.SoapExtension" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-110">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapExtension" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="dcc0f-111">包含 SOAP 请求或响应的内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-111">A memory buffer containing the SOAP request or response.</span></span></param>
        <summary><span data-ttu-id="dcc0f-112">当在派生类中被重写时，允许 SOAP 扩展访问包含 SOAP 请求或响应的内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-112">When overridden in a derived class, allows a SOAP extension access to the memory buffer containing the SOAP request or response.</span></span></summary>
        <returns><span data-ttu-id="dcc0f-113"><see cref="T:System.IO.Stream" />，它表示此 SOAP 扩展可以修改的新内存缓冲区。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-113">A <see cref="T:System.IO.Stream" /> representing a new memory buffer that this SOAP extension can modify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-114"><xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 确保具有最高优先级的 SOAP 扩展可以修改 SOAP 消息发送或通过网络返回最接近的实际数据。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-114"><xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> ensures that SOAP extensions with the highest priority can modify the actual data closest to the SOAP message sent or returned over the wire.</span></span>  
  
 <span data-ttu-id="dcc0f-115">SOAP 扩展应保存的引用<xref:System.IO.Stream>传递到<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>并<xref:System.IO.Stream>从返回<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-115">SOAP extensions should save references of the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> and the <xref:System.IO.Stream> returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.</span></span> <span data-ttu-id="dcc0f-116">如果 SOAP 扩展配置为使用 XML Web 服务方法，运行<xref:System.IO.Stream>传递到<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>包含在序列化的 SOAP 请求<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-116">If the SOAP extension is configured to run with a XML Web service method, the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> contains the serialized SOAP request at the <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize><xref:System.Web.Services.Protocols.SoapMessageStage>.</span></span> <span data-ttu-id="dcc0f-117">同样，<xref:System.IO.Stream>返回从引用<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>时序列化时发生，因此包含序列化的 SOAP 响应中写入<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-117">Similarly, the <xref:System.IO.Stream> reference returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> is written into when the serialization occurs and thus contains the serialized SOAP response in the <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc0f-118">以下示例将保存这两<xref:System.IO.Stream>传递到<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>并<xref:System.IO.Stream>从返回<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>中的成员变量`oldStream`和`newStream`分别。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-118">The following example saves both the <xref:System.IO.Stream> passed into <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> and the <xref:System.IO.Stream> returned from <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> in the member variables `oldStream` and `newStream`, respectively.</span></span>  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcc0f-119">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本初始化特定于 XML Web services 方法的数据。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-119">When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method at a one time performance cost.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="dcc0f-120">实现应用 SOAP 扩展的 XML Web services 的类的类型。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-120">The type of the class implementing the XML Web service to which the SOAP extension is applied.</span></span></param>
        <summary><span data-ttu-id="dcc0f-121">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本初始化特定于实现 XML Web services 的类的数据。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-121">When overridden in a derived class, allows a SOAP extension to initialize data specific to a class implementing an XML Web service at a one time performance cost.</span></span></summary>
        <returns><span data-ttu-id="dcc0f-122"><see cref="T:System.Object" />，SOAP 扩展将对其进行初始化以用于缓存。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-122">The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-123">重载的<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>，获取由调用 ASP.NET 取决于如何指定 SOAP 扩展。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-123">The overload of <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that gets called by ASP.NET depends on how the SOAP extension was specified.</span></span> <span data-ttu-id="dcc0f-124">有两种方法用于指定 SOAP 扩展：</span><span class="sxs-lookup"><span data-stu-id="dcc0f-124">There are two methods for specifying a SOAP extension:</span></span>  
  
-   <span data-ttu-id="dcc0f-125">应用自定义特性，派生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，到单个 XML Web 服务方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-125">Apply a custom attribute, deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, to the individual XML Web service method.</span></span>  
  
-   <span data-ttu-id="dcc0f-126">在 web.config 或 app.config 配置文件中添加的引用。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-126">Add a reference in either the web.config or app.config configuration files.</span></span>  
  
 <span data-ttu-id="dcc0f-127">如果添加一个配置文件的引用，该配置文件的作用域内的所有 XML Web 服务在都运行 SOAP 扩展。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-127">If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file.</span></span> <span data-ttu-id="dcc0f-128">ASP.NET 在指定时，通过引用配置文件中，SOAP 扩展调用<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>传入的重载<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-128">When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that passes in a <xref:System.Type>.</span></span> <span data-ttu-id="dcc0f-129">通过应用自定义属性指定一个扩展，ASP.NET 将调用<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>通过中<xref:System.Web.Services.Protocols.LogicalMethodInfo>和一个<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-129">When specifying an extension by applying a custom attribute, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that passes in a <xref:System.Web.Services.Protocols.LogicalMethodInfo> and a <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span>  
  
 <span data-ttu-id="dcc0f-130">将 SOAP 扩展添加到配置文件的详细信息，请参阅[XML Web 服务使用 ASP.NET 创建的配置选项](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-130">For details on adding SOAP extensions to a configuration file, see [Configuration Options for XML Web Services Created Using ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc0f-131">下面的代码演示如何一个可以将 SOAP 扩展特定的数据保存在每个 XML Web 服务的基础。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-131">The following code demonstrates how one can save SOAP extension specific data on a per XML Web service basis.</span></span> <span data-ttu-id="dcc0f-132">如果使用配置文件而不特性配置 SOAP 扩展，SOAP 扩展可以存储数据的 SOAP 扩展应用于每个类。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-132">If the SOAP extension is configured using a configuration file instead of an attribute, the SOAP extension can store data for each class to which the SOAP extension is applied.</span></span> <span data-ttu-id="dcc0f-133">此示例将保存在其中记录发往和来自基于到缓存实现 XML Web 服务的类名称的 XML Web 服务方法的 SOAP 消息文件的名称。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-133">This example saves the name of a file in which to log the SOAP messages sent to and from the XML Web service method based on the name of the class implementing the XML Web service into the cache.</span></span> <span data-ttu-id="dcc0f-134">此代码示例是 TraceExtension SOAP 扩展可以在中找到一个完整的代码示例的一部分<xref:System.Web.Services.Protocols.SoapExtension>类概述。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-134">This code example is part of a full code example for a TraceExtension SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.</span></span>  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="dcc0f-135"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，它表示应用 SOAP 扩展的 XML Web services 方法的特定函数原型。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-135">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied.</span></span></param>
        <param name="attribute"><span data-ttu-id="dcc0f-136">应用于 XML Web services 方法的 <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-136">The <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> applied to the XML Web service method.</span></span></param>
        <summary><span data-ttu-id="dcc0f-137">当在派生类中重写时，允许 SOAP 扩展以一次执行的成本使用应用于 XML Web services 方法的特性来初始化特定于 XML Web services 方法的数据。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-137">When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method using an attribute applied to the XML Web service method at a one time performance cost.</span></span></summary>
        <returns><span data-ttu-id="dcc0f-138"><see cref="T:System.Object" />，SOAP 扩展将对其进行初始化以用于缓存。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-138">The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-139">如果 SOAP 扩展的配置使用配置文件，请参阅<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>接受重载<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-139">If the SOAP extension is configured using a configuration file see the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that accepts a <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="dcc0f-140">SOAP 扩展有三个机会来初始化数据，并且它们都具有不同的用途：</span><span class="sxs-lookup"><span data-stu-id="dcc0f-140">A SOAP extension has three opportunities to initialize data and they all have different purposes:</span></span>  
  
-   <span data-ttu-id="dcc0f-141">类构造函数的每次 SOAP 扩展实例化并通常用来初始化成员变量，都会调用类构造函数。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-141">Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</span></span>  
  
-   <span data-ttu-id="dcc0f-142"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>但是，将调用只是一次，第一次的 SOAP 请求对 XML Web services 方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-142"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, however, is called just once, the first time a SOAP request is made to an XML Web services method.</span></span> <span data-ttu-id="dcc0f-143">如果自定义特性应用于 XML Web 服务方法，<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-143">If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked.</span></span> <span data-ttu-id="dcc0f-144">这允许 SOAP 扩展以询问<xref:System.Web.Services.Protocols.LogicalMethodInfo>的 XML Web 服务方法原型的信息或访问特定于扩展的数据通过派生自的类传递<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-144">This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span> <span data-ttu-id="dcc0f-145">返回值可由 ASP.NET 缓存并传递给后续<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-145">The return value is cached by ASP.NET and passed into subsequent <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods.</span></span> <span data-ttu-id="dcc0f-146">因此，进行的初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>实质上是封装到一次性的性能会下降。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-146">Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.</span></span>  
  
-   <span data-ttu-id="dcc0f-147"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 每次的 SOAP 请求对 XML Web 服务方法，但有类构造函数，其优点在于调用<xref:System.Object>中初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>传递给它。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-147"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc0f-148">下面的代码演示如何获取 SOAP 扩展特定的数据传递中使用的类，派生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，然后将其缓存中的数据和<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-148">The following code demonstrates how you can obtain SOAP extension-specific data passed in using a class that derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, and then cache that data in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>.</span></span> <span data-ttu-id="dcc0f-149">此代码示例的一个完整的代码示例摘自`TraceExtension`可在 SOAP 扩展<xref:System.Web.Services.Protocols.SoapExtension>类概述。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-149">This code example is part of a full code example for a `TraceExtension` SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.</span></span> <span data-ttu-id="dcc0f-150">此代码示例依赖于`TraceExtensionAttribute`传递到`attribute`参数。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-150">This code example relies on a `TraceExtensionAttribute` being passed into the `attribute` parameter.</span></span> <span data-ttu-id="dcc0f-151">在完整的代码示例中，`TraceExtensionAttribute`派生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，并添加`Filename`属性，它是什么<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>在缓存中存储。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-151">In the full code example, `TraceExtensionAttribute` derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> and adds a `Filename` property, which is what <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> stores in the cache.</span></span>  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="dcc0f-152"><see cref="T:System.Object" /> 从 ASP.NET 缓存的 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 中返回。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-152">The <see cref="T:System.Object" /> returned from <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> cached by ASP.NET.</span></span></param>
        <summary><span data-ttu-id="dcc0f-153">当在派生类中被重写时，允许 SOAP 扩展使用缓存于 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 方法中的数据初始化其自身。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-153">When overridden in a derived class, allows a SOAP extension to initialize itself using the data cached in the <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-154">SOAP 扩展有三个机会来初始化数据，并且它们都具有不同的用途：</span><span class="sxs-lookup"><span data-stu-id="dcc0f-154">A SOAP extension has three opportunities to initialize data and they all have different purposes:</span></span>  
  
-   <span data-ttu-id="dcc0f-155">类构造函数的每次 SOAP 扩展实例化并通常用来初始化成员变量，都会调用类构造函数。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-155">Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</span></span>  
  
-   <span data-ttu-id="dcc0f-156"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> -只需一次，第一次的 SOAP 请求对 XML Web 服务方法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-156"><xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - This method is called just once, the first time a SOAP request is made to an XML Web services method.</span></span> <span data-ttu-id="dcc0f-157">如果自定义特性应用于 XML Web 服务方法，<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-157">If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked.</span></span> <span data-ttu-id="dcc0f-158">这允许 SOAP 扩展以询问<xref:System.Web.Services.Protocols.LogicalMethodInfo>的 XML Web 服务方法原型的信息或访问特定于扩展的数据通过派生自的类传递<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-158">This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</span></span> <span data-ttu-id="dcc0f-159">返回值可由 ASP.NET 缓存并传递给后续<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-159">The return value is cached by ASP.NET and passed into subsequent <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> methods.</span></span> <span data-ttu-id="dcc0f-160">因此，进行的初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>实质上是封装到一次性的性能会下降。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-160">Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.</span></span>  
  
-   <span data-ttu-id="dcc0f-161"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> -每次的 SOAP 请求对 XML Web 服务方法，但有类构造函数，其优点在于调用此方法<xref:System.Object>中初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>传递给它。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-161"><xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - This method is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="dcc0f-162">此外可以添加 SOAP 扩展，而无需派生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>通过使用[ \<soapExtensionTypes > 元素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)配置文件中。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-162">You can also add a SOAP extension without deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> by using the [\<soapExtensionTypes> Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) in a configuration file.</span></span> <span data-ttu-id="dcc0f-163">有关详细信息，请参阅[ \<soapExtensionTypes > 元素](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)并[消息使用 SOAP 扩展修改 SOAP](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-163">For details, see [\<soapExtensionTypes> Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) and [SOAP Message Modification Using SOAP Extensions](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).</span></span>  
  
## Examples  
 <span data-ttu-id="dcc0f-164">下面的示例演示如何使用在过程缓存的数据<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-164">The following example demonstrates how you can use the data cached during the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method.</span></span>  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="dcc0f-165">要处理的 <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-165">The <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process.</span></span></param>
        <summary><span data-ttu-id="dcc0f-166">当在派生类中被重写时，允许 SOAP 扩展接收要在每个 <see cref="T:System.Web.Services.Protocols.SoapMessage" /> 中处理的 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-166">When overridden in a derived class, allows a SOAP extension to receive a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process at each <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc0f-167"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 在所有调用<xref:System.Web.Services.Protocols.SoapMessageStage>应用于使用 ASP.NET 和其客户端创建这两个 XML Web services 的 SOAP 扩展的阶段。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-167"><xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> is called at all <xref:System.Web.Services.Protocols.SoapMessageStage> stages for SOAP extensions applied to both XML Web services created using ASP.NET and their clients.</span></span> <span data-ttu-id="dcc0f-168">在每个<xref:System.Web.Services.Protocols.SoapMessageStage>，从派生类的实例<xref:System.Web.Services.Protocols.SoapMessage>传递给<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-168">At each <xref:System.Web.Services.Protocols.SoapMessageStage>, an instance of a class deriving from <xref:System.Web.Services.Protocols.SoapMessage> is passed to <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>.</span></span> <span data-ttu-id="dcc0f-169">如果 SOAP 扩展是 XML Web 服务客户端上运行，则<xref:System.Web.Services.Protocols.SoapClientMessage>对象传递给<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; 否则为<xref:System.Web.Services.Protocols.SoapServerMessage>传入的对象。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-169">If the SOAP extension is running on the XML Web service client, then a <xref:System.Web.Services.Protocols.SoapClientMessage> object is passed into <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; otherwise a <xref:System.Web.Services.Protocols.SoapServerMessage> object is passed in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc0f-170">下面的示例是<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>SOAP 请求和 SOAP 响应的 SOAP 扩展的部分。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-170">The following example is the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> portion of a SOAP extension that logs SOAP requests and SOAP responses.</span></span> <span data-ttu-id="dcc0f-171">通过日志记录<xref:System.Web.Services.Protocols.SoapMessage>处<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>，SOAP 扩展访问<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>以通过网络发送。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-171">By logging the <xref:System.Web.Services.Protocols.SoapMessage> at the <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>, the SOAP extension accesses the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> to be sent over the wire.</span></span> <span data-ttu-id="dcc0f-172">如果 SOAP 扩展会应用于 XML Web 服务方法创建使用 ASP.NET，则<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>包含来自 XML Web 服务方法的 SOAP 响应。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-172">If the SOAP extension is applied to an XML Web service method created using ASP.NET, then the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP response from the XML Web service method.</span></span> <span data-ttu-id="dcc0f-173">如果 SOAP 扩展应用于 XML Web 服务客户端，<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>包含对 XML Web 服务方法的 SOAP 请求。</span><span class="sxs-lookup"><span data-stu-id="dcc0f-173">If the SOAP extension is applied to an XML Web service client, the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP request to an XML Web service method.</span></span>  
  
 <span data-ttu-id="dcc0f-174">经典 SoapExtension.ProcessMessage 示例 #1</span><span class="sxs-lookup"><span data-stu-id="dcc0f-174">Classic SoapExtension.ProcessMessage Example#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
