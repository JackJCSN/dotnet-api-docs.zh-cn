<Type Name="UrlEncodedParameterWriter" FullName="System.Web.Services.Protocols.UrlEncodedParameterWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39231fee0acafc9ba7ef158d44da902226d8452e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257151" /></Metadata><TypeSignature Language="C#" Value="public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlEncodedParameterWriter extends System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlEncodedParameterWriter&#xA;Inherits MimeParameterWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlEncodedParameterWriter abstract : System::Web::Services::Protocols::MimeParameterWriter" />
  <TypeSignature Language="F#" Value="type UrlEncodedParameterWriter = class&#xA;    inherit MimeParameterWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c2855-101">为使用 HTTP 实现但不支持 SOAP 的 Web 服务客户端提供传出请求参数编写器的 URL 编码功能。</span><span class="sxs-lookup"><span data-stu-id="c2855-101">Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-102"><xref:System.Web.Services.Protocols.UrlEncodedParameterWriter><xref:System.Web.Services.Protocols>命名空间中的其他类通过 HTTP GET 和 http POST 操作支持 Web 服务的 .NET Framework 实现。</span><span class="sxs-lookup"><span data-stu-id="c2855-102"><xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="c2855-103">Web 服务编写器和读取器分别在参数或返回 Web 方法的对象和 HTTP 请求或响应流之间进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="c2855-103">Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="c2855-104">Web 服务编写器和读取器使用 HTTP 进行传输, 但不使用 SOAP 标准交换消息。</span><span class="sxs-lookup"><span data-stu-id="c2855-104">Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</span></span>  
  
 <span data-ttu-id="c2855-105">抽象<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>类继承自抽象<xref:System.Web.Services.Protocols.MimeParameterWriter>类, 将 Web 方法参数的客户端编写的 URL 编码功能添加到 HTTP 请求流中。</span><span class="sxs-lookup"><span data-stu-id="c2855-105">The abstract <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class inherits from the abstract <xref:System.Web.Services.Protocols.MimeParameterWriter> class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams.</span></span>  
  
 <span data-ttu-id="c2855-106">通常不需要直接使用<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>或其子类。</span><span class="sxs-lookup"><span data-stu-id="c2855-106">You typically will not need to use <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> or its descendant classes directly.</span></span> <span data-ttu-id="c2855-107">相反, 当 wsdl.exe 工具根据 HTTP GET 或 http POST 实现生成客户端代理代码时, 它会将应用<xref:System.Web.Services.Protocols.HttpMethodAttribute>于每个 Web 方法, 并将该<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>特性的属性设置为相应的类型。</span><span class="sxs-lookup"><span data-stu-id="c2855-107">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2855-108">超文本传输协议-HTTP/1.1 指定使用多用途 Internet 邮件扩展 (MIME) 消息格式, 这种格式本身允许电子邮件指定不同的内容类型, 包括文本和二进制。</span><span class="sxs-lookup"><span data-stu-id="c2855-108">The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows email messages to specify different content types, both text and binary.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlEncodedParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlEncodedParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2855-109">初始化 <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c2855-109">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encode">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2855-110">对 Web 方法的所有参数值进行编码，然后将它们写入指定编写器。</span><span class="sxs-lookup"><span data-stu-id="c2855-110">Encodes all the parameter values for a Web method and writes them to the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * obj[] -&gt; unit" Usage="urlEncodedParameterWriter.Encode (writer, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c2855-111">一个 <see cref="T:System.IO.TextWriter" /> 对象，它执行写入 HTTP 请求的操作。</span><span class="sxs-lookup"><span data-stu-id="c2855-111">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</span></span></param>
        <param name="values"><span data-ttu-id="c2855-112">Web 方法的参数值。</span><span class="sxs-lookup"><span data-stu-id="c2855-112">The Web method parameter values.</span></span></param>
        <summary><span data-ttu-id="c2855-113">对 Web 方法的所有参数值进行编码，然后将它们写入指定编写器。</span><span class="sxs-lookup"><span data-stu-id="c2855-113">Encodes all the parameter values for a Web method and writes them to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-114">此<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>方法的重载为每个参数值 ( <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>包括数组中的单个项) 调用另一个重载。</span><span class="sxs-lookup"><span data-stu-id="c2855-114">This overload of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method calls the other overload, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, for each of the parameter values, including individual items in arrays.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * string * obj -&gt; unit" Usage="urlEncodedParameterWriter.Encode (writer, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c2855-115">一个 <see cref="T:System.IO.TextWriter" /> 对象，它执行写入 HTTP 请求的操作。</span><span class="sxs-lookup"><span data-stu-id="c2855-115">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</span></span></param>
        <param name="name"><span data-ttu-id="c2855-116">将要编码的参数的名称。</span><span class="sxs-lookup"><span data-stu-id="c2855-116">The name of the parameter that will be encoded.</span></span></param>
        <param name="value"><span data-ttu-id="c2855-117">将要编码的参数的值。</span><span class="sxs-lookup"><span data-stu-id="c2855-117">The value of the parameter that will be encoded.</span></span></param>
        <summary><span data-ttu-id="c2855-118">对指定参数值进行编码，然后将它写入指定编写器。</span><span class="sxs-lookup"><span data-stu-id="c2855-118">Encodes a specified parameter value and writes it to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-119">方法的另一个签名<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> (为每个 Web 方法调用) 为每个参数值 (包括数组中的单个项) 调用此方法的签名。 <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A></span><span class="sxs-lookup"><span data-stu-id="c2855-119">The other signature of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, which is called for each Web method, calls this signature of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method for each of the parameter values, including individual items in arrays.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="override this.GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="urlEncodedParameterWriter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="c2855-120"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，指定为其获取初始值设定项的 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="c2855-120">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="c2855-121">返回指定方法的初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="c2855-121">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="c2855-122">包含指定方法的初始值设定项的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="c2855-122">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-123">初始值设定项是作为参数传递给方法的<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>对象。</span><span class="sxs-lookup"><span data-stu-id="c2855-123">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method.</span></span> <span data-ttu-id="c2855-124">对于类, 初始值设定项是输入<xref:System.Web.Services.Protocols.LogicalMethodInfo>对象的<xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A>属性的值。 <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter></span><span class="sxs-lookup"><span data-stu-id="c2855-124">For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object.</span></span> <span data-ttu-id="c2855-125">属性为<xref:System.Reflection.ParameterInfo>数组。<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>方法在服务初始化过程中调用。</span><span class="sxs-lookup"><span data-stu-id="c2855-125">The property is a <xref:System.Reflection.ParameterInfo> array.The <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method is invoked during service initialization.</span></span> <span data-ttu-id="c2855-126">稍后, 当填充请求时, 初始值设定项对象将传递给<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>另一个<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>实例的方法。</span><span class="sxs-lookup"><span data-stu-id="c2855-126">Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance.</span></span> <span data-ttu-id="c2855-127">其他对象执行实际的写入。</span><span class="sxs-lookup"><span data-stu-id="c2855-127">The other object performs the actual writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="override this.Initialize : obj -&gt; unit" Usage="urlEncodedParameterWriter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="c2855-128">通过 <see cref="T:System.Reflection.ParameterInfo" /> 类的 <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> 属性获取的一个 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="c2855-128">A <see cref="T:System.Reflection.ParameterInfo" /> array obtained through the <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> property of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class.</span></span></param>
        <summary><span data-ttu-id="c2855-129">初始化一个实例。</span><span class="sxs-lookup"><span data-stu-id="c2855-129">Initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-130">当填充请求时, 将调用方法。<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A></span><span class="sxs-lookup"><span data-stu-id="c2855-130">The <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method is invoked at the time a request is populated.</span></span>  
  
 <span data-ttu-id="c2855-131">通过在客户端`initializer`初始化期间调用另一个实例<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>上的方法来获取输入参数。</span><span class="sxs-lookup"><span data-stu-id="c2855-131">The input parameter, `initializer`, is obtained by calling the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method on another instance during client initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c2855-132">获取或设置用于将参数写入到 HTTP 请求的编码。</span><span class="sxs-lookup"><span data-stu-id="c2855-132">Gets or sets the encoding used to write parameters to the HTTP request.</span></span></summary>
        <value><span data-ttu-id="c2855-133">用于将参数写入到 HTTP 请求的编码。</span><span class="sxs-lookup"><span data-stu-id="c2855-133">The encoding used to write parameters to the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2855-134">由<xref:System.Text.Encoding>类表示的编码定义了如何将字符转换为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="c2855-134">An encoding, as represented by the <xref:System.Text.Encoding> class, defines how to transform characters into a sequence of bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
