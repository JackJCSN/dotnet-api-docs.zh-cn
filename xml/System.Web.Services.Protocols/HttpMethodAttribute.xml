<Type Name="HttpMethodAttribute" FullName="System.Web.Services.Protocols.HttpMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7c34938f8f9f90e308015acac0a83aa1f981701" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64023895" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type HttpMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>如果使用 HTTP-GET 或 HTTP-POST 将此特性应用于 XML Web services 客户端，则可设置特定的类型，它们对发送到 XML Web services 方法的参数进行序列化并从 XML Web services 方法读取响应。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 XML Web 服务客户端调用 XML Web 服务方法使用 HTTP GET<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>必须设置为`XmlReturnReader`并<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>设置为`UrlParameterWriter`。 必须设置 XML Web 服务客户端调用 XML Web 服务使用 HTTP POST<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>到`XmlReturnReader`并<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>到`HtmlFormParameterWriter`。  
  
   
  
## Examples  
 下面的示例是由用于调用 XML Web 服务实用程序使用 HTTP POST 的 Wsdl.exe 实用工具生成的代理类。 Wsdl.exe 自动提供正确的类型为<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>并<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>，以及指定的代理类继承自<xref:System.Web.Services.Protocols.HttpPostClientProtocol>。  
  
 [!code-cpp[Classic HttpMethodAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodAttribute (Type returnFormatter, Type parameterFormatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type returnFormatter, class System.Type parameterFormatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnFormatter As Type, parameterFormatter As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMethodAttribute(Type ^ returnFormatter, Type ^ parameterFormatter);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.HttpMethodAttribute : Type * Type -&gt; System.Web.Services.Protocols.HttpMethodAttribute" Usage="new System.Web.Services.Protocols.HttpMethodAttribute (returnFormatter, parameterFormatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnFormatter" Type="System.Type" />
        <Parameter Name="parameterFormatter" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="returnFormatter">将 <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" /> 属性初始化为 <see cref="T:System.Type" />，后者对来自 XML Web services 方法的响应进行反序列化。</param>
        <param name="parameterFormatter">将 <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" /> 属性初始化为一个 <see cref="T:System.Type" />，它对从 XML Web services 客户端发送到 XML Web services 方法的参数进行序列化。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> 的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterFormatter">
      <MemberSignature Language="C#" Value="public Type ParameterFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterFormatter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterFormatter { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterFormatter : Type with get, set" Usage="System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:System.Type" />，它对从 XML Web services 客户端发送到 XML Web services 方法的参数进行序列化。</summary>
        <value>一个 <see cref="T:System.Type" />，它对从 XML Web services 客户端发送到 XML Web services 方法的参数进行序列化。 没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 XML Web 服务客户端调用了使用 HTTP-GET 或 HTTP-POST，XML Web 服务方法<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>必须是`XMLReturnReader`。  
  
   
  
## Examples  
 该示例是使用 HTTP GET，设置的 XML Web 服务客户端由 Wsdl.exe 实用工具生成的代理类<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>到所需的值的`XMLReturnReader`。  
  
 [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnFormatter">
      <MemberSignature Language="C#" Value="public Type ReturnFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnFormatter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnFormatter { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnFormatter : Type with get, set" Usage="System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:System.Type" />，它对来自 XML Web services 方法的响应进行反序列化。</summary>
        <value>一个 <see cref="T:System.Type" />，它对来自 XML Web services 方法的响应进行反序列化。 没有默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 XML Web 服务客户端调用 XML Web 服务方法使用 HTTP GET<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>必须是`UrlParameterWriter`，而使用 HTTP POST 的客户端必须设置<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>到`HtmlFormParameterWriter`。  
  
   
  
## Examples  
 该示例是使用 HTTP GET，设置的 XML Web 服务客户端由 Wsdl.exe 实用工具生成的代理类<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>到所需的值的`UrlParameterWriter`。  
  
 [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>