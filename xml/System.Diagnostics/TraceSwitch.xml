<Type Name="TraceSwitch" FullName="System.Diagnostics.TraceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87dfcd2421a02c8eccfd25177149945040afdb3a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69252662" /></Metadata><TypeSignature Language="C#" Value="public class TraceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type TraceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供多级开关，用于控制跟踪和调试输出，而无需重新编译代码。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用跟踪开关, 根据消息的重要性来筛选消息。 <xref:System.Diagnostics.TraceSwitch>类提供<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>、、和<xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>属性以测试开关的级别。 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性获取或设置开关的<xref:System.Diagnostics.TraceLevel>。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
 你可以通过应用程序配置文件<xref:System.Diagnostics.TraceSwitch>设置的级别, 然后在你的应用程序<xref:System.Diagnostics.TraceSwitch>中使用配置的级别。 或者, 您可以<xref:System.Diagnostics.TraceSwitch>在代码中创建, 并直接设置级别来检测代码的特定部分。  
  
 若要配置<xref:System.Diagnostics.TraceSwitch>, 请编辑应用程序的配置文件。 在此文件中, 可以添加或删除开关、设置开关的值, 或者清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 此配置<xref:System.Diagnostics.TraceSwitch>节定义<xref:System.Diagnostics.Switch.DisplayName%2A>了, 并将<xref:System.Diagnostics.TraceSwitch.Level%2A>设置`mySwitch`为, 并将设置为 1, 这对应于枚举值<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>。  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如, `true` `Error`对于或表示枚举值<xref:System.Diagnostics.TraceSwitch>的文本 (例如)。 <xref:System.Diagnostics.BooleanSwitch> 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 在应用程序中, 可以通过创建一个<xref:System.Diagnostics.TraceSwitch>具有相同名称的来使用已配置的交换机级别, 如以下示例中所示:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 默认情况下, 使用<xref:System.Diagnostics.TraceSwitch.Level%2A>配置文件中指定的值设置开关属性。 如果构造函数在配置文件中找不到初始开关设置<xref:System.Diagnostics.TraceSwitch.Level%2A> , 则新开关的默认值<xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>为。 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>  
  
 您必须启用跟踪或调试才能使用交换机。 以下语法是编译器特定的。 如果使用C#或 Visual Basic 以外的编译器, 请参阅编译器的文档。  
  
-   若要在中C#启用调试, `/d:DEBUG`请在编译代码时将标志添加到编译器命令行, 或`#define DEBUG`将添加到文件的顶部。 在 Visual Basic 中, 将`/d:DEBUG=True`标志添加到编译器命令行。  
  
-   若要在中C#启用跟踪, `/d:TRACE`请在编译代码时将标志添加到编译器命令行, 或`#define TRACE`将添加到文件的顶部。 在 Visual Basic 中, 将`/d:TRACE=True`标志添加到编译器命令行。  
  
> [!NOTE]
>  在隔离中使用<xref:System.Diagnostics.TraceSwitch>类时, 不需要这些调试和跟踪编译器开关。 只需结合<xref:System.Diagnostics.Trace>有条件地编译的<xref:System.Diagnostics.Debug>或方法。  
  
 有关检测应用程序的详细信息, 请<xref:System.Diagnostics.Debug>参阅<xref:System.Diagnostics.Trace>和。 有关配置和使用跟踪开关的详细信息, 请参阅[跟踪开关](~/docs/framework/debug-trace-profile/trace-switches.md)。  
  
> [!NOTE]
>  若要提高性能, 可以在<xref:System.Diagnostics.TraceSwitch>类`static`中创建成员。  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>如果小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, 则不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceLevel" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">要显示在用户界面上的名称。</param>
        <param name="description">切换描述。</param>
        <summary>使用指定的显示名称和说明初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置的级别<xref:System.Diagnostics.TraceSwitch>, 请编辑与应用程序名称对应的配置文件。 在此文件中, 可以添加开关并设置其值、删除开关或清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如, `true` `Error`对于或表示枚举值<xref:System.Diagnostics.TraceSwitch>的文本 (例如)。 <xref:System.Diagnostics.BooleanSwitch> 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 在应用程序中, 可以通过创建一个<xref:System.Diagnostics.TraceSwitch>具有相同名称的来使用已配置的交换机级别, 如以下示例中所示:  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 如果构造函数在配置文件中找不到初始开关设置<xref:System.Diagnostics.TraceSwitch.Level%2A> , 则新开关的属性将设置为<xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>。 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>  
  
 <xref:System.Diagnostics.TraceSwitch>类提供<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>、、和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性以测试<xref:System.Diagnostics.TraceSwitch.Level%2A>开关的。 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 属性获取或设置开关的<xref:System.Diagnostics.TraceLevel>。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
> [!NOTE]
>  若要提高性能, 可以在<xref:System.Diagnostics.TraceSwitch>类`static`中创建成员。  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>如果小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, 则不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">要显示在用户界面上的名称。</param>
        <param name="description">切换描述。</param>
        <param name="defaultSwitchValue">开关的默认值。</param>
        <summary>使用开关的指定显示名称、说明和默认值来初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Switch.DisplayName%2A> `description` <xref:System.Diagnostics.Switch.Description%2A>参数用于设置属性的值, 参数用于设置属性的值, 而`defaultSwitchValue`参数则保存为字段并用于对进行初始化。 `displayName` <xref:System.Diagnostics.Switch.Value%2A>第一次引用的属性。 有关详细信息和代码示例, 请参见构造函数。<xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As TraceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLevel Level { System::Diagnostics::TraceLevel get(); void set(System::Diagnostics::TraceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.TraceLevel with get, set" Usage="System.Diagnostics.TraceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置跟踪级别，它将确定开关所允许的消息。</summary>
        <value><see cref="T:System.Diagnostics.TraceLevel" />值之一, 指定开关允许的消息级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置的级别<xref:System.Diagnostics.TraceSwitch>, 请编辑与应用程序名称对应的配置文件。 在此文件中, 可以添加开关并设置其值、删除开关或清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="0" />  
      <add name="myNewSwitch" value="3" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如, `true` `Error`对于或表示枚举值<xref:System.Diagnostics.TraceSwitch>的文本 (例如)。 <xref:System.Diagnostics.BooleanSwitch> 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 如果构造函数在配置文件中找不到初始开关设置<xref:System.Diagnostics.TraceSwitch.Level%2A> , 则新开关的属性将设置为<xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType>。 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>  
  
 设置此属性将更新<xref:System.Diagnostics.TraceSwitch.TraceError%2A>、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>和<xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>属性以反映新的值。  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>如果小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, 则不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.Level Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.Level Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.Level Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.TraceSwitch.Level" /> 设置为非 <see cref="T:System.Diagnostics.TraceLevel" /> 值。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于处理非托管代码。 关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />安全操作: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected override void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="traceSwitch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新并更正此开关的级别。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Net framework 使用方法来验证和更正通过配置文件初始化的开关的值。 <xref:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged%2A> 如果在配置文件中指定的开关值不是由<xref:System.Diagnostics.TraceLevel>枚举定义的, 并且开关设置为定义的值, 则会将消息写入所有跟踪侦听器。  
  
 如果你在代码中尝试将<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为不是<xref:System.Diagnostics.TraceLevel>由枚举定义的值, <xref:System.ArgumentException>则会引发异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="traceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 属性设置为 <see cref="P:System.Diagnostics.Switch.Value" /> 属性的整数等效值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当开关的<xref:System.Diagnostics.Switch.Value%2A>属性更改时, 会在内部调用此方法。 方法可确保与开关的值相关的属性反映新的值。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>若要重写此属性, 请将<see cref="P:System.Diagnostics.Switch.Value" />属性的字符串值转换为 binary, 然后<see cref="P:System.Diagnostics.TraceSwitch.Level" />设置属性。</para></block>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public bool TraceError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceError : bool" Usage="System.Diagnostics.TraceSwitch.TraceError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许错误处理消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 设置为 <see cref="F:System.Diagnostics.TraceLevel.Error" />、<see cref="F:System.Diagnostics.TraceLevel.Warning" />、<see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以<xref:System.Diagnostics.TraceSwitch.TraceError%2A>将、、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>和<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>属性与<xref:System.Diagnostics.Debug>和类<xref:System.Diagnostics.Trace>结合使用, 以发出指定重要性或更高的所有消息。 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 如果将<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> <xref:System.Diagnostics.TraceLevel.Error>属性设置为最高重要性, 则仅发出错误处理消息。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>如果小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, 则不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceInfo">
      <MemberSignature Language="C#" Value="public bool TraceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceInfo : bool" Usage="System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许信息性消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以<xref:System.Diagnostics.TraceSwitch.TraceError%2A>将、、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>和<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>属性与<xref:System.Diagnostics.Debug>和类<xref:System.Diagnostics.Trace>结合使用, 以发出指定重要性或更高的所有消息。 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 当属性设置为<xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>时, 将发出信息性消息、警告和错误处理消息。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Info?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>如果小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>, 则不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceVerbose">
      <MemberSignature Language="C#" Value="public bool TraceVerbose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceVerbose" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceVerbose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceVerbose { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceVerbose : bool" Usage="System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许所有消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以<xref:System.Diagnostics.TraceSwitch.TraceError%2A>将、、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>和<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>属性与<xref:System.Diagnostics.Debug>和类<xref:System.Diagnostics.Trace>结合使用, 以发出指定重要性或更高的所有消息。 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 当属性设置为<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>时, 将传输所有调试和跟踪消息。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod`当<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>时, 写入两个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public bool TraceWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceWarning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceWarning : bool" Usage="System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许警告消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Warning" />、<see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以<xref:System.Diagnostics.TraceSwitch.TraceError%2A>将、、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>和<xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>属性与<xref:System.Diagnostics.Debug>和类<xref:System.Diagnostics.Trace>结合使用, 以发出指定重要性或更高的所有消息。 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 当属性设置为<xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>时, 将发出警告和错误处理消息。 <xref:System.Diagnostics.TraceSwitch.Level%2A>  
  
   
  
## Examples  
 下面的代码示例创建一个新<xref:System.Diagnostics.TraceSwitch>的, 并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod`如果<xref:System.Diagnostics.TraceSwitch.Level%2A>属性设置为<xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType>或更高, 则写入第一条错误消息。 但是, `MyMethod` <xref:System.Diagnostics.TraceSwitch.Level%2A>当小于<xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType>时, 不写入第二个错误消息。  
  
 [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
