<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56c730333d780971f7e47e4ba34ae4aaf2551d23" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70691459" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b6064-101">提供一组方法和属性，可用于准确地测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-102"><xref:System.Diagnostics.Stopwatch>实例可以度量一个间隔的运行时间，或度量多个间隔内所用时间的总和。</span><span class="sxs-lookup"><span data-stu-id="b6064-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="b6064-103">在典型<xref:System.Diagnostics.Stopwatch>的方案中， <xref:System.Diagnostics.Stopwatch.Start%2A>调用方法<xref:System.Diagnostics.Stopwatch.Stop%2A> ，最后调用方法，然后使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性检查运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="b6064-104">实例正在运行或已停止; 用于<xref:System.Diagnostics.Stopwatch.IsRunning%2A>确定的当前状态 <xref:System.Diagnostics.Stopwatch> 。  <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="b6064-105">用于<xref:System.Diagnostics.Stopwatch.Start%2A>开始测量运行时间; 使用<xref:System.Diagnostics.Stopwatch.Stop%2A>停止测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="b6064-106">通过属性<xref:System.Diagnostics.Stopwatch.Elapsed%2A>、 <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>或<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>查询运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="b6064-107">当实例正在运行或已停止时，可以查询运行时间属性。</span><span class="sxs-lookup"><span data-stu-id="b6064-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="b6064-108">运行的<xref:System.Diagnostics.Stopwatch>时间属性在运行时将持续增加; 当实例停止时，属性将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b6064-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="b6064-109">默认情况下， <xref:System.Diagnostics.Stopwatch>实例的运行时间值等于所有测量的时间间隔的总计。</span><span class="sxs-lookup"><span data-stu-id="b6064-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="b6064-110">每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>都会在累计运行时间进行计数; 每次<xref:System.Diagnostics.Stopwatch.Stop%2A>调用都将结束当前间隔度量，并冻结累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-111">使用方法清除现有<xref:System.Diagnostics.Stopwatch>实例中的累计运行时间。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="b6064-112">通过<xref:System.Diagnostics.Stopwatch>计算基础计时器机制中的计时器刻度来度量经过的时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="b6064-113">如果安装的硬件和操作系统支持高分辨率性能计数器，则<xref:System.Diagnostics.Stopwatch>类将使用该计数器来测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="b6064-114">否则， <xref:System.Diagnostics.Stopwatch>类将使用系统计时器来测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="b6064-115"><xref:System.Diagnostics.Stopwatch.Frequency>使用和<xref:System.Diagnostics.Stopwatch.IsHighResolution>字段确定<xref:System.Diagnostics.Stopwatch>计时实现的精度和解决方法。</span><span class="sxs-lookup"><span data-stu-id="b6064-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="b6064-116"><xref:System.Diagnostics.Stopwatch>类可帮助在托管代码中操作与计时相关的性能计数器。</span><span class="sxs-lookup"><span data-stu-id="b6064-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="b6064-117">具体而言， <xref:System.Diagnostics.Stopwatch.Frequency>可以使用<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>字段和方法代替非托管的 Windows api `QueryPerformanceFrequency`和`QueryPerformanceCounter`。</span><span class="sxs-lookup"><span data-stu-id="b6064-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Windows APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6064-118">在多处理器计算机上，线程在哪个处理器上运行并不重要。</span><span class="sxs-lookup"><span data-stu-id="b6064-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="b6064-119">但是，由于 BIOS 或硬件抽象层（HAL）中的 bug，你可以在不同的处理器上获取不同的计时结果。</span><span class="sxs-lookup"><span data-stu-id="b6064-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="b6064-120">若要为线程指定处理器关联，请使用<xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b6064-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-121">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch>类来确定应用程序的执行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="b6064-122">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch>类来计算性能数据。</span><span class="sxs-lookup"><span data-stu-id="b6064-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-123">初始化 <see cref="T:System.Diagnostics.Stopwatch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-124">返回<xref:System.Diagnostics.Stopwatch>的实例已停止，并且该实例的运行时间属性为零。</span><span class="sxs-lookup"><span data-stu-id="b6064-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="b6064-125">使用方法，开始测量新<xref:System.Diagnostics.Stopwatch>实例所用的时间。 <xref:System.Diagnostics.Stopwatch.Start%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="b6064-126">使用方法初始化新<xref:System.Diagnostics.Stopwatch>的实例，并立即启动该实例。 <xref:System.Diagnostics.Stopwatch.StartNew%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-127">下面的示例使用简单<xref:System.Diagnostics.Stopwatch>的类构造函数初始化实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-128">获取当前实例测量得出的总运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-128">Gets the total elapsed time measured by the current instance.</span></span></summary>
        <value><span data-ttu-id="b6064-129">一个只读的 <see cref="T:System.TimeSpan" />，用于表示当前实例测量得出的总运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-130">在典型<xref:System.Diagnostics.Stopwatch>的方案中， <xref:System.Diagnostics.Stopwatch.Start%2A>调用方法<xref:System.Diagnostics.Stopwatch.Stop%2A> ，最后调用方法，然后使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性检查运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="b6064-131">使用属性可检索使用<xref:System.TimeSpan>方法和属性的运行时间值。 <xref:System.Diagnostics.Stopwatch.Elapsed%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="b6064-132">例如，可以将返回<xref:System.TimeSpan>的实例格式化为文本表示形式，或将其传递给<xref:System.TimeSpan>需要参数的另一个类。</span><span class="sxs-lookup"><span data-stu-id="b6064-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="b6064-133">可以在<xref:System.Diagnostics.Stopwatch.Elapsed%2A> <xref:System.Diagnostics.Stopwatch>实例正在运行或<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>已停止<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时查询属性、和。</span><span class="sxs-lookup"><span data-stu-id="b6064-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="b6064-134">运行的<xref:System.Diagnostics.Stopwatch>时间属性在运行时将持续增加; 当实例停止时，属性将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b6064-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="b6064-135">默认情况下， <xref:System.Diagnostics.Stopwatch>实例的运行时间值等于所有测量的时间间隔的总计。</span><span class="sxs-lookup"><span data-stu-id="b6064-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="b6064-136">每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>都会在累计运行时间进行计数; 每次<xref:System.Diagnostics.Stopwatch.Stop%2A>调用都将结束当前间隔度量，并冻结累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-137">使用方法清除现有<xref:System.Diagnostics.Stopwatch>实例中的累计运行时间。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-138">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性来确定应用程序的执行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-139">获取当前实例测量得出的总运行时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="b6064-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span></span></summary>
        <value><span data-ttu-id="b6064-140">一个只读长整型，表示当前实例测量得出的总毫秒数。</span><span class="sxs-lookup"><span data-stu-id="b6064-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-141">此属性表示将运行时间向下舍入到最接近的整数毫秒值。</span><span class="sxs-lookup"><span data-stu-id="b6064-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="b6064-142">对于更高的精度度量， <xref:System.Diagnostics.Stopwatch.Elapsed%2A>使用<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>或属性。</span><span class="sxs-lookup"><span data-stu-id="b6064-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="b6064-143">可以在<xref:System.Diagnostics.Stopwatch.Elapsed%2A> <xref:System.Diagnostics.Stopwatch>实例正在运行或<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>已停止<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时查询属性、和。</span><span class="sxs-lookup"><span data-stu-id="b6064-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="b6064-144">运行的<xref:System.Diagnostics.Stopwatch>时间属性在运行时将持续增加; 当实例停止时，属性将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b6064-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="b6064-145">默认情况下， <xref:System.Diagnostics.Stopwatch>实例的运行时间值等于所有测量的时间间隔的总计。</span><span class="sxs-lookup"><span data-stu-id="b6064-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="b6064-146">每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>都会在累计运行时间进行计数; 每次<xref:System.Diagnostics.Stopwatch.Stop%2A>调用都将结束当前间隔度量，并冻结累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-147">使用方法清除现有<xref:System.Diagnostics.Stopwatch>实例中的累计运行时间。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-148">下面的示例使用<xref:System.Diagnostics.Stopwatch>类来测量四个不同实现的性能，用于分析字符串中的整数。</span><span class="sxs-lookup"><span data-stu-id="b6064-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="b6064-149">此代码示例是为<xref:System.Diagnostics.Stopwatch>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b6064-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-150">获取当前实例测量得出的总运行时间（用计时器计时周期表示）。</span><span class="sxs-lookup"><span data-stu-id="b6064-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span></span></summary>
        <value><span data-ttu-id="b6064-151">一个只读长整型，表示当前实例测量得出的计时器计时周期的总数。</span><span class="sxs-lookup"><span data-stu-id="b6064-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-152">此属性表示基础计时器机制中经过的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="b6064-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="b6064-153">勾选标记是<xref:System.Diagnostics.Stopwatch>计时器可度量的最小时间单位。</span><span class="sxs-lookup"><span data-stu-id="b6064-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="b6064-154">使用字段将<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>值转换为秒数。 <xref:System.Diagnostics.Stopwatch.Frequency></span><span class="sxs-lookup"><span data-stu-id="b6064-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="b6064-155">可以在<xref:System.Diagnostics.Stopwatch.Elapsed%2A> <xref:System.Diagnostics.Stopwatch>实例正在运行或<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>已停止<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时查询属性、和。</span><span class="sxs-lookup"><span data-stu-id="b6064-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="b6064-156">运行的<xref:System.Diagnostics.Stopwatch>时间属性在运行时将持续增加; 当实例停止时，属性将保持不变。</span><span class="sxs-lookup"><span data-stu-id="b6064-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="b6064-157">默认情况下， <xref:System.Diagnostics.Stopwatch>实例的运行时间值等于所有测量的时间间隔的总计。</span><span class="sxs-lookup"><span data-stu-id="b6064-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="b6064-158">每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>都会在累计运行时间进行计数; 每次<xref:System.Diagnostics.Stopwatch.Stop%2A>调用都将结束当前间隔度量，并冻结累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-159">使用方法清除现有<xref:System.Diagnostics.Stopwatch>实例中的累计运行时间。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6064-160"><xref:System.Diagnostics.Stopwatch>刻度与<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>不同。</span><span class="sxs-lookup"><span data-stu-id="b6064-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b6064-161">值中的<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>每个滴答都表示 1 100 毫微秒时间间隔。</span><span class="sxs-lookup"><span data-stu-id="b6064-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="b6064-162">值中的<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>每个计时周期表示除以<xref:System.Diagnostics.Stopwatch.Frequency>1 秒的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="b6064-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-163">下面的示例使用<xref:System.Diagnostics.Stopwatch>类来测量四个不同实现的性能，用于分析字符串中的整数。</span><span class="sxs-lookup"><span data-stu-id="b6064-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="b6064-164">此代码示例是为<xref:System.Diagnostics.Stopwatch>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b6064-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-165">获取以每秒计时周期数表示的计时器频率。</span><span class="sxs-lookup"><span data-stu-id="b6064-165">Gets the frequency of the timer as the number of ticks per second.</span></span> <span data-ttu-id="b6064-166">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="b6064-166">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-167">计时器频率指示计时器的精度和分辨率。</span><span class="sxs-lookup"><span data-stu-id="b6064-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="b6064-168">例如，计时器频率为2000000刻度每秒等于每个时钟周期500毫微秒的计时器分辨率。</span><span class="sxs-lookup"><span data-stu-id="b6064-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="b6064-169">换而言之，由于一秒等于 10 亿个纳秒为单位，每秒 200 万个计时周期的计时器频率相当于每 10 亿的毫微秒，可以进一步简化为每 500 毫微秒 1 个时钟周期的 200 万个刻度。</span><span class="sxs-lookup"><span data-stu-id="b6064-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="b6064-170">此<xref:System.Diagnostics.Stopwatch.Frequency>值取决于基础计时机制的分辨率。</span><span class="sxs-lookup"><span data-stu-id="b6064-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="b6064-171">如果安装的硬件和操作系统支持高分辨率性能计数器，则<xref:System.Diagnostics.Stopwatch.Frequency>该值反映了该计数器的频率。</span><span class="sxs-lookup"><span data-stu-id="b6064-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="b6064-172">否则， <xref:System.Diagnostics.Stopwatch.Frequency>值将基于系统计时器频率。</span><span class="sxs-lookup"><span data-stu-id="b6064-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="b6064-173">由于频率取决于已安装的硬件和操作系统<xref:System.Diagnostics.Stopwatch.Frequency> ，因此在系统运行时，该值保持不变。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-174">下面的示例显示<xref:System.Diagnostics.Stopwatch>计时器的频率和分辨率。</span><span class="sxs-lookup"><span data-stu-id="b6064-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="b6064-175">此代码示例是为<xref:System.Diagnostics.Stopwatch>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b6064-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-176">获取计时器机制中的当前最小时间单位数。</span><span class="sxs-lookup"><span data-stu-id="b6064-176">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <returns><span data-ttu-id="b6064-177">一个长整型，表示基础计时器机制中的计时周期计数器值。</span><span class="sxs-lookup"><span data-stu-id="b6064-177">A long integer representing the tick counter value of the underlying timer mechanism.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-178">如果类使用高分辨率性能计数器， <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>则返回该计数器的当前值。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="b6064-179">如果类使用系统计时器， <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>则返回该<xref:System.DateTime.Now%2A?displayProperty=nameWithType>实例的<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>当前属性。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-180">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>方法来更新性能计数器。</span><span class="sxs-lookup"><span data-stu-id="b6064-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-181">指示计时器是否基于高分辨率性能计数器。</span><span class="sxs-lookup"><span data-stu-id="b6064-181">Indicates whether the timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="b6064-182">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="b6064-182">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-183"><xref:System.Diagnostics.Stopwatch>类使用的计时器取决于系统硬件和操作系统。</span><span class="sxs-lookup"><span data-stu-id="b6064-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="b6064-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution>如果计时器基于高分辨率性能计数器，则为 `true` 。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="b6064-185">否则， <xref:System.Diagnostics.Stopwatch.IsHighResolution>为`false` ，表示计时器基于系统计时器。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-186">下面的示例显示<xref:System.Diagnostics.Stopwatch>计时器的频率和分辨率。</span><span class="sxs-lookup"><span data-stu-id="b6064-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="b6064-187">此代码示例是为<xref:System.Diagnostics.Stopwatch>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b6064-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6064-188">获取一个指示 <see cref="T:System.Diagnostics.Stopwatch" /> 计时器是否在运行的值。</span><span class="sxs-lookup"><span data-stu-id="b6064-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span></span></summary>
        <value><span data-ttu-id="b6064-189">如果 <see cref="T:System.Diagnostics.Stopwatch" /> 实例当前正在运行，并且在对某个时间间隔的运行时间进行测量，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6064-189"><see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-190">实例通过<xref:System.Diagnostics.Stopwatch.Start%2A>调用或 <xref:System.Diagnostics.Stopwatch.StartNew%2A> 开始运行。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="b6064-191">实例通过调用<xref:System.Diagnostics.Stopwatch.Stop%2A>或<xref:System.Diagnostics.Stopwatch.Reset%2A>停止运行。</span><span class="sxs-lookup"><span data-stu-id="b6064-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-192">停止时间间隔测量，并将运行时间重置为零。</span><span class="sxs-lookup"><span data-stu-id="b6064-192">Stops time interval measurement and resets the elapsed time to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-193"><xref:System.Diagnostics.Stopwatch>实例计算并保留多个时间间隔内的累计运行时间，直到重置实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="b6064-194">使用<xref:System.Diagnostics.Stopwatch.Stop%2A>可停止当前间隔度量并保留累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-195">使用<xref:System.Diagnostics.Stopwatch.Reset%2A>可停止正在进行的任何间隔测量，并清除已用时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-196">停止时间间隔测量，将运行时间重置为零，然后开始测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-197"><xref:System.Diagnostics.Stopwatch>实例计算并保留多个时间间隔内的累计运行时间，直到重置或重新启动实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="b6064-198">使用<xref:System.Diagnostics.Stopwatch.Stop%2A>可停止当前间隔度量并保留累计运行时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="b6064-199">使用<xref:System.Diagnostics.Stopwatch.Reset%2A>可停止正在进行的任何间隔测量，并清除已用时间值。</span><span class="sxs-lookup"><span data-stu-id="b6064-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="b6064-200">用于<xref:System.Diagnostics.Stopwatch.Restart%2A>停止当前间隔度量，并启动新的间隔度量。</span><span class="sxs-lookup"><span data-stu-id="b6064-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-201">开始或继续测量某个时间间隔的运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-201">Starts, or resumes, measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-202">在典型<xref:System.Diagnostics.Stopwatch>的方案中， <xref:System.Diagnostics.Stopwatch.Start%2A>调用方法<xref:System.Diagnostics.Stopwatch.Stop%2A> ，最后调用方法，然后使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性检查运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="b6064-203">启动后， <xref:System.Diagnostics.Stopwatch>计时器会测量当前时间间隔（处于已用计时器的刻度中），直到实例停止或重置。</span><span class="sxs-lookup"><span data-stu-id="b6064-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="b6064-204">启动已在运行的，不会更改计时器状态，也不会重置运行时间属性。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="b6064-205">实例测量多个间隔时，方法将<xref:System.Diagnostics.Stopwatch.Start%2A>从当前运行时间值中恢复测量时间。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="b6064-206"><xref:System.Diagnostics.Stopwatch>实例计算并保留多个时间间隔内的累计运行时间，直到重置实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="b6064-207"><xref:System.Diagnostics.Stopwatch>在调用<xref:System.Diagnostics.Stopwatch.Start%2A>之前使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法，以清除实例中的累计运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="b6064-208"><xref:System.Diagnostics.Stopwatch.Restart%2A>使用方法 <xref:System.Diagnostics.Stopwatch.Start%2A> 和， <xref:System.Diagnostics.Stopwatch> 只使用一个命令。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-209">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Start%2A>方法来启动一个计时器，用于测量应用程序的执行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-210">对新的 <see cref="T:System.Diagnostics.Stopwatch" /> 实例进行初始化，将运行时间属性设置为零，然后开始测量运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span></span></summary>
        <returns><span data-ttu-id="b6064-211">刚刚开始测量运行时间的 <see cref="T:System.Diagnostics.Stopwatch" />。</span><span class="sxs-lookup"><span data-stu-id="b6064-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-212">此方法等效于调用<xref:System.Diagnostics.Stopwatch>构造函数，然后调用<xref:System.Diagnostics.Stopwatch.Start%2A>新的实例。</span><span class="sxs-lookup"><span data-stu-id="b6064-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-213">下面的示例使用<xref:System.Diagnostics.Stopwatch>类来测量四个不同实现的性能，用于分析字符串中的整数。</span><span class="sxs-lookup"><span data-stu-id="b6064-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="b6064-214">此代码示例是为<xref:System.Diagnostics.Stopwatch>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b6064-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6064-215">停止测量某个时间间隔的运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-215">Stops measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6064-216">在典型<xref:System.Diagnostics.Stopwatch>的方案中， <xref:System.Diagnostics.Stopwatch.Start%2A>调用方法<xref:System.Diagnostics.Stopwatch.Stop%2A> ，最后调用方法，然后使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性检查运行时间。</span><span class="sxs-lookup"><span data-stu-id="b6064-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="b6064-217"><xref:System.Diagnostics.Stopwatch.Stop%2A>方法结束当前时间间隔测量。</span><span class="sxs-lookup"><span data-stu-id="b6064-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="b6064-218">停止未运行的不会更改计时器状态，也不会重置运行时间属性。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="b6064-219">如果实例测量多个间隔，则该<xref:System.Diagnostics.Stopwatch.Stop%2A>方法等效于暂停经过的时间度量。 <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="b6064-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="b6064-220">用于<xref:System.Diagnostics.Stopwatch.Start%2A>从当前运行时间值开始测量时间的后续调用。</span><span class="sxs-lookup"><span data-stu-id="b6064-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="b6064-221">使用方法可清除<xref:System.Diagnostics.Stopwatch>实例中的累计运行时间。 <xref:System.Diagnostics.Stopwatch.Reset%2A></span><span class="sxs-lookup"><span data-stu-id="b6064-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6064-222">下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法来停止测量应用程序的执行时间的计时器。</span><span class="sxs-lookup"><span data-stu-id="b6064-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>
