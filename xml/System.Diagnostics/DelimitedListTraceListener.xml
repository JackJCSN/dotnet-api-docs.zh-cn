<Type Name="DelimitedListTraceListener" FullName="System.Diagnostics.DelimitedListTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9246f77fcc12449034a32b55c7b968da45d44e0a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70356973" /></Metadata><TypeSignature Language="C#" Value="public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimitedListTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DelimitedListTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimitedListTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelimitedListTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type DelimitedListTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="38b8b-101">将跟踪或调试输出定向到文本编写器（如流编写器）或流（如文件流）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-101">Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-102">跟踪输出采用由 <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> 属性指定的分隔符分隔的文本格式。</span><span class="sxs-lookup"><span data-stu-id="38b8b-102">The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="38b8b-103">分隔符用于在输出行中终止每个字段。</span><span class="sxs-lookup"><span data-stu-id="38b8b-103">The delimiter is used to terminate each field in a line of output.</span></span> <span data-ttu-id="38b8b-104">例如，若要在 Microsoft Excel 电子表格中显示跟踪输出，可以指定一个逗号（"，"）作为分隔符，并创建逗号分隔值（CSV）文件。</span><span class="sxs-lookup"><span data-stu-id="38b8b-104">For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (",") as a delimiter and create a comma-separated value (CSV) file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38b8b-105"><xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="38b8b-105"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="38b8b-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="38b8b-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="38b8b-107">若要直接<xref:System.IDisposable.Dispose%2A>释放类型，请`try` / `catch`在块中调用其方法。</span><span class="sxs-lookup"><span data-stu-id="38b8b-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="38b8b-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="38b8b-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="38b8b-109">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="38b8b-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="38b8b-110">你可以<xref:System.Diagnostics.DelimitedListTraceListener>通过应用程序配置文件启用或禁用，然后在你的应用<xref:System.Diagnostics.DelimitedListTraceListener>程序中使用配置的。</span><span class="sxs-lookup"><span data-stu-id="38b8b-110">You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application.</span></span> <span data-ttu-id="38b8b-111">或者，您可以<xref:System.Diagnostics.DelimitedListTraceListener>在代码中创建。</span><span class="sxs-lookup"><span data-stu-id="38b8b-111">Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38b8b-112">使用名称以单词`Trace`开头的方法（如<xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType>或<xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>）来仅分隔发出的文本。<xref:System.Diagnostics.DelimitedListTraceListener></span><span class="sxs-lookup"><span data-stu-id="38b8b-112">The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="38b8b-113">使用<xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> 和<xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType>方法发出的跟踪数据未进行分隔。</span><span class="sxs-lookup"><span data-stu-id="38b8b-113">Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType> methods is not delimited.</span></span>  
  
 <span data-ttu-id="38b8b-114">若要配置<xref:System.Diagnostics.DelimitedListTraceListener>，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="38b8b-114">To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="38b8b-115">在此文件中，可以添加侦听器，设置侦听器的属性，或删除侦听器。</span><span class="sxs-lookup"><span data-stu-id="38b8b-115">In this file, you can add a listener, set the properties for a listener, or remove a listener.</span></span> <span data-ttu-id="38b8b-116">应设置配置文件的格式，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="38b8b-116">The configuration file should be formatted as shown in the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=","   
          initializeData="delimitedOutput.csv"   
          traceOutputOptions="ProcessId, DateTime" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="38b8b-117">如果尝试写入正在使用或不可用的文件，则该文件名将自动以 GUID 为前缀。</span><span class="sxs-lookup"><span data-stu-id="38b8b-117">If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38b8b-118">侦听器旨在供<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的方法用来编写跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="38b8b-118">Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information.</span></span> <span data-ttu-id="38b8b-119">除构造函数之外的侦听器方法不应在应用程序代码中直接调用。</span><span class="sxs-lookup"><span data-stu-id="38b8b-119">Listener methods, except for constructors, should not be called directly from application code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38b8b-120">初始化 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-120">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="38b8b-121">接收输出的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-121">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="38b8b-122">初始化写入指定输出流的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-122">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-123">此构造函数将<xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-123">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-124"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-124"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="38b8b-125">接收输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-125">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="38b8b-126">初始化写入指定文本编写器的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-126">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-127">此构造函数将<xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-127">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-128"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-128"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="38b8b-129">要接收输出的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-129">The name of the file to receive the output.</span></span></param>
        <summary><span data-ttu-id="38b8b-130">初始化写入指定文件的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-130">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-131">此构造函数将<xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-131">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-132"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-132"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="38b8b-133">接收输出的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-133">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="38b8b-134">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-134">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="38b8b-135">初始化写入指定输出流并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-135">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-136">此构造函数将<xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为`name`参数的值，如果`name`参数为`null`，则将属性初始化为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-136">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span>  <span data-ttu-id="38b8b-137">属性可用作`Listeners`集合中的索引，以编程方式更改侦听器的属性。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="38b8b-137">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="38b8b-138">例如，下面的代码将设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>名称为 "delimListener" 的<xref:System.Diagnostics.DelimitedListTraceListener>实例的属性：</span><span class="sxs-lookup"><span data-stu-id="38b8b-138">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-139"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-139"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="38b8b-140">接收输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-140">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="38b8b-141">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-141">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="38b8b-142">初始化写入指定文本编写器并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-142">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-143">此构造函数将<xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为`name`参数的值，如果`name`参数为`null`，则将属性初始化为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-143">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="38b8b-144">属性可用作`Listeners`集合中的索引，以编程方式更改侦听器的属性。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="38b8b-144">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="38b8b-145">例如，下面的代码将设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>名称为 "delimListener" <xref:System.Diagnostics.DelimitedListTraceListener>的实例的属性：</span><span class="sxs-lookup"><span data-stu-id="38b8b-145">For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-146"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-146"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="38b8b-147">要接收输出的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-147">The name of the file to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="38b8b-148">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-148">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="38b8b-149">初始化写入指定文件并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-149">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-150">此构造函数使用<xref:System.IO.StreamWriter> <xref:System.Text.Encoding.UTF8%2A>编码为指定路径上的指定文件初始化类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38b8b-150">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="38b8b-151">如果文件存在，则将其追加到。</span><span class="sxs-lookup"><span data-stu-id="38b8b-151">If the file exists, it is appended to.</span></span> <span data-ttu-id="38b8b-152">如果该文件不存在，则创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="38b8b-152">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38b8b-153">若要减少异常的几率，任何可能使输出无效的字符都将替换为 "？" 字符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-153">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="38b8b-154">如果<xref:System.Diagnostics.TraceListener.Name%2A> `name`参数为`name` ，则将属性设置为参数的值，或设置为空字符串（""）。`null`</span><span class="sxs-lookup"><span data-stu-id="38b8b-154">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="38b8b-155">属性可用作`Listeners`集合中的索引，以编程方式更改侦听器的属性。 <xref:System.Diagnostics.TraceListener.Name%2A></span><span class="sxs-lookup"><span data-stu-id="38b8b-155">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="38b8b-156">例如，下面的代码将设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>名称为 "delimListener" 的<xref:System.Diagnostics.DelimitedListTraceListener>实例的属性：</span><span class="sxs-lookup"><span data-stu-id="38b8b-156">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-157"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-157"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38b8b-158">获取或设置分隔列表的分隔符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-158">Gets or sets the delimiter for the delimited list.</span></span></summary>
        <value><span data-ttu-id="38b8b-159">分隔列表的分隔符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-159">The delimiter for the delimited list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-160">默认分隔符为 ";"（分号）。</span><span class="sxs-lookup"><span data-stu-id="38b8b-160">The default delimiter is ";" (semicolon).</span></span> <span data-ttu-id="38b8b-161">下面的配置文件示例演示如何使用配置文件<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>中的`delimiter`属性设置属性：</span><span class="sxs-lookup"><span data-stu-id="38b8b-161">The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38b8b-162">将 <see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38b8b-162"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38b8b-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> 设置为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="38b8b-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="delimitedListTraceListener.GetSupportedAttributes " />
      <MemberSignature Language="C#" Value="protected internal override string[] GetSupportedAttributes ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetSupportedAttributes () As String()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38b8b-164">返回分隔的跟踪侦听器支持的自定义配置文件特性。</span><span class="sxs-lookup"><span data-stu-id="38b8b-164">Returns the custom configuration file attribute supported by the delimited trace listener.</span></span></summary>
        <returns><span data-ttu-id="38b8b-165">包含单个值“delimiter”的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="38b8b-165">A string array that contains the single value "delimiter".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-166">自定义特性是不是从基类继承的属性，可用于设置类的属性。</span><span class="sxs-lookup"><span data-stu-id="38b8b-166">A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class.</span></span> <span data-ttu-id="38b8b-167">的自定义特性<xref:System.Diagnostics.DelimitedListTraceListener>用于<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>设置属性。</span><span class="sxs-lookup"><span data-stu-id="38b8b-167">The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="38b8b-168">下面的配置文件示例演示如何使用`delimiter`属性来<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>设置属性：</span><span class="sxs-lookup"><span data-stu-id="38b8b-168">The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38b8b-169">向输出文件或流中写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="38b8b-169">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="38b8b-170">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="38b8b-170">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="38b8b-171">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-171">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="38b8b-172"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="38b8b-172">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="38b8b-173">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-173">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="38b8b-174">要向输出文件或流中写入的数据对象。</span><span class="sxs-lookup"><span data-stu-id="38b8b-174">A data object to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="38b8b-175">向输出文件或流中写入跟踪信息、数据对象和事件信息。</span><span class="sxs-lookup"><span data-stu-id="38b8b-175">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-176">`source` 、`eventType`和参数`id`的值以标头形式写入。</span><span class="sxs-lookup"><span data-stu-id="38b8b-176">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="38b8b-177">使用对象的`ToString`方法将数据对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="38b8b-177">The data object is converted to a string using the `ToString` method of the object.</span></span> <span data-ttu-id="38b8b-178">数据将写入为脚注，其内容取决于<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性的值。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="38b8b-178">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38b8b-179"><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="38b8b-179">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="38b8b-180">它由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="38b8b-180">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="38b8b-181">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="38b8b-181">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="38b8b-182">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-182">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="38b8b-183"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="38b8b-183">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="38b8b-184">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-184">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="38b8b-185">要向输出文件或流中写入的数据对象数组。</span><span class="sxs-lookup"><span data-stu-id="38b8b-185">An array of data objects to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="38b8b-186">将跟踪信息、数据对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="38b8b-186">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-187">`source` 、`eventType`和参数`id`的值以标头形式写入。</span><span class="sxs-lookup"><span data-stu-id="38b8b-187">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="38b8b-188">数据对象使用每个对象的`ToString`方法转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="38b8b-188">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="38b8b-189">数据将写入为脚注，其内容取决于<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性的值。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="38b8b-189">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38b8b-190"><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="38b8b-190">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="38b8b-191">它由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="38b8b-191">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38b8b-192">将事件跟踪信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="38b8b-192">Writes event trace information to an output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="38b8b-193">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="38b8b-193">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="38b8b-194">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-194">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="38b8b-195"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="38b8b-195">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="38b8b-196">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-196">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="38b8b-197">要向输出文件或流中写入的跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="38b8b-197">The trace message to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="38b8b-198">将跟踪信息、消息和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="38b8b-198">Writes trace information, a message, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-199">`source` `message` 、和`eventType`参数的值以标头形式写入，然后以`id`数据的形式写入。</span><span class="sxs-lookup"><span data-stu-id="38b8b-199">The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data.</span></span> <span data-ttu-id="38b8b-200">数据将写入为脚注，其内容取决于<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性的值。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="38b8b-200">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38b8b-201"><xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="38b8b-201">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="38b8b-202">它由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="38b8b-202">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="38b8b-203">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="38b8b-203">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="38b8b-204">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="38b8b-204">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="38b8b-205"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="38b8b-205">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="38b8b-206">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="38b8b-206">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="38b8b-207">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="38b8b-207">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="38b8b-208">包含零个或多个要格式化的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="38b8b-208">An array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="38b8b-209">将跟踪信息、格式化对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="38b8b-209">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38b8b-210">`source` 、`eventType`和参数`id`的值以标头形式写入。</span><span class="sxs-lookup"><span data-stu-id="38b8b-210">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="38b8b-211">使用方法将`format` 对象数组`args`转换为字符串，传递字符串和数组以将字符串格式化为跟踪的消息部分。 `args` <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="38b8b-211">The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="38b8b-212">数据将写入为脚注，其内容取决于<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性的值。 `eventCache`</span><span class="sxs-lookup"><span data-stu-id="38b8b-212">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38b8b-213"><xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="38b8b-213">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="38b8b-214">它由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="38b8b-214">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
