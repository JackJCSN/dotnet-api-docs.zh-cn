<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c444fdf7e88df7ef1aa2b496d5e9ad07a91d9a3" /><Meta Name="ms.sourcegitcommit" Value="6e7795ffb53e7cc489d655f9ee4308569b8763b9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/26/2019" /><Meta Name="ms.locfileid" Value="72961385" /></Metadata><TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <TypeSignature Language="F#" Value="type Ping = class&#xA;    inherit Component&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cacca-101">允许应用程序确定是否可通过网络访问远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-101">Allows an application to determine whether a remote computer is accessible over the network.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-102">应用程序使用 <xref:System.Net.NetworkInformation.Ping> 类来检测远程计算机是否可访问。</span><span class="sxs-lookup"><span data-stu-id="cacca-102">Applications use the <xref:System.Net.NetworkInformation.Ping> class to detect whether a remote computer is reachable.</span></span>  
  
 <span data-ttu-id="cacca-103">网络拓扑可以确定 <xref:System.Net.NetworkInformation.Ping> 是否可以成功连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="cacca-103">Network topology can determine whether <xref:System.Net.NetworkInformation.Ping> can successfully contact a remote host.</span></span> <span data-ttu-id="cacca-104">代理、网络地址转换（NAT）设备或防火墙的存在和配置可能会阻止 <xref:System.Net.NetworkInformation.Ping>。</span><span class="sxs-lookup"><span data-stu-id="cacca-104">The presence and configuration of proxies, network address translation (NAT) equipment, or firewalls can prevent <xref:System.Net.NetworkInformation.Ping> from succeeding.</span></span> <span data-ttu-id="cacca-105">成功的 <xref:System.Net.NetworkInformation.Ping> 仅指示可在网络上访问远程主机;不保证远程主机上存在较高级别的服务（如 Web 服务器）。</span><span class="sxs-lookup"><span data-stu-id="cacca-105">A successful <xref:System.Net.NetworkInformation.Ping> indicates only that the remote host can be reached on the network; the presence of higher level services (such as a Web server) on the remote host is not guaranteed.</span></span>  
  
 <span data-ttu-id="cacca-106">此类提供类似于命令行工具的功能。</span><span class="sxs-lookup"><span data-stu-id="cacca-106">This class provides functionality similar to the Ping.exe command line tool.</span></span> <span data-ttu-id="cacca-107"><xref:System.Net.NetworkInformation.Ping.Send%2A> 和 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法向远程计算机发送 Internet 控制消息协议（ICMP）回送请求消息，并等待来自该计算机的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-107">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods send an Internet Control Message Protocol (ICMP) echo request message to a remote computer and waits for an ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-108">有关 ICMP 消息的详细说明，请参阅 RFC 792， [https://www.ietf.org](https://www.ietf.org/)提供。</span><span class="sxs-lookup"><span data-stu-id="cacca-108">For a detailed description of ICMP messages, see RFC 792, available at [https://www.ietf.org](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="cacca-109">以下类型与 <xref:System.Net.NetworkInformation.Ping> 类结合使用，如下所述。</span><span class="sxs-lookup"><span data-stu-id="cacca-109">The following types are used with the <xref:System.Net.NetworkInformation.Ping> class and are described in detail below.</span></span>  
  
|<span data-ttu-id="cacca-110">**类型名称**</span><span class="sxs-lookup"><span data-stu-id="cacca-110">**Type name**</span></span>|<span data-ttu-id="cacca-111">**说明**</span><span class="sxs-lookup"><span data-stu-id="cacca-111">**Description**</span></span>|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|<span data-ttu-id="cacca-112">定义用于描述 ICMP 回送请求消息的结果的状态代码。</span><span class="sxs-lookup"><span data-stu-id="cacca-112">Defines status codes that describe the outcome of an ICMP echo request message.</span></span>|  
|<xref:System.Net.NetworkInformation.PingOptions>|<span data-ttu-id="cacca-113">允许您配置或检索设置，这些设置控制请求数据包可以被转发的次数（<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>）以及是否可以分段（<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>）。</span><span class="sxs-lookup"><span data-stu-id="cacca-113">Allows you to configure or retrieve the settings that control how many times the request packet can be forwarded (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), and whether it can be fragmented (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).</span></span>|  
|<xref:System.Net.NetworkInformation.PingReply>|<span data-ttu-id="cacca-114">包含 ICMP 回送请求的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-114">Contains the results of an ICMP echo request.</span></span>|  
|<xref:System.Net.NetworkInformation.PingException>|<span data-ttu-id="cacca-115">如果发生不可恢复的错误，则引发。</span><span class="sxs-lookup"><span data-stu-id="cacca-115">Thrown if an unrecoverable error occurs.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|<span data-ttu-id="cacca-116">包含与 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件关联的数据，这些事件在 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用完成或取消时引发。</span><span class="sxs-lookup"><span data-stu-id="cacca-116">Contains the data associated with <xref:System.Net.NetworkInformation.Ping.PingCompleted> events, which are raised when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|<span data-ttu-id="cacca-117">委托，它提供在 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用完成或取消时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-117">The delegate that provides the callback method invoked when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
  
 <span data-ttu-id="cacca-118"><xref:System.Net.NetworkInformation.Ping.Send%2A> 和 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法返回 <xref:System.Net.NetworkInformation.PingReply> 对象中的答复。</span><span class="sxs-lookup"><span data-stu-id="cacca-118">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return the reply in a <xref:System.Net.NetworkInformation.PingReply> object.</span></span> <span data-ttu-id="cacca-119"><xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> 属性返回一个 <xref:System.Net.NetworkInformation.IPStatus> 值，该值指示请求的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-119">The <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> property returns an <xref:System.Net.NetworkInformation.IPStatus> value to indicate the outcome of the request.</span></span>  
  
 <span data-ttu-id="cacca-120">发送请求时，必须指定远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-120">When sending the request, you must specify the remote computer.</span></span> <span data-ttu-id="cacca-121">可以通过提供主机名字符串、字符串格式的 IP 地址或 <xref:System.Net.IPAddress> 对象来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-121">You can do this by providing a host name string, an IP address in string format, or an <xref:System.Net.IPAddress> object.</span></span>  
  
 <span data-ttu-id="cacca-122">你还可以指定以下任何类型的信息：</span><span class="sxs-lookup"><span data-stu-id="cacca-122">You can also specify any of the following types of information:</span></span>  
  
-   <span data-ttu-id="cacca-123">要伴随请求的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-123">Data to accompany the request.</span></span> <span data-ttu-id="cacca-124">通过指定 `buffer`，你可以了解特定大小的数据包传送到远程主机和网络路径的最大传输单元所需的时间量。</span><span class="sxs-lookup"><span data-stu-id="cacca-124">Specifying `buffer` allows you to learn the amount of time required for a packet of a particular size to travel to and from the remote host and the maximum transmission unit of the network path.</span></span> <span data-ttu-id="cacca-125">（请参阅采用 `buffer` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 或 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载。）</span><span class="sxs-lookup"><span data-stu-id="cacca-125">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `buffer` parameter.)</span></span>  
  
-   <span data-ttu-id="cacca-126">ICMP Echo 数据包是否可以在传输过程中进行分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-126">Whether the ICMP Echo packet can be fragmented in transit.</span></span> <span data-ttu-id="cacca-127">（请参阅 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性和 <xref:System.Net.NetworkInformation.Ping.Send%2A> 或采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载。）</span><span class="sxs-lookup"><span data-stu-id="cacca-127">(See the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="cacca-128">路由节点（如路由器或网关）在到达目标计算机或被丢弃之前可以转发数据包的次数。</span><span class="sxs-lookup"><span data-stu-id="cacca-128">How many times routing nodes, such as routers or gateways, can forward the packet before it either reaches the destination computer or is discarded.</span></span> <span data-ttu-id="cacca-129">（请参阅 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 和使用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 或 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载。）</span><span class="sxs-lookup"><span data-stu-id="cacca-129">(See <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="cacca-130">必须在此时间内接收回复的时间限制。</span><span class="sxs-lookup"><span data-stu-id="cacca-130">The time limit within which the reply must be received.</span></span> <span data-ttu-id="cacca-131">（请参阅采用 `timeout` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 或 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载。</span><span class="sxs-lookup"><span data-stu-id="cacca-131">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `timeout` parameter.</span></span>  
  
 <span data-ttu-id="cacca-132"><xref:System.Net.NetworkInformation.Ping> 类提供用于发送请求的同步和异步方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-132">The <xref:System.Net.NetworkInformation.Ping> class offers both synchronous and asynchronous methods for sending the request.</span></span> <span data-ttu-id="cacca-133">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-133">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span> <span data-ttu-id="cacca-134">如果你的应用程序不应阻止，请使用异步 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-134">If your application should not block, use the asynchronous <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="cacca-135">对 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 的调用会在其自己的线程中执行，该线程会自动从线程池分配。</span><span class="sxs-lookup"><span data-stu-id="cacca-135">A call to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> executes in its own thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-136">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-136">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-137">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定为 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-137">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called for <xref:System.Net.NetworkInformation.Ping.PingCompleted> events.</span></span> <span data-ttu-id="cacca-138">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-138">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-139">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-139">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-140">不能使用 <xref:System.Net.NetworkInformation.Ping> 类的同一个实例来生成多个同时 ICMP 回显请求。</span><span class="sxs-lookup"><span data-stu-id="cacca-140">You cannot use the same instance of the <xref:System.Net.NetworkInformation.Ping> class to generate multiple simultaneous ICMP Echo requests.</span></span> <span data-ttu-id="cacca-141">在 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用正在进行时调用 <xref:System.Net.NetworkInformation.Ping.Send%2A>，或在之前的所有调用都完成之前调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 多次导致了 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="cacca-141">Calling <xref:System.Net.NetworkInformation.Ping.Send%2A> while a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call is in progress or calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> multiple times before all previous calls have completed causes an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-142">下面的代码示例演示如何以同步方式使用 <xref:System.Net.NetworkInformation.Ping> 类。</span><span class="sxs-lookup"><span data-stu-id="cacca-142">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class synchronously.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 <span data-ttu-id="cacca-143">下面的代码示例演示如何以异步方式使用 <xref:System.Net.NetworkInformation.Ping> 类。</span><span class="sxs-lookup"><span data-stu-id="cacca-143">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class asynchronously.</span></span>  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/how-to-ping-a-host.md"><span data-ttu-id="cacca-144">如何：Ping 主机</span><span class="sxs-lookup"><span data-stu-id="cacca-144">How to: Ping a Host</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/index.md"><span data-ttu-id="cacca-145">.NET Framework 中的网络编程</span><span class="sxs-lookup"><span data-stu-id="cacca-145">Network Programming in the .NET Framework</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md"><span data-ttu-id="cacca-146">网络编程示例</span><span class="sxs-lookup"><span data-stu-id="cacca-146">Network Programming Samples</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/networkinformation.md"><span data-ttu-id="cacca-147">NetworkInformation</span><span class="sxs-lookup"><span data-stu-id="cacca-147">NetworkInformation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cacca-148">初始化 <see cref="T:System.Net.NetworkInformation.Ping" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cacca-148">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cacca-149">下面的代码示例演示如何创建 <xref:System.Net.NetworkInformation.Ping> 实例。</span><span class="sxs-lookup"><span data-stu-id="cacca-149">The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance.</span></span> <span data-ttu-id="cacca-150"><xref:System.Net.NetworkInformation.Ping> 类概述中提供了完整的示例。</span><span class="sxs-lookup"><span data-stu-id="cacca-150">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ping.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="cacca-151">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-151"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cacca-152">释放由 <see cref="T:System.Net.NetworkInformation.Ping" /> 对象使用的非托管资源，并可根据需要释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="cacca-152">Releases the unmanaged resources used by the <see cref="T:System.Net.NetworkInformation.Ping" /> object, and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-153">此方法由公共 `Dispose()` 方法和 <xref:System.ComponentModel.Component.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="cacca-153">This method is called by the public `Dispose()` method and the <xref:System.ComponentModel.Component.Finalize%2A> method.</span></span> <span data-ttu-id="cacca-154">Public `Dispose()` 方法调用受保护的 <xref:System.Net.NetworkInformation.Ping.Dispose%2A> 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-154">The public `Dispose()` method invokes the protected <xref:System.Net.NetworkInformation.Ping.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="cacca-155"><xref:System.ComponentModel.Component.Finalize%2A> 调用 `disposing` 设置为 `false`的 `Dispose`。</span><span class="sxs-lookup"><span data-stu-id="cacca-155"><xref:System.ComponentModel.Component.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="cacca-156">当 `true``disposing` 参数时，此方法将释放此 <xref:System.Net.NetworkInformation.Ping> 对象引用的任何托管对象所持有的所有资源。</span><span class="sxs-lookup"><span data-stu-id="cacca-156">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.NetworkInformation.Ping> object references.</span></span> <span data-ttu-id="cacca-157">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-157">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPingCompleted : System.Net.NetworkInformation.PingCompletedEventArgs -&gt; unit" Usage="ping.OnPingCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cacca-158">包含事件数据的 <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-158">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> object that contains event data.</span></span></param>
        <summary><span data-ttu-id="cacca-159">引发 <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-159">Raises the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-160">从 <xref:System.Net.NetworkInformation.Ping> 类继承的类可以重写此方法，以执行其他任务，例如记录包含在 `e` 参数中的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-160">Classes that inherit from the <xref:System.Net.NetworkInformation.Ping> class can override this method to perform additional tasks, such as logging the data contained in the `e` parameter.</span></span>  
  
 <span data-ttu-id="cacca-161">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="cacca-162">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="cacca-162">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="cacca-163"><xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="cacca-163">The <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="cacca-164">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="cacca-164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cacca-165">在派生类中重写 <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> 时，请确保调用基类 "<see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-165">When overriding <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberSignature Language="F#" Value="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " Usage="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PingCompleted As PingCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cacca-166">当发送 Internet 控制消息协议 (ICMP) 回送消息并接收相应 ICMP 回送答复消息的异步操作完成或被取消时发生。</span><span class="sxs-lookup"><span data-stu-id="cacca-166">Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-167">应用程序使用 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件获取有关完成状态的信息以及通过调用其中一个 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法收集的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-167">Applications use the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event to get information about the completion status and data collected by a call to one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="cacca-168"><xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托提供 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发此事件时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-168">The <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate provides the call back method invoked when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-169">下面的代码示例演示如何为 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件指定回调方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-169">The following code example demonstrates specifying a callback method for the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-170"><xref:System.Net.NetworkInformation.Ping> 类概述中提供了完整的示例。</span><span class="sxs-lookup"><span data-stu-id="cacca-170">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cacca-171">尝试将 Internet 控制消息协议 (ICMP) 回送消息发送到远程计算机并接收来自远程计算机的相应 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-171">Attempts to send an Internet Control Message Protocol (ICMP) echo message to a remote computer and receive a corresponding ICMP echo reply message from the remote computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-172">任何 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载返回的 IP 地址都可能源自恶意远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-172">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="cacca-173">不要使用此连接到远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-173">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="cacca-174">使用 DNS 确定要连接到的计算机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-174">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-175">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-175">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <summary><span data-ttu-id="cacca-176">尝试将 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定 <see cref="T:System.Net.IPAddress" /> 的计算机，并接收来自该计算机的相应 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-176">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <returns><span data-ttu-id="cacca-177"><see cref="T:System.Net.NetworkInformation.PingReply" /> 对象。如果收到 ICMP 回送答复消息，此对象提供有关该消息的信息；如果没有收到 ICMP 回送答复消息，此对象将提供失败的原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-177">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-178">此方法使用 ICMP 回送消息 `address` 32 <xref:System.Byte> 数据缓冲区发送到指定的主机。</span><span class="sxs-lookup"><span data-stu-id="cacca-178">This method sends to the host that is specified by `address` a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="cacca-179">方法为 ICMP 回送答复消息等待5秒。</span><span class="sxs-lookup"><span data-stu-id="cacca-179">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="cacca-180">如果在这段时间内没有收到回复，则该方法将返回，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性设置为 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>。</span><span class="sxs-lookup"><span data-stu-id="cacca-180">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="cacca-181">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-181">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-182">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-182">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-183">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-183">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-184">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-184">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-185">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-185">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-186">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-186">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-187">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-187">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-188">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-188">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-189">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-189">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-190">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-190">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-191"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-191"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-192">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-192">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-193"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-193"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-194">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-194">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-195">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-195">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-196">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-196">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-197">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-197">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-198">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-198">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-199">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-199">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-200">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-200">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <summary><span data-ttu-id="cacca-201">尝试向指定的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-201">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <returns><span data-ttu-id="cacca-202">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象。如果已收到 ICMP 回送应答消息，此对象将提供有关该消息的信息；如果没有收到 ICMP 回送应答消息，此对象将提供失败的原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-202">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-203">此方法使用 ICMP 回送消息发送 32 <xref:System.Byte> 数据缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cacca-203">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="cacca-204">方法为 ICMP 回送答复消息等待5秒。</span><span class="sxs-lookup"><span data-stu-id="cacca-204">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="cacca-205">如果在这段时间内没有收到回复，则该方法将返回，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性设置为 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>。</span><span class="sxs-lookup"><span data-stu-id="cacca-205">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="cacca-206">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-206">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-207">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-207">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-208">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-208">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-209">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-209">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-210">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-210">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-211">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-211">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-212">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-212">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-213">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-213">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-214">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-214">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-215">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-216"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-216"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-217">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-217">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-218"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-218"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-219">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-219">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-220">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-220">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-221">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-221">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-222">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-222">To send an ICMP echo message.</span></span> <span data-ttu-id="cacca-223">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-223">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-224">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-224">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-225">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-225">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="cacca-226">尝试将包含指定数据缓冲区的 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并接收来自该计算机的相应 ICMP 回送应答消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-226">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-227">使用此方法可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-227">This method allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-228">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象，如果收到了 ICMP 回显回复消息，则该对象提供相应消息的相关信息；如果未收到消息，则该对象提供失败原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-228">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-229">如果在 `timeout` 参数中指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-229">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-230">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-230">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-231">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-231">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-232">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-232">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-233">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-233">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-234">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-234">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-235">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-235">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-236">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-236">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-237">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-237">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-238">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-238">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-239">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-239">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-240">有关演示如何调用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法的示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-240">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-241"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-241"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-242"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-242"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-243">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-243">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-244"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-244"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-245">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-245">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-246">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-246">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-247">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-247">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-248">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-248">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-249">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-249">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-250">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-250">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-251">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-251">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-252">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-252">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="cacca-253">尝试向指定的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-253">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-254">使用此方法可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-254">This method allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-255">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象，如果收到了 ICMP 回显回复消息，则该对象提供相应消息的相关信息；如果未收到消息，则该对象提供失败原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-255">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-256">如果在 `timeout` 参数中指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-256">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-257">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-257">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-258">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-258">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-259">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-259">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-260">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-260">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-261">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-261">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-262">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-262">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-263">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-263">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-264">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-264">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-265">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-265">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-266">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-266">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-267">有关演示如何调用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法的示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-267">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-268"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-268"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-269"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-269"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-270">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-270">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-271">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-271">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-272">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-272">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-273">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-273">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-274">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-274">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-275">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-275">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-276">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-276">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-277">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-277">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-278">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-278">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-279">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-279">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="cacca-280">尝试将包含指定数据缓冲区的 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并接收来自该计算机的相应 ICMP 回送应答消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-280">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-281">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-281">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-282">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象。如果已收到 ICMP 回送应答消息，此对象将提供有关该消息的信息；如果没有收到 ICMP 回送应答消息，此对象将提供失败的原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-282">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span> <span data-ttu-id="cacca-283">如果数据包的大小超过最大传输单元 (MTU)，该方法将返回 <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-283">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-284">如果在 `timeout` 参数中指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-284">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-285">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-285">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-286">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-286">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-287">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-287">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-288">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-288">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-289">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-289">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-290">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-290">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-291">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-291">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-292">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-292">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-293">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-293">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-294">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-294">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-295">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-295">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-296"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-296">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-297"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-297"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-298">或</span><span class="sxs-lookup"><span data-stu-id="cacca-298">-or-</span></span> 
 <span data-ttu-id="cacca-299"><paramref name="buffer" /> 为 <see langword="null" />，或 <paramref name="buffer" /> 大小大于 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-299"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-300"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-300"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-301">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-301">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-302"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-302"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-303">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-303">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-304">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-304">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-305">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-305">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-306">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-306">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-307">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-307">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-308">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-308">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-309">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-309">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-310">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-310">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-311">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-311">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-312">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-312">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="cacca-313">尝试用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回显消息发送到指定计算机，然后从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-313">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-314">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-314">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-315">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象，如果收到了 ICMP 回显回复消息，则该对象提供相应消息的相关信息；如果未收到消息，则该对象提供失败原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-315">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-316">如果在 `timeout` 参数中指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-316">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-317">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-317">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-318">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-318">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-319">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-319">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-320">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-320">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-321">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-321">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-322">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-322">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-323">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-323">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-324">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-324">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-325">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-325">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-326">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-326">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-327">有关演示如何调用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 重载的示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-327">For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-328"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-328">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-329"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-329"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="cacca-330">或</span><span class="sxs-lookup"><span data-stu-id="cacca-330">-or-</span></span> 
 <span data-ttu-id="cacca-331"><paramref name="buffer" /> 为 <see langword="null" />，或 <paramref name="buffer" /> 大小大于 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-331"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-332"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-332"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-333">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-333">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-334">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-334">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-335">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-335">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-336">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-336">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-337">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-337">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-338">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-338">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-339">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-339">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-340">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-340">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-341">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-341">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-342">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-342">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-343">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-343">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="cacca-344">尝试将包含指定数据缓冲区的 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定 <see cref="T:System.Net.IPAddress" /> 的计算机，并接收来自该计算机的相应 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-344">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" /> and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-345">此重载允许您指定操作的超时值，并控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-345">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="cacca-346">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象。如果已收到 ICMP 回送应答消息，此对象将提供有关该消息的信息；如果没有收到 ICMP 回送应答消息，此对象将提供失败的原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-346">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span> <span data-ttu-id="cacca-347">如果数据包的大小超过最大传输单元 (MTU)，该方法将返回 <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-347">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-348">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-348">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-349">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-349">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-350">如果 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性 `true` 并且数据包的总大小超出了本地和远程计算机之间的某个路由节点可以传输的最大数据包大小，则 ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-350">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-351">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-351">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-352">使用 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性指定在到达其目标之前可以转发的 ICMP 回送消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="cacca-352">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="cacca-353">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-353">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-354">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-354">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-355">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-355">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-356"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-356">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-357"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-357"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-358">或</span><span class="sxs-lookup"><span data-stu-id="cacca-358">-or-</span></span> 
 <span data-ttu-id="cacca-359"><paramref name="buffer" /> 为 <see langword="null" />，或 <paramref name="buffer" /> 大小大于 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-359"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-360"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-360"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-361">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-361">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-362"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-362"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-363">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-363">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-364">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-364">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-365">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-365">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-366">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-366">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-367">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-367">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-368">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-368">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-369">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-369">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-370">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-370">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-371">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-371">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-372">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-372">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-373">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-373">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="cacca-374">尝试用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回显消息发送到指定计算机，然后从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-374">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-375">此重载允许您指定操作的超时值，并控制 ICMP 数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-375">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span></span></summary>
        <returns><span data-ttu-id="cacca-376">一个 <see cref="T:System.Net.NetworkInformation.PingReply" /> 对象，如果收到了 ICMP 回显回复消息，则该对象提供相应消息的相关信息；如果未收到消息，则该对象提供失败原因。</span><span class="sxs-lookup"><span data-stu-id="cacca-376">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-377">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-377">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-378">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-378">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-379">如果 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性 `true` 并且数据包的总大小超出了本地和远程计算机之间的某个路由节点可以传输的最大数据包大小，则 ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-379">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-380">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-380">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-381">使用 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性指定在到达其目标之前可以转发的 ICMP 回送消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="cacca-381">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="cacca-382">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-382">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-383">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-383">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-384">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-384">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-385"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-385">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-386"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="cacca-386"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is a zero-length string.</span></span>  
  
<span data-ttu-id="cacca-387">或</span><span class="sxs-lookup"><span data-stu-id="cacca-387">-or-</span></span> 
 <span data-ttu-id="cacca-388"><paramref name="buffer" /> 为 <see langword="null" />，或 <paramref name="buffer" /> 大小大于 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-388"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-389"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-389"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-390">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-390">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-391"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-391"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-392">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-392">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-393">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-393">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-394">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-394">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-395">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-395">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-396">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-396">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cacca-397">尝试以异步方式将 Internet 控制消息协议 (ICMP) 回送消息发送到指定的计算机，并接收来自该计算机的相应 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-397">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to a computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-398">这些方法不会导致应用程序的主线程阻塞。</span><span class="sxs-lookup"><span data-stu-id="cacca-398">These methods do not cause your application's main thread to block.</span></span> <span data-ttu-id="cacca-399">如果要在等待 ICMP 回送答复消息时阻止，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-399">If you want to block while waiting for the ICMP echo reply message, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-400">任何 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法返回的 IP 地址都可能源自恶意远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-400">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods can originate from a malicious remote computer.</span></span> <span data-ttu-id="cacca-401">不要使用此连接到远程计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-401">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="cacca-402">使用 DNS 确定要连接到的计算机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-402">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * obj -&gt; unit" Usage="ping.SendAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-403">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-403">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-404">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-404">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-405">尝试以异步方式向指定 <see cref="T:System.Net.IPAddress" /> 的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-405">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-406"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-406">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-407">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-407">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-408">对此方法的每个调用都在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-408">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-409">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-409">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-410">若要指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法，必须在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-410">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-411">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-411">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-412"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-412">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-413">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-413">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-414">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法之一;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-414">If your application should block while waiting for a reply, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-415">此方法使用 ICMP 回送消息发送 32 <xref:System.Byte> 数据缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cacca-415">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="cacca-416">方法为 ICMP 回送答复消息等待5秒。</span><span class="sxs-lookup"><span data-stu-id="cacca-416">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="cacca-417">如果在这段时间内没有收到回复，则该方法将返回，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性设置为 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>。</span><span class="sxs-lookup"><span data-stu-id="cacca-417">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="cacca-418">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-418">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-419">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-419">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-420">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-420">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-421">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-421">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-422">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-422">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-423">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-423">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-424">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-424">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-425">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-425">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-426">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-426">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-427">有关演示如何调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法的代码示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-427">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-428"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-428"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-429">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 方法的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-429">A call to the <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-430"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-430"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-431">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-431">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-432">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-432">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-433"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-433"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-434">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-434">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-435">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-435">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-436">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-436">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-437">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-437">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-438">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-438">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-439">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-439">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-440">尝试以异步方式向指定的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-440">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-441"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-441">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-442">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-442">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-443">对此方法的每个调用都在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-443">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-444">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-444">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-445">若要指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法，必须在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-445">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-446">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-446">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-447"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-447">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-448">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-448">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-449">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-449">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-450">此方法使用 ICMP 回送消息发送 32 <xref:System.Byte> 数据缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cacca-450">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="cacca-451">方法为 ICMP 回送答复消息等待5秒。</span><span class="sxs-lookup"><span data-stu-id="cacca-451">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="cacca-452">如果在此时间内未收到回复，则该方法将返回，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性设置为 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>。</span><span class="sxs-lookup"><span data-stu-id="cacca-452">If it does not receive a reply in that time the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="cacca-453">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-453">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-454">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-454">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-455">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-455">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-456">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-456">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-457">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-457">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-458">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-458">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-459">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-459">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-460">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-460">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-461">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-461">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-462">有关演示调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法的代码示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-462">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-463"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-463"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-464">对 <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> 方法的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-464">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-465"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-465"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-466">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-466">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-467">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-467">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-468"><paramref name="hostNameOrAddress" /> 未能解析为有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-468"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-469">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-469">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-470">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-470">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-471">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-471">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-472">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-472">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-473">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-473">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-474">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-474">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-475">尝试以异步方式向指定 <see cref="T:System.Net.IPAddress" /> 的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-475">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-476">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-476">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-477"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-477">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-478">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-478">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-479">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-479">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-480">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-480">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-481">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-481">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="cacca-482">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-482">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-483">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-483">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-484"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-484">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-485">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-485">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-486">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-486">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-487">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-487">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-488">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-488">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-489">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-489">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-490">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-490">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-491">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-491">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-492">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-492">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-493">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-493">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-494">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-494">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-495">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-495">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-496">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-496">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-497">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-497">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-498">有关演示调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载的代码示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-498">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-499"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-499"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-500"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-500"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-501">对 <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> 方法的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-501">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-502"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-502"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-503">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-503">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-504">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-504">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-505"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-505"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-506">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-506">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-507">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-507">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-508">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-508">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-509">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-509">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-510">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-510">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-511">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-511">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-512">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-512">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-513">尝试以异步方式向指定的计算机发送 Internet 控制消息协议 (ICMP) 回送消息，并从该计算机接收相应的 ICMP 回送答复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-513">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-514">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-514">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-515"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-515">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-516">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-516">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-517">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-517">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-518">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-518">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-519">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-519">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="cacca-520">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-520">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-521">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-521">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-522"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-522">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-523">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-523">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-524">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-524">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-525">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-525">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-526">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-526">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-527">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-527">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-528">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-528">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-529">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-529">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-530">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-530">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-531">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-531">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-532">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-532">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-533">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-533">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-534">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-534">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-535">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-535">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-536">有关演示调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法的代码示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-536">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-537"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-537"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-538"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-538"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-539">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-539">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-540"><paramref name="hostNameOrAddress" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-540"><paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-541">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-541">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-542">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-542">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-543"><paramref name="hostNameOrAddress" /> 未能解析为有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-543"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-544">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-544">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-545">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-545">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-546">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-546">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-547">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-547">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-548">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-548">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-549">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-549">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-550">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-550">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-551">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-551">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-552">尝试用指定的数据缓冲区以异步方式将 Internet 控制消息协议 (ICMP) 回显消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-552">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-553">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-553">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-554">此方法以异步方式发送回显消息，并在操作完成（成功或失败）后，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-554">This method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-555">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-555">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-556">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-556">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-557">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-557">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-558">若要指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法，必须在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-558">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-559">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-559">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-560"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-560">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-561">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-561">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-562">如果你的应用程序在等待答复时处于阻止状态，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-562">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-563">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-563">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-564">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-564">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-565">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-565">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-566">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-566">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-567">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-567">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-568">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-568">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-569">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-569">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-570">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-570">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-571">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-571">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-572">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-572">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-573">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-573">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-574">有关演示调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载的代码示例，请参阅 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-574">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-575"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-575"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-576">或</span><span class="sxs-lookup"><span data-stu-id="cacca-576">-or-</span></span> 
 <span data-ttu-id="cacca-577"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-577"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-578"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-578"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-579">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-579">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-580"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-580"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-581">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-581">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-582">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-582">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-583"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-583"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-584">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-584">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-585"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-585">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-586">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-586">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-587">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-587">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-588">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-588">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-589">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-589">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-590">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-590">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-591">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-591">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-592">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-592">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-593">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-593">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-594">尝试用指定的数据缓冲区以异步方式将 Internet 控制消息协议 (ICMP) 回显消息发送到指定计算机，并从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-594">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-595">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-595">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-596"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-596">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-597">当应用程序不应阻止时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-597">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="cacca-598">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-598">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-599">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-599">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-600">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-600">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="cacca-601">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-601">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-602">委托的方法接收包含描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用结果的 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-602">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object containing a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-603"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-603">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-604">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-604">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-605">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-605">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-606">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-606">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-607">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-607">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-608">此重载使用默认设置来进行数据包碎片和数据包转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-608">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="cacca-609">如果数据包的总大小超出了本地和远程计算机上的某个路由节点可以传输的最大数据包大小，则包含 ICMP 回送消息的数据包可能会分段。</span><span class="sxs-lookup"><span data-stu-id="cacca-609">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="cacca-610">若要防止碎片，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法之一，并将 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="cacca-610">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="cacca-611">当 `true` <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 并且数据包的总大小超出了本地和远程计算机之间的路由节点可以传输的最大数据包大小时，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-611">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-612">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-612">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="cacca-613">在丢弃数据包或数据包片段之前，可以通过路由节点128次转发。</span><span class="sxs-lookup"><span data-stu-id="cacca-613">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="cacca-614">若要更改此设置，请使用采用 `options` 参数的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，并将 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性设置为所需的值。</span><span class="sxs-lookup"><span data-stu-id="cacca-614">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="cacca-615">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-615">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-616">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-616">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-617">下面的代码示例演示如何调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 重载，请参见 <xref:System.Net.NetworkInformation.Ping> 类概述。</span><span class="sxs-lookup"><span data-stu-id="cacca-617">The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-618"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-618"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="cacca-619">或</span><span class="sxs-lookup"><span data-stu-id="cacca-619">-or-</span></span> 
 <span data-ttu-id="cacca-620"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-620"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-621"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-621"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-622">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-622">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-623"><paramref name="hostNameOrAddress" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-623"><paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-624">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-624">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-625">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-625">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-626"><paramref name="hostNameOrAddress" /> 未能解析为有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-626"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-627">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-627">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-628"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-628">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-629">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-629">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-630">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-630">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-631">标识 ICMP 回送消息目标计算机的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-631">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-632">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-632">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-633">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-633">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-634">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-634">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-635">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-635">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-636">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-636">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-637">尝试用指定的数据缓冲区以异步方式将 Internet 控制消息协议 (ICMP) 回显消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-637">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-638">此重载允许您指定操作的超时值，并控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-638">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-639"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-639">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-640">当应用程序不能阻塞时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-640">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="cacca-641">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-641">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-642">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-642">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-643">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-643">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="cacca-644">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-644">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-645">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-645">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-646"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-646">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-647">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-647">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-648">如果你的应用程序在等待答复时处于阻止状态，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-648">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-649">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-649">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-650">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-650">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-651">如果 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性 `true` 并且数据包的总大小超出了本地和远程计算机之间的某个路由节点可以传输的最大数据包大小，则 ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-651">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-652">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-652">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-653">使用 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性指定在到达其目标之前可以转发的 ICMP 回送消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="cacca-653">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="cacca-654">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-654">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-655">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-655">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-656">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-656">The following code example demonstrates how to call this method.</span></span> <span data-ttu-id="cacca-657">有关回调方法的实现，请参见 "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法重载示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="cacca-657">For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.</span></span>  
  
 <span data-ttu-id="cacca-658">下面的代码示例需要以下命名空间：</span><span class="sxs-lookup"><span data-stu-id="cacca-658">The following code example requires the following namespaces:</span></span>  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 <span data-ttu-id="cacca-659">下面的代码示例以异步方式发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-659">The following code example sends an ICMP echo message asynchronously.</span></span>  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-660"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-660"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-661">或</span><span class="sxs-lookup"><span data-stu-id="cacca-661">-or-</span></span> 
 <span data-ttu-id="cacca-662"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-662"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-663"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-663"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-664">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-664">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-665"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-665"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-666">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-666">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-667">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-667">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-668"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-668"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-669">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-669">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-670"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-670">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-671">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-671">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-672">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-672">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-673">一个 <see cref="T:System.String" />，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-673">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-674">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-674">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-675">一个 <see cref="T:System.Int32" /> 值，指定（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-675">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-676">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-676">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-677">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-677">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-678">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-678">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <param name="userToken"><span data-ttu-id="cacca-679">一个对象，此对象将被传递给异步操作完成后所调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-679">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="cacca-680">尝试用指定的数据缓冲区以异步方式将 Internet 控制消息协议 (ICMP) 回显消息发送到指定计算机，并从该计算机接收对应的 ICMP 回显回复消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-680">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="cacca-681">此重载允许您指定操作的超时值，并控制 ICMP 数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-681">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-682"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法以异步方式发送回显消息，并在操作完成（成功或失败）时，将状态返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="cacca-682">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="cacca-683">当应用程序不能阻塞时，调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-683">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="cacca-684">每个调用在自动从线程池分配的单独线程中执行。</span><span class="sxs-lookup"><span data-stu-id="cacca-684">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="cacca-685">异步操作完成后，它会引发 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-685">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="cacca-686">应用程序使用 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托来指定 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 引发事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-686">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="cacca-687">在调用 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>之前，必须将 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 委托添加到事件。</span><span class="sxs-lookup"><span data-stu-id="cacca-687">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="cacca-688">委托的方法接收一个包含 <xref:System.Net.NetworkInformation.PingReply> 对象的 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象，该对象描述 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用的结果。</span><span class="sxs-lookup"><span data-stu-id="cacca-688">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="cacca-689"><xref:System.Net.NetworkInformation.PingCompletedEventArgs> 对象继承 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cacca-689">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="cacca-690">此属性包含传递到 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 调用中的 `userToken` 对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-690">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="cacca-691">如果你的应用程序应在等待答复时阻塞，请使用 <xref:System.Net.NetworkInformation.Ping.Send%2A> 方法;这些方法是同步的。</span><span class="sxs-lookup"><span data-stu-id="cacca-691">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="cacca-692">如果在 `timeout` 参数指定的时间内未收到 ICMP 回送答复消息，则 ICMP 回显将失败，并且 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 属性将设置为 "<xref:System.Net.NetworkInformation.IPStatus.TimedOut>"。</span><span class="sxs-lookup"><span data-stu-id="cacca-692">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cacca-693">为 `timeout`指定非常小的数字时，即使已经过了 `timeout` 毫秒，也可以接收 Ping 回复。</span><span class="sxs-lookup"><span data-stu-id="cacca-693">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="cacca-694">如果 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 属性 `true` 并且数据包的总大小超出了本地和远程计算机之间的某个路由节点可以传输的最大数据包大小，则 ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-694">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-695">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。</span><span class="sxs-lookup"><span data-stu-id="cacca-695">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="cacca-696">使用 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 属性指定在到达其目标之前可以转发的 ICMP 回送消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="cacca-696">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="cacca-697">如果数据包在被转发指定的次数后无法到达其目标，则丢弃数据包，ICMP 回送请求失败。</span><span class="sxs-lookup"><span data-stu-id="cacca-697">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="cacca-698">发生这种情况时，<xref:System.Net.NetworkInformation.PingReply.Status%2A> 设置为 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>。</span><span class="sxs-lookup"><span data-stu-id="cacca-698">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cacca-699">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="cacca-699">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-700"><paramref name="hostNameOrAddress" /> 为 <see langword="null" /> 或是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="cacca-700"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="cacca-701">或</span><span class="sxs-lookup"><span data-stu-id="cacca-701">-or-</span></span> 
 <span data-ttu-id="cacca-702"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-702"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-703"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-703"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-704">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-704">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cacca-705"><paramref name="address" /> 是一个 IPv6 地址，并且本地计算机运行的操作系统的版本低于 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="cacca-705"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-706">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-706">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-707">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-707">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-708"><paramref name="hostNameOrAddress" /> 未能解析为有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-708"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-709">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-709">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-710"><paramref name="buffer" /> 的大小超过 65500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-710">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="cacca-711">发送 ICMP 回送消息。</span><span class="sxs-lookup"><span data-stu-id="cacca-711">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="cacca-712">关联的枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="cacca-712">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="ping.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cacca-713">取消所有挂起的发送 Internet 控制消息协议 (ICMP) 回送消息并接收相应 ICMP 回送答复消息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="cacca-713">Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-714">调用此方法可终止对尚未完成的 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 的任何调用。</span><span class="sxs-lookup"><span data-stu-id="cacca-714">Call this method to terminate any calls to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> that have not completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cacca-715">将 Internet 控制消息协议 (ICMP) 回送消息发送到指定的计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-715">Sends an Internet Control Message Protocol (ICMP) echo message to a computer, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-716">一个 IP 地址，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-716">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <summary><span data-ttu-id="cacca-717">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-717">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-718">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-718">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-719">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-719">This operation will not block.</span></span> <span data-ttu-id="cacca-720">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-720">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-721"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-721"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-722">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-722">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-723">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-723">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-724">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-724">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-725"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-725"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-726">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-726">This object has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-727">作为 ICMP 回送消息的目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-727">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-728">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-728">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <summary><span data-ttu-id="cacca-729">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到指定计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-729">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-730">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-730">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-731">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-731">This operation will not block.</span></span> <span data-ttu-id="cacca-732">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-732">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-733">一个 IP 地址，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-733">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-734">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-734">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="cacca-735">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-735">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-736">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-736">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-737">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-737">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-738">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-738">This operation will not block.</span></span> <span data-ttu-id="cacca-739">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-739">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-740">作为 ICMP 回送消息的目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-740">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-741">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-741">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-742">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-742">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="cacca-743">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到指定计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-743">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-744">此重载使您可以为操作指定一个超时值。</span><span class="sxs-lookup"><span data-stu-id="cacca-744">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="cacca-745">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-745">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-746">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-746">This operation will not block.</span></span> <span data-ttu-id="cacca-747">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-747">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-748">一个 IP 地址，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-748">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-749">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-749">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-750">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-750">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-751">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-751">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="cacca-752">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-752">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-753">此重载将允许您为操作指定超时值并指定用于发送和接收的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cacca-753">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span></span></summary>
        <returns><span data-ttu-id="cacca-754">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-754">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-755">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-755">This operation will not block.</span></span> <span data-ttu-id="cacca-756">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-756">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-757"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-757"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-758">或</span><span class="sxs-lookup"><span data-stu-id="cacca-758">-or-</span></span> 
 <span data-ttu-id="cacca-759"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-759"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-760"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-760"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-761">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-761">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-762">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-762">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-763">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-763">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-764"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-764"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-765">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-765">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-766"><paramref name="buffer" /> 的大小超过 65,500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-766">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-767">作为 ICMP 回送消息的目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-767">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-768">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-768">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-769">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-769">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-770">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-770">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-771">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-771">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="cacca-772">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到指定计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-772">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-773">此重载将允许您为操作指定超时值并指定用于发送和接收的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cacca-773">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span></span></summary>
        <returns><span data-ttu-id="cacca-774">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-774">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-775">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-775">This operation will not block.</span></span> <span data-ttu-id="cacca-776">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-776">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="cacca-777">一个 IP 地址，它标识作为 ICMP 回送消息目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-777">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-778">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-778">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-779">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-779">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-780">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-780">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-781">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-781">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="cacca-782">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到具有指定的 <see cref="T:System.Net.IPAddress" /> 的计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-782">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-783">利用此重载，您可以指定操作的超时值和用于进行发送和接收的缓冲区，并可以控制 ICMP 回送消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-783">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="cacca-784">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-784">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-785">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-785">This operation will not block.</span></span> <span data-ttu-id="cacca-786">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-786">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cacca-787"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-787"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cacca-788">或</span><span class="sxs-lookup"><span data-stu-id="cacca-788">-or-</span></span> 
 <span data-ttu-id="cacca-789"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cacca-789"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cacca-790"><paramref name="timeout" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cacca-790"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cacca-791">对 <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> 的调用正在进行中。</span><span class="sxs-lookup"><span data-stu-id="cacca-791">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="cacca-792">发送或接收 ICMP 消息时引发异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-792">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="cacca-793">请参见内部异常，以确切地了解所引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cacca-793">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cacca-794"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-794"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cacca-795">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-795">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cacca-796"><paramref name="buffer" /> 的大小超过 65,500 字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-796">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="cacca-797">作为 ICMP 回送消息的目标的计算机。</span><span class="sxs-lookup"><span data-stu-id="cacca-797">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="cacca-798">为此参数指定的值可以是主机名，也可以是以字符串形式表示的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="cacca-798">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="cacca-799">（发送回送消息后）等待 ICMP 回送答复消息的最大毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cacca-799">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="cacca-800">一个 <see cref="T:System.Byte" /> 数组，它包含要与 ICMP 回送消息一起发送并在 ICMP 回送应答消息中返回的数据。</span><span class="sxs-lookup"><span data-stu-id="cacca-800">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="cacca-801">该数组包含的字节数不能超过 65,500 个字节。</span><span class="sxs-lookup"><span data-stu-id="cacca-801">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="cacca-802">一个 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 对象，用于控制 ICMP 回显消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-802">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="cacca-803">使用指定的数据缓冲区将 Internet 控制消息协议 (ICMP) 回送消息发送到指定计算机，并从该计算机接收对应的 ICMP 回送答复消息以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="cacca-803">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="cacca-804">利用此重载，您可以指定操作的超时值和用于进行发送和接收的缓冲区，并可以控制 ICMP 回送消息数据包的碎片和生存时间值。</span><span class="sxs-lookup"><span data-stu-id="cacca-804">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="cacca-805">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="cacca-805">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cacca-806">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="cacca-806">This operation will not block.</span></span> <span data-ttu-id="cacca-807">返回的 <xref:System.Threading.Tasks.Task%601>> 对象将在 ICMP 数据包发送之后完成，并收到响应。</span><span class="sxs-lookup"><span data-stu-id="cacca-807">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cacca-808">释放由 <see cref="T:System.Net.NetworkInformation.Ping" /> 类的实例使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="cacca-808">Releases all resources used by instances of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cacca-809">如果对已释放的 <xref:System.Net.NetworkInformation.Ping> 对象调用任何方法，则会收到 <xref:System.ObjectDisposedException>。</span><span class="sxs-lookup"><span data-stu-id="cacca-809">If you call any method on a <xref:System.Net.NetworkInformation.Ping> object that has been disposed, you receive an <xref:System.ObjectDisposedException>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
