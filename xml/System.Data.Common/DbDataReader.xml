<Type Name="DbDataReader" FullName="System.Data.Common.DbDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4244d7084f3d26663b3dd6cdcb1078113ecee543" /><Meta Name="ms.sourcegitcommit" Value="5c332e8417c001736f7e2f33a84791feebba2cd7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/30/2019" /><Meta Name="ms.locfileid" Value="68632574" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataReader extends System.MarshalByRefObject implements class System.Collections.IEnumerable, class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDataReader, IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataReader abstract : MarshalByRefObject, IDisposable, System::Collections::IEnumerable, System::Data::IDataReader" />
  <TypeSignature Language="F#" Value="type DbDataReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDataReader&#xA;    interface IEnumerable&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b1610-101">从数据源中读取行的只进流。</span><span class="sxs-lookup"><span data-stu-id="b1610-101">Reads a forward-only stream of rows from a data source.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="b1610-102">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="b1610-102">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-103">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-103">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-104">初始化 <see cref="T:System.Data.Common.DbDataReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b1610-104">Initializes a new instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="b1610-105">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="b1610-105">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-106">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-106">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="dbDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-107">关闭 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b1610-107">Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-108">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-108">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.CloseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CloseAsync();" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dbDataReader.CloseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Common.DbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-109">获取一个值，该值指示当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="b1610-109">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="b1610-110">当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="b1610-110">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-111">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="b1610-111">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-112">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-112">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-113">释放 <see cref="T:System.Data.Common.DbDataReader" /> 使用的资源并调用 <see cref="M:System.Data.Common.DbDataReader.Close" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-113">Releases the resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and calls <see cref="M:System.Data.Common.DbDataReader.Close" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-114">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-114">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dbDataReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-115">释放 <see cref="T:System.Data.Common.DbDataReader" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="b1610-115">Releases all resources used by the current instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-116">在完成使用 `Dispose` 后，应调用 <xref:System.Data.Common.DbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b1610-116">Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="b1610-117">`Dispose` 方法使 <xref:System.Data.Common.DbDataReader> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="b1610-117">The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state.</span></span> <span data-ttu-id="b1610-118">调用`Dispose`后, 必须释放对的<xref:System.Data.Common.DbDataReader>所有引用, 以便垃圾回收器能够<xref:System.Data.Common.DbDataReader>回收占用的内存。</span><span class="sxs-lookup"><span data-stu-id="b1610-118">After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.</span></span>  
  
 <span data-ttu-id="b1610-119">有关详细信息, 请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="b1610-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1610-120">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Data.Common.DbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b1610-120">Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="b1610-121">否则，在垃圾回收器调用 <xref:System.Data.Common.DbDataReader> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="b1610-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-122">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-122">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b1610-123">若要释放托管资源和非托管的资源，则为 <see langword="true" />；若要仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-123"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b1610-124">释放由 <see cref="T:System.Data.Common.DbDataReader" /> 使用的托管资源，还可以选择释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="b1610-124">Releases the managed resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and optionally releases the unmanaged resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-125">此方法调用 <xref:System.Data.Common.DbDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="b1610-125">This method calls <xref:System.Data.Common.DbDataReader.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-126">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-126">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="dbDataReader.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public abstract int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Common.DbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-127">获取当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="b1610-127">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="b1610-128">当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="b1610-128">The number of columns in the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-129">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="b1610-129">Includes hidden fields.</span></span> <span data-ttu-id="b1610-130">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="b1610-130">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1610-131">没有对 SQL Server 实例的当前连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-131">There is no current connection to an instance of SQL Server.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-132">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-132">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : int -&gt; bool" Usage="dbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-133">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-133">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-134">获取指定列的布尔值形式的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-134">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="b1610-135">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-135">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-136">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-136">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-137">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-137">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-138">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-138">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public abstract byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetByte : int -&gt; byte" Usage="dbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-139">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-139">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-140">以字节的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-140">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="b1610-141">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-141">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-142">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-142">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-143">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-143">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-144">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-144">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 ordinal, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (ordinal As Integer, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetBytes(int ordinal, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dbDataReader.GetBytes (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-145">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-145">The zero-based column ordinal.</span></span></param>
        <param name="dataOffset"><span data-ttu-id="b1610-146">行中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="b1610-146">The index within the row from which to begin the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="b1610-147">要将数据复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b1610-147">The buffer into which to copy the data.</span></span></param>
        <param name="bufferOffset"><span data-ttu-id="b1610-148">要将数据复制到的位置的缓冲区索引。</span><span class="sxs-lookup"><span data-stu-id="b1610-148">The index with the buffer to which the data will be copied.</span></span></param>
        <param name="length"><span data-ttu-id="b1610-149">最多读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="b1610-149">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="b1610-150">从指定列中指定索引处开始读取指定字节数，并将其写入缓冲区中从指定位置开始的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b1610-150">Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.</span></span></summary>
        <returns><span data-ttu-id="b1610-151">读取的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="b1610-151">The actual number of bytes read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-152">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-152">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-153">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-153">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-154">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-154">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public abstract char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="dbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-155">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-155">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-156">以单个字符的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-156">Gets the value of the specified column as a single character.</span></span></summary>
        <returns><span data-ttu-id="b1610-157">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-157">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-158">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-158">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-159">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-159">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-160">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-160">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 ordinal, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (ordinal As Integer, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetChars(int ordinal, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dbDataReader.GetChars (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-161">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-161">The zero-based column ordinal.</span></span></param>
        <param name="dataOffset"><span data-ttu-id="b1610-162">行中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="b1610-162">The index within the row from which to begin the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="b1610-163">要将数据复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b1610-163">The buffer into which to copy the data.</span></span></param>
        <param name="bufferOffset"><span data-ttu-id="b1610-164">要将数据复制到的位置的缓冲区索引。</span><span class="sxs-lookup"><span data-stu-id="b1610-164">The index with the buffer to which the data will be copied.</span></span></param>
        <param name="length"><span data-ttu-id="b1610-165">最多读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="b1610-165">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="b1610-166">从指定列中指定索引处开始读取指定字符数，并将其写入从指定位置开始的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b1610-166">Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.</span></span></summary>
        <returns><span data-ttu-id="b1610-167">读取的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="b1610-167">The actual number of characters read.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-168">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-168">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetData : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-169">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-169">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-170">返回所请求列的嵌套数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-170">Returns a nested data reader for the requested column.</span></span></summary>
        <returns><span data-ttu-id="b1610-171">数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-171">A data reader.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-172">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-172">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-173">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-173">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public abstract string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDataTypeName : int -&gt; string" Usage="dbDataReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-174">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-174">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-175">获取指定列的数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-175">Gets name of the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="b1610-176">数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-176">The name of the data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetDataTypes(String connectionString) {       
   using (SqlConnection conn = new SqlConnection(connectionString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";  
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();               
         using (DbDataReader reader = command.ExecuteReader()) {  
            for (Int32 i = 0; i < reader.FieldCount; i++) {  
               Console.WriteLine("ColumnName:{0,-15}DataType:{1,-15}",reader.GetName(i),reader.GetDataTypeName(i));  
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-177">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-177">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-178">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-178">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTime : int -&gt; DateTime" Usage="dbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-179">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-179">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-180">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-180">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="b1610-181">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-181">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-182">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-182">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-183">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-183">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-184">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-184">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDbDataReader : int -&gt; System.Data.Common.DbDataReader&#xA;override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-185">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-185">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-186">返回被请求的列序号的 <see cref="T:System.Data.Common.DbDataReader" /> 对象，可以使用提供程序特定的实现对该对象进行重写。</span><span class="sxs-lookup"><span data-stu-id="b1610-186">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</span></span></summary>
        <returns><span data-ttu-id="b1610-187"><see cref="T:System.Data.Common.DbDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b1610-187">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-188">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public abstract decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDecimal : int -&gt; decimal" Usage="dbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-189">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-189">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-190">获取指定列的 <see cref="T:System.Decimal" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-190">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b1610-191">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-191">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-192">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-192">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-193">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-193">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-194">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-194">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="dbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-195">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-195">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-196">以双精度浮点数字的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-196">Gets the value of the specified column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="b1610-197">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-197">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-198">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-198">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-199">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-199">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-200">返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-200">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="b1610-201">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span><span class="sxs-lookup"><span data-stu-id="b1610-201">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-202">尽管可以使用此方法来检索显式构造函数, 但在支持显式**foreach**构造的语言中, 直接使用循环构造来循环访问数据读取器中的行更为简单。</span><span class="sxs-lookup"><span data-stu-id="b1610-202">Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 <span data-ttu-id="b1610-203">如果实现此方法, 则它应返回的<xref:System.Data.Common.DbEnumerator>新实例, 或确保枚举器返回<xref:System.Data.IDataRecord>对象。</span><span class="sxs-lookup"><span data-stu-id="b1610-203">If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-204">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-204">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public abstract Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldType : int -&gt; Type" Usage="dbDataReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-205">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-205">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-206">获取指定列的数据类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-206">Gets the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="b1610-207">指定列的数据类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-207">The data type of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-208">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-208">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-209">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-209">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-210">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-210">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetFieldValue&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetFieldValue&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldValue(Of T) (ordinal As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T GetFieldValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : int -&gt; 'T&#xA;override this.GetFieldValue : int -&gt; 'T" Usage="dbDataReader.GetFieldValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b1610-211">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-211">The type of the value to be returned.</span></span></typeparam>
        <param name="ordinal"><span data-ttu-id="b1610-212">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-213">获取指定列的值作为请求的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-213">Gets the value of the specified column as the requested type.</span></span></summary>
        <returns><span data-ttu-id="b1610-214">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-214">The value of the specified column.</span></span></returns>
	<exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-215">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-215">The connection was dropped or closed during data retrieval.</span></span>  

<span data-ttu-id="b1610-216">或</span><span class="sxs-lookup"><span data-stu-id="b1610-216">-or-</span></span> 
<span data-ttu-id="b1610-217">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-217">The data reader was closed during data retrieval.</span></span>  
  
<span data-ttu-id="b1610-218">或</span><span class="sxs-lookup"><span data-stu-id="b1610-218">-or-</span></span>

<span data-ttu-id="b1610-219">没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="b1610-219">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or it returned <see langword="false" />).</span></span>  

<span data-ttu-id="b1610-220">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-220">-or-</span></span>

<span data-ttu-id="b1610-221">读取器试图按顺序模式读取曾读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-221">The reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-222">或</span><span class="sxs-lookup"><span data-stu-id="b1610-222">-or-</span></span>

<span data-ttu-id="b1610-223">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-223">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-224">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-224">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-225">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-225">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-226">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-226">The value returned by the database doesn't match or cannot be cast to <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldValueAsync&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-227">异步获取指定列的值作为请求的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-227">Asynchronously gets the value of the specified column as the requested type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldValueAsync(Of T) (ordinal As Integer) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetFieldValueAsync : int -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b1610-228">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-228">The type of the value to be returned.</span></span></typeparam>
        <param name="ordinal"><span data-ttu-id="b1610-229">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-229">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-230">异步获取指定列的值作为请求的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-230">Asynchronously gets the value of the specified column as the requested type.</span></span></summary>
        <returns><span data-ttu-id="b1610-231"><see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含指定列的值的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-231">A task whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> contains the value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks 
 <span data-ttu-id="b1610-232">仅当在顺序模式下创建读取器时, 才需要此异步方法来避免阻塞调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-232">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="b1610-233">如果未指定顺序模式, 则每次 ReadAsync 完成时, 所有列值都将在内存中可用, 并且调用该方法的同步版本不应阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-233">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="b1610-234">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-234">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span>

 <span data-ttu-id="b1610-235">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-235">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-236">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-236">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>

 ]]></format>
        </remarks>

        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-237">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-237">The connection was dropped or closed during data retrieval.</span></span>  
  
<span data-ttu-id="b1610-238">或</span><span class="sxs-lookup"><span data-stu-id="b1610-238">-or-</span></span>

<span data-ttu-id="b1610-239">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-239">The data reader was closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-240">或</span><span class="sxs-lookup"><span data-stu-id="b1610-240">-or-</span></span>

<span data-ttu-id="b1610-241">没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="b1610-241">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or it returned <see langword="false" />).</span></span>

<span data-ttu-id="b1610-242">或</span><span class="sxs-lookup"><span data-stu-id="b1610-242">-or-</span></span>

<span data-ttu-id="b1610-243">按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-243">Tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-244">-or-</span></span>

<span data-ttu-id="b1610-245">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-245">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-246">以顺序模式运行时，这适用于所有 Get_\*_ 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-246">This applies to all Get_\*_ methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-247">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-247">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-248">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-248">The value returned by the database doesn't match or cannot be cast to <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="b1610-249">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-249">The type of the value to be returned.</span></span></typeparam>
        <param name="ordinal"><span data-ttu-id="b1610-250">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-250">The zero-based column ordinal.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b1610-251">用于取消异步操作的令牌。</span><span class="sxs-lookup"><span data-stu-id="b1610-251">A token to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b1610-252">异步获取指定列的值作为请求的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-252">Asynchronously gets the value of the specified column as the requested type.</span></span></summary>
        <returns><span data-ttu-id="b1610-253"><see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含指定列的值的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-253">A task whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> contains the value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks 
 <span data-ttu-id="b1610-254">仅当在顺序模式下创建读取器时, 才需要此异步方法来避免阻塞调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-254">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="b1610-255">如果未指定顺序模式, 则每次 ReadAsync 完成时, 所有列值都将在内存中可用, 并且调用该方法的同步版本不应阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-255">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="b1610-256">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-256">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="b1610-257">如果传递了已取消的取消标记, 则默认实现还会返回已取消的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-257">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="b1610-258">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-258">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-259">该方法可用于请求操作之前接受取消标记。</span><span class="sxs-lookup"><span data-stu-id="b1610-259">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="b1610-260">实现可能会忽略该请求。</span><span class="sxs-lookup"><span data-stu-id="b1610-260">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="b1610-261">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-261">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-262">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-262">The connection was dropped or closed during data retrieval.</span></span>  
  
<span data-ttu-id="b1610-263">或</span><span class="sxs-lookup"><span data-stu-id="b1610-263">-or-</span></span>

<span data-ttu-id="b1610-264">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-264">The data reader was closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-265">或</span><span class="sxs-lookup"><span data-stu-id="b1610-265">-or-</span></span>

<span data-ttu-id="b1610-266">没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="b1610-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or it returned <see langword="false" />).</span></span>

<span data-ttu-id="b1610-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-267">-or-</span></span>

<span data-ttu-id="b1610-268">按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-268">Tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-269">-or-</span></span>

<span data-ttu-id="b1610-270">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-270">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-271">以顺序模式运行时，这适用于所有 Get_\*_ 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-271">This applies to all Get_\*_ methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-272">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-272">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-273">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-273">The value returned by the database doesn't match or cannot be cast to <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="dbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-274">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-274">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-275">以单精度浮点数字的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-275">Gets the value of the specified column as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="b1610-276">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-276">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-277">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-277">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-278">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-278">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-279">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-279">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public abstract Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetGuid : int -&gt; Guid" Usage="dbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-280">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-280">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-281">获取指定列的值作为全局唯一标识符 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="b1610-281">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="b1610-282">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-282">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-283">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-283">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-284">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-284">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-285">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-285">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public abstract short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt16 : int -&gt; int16" Usage="dbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-286">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-286">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-287">获取指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-287">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b1610-288">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-288">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-289">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-289">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-290">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-290">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-291">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-291">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public abstract int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt32 : int -&gt; int" Usage="dbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-292">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-292">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-293">获取指定列的 32 位带符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-293">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b1610-294">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-294">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetCredits(String connectionString) {  
   using (SqlConnection conn = new SqlConnection(connectionString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";   
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();   
         using (DbDataReader reader = command.ExecuteReader()) {  
            while (reader.Read()) {  
               // Credits column is the integer column, and you can use the GetInt32 method                        
               // to return a 32-bit signed integer.                       
               Console.WriteLine("Course:{0,-15} Credits:{1}",reader[1],reader.GetInt32(2));   
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-295">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-295">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-296">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-296">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-297">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-297">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public abstract long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt64 : int -&gt; int64" Usage="dbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-298">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-298">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-299">以 64 位有符号整数的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-299">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b1610-300">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-300">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-301">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-301">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-302">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-302">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-303">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-303">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public abstract string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetName : int -&gt; string" Usage="dbDataReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-304">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-304">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-305">在给定从零开始的列序号时获取该列的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-305">Gets the name of the column, given the zero-based column ordinal.</span></span></summary>
        <returns><span data-ttu-id="b1610-306">指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-306">The name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-307">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-307">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public abstract int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOrdinal : string -&gt; int" Usage="dbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b1610-308">列的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-308">The name of the column.</span></span></param>
        <summary><span data-ttu-id="b1610-309">在给定列名时获取相应的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-309">Gets the column ordinal given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="b1610-310">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-310">The zero-based column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-311">指定的名称不是有效的列名。</span><span class="sxs-lookup"><span data-stu-id="b1610-311">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-312">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-312">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public virtual Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificFieldType : int -&gt; Type&#xA;override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dbDataReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-313">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-313">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-314">获取指定列的特定于提供程序的类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-314">Gets the provider-specific type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="b1610-315">特定于提供程序的 .NET 类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-315">A provider-specific .NET type.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-316">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-316">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-317">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-317">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public virtual object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValue : int -&gt; obj&#xA;override this.GetProviderSpecificValue : int -&gt; obj" Usage="dbDataReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-318">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-318">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-319">以特定于提供程序的类型实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-319">Gets the value of the specified column as an instance of a provider-specific type.</span></span></summary>
        <returns><span data-ttu-id="b1610-320">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-320">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-321">若要确定返回的对象的特定类型, 请<xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="b1610-321">To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-322">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-322">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public virtual int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValues : obj[] -&gt; int&#xA;override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dbDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b1610-323">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="b1610-323">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="b1610-324">在当前行的集合中获取提供程序特定的所有属性列。</span><span class="sxs-lookup"><span data-stu-id="b1610-324">Gets all provider-specific attribute columns in the collection for the current row.</span></span></summary>
        <returns><span data-ttu-id="b1610-325">数组中元素的实例数。</span><span class="sxs-lookup"><span data-stu-id="b1610-325">The number of instances of elements in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-326">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-326">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-327">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.Common.DbDataReader" /> 的列元数据。</span><span class="sxs-lookup"><span data-stu-id="b1610-327">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="b1610-328">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-328">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-329"><see cref="T:System.Data.Common.DbDataReader" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="b1610-329">The <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span></span></exception>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-330">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-330">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-331">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-331">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetStream (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStream (ordinal As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetStream(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetStream : int -&gt; System.IO.Stream&#xA;override this.GetStream : int -&gt; System.IO.Stream" Usage="dbDataReader.GetStream ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-332">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-332">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-333">获取从指定列检索数据的流。</span><span class="sxs-lookup"><span data-stu-id="b1610-333">Gets a stream to retrieve data from the specified column.</span></span></summary>
        <returns><span data-ttu-id="b1610-334">一个流。</span><span class="sxs-lookup"><span data-stu-id="b1610-334">A stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-335"><xref:System.Data.Common.DbDataReader.GetStream%2A>仅支持检索可转换为字节数组的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-335"><xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-336">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-336">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="b1610-337">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-337">-or-</span></span>

<span data-ttu-id="b1610-338">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-338">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-339">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-339">-or-</span></span>

<span data-ttu-id="b1610-340">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span><span class="sxs-lookup"><span data-stu-id="b1610-340">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="b1610-341">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-341">-or-</span></span>

<span data-ttu-id="b1610-342">数据读取器按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-342">The data reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-343">或</span><span class="sxs-lookup"><span data-stu-id="b1610-343">-or-</span></span>

<span data-ttu-id="b1610-344">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-344">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-345">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-345">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-346">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-346">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-347">指定的列不是支持用 <see cref="T:System.IO.Stream" /> 读取的二进制类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-347">The specified column isn't a binary type that supports reading with a <see cref="T:System.IO.Stream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public abstract string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetString : int -&gt; string" Usage="dbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-348">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-348">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-349">以 <see cref="T:System.String" /> 实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-349">Gets the value of the specified column as an instance of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="b1610-350">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-350">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-351">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-351">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-352">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="b1610-352">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-353">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-353">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public virtual System.IO.TextReader GetTextReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetTextReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextReader (ordinal As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::TextReader ^ GetTextReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetTextReader : int -&gt; System.IO.TextReader&#xA;override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="dbDataReader.GetTextReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-354">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-354">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-355">获取文本读取器以从列中检索数据。</span><span class="sxs-lookup"><span data-stu-id="b1610-355">Gets a text reader to retrieve data from the column.</span></span></summary>
        <returns><span data-ttu-id="b1610-356">文本读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-356">A text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-357"><xref:System.Data.Common.DbDataReader.GetTextReader%2A>仅支持检索可转换为字符数组 (字符串) 的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-357"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-358">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-358">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="b1610-359">或</span><span class="sxs-lookup"><span data-stu-id="b1610-359">-or-</span></span>

<span data-ttu-id="b1610-360">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-360">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-361">或</span><span class="sxs-lookup"><span data-stu-id="b1610-361">-or-</span></span>

<span data-ttu-id="b1610-362">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span><span class="sxs-lookup"><span data-stu-id="b1610-362">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="b1610-363">或</span><span class="sxs-lookup"><span data-stu-id="b1610-363">-or-</span></span>

<span data-ttu-id="b1610-364">数据读取器按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-364">The data reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-365">或</span><span class="sxs-lookup"><span data-stu-id="b1610-365">-or-</span></span>

<span data-ttu-id="b1610-366">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-366">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-367">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-367">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-368">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-368">The column index is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b1610-369">指定的列不是支持用 <see cref="T:System.IO.TextReader" /> 读取的文本类型。</span><span class="sxs-lookup"><span data-stu-id="b1610-369">The specified column isn't a text type that supports reading with a <see cref="T:System.IO.TextReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj" Usage="dbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-370">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-370">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-371">以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-371">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="b1610-372">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-372">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-373">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-373">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-374">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-374">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : obj[] -&gt; int" Usage="dbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b1610-375">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="b1610-375">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="b1610-376">使用当前行的列值来填充对象数组。</span><span class="sxs-lookup"><span data-stu-id="b1610-376">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="b1610-377">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="b1610-377">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-378">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-378">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public abstract bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Common.DbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-379">获取一个值，该值指示此 <see cref="T:System.Data.Common.DbDataReader" /> 是否包含一个或多个行。</span><span class="sxs-lookup"><span data-stu-id="b1610-379">Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="b1610-380">如果 <see cref="T:System.Data.Common.DbDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-380"><see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-381">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-381">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public abstract bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Common.DbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-382">获取一个值，该值指示 <see cref="T:System.Data.Common.DbDataReader" /> 是否已关闭。</span><span class="sxs-lookup"><span data-stu-id="b1610-382">Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="b1610-383">如果 <see cref="T:System.Data.Common.DbDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-383"><see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-384"><see cref="T:System.Data.Common.DbDataReader" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="b1610-384">The <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1610-385">应实现此<see cref="P:System.Data.Common.DbDataReader.RecordsAffected" />属性, 以便在读取器关闭时返回值。</span><span class="sxs-lookup"><span data-stu-id="b1610-385">This property and <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> should be implemented to return a value when the reader is closed.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-386">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-386">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public abstract bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNull : int -&gt; bool" Usage="dbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-387">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-387">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-388">获取一个值，该值指示列中是否包含不存在或丢失的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-388">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns><span data-ttu-id="b1610-389">如果指定的列与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-389"><see langword="true" /> if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-390">调用此方法可在调用类型为 Get_ \* _ 方法 (例如<xref:System.Data.Common.DbDataReader.GetByte%2A> <xref:System.Data.Common.DbDataReader.GetChar%2A>、等) 前检查是否有空列值, 以避免引发异常。</span><span class="sxs-lookup"><span data-stu-id="b1610-390">Call this method to check for null column values before calling the typed Get_\*_ methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid throwing an exception.</span></span>  
  
 ]]></format>
        </remarks>
	<exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-391">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-391">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-392">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-392">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDBNullAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-393">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-393">Asynchronously gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNullAsync (ordinal As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.IsDBNullAsync : int -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-394">从零开始的要检索的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-394">The zero-based column to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b1610-395">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-395">Asynchronously gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="b1610-396">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果指定的列值等于 <see langword="DBNull" />，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果不等于，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-396">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> or <see langword="false" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks
 <span data-ttu-id="b1610-397">仅当在顺序模式下创建读取器时, 才需要此异步方法来避免阻塞调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-397">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="b1610-398">如果未指定顺序模式, 则每次 ReadAsync 完成时, 所有列值都将在内存中可用, 并且调用该方法的同步版本不应阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-398">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="b1610-399">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-399">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span>

 <span data-ttu-id="b1610-400">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-400">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-401">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-401">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>

 ]]></format>
        </remarks>
<exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-402">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-402">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="b1610-403">或</span><span class="sxs-lookup"><span data-stu-id="b1610-403">-or-</span></span>

<span data-ttu-id="b1610-404">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-404">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-405">或</span><span class="sxs-lookup"><span data-stu-id="b1610-405">-or-</span></span>

<span data-ttu-id="b1610-406">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span><span class="sxs-lookup"><span data-stu-id="b1610-406">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="b1610-407">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-407">-or-</span></span>

<span data-ttu-id="b1610-408">按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-408">Trying to read a previously read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-409">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-409">-or-</span></span>

<span data-ttu-id="b1610-410">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-410">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-411">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-411">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-412">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-412">The column index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-413">从零开始的要检索的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-413">The zero-based column to be retrieved.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b1610-414">用于取消异步操作的令牌。</span><span class="sxs-lookup"><span data-stu-id="b1610-414">A token to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b1610-415">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-415">Asynchronously gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="b1610-416">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果指定的列值等于 <see langword="DBNull" />，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果不等于，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-416">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> or <see langword="false" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks
 <span data-ttu-id="b1610-417">仅当在顺序模式下创建读取器时, 才需要此异步方法来避免阻塞调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-417">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="b1610-418">如果未指定顺序模式, 则每次 ReadAsync 完成时, 所有列值都将在内存中可用, 并且调用该方法的同步版本不应阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-418">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="b1610-419">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-419">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="b1610-420">如果传递了已取消的取消标记, 则默认实现还会返回已取消的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-420">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="b1610-421">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-421">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-422">该方法可用于请求操作之前接受取消标记。</span><span class="sxs-lookup"><span data-stu-id="b1610-422">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="b1610-423">实现可能会忽略该请求。</span><span class="sxs-lookup"><span data-stu-id="b1610-423">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="b1610-424">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-424">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>
 ]]></format>
        </remarks>

	<exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1610-425">在数据检索期间删除或关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b1610-425">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="b1610-426">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-426">-or-</span></span>

<span data-ttu-id="b1610-427">在数据检索期间关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="b1610-427">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="b1610-428">或</span><span class="sxs-lookup"><span data-stu-id="b1610-428">-or-</span></span>

<span data-ttu-id="b1610-429">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span><span class="sxs-lookup"><span data-stu-id="b1610-429">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="b1610-430">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-430">-or-</span></span>

<span data-ttu-id="b1610-431">按顺序模式尝试读取上一步骤中读取的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-431">Trying to read a previously read column in sequential mode.</span></span>  

<span data-ttu-id="b1610-432">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b1610-432">-or-</span></span> 
<span data-ttu-id="b1610-433">没有正在进行的异步操作。</span><span class="sxs-lookup"><span data-stu-id="b1610-433">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="b1610-434">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="b1610-434">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-435">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-435">The column index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-436">以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-436">Gets the value of a specified column as an instance of <see cref="T:System.Object" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-437">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-437">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-438">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-438">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-439">以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-439">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span></span></summary>
        <value><span data-ttu-id="b1610-440">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-440">The value of the specified column.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-441">列索引超出范围。</span><span class="sxs-lookup"><span data-stu-id="b1610-441">The column index is out of range.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-442">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-442">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b1610-443">列的名称。</span><span class="sxs-lookup"><span data-stu-id="b1610-443">The name of the column.</span></span></param>
        <summary><span data-ttu-id="b1610-444">以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-444">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span></span></summary>
        <value><span data-ttu-id="b1610-445">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="b1610-445">The value of the specified column.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b1610-446">未找到具有指定名称的列。</span><span class="sxs-lookup"><span data-stu-id="b1610-446">No column with the specified name was found.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-447">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-447">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public abstract bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="dbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-448">在读取一批语句的结果时，使读取器前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="b1610-448">Advances the reader to the next result when reading the results of a batch of statements.</span></span></summary>
        <returns><span data-ttu-id="b1610-449">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-449"><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-450">此方法可用于处理向数据提供程序提交一批语句后返回的多个结果集。</span><span class="sxs-lookup"><span data-stu-id="b1610-450">This method allows you to process multiple result sets returned when a batch is submitted to the data provider.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-451">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-451">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextResultAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-452">在读取一批语句的结果时，使读取器异步前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="b1610-452">Asynchronously advances the reader to the next result when reading the results of a batch of statements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-453">有关异步编程的详细信息, 请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="b1610-453">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-454">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-454">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResultAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync();" />
      <MemberSignature Language="F#" Value="member this.NextResultAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-455">在读取一批语句的结果时，使读取器异步前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="b1610-455">Asynchronously advances the reader to the next result when reading the results of a batch of statements.</span></span></summary>
        <returns><span data-ttu-id="b1610-456">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的结果集，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-456">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if there are more result sets or <see langword="false" /> if there aren't.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="b1610-457">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-457">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span>

 <span data-ttu-id="b1610-458">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-458">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-459">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-459">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException"><span data-ttu-id="b1610-460">执行命令文本时出现的一个错误。</span><span class="sxs-lookup"><span data-stu-id="b1610-460">An error occurred while executing the command text.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-461">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-461">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="b1610-462">取消指令。</span><span class="sxs-lookup"><span data-stu-id="b1610-462">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="b1610-463">在读取一批语句的结果时，使读取器异步前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="b1610-463">Asynchronously advances the reader to the next result when reading the results of a batch of statements.</span></span></summary>
        <returns><span data-ttu-id="b1610-464">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的结果集，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-464">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if there are more result sets or <see langword="false" /> if there aren't.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="b1610-465">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-465">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="b1610-466">如果传递了已取消的取消标记, 则默认实现还会返回已取消的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-466">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="b1610-467">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-467">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-468">该方法可用于请求操作之前接受取消标记。</span><span class="sxs-lookup"><span data-stu-id="b1610-468">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="b1610-469">实现可能会忽略该请求。</span><span class="sxs-lookup"><span data-stu-id="b1610-469">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="b1610-470">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-470">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException"><span data-ttu-id="b1610-471">执行命令文本时出现的一个错误。</span><span class="sxs-lookup"><span data-stu-id="b1610-471">An error occurred while executing the command text.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-472">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-472">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="dbDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-473">使读取器前进到结果集中的下一条记录。</span><span class="sxs-lookup"><span data-stu-id="b1610-473">Advances the reader to the next record in a result set.</span></span></summary>
        <returns><span data-ttu-id="b1610-474">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-474"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-475">数据读取器的默认位置处于第一条记录之前。</span><span class="sxs-lookup"><span data-stu-id="b1610-475">The default position of a data reader is before the first record.</span></span> <span data-ttu-id="b1610-476">因此, 您必须调用<xref:System.Data.Common.DbDataReader.Read%2A>以开始访问数据。</span><span class="sxs-lookup"><span data-stu-id="b1610-476">Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-477">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-477">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1610-478">使读取器异步前进到结果集中的下一条记录。</span><span class="sxs-lookup"><span data-stu-id="b1610-478">Asynchronously advances the reader to the next record in a result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-479">有关异步编程的详细信息, 请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="b1610-479">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-480">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-480">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1610-481">使读取器异步前进到结果集中的下一条记录。</span><span class="sxs-lookup"><span data-stu-id="b1610-481">Asynchronously advances the reader to the next record in a result set.</span></span></summary>
        <returns><span data-ttu-id="b1610-482">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的行，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-482">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if there are more rows or <see langword="false" /> if there aren't.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="b1610-483">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-483">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span>

 <span data-ttu-id="b1610-484">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-484">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>
 
 <span data-ttu-id="b1610-485">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-485">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException"><span data-ttu-id="b1610-486">执行命令文本时出现的一个错误。</span><span class="sxs-lookup"><span data-stu-id="b1610-486">An error occurred while executing the command text.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-487">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-487">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="b1610-488">取消指令。</span><span class="sxs-lookup"><span data-stu-id="b1610-488">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="b1610-489">使读取器异步前进到结果集中的下一条记录。</span><span class="sxs-lookup"><span data-stu-id="b1610-489">Asynchronously advances the reader to the next record in a result set.</span></span></summary>
        <returns><span data-ttu-id="b1610-490">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的行，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-490">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if there are more rows or <see langword="false" /> if there aren't.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="b1610-491">此异步方法的默认实现调用其同步对应项, 并返回已完成的任务, 可能会阻止调用线程。</span><span class="sxs-lookup"><span data-stu-id="b1610-491">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="b1610-492">如果传递了已取消的取消标记, 则默认实现还会返回已取消的任务。</span><span class="sxs-lookup"><span data-stu-id="b1610-492">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="b1610-493">支持[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)的数据访问接口应使用异步 i/o 操作来重写默认的 inmplementation。</span><span class="sxs-lookup"><span data-stu-id="b1610-493">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="b1610-494">该方法可用于请求操作之前接受取消标记。</span><span class="sxs-lookup"><span data-stu-id="b1610-494">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="b1610-495">实现可能会忽略该请求。</span><span class="sxs-lookup"><span data-stu-id="b1610-495">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="b1610-496">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span><span class="sxs-lookup"><span data-stu-id="b1610-496">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException"><span data-ttu-id="b1610-497">执行命令文本时出现的一个错误。</span><span class="sxs-lookup"><span data-stu-id="b1610-497">An error occurred while executing the command text.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-498">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-498">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public abstract int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-499">通过执行 SQL 语句获取更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="b1610-499">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="b1610-500">更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="b1610-500">The number of rows changed, inserted, or deleted.</span></span> <span data-ttu-id="b1610-501">对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</span><span class="sxs-lookup"><span data-stu-id="b1610-501">-1 for SELECT statements; 0 if no rows were affected or the statement failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-502">在`RecordsAffected`读取所有行并`DataReader`关闭之前, 不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="b1610-502">The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1610-503">应实现此<see cref="P:System.Data.Common.DbDataReader.IsClosed" />属性, 以便在读取器关闭时返回值。</span><span class="sxs-lookup"><span data-stu-id="b1610-503">This property and <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> should be implemented to return a value when the reader is closed.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-504">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-504">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.Close">
      <MemberSignature Language="C#" Value="void IDataReader.Close ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDataReader.Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#Close" />
      <MemberSignature Language="VB.NET" Value="Sub Close () Implements IDataReader.Close" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDataReader.Close() = System::Data::IDataReader::Close;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.GetSchemaTable">
      <MemberSignature Language="C#" Value="System.Data.DataTable IDataReader.GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.DataTable System.Data.IDataReader.GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Function GetSchemaTable () As DataTable Implements IDataReader.GetSchemaTable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::DataTable ^ System.Data.IDataReader.GetSchemaTable() = System::Data::IDataReader::GetSchemaTable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b1610-505">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="b1610-505">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="b1610-506">有关此成员的说明，请参见 <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="b1610-506">For a description of this member, see <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="b1610-507">在字段指向更多的远程结构化数据时使用的 <see cref="T:System.Data.IDataReader" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="b1610-507">An instance of <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote structured data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-508">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="b1610-508">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b1610-509">它只能在 <xref:System.Data.Common.DbDataReader> 实例被强制转换为 <xref:System.Data.IDataRecord> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b1610-509">It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-510">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-510">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public virtual int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1610-511">获取 <see cref="T:System.Data.Common.DbDataReader" /> 中未隐藏的字段的数目。</span><span class="sxs-lookup"><span data-stu-id="b1610-511">Gets the number of fields in the <see cref="T:System.Data.Common.DbDataReader" /> that are not hidden.</span></span></summary>
        <value><span data-ttu-id="b1610-512">未隐藏的字段的数目。</span><span class="sxs-lookup"><span data-stu-id="b1610-512">The number of fields that are not hidden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1610-513">此值用于确定 <xref:System.Data.Common.DbDataReader> 中的可见字段的数目。</span><span class="sxs-lookup"><span data-stu-id="b1610-513">This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible.</span></span> <span data-ttu-id="b1610-514">例如，对分部主键执行 SELECT 将以隐藏字段的形式返回该键的其余部分。</span><span class="sxs-lookup"><span data-stu-id="b1610-514">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="b1610-515">隐藏的字段始终追加在可见字段之后。</span><span class="sxs-lookup"><span data-stu-id="b1610-515">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="b1610-516">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="b1610-516">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
