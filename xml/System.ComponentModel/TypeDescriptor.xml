<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6789f2811f61d260c8da1838272369c3b323e80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70426783" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9e2dd-101">提供有关组件特征的信息，如组件的特性、属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span></span> <span data-ttu-id="9e2dd-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-103">.NET Framework 提供了两种方法来访问类型的元数据： <xref:System.Reflection?displayProperty=nameWithType>命名空间中提供的反射 API <xref:System.ComponentModel.TypeDescriptor>和类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="9e2dd-104">反射是适用于所有类型的常规机制，因为它的基础是在<xref:System.Object.GetType%2A>根类<xref:System.Object>的方法中建立的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="9e2dd-105">它为类型返回的信息不是可扩展的，因为它不能在编译目标类型之后修改。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="9e2dd-106">有关详细信息，请参阅[反射](~/docs/framework/reflection-and-codedom/reflection.md)中的主题。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="9e2dd-107">与此相反<xref:System.ComponentModel.TypeDescriptor> ，是一种可扩展的组件检查机制：用于<xref:System.ComponentModel.IComponent>实现接口的类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="9e2dd-108">不同于反射，它不检查方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="9e2dd-109"><xref:System.ComponentModel.TypeDescriptor>可以通过目标组件的<xref:System.ComponentModel.Component.Site%2A>多个可用服务进行动态扩展。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="9e2dd-110">下表显示了这些服务。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="9e2dd-111">服务名称</span><span class="sxs-lookup"><span data-stu-id="9e2dd-111">Service name</span></span>|<span data-ttu-id="9e2dd-112">说明</span><span class="sxs-lookup"><span data-stu-id="9e2dd-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="9e2dd-113">启用另一个类（如<xref:System.Windows.Forms.ToolTip>）以向组件提供额外的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="9e2dd-114">允许其他对象修改组件公开的标准元数据。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="9e2dd-115">使类能够完全并动态地指定其自己的元数据，同时替换的标准<xref:System.ComponentModel.TypeDescriptor>检查机制。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="9e2dd-116">提供<xref:System.ComponentModel.TypeDescriptor>的扩展性允许组件的设计时表示形式不同于它的实际运行时表示形式， <xref:System.ComponentModel.TypeDescriptor>这对生成设计时基础结构很有用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="9e2dd-117">中<xref:System.ComponentModel.TypeDescriptor>的所有方法都`static`是。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="9e2dd-118">不能创建此类的实例，也不能继承此类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="9e2dd-119">您可以通过两种不同的方式来设置属性和事件值：在组件类中指定它们或在设计时更改它们。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="9e2dd-120">由于可以通过两种方式设置这些值，因此的重载<xref:System.ComponentModel.TypeDescriptor>方法采用两种不同类型的参数：类类型或对象实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="9e2dd-121">如果要访问<xref:System.ComponentModel.TypeDescriptor>信息并且具有对象的实例，请使用调用组件的方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="9e2dd-122">仅当没有对象的实例时，才使用调用类类型的方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-123">将缓存<xref:System.ComponentModel.TypeDescriptor>属性和事件以获得速度。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="9e2dd-124">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="9e2dd-125">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="9e2dd-126">如果是这种情况， <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>则必须调用方法来更新缓存。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="9e2dd-127">类型说明符概述</span><span class="sxs-lookup"><span data-stu-id="9e2dd-127">Type Descriptor Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d1a58e7f-fb39-4d50-bf84-e3b8f9bf9775"><span data-ttu-id="9e2dd-128">映像</span><span class="sxs-lookup"><span data-stu-id="9e2dd-128">Reflection</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-129">向目标组件添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-129">Adds class-level attributes to the target component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9e2dd-130">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-130">An instance of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-131">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-131">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="9e2dd-132">向目标组件实例添加类级别特性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-132">Adds class-level attributes to the target component instance.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-133">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-133">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-134"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29>方法可向组件的指定实例添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-134">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="9e2dd-135">由于这是使用 Visual Studio Windows 窗体设计器和属性窗口的应用程序的常见要求，因此此方法通过创建将提供的属性与已存在于类中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-135">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="9e2dd-136">返回值是用于添加特性的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-136">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="9e2dd-137">以后不再需要已添加的属性时<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> ，可以将此提供程序传递给方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-137">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-138">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-138">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-139">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-139">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-140">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-141">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-141">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-142">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-142">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-143">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-143">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="9e2dd-144">向目标组件类型添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-144">Adds class-level attributes to the target component type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-145">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-145">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-146"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29>方法将类级特性添加到组件的指定类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-146">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="9e2dd-147">由于这是使用 Visual Studio Windows 窗体设计器和属性窗口的应用程序的常见要求，因此此方法通过创建将提供的属性与已存在于类中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-147">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="9e2dd-148">返回值是用于添加特性的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-148">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="9e2dd-149">以后不再需要已添加的属性时<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> ，可以将此提供程序传递给方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-149">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-150">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-150">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-151">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-151">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-152">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-153">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-153">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="9e2dd-154">要添加编辑器表的编辑器基类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-154">The editor base type to add the editor table for.</span></span> <span data-ttu-id="9e2dd-155">如果针对此类型的表已存在，此方法将不起作用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-155">If a table already exists for this type, this method will do nothing.</span></span></param>
        <param name="table"><span data-ttu-id="9e2dd-156">要添加的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-156">The <see cref="T:System.Collections.Hashtable" /> to add.</span></span></param>
        <summary><span data-ttu-id="9e2dd-157">为给定的编辑器基类型添加编辑器表。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-157">Adds an editor table for the given editor base type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-158"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A>方法为给定的编辑器基类型添加编辑器表。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-158">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="9e2dd-159">通常，在组件上将编辑器指定为元数据。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-159">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="9e2dd-160">但是，如果在组件上找不到请求的编辑器基类型的元数据，则关联<xref:System.ComponentModel.TypeDescriptor>的将在编辑器表中搜索编辑器类型（如果可以找到的话）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-160">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="9e2dd-161">将编辑器表添加到类型描述符后，不能将其移除并由类型描述符拥有。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-161">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="9e2dd-162">类型说明符可以自由地对此表进行修改。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-162">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="9e2dd-163">编辑器表的格式将数据类型用作键，并使用编辑器作为值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-163">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="9e2dd-164">表中某项的值部分表示一个编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-164">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="9e2dd-165">它可以有三个值中的一个。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-165">It can have one of three values.</span></span> <span data-ttu-id="9e2dd-166">如果它包含字符串，则类型描述符将假定这是类型的完全限定名称，然后加载对象的类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-166">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="9e2dd-167">如果它包含类型，则将创建此类型的实例以获取编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-167">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="9e2dd-168">最后，值部分可能包含实际的编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-168">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="9e2dd-169">如果类型描述符将编辑器解析为实例，则会将该实例存储回表中供将来使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-169">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-170">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-170">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-171">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-171">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="9e2dd-172">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-172">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-173">为某个组件的单个实例添加类型描述提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-173">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-174"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法添加了一个类型说明提供程序，该提供程序为组件的单个实例提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-174">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="9e2dd-175">如果通过此方法添加提供程序，则将不会<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>调用提供程序的方法，因为该实例已存在。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-175">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="9e2dd-176">此方法不保留对组件的硬引用，因此不会阻止组件完成。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-176">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="9e2dd-177">可以为同一类型或对象添加多个类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-177">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="9e2dd-178">如果发生这种情况，则第一个提供类型信息的类型说明提供程序将独占使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-178">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="9e2dd-179">由于类型信息提供程序存储在堆栈中，最后添加的提供程序将是查询的第一个提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-179">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="9e2dd-180">此行为允许使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法根据特定方案的需要推送和弹出类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-180">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="9e2dd-181">如果成功，则此方法对<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> `instance`参数调用方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-181">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-182">此方法的两个版本将生成具有不同范围的结果。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-182">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="9e2dd-183">采用参数的<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>方法仅影响指定的组件的单个实例。 <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="9e2dd-183">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="9e2dd-184">相反，使用<xref:System.Type>参数的另一个重载会影响该类型描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-184">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="9e2dd-185">如果需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-185">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-186">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-186">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-187">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-187">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-188">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-188">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-189">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-189">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-190">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-190">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-191">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-191">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-192">为组件类添加类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-192">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-193"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法添加了一个类型说明提供程序，该提供程序为指定的类、派生类和这些类型的所有实例提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-193">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-194">`type`参数可以是任何类型，包括接口。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-194">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="9e2dd-195">例如，若要为所有组件提供自定义类型和实例信息，请指定`typeof(IComponent)`。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-195">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="9e2dd-196">传递`typeof(object)`将调用提供程序，以便为所有类型提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-196">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="9e2dd-197">此方法不保留对任何对象的硬引用，因此不会阻止对象完成。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-197">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="9e2dd-198">可以为同一类型或对象添加多个类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-198">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="9e2dd-199">如果发生这种情况，则第一个提供类型信息的类型说明提供程序将独占使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-199">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="9e2dd-200">由于类型信息提供程序存储在堆栈中，最后添加的提供程序将是查询的第一个提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-200">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="9e2dd-201">此行为允许使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法根据特定方案的需要推送和弹出类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-201">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="9e2dd-202">如果成功，则此方法对<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> `type`参数调用方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-202">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-203">此方法的两个版本将生成具有不同范围的结果。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-203">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="9e2dd-204">采用参数的<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>方法仅影响指定的组件的单个实例。 <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="9e2dd-204">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="9e2dd-205">相反，使用<xref:System.Type>参数的另一个重载会影响该类型描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-205">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="9e2dd-206">如果需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-206">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-207">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-207">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-208">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-208">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-209">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-209">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-210">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-210">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-211">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-211">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-212">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-212">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="9e2dd-213">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-213">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-214">为某个组件的单个实例添加类型描述提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-214">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-215">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-215">This method can be called from partially trusted code.</span></span> <span data-ttu-id="9e2dd-216">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>定义了，则调用方可以注册指定实例的提供程序（如果其类型也是部分受信任的）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-216">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="9e2dd-217">如果不需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-217">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-218">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-218">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="9e2dd-219">用于注册表访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-219">For registry access.</span></span> <span data-ttu-id="9e2dd-220">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-221">关联的枚举：<see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="9e2dd-221">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="9e2dd-222">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-222">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-223">关联的类型： <see cref="T:System.Security.PermissionSet" /> <paramref name="instance" />定义参数类型的程序集所需的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-223">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-224">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-224">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-225">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-225">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-226">为组件类添加类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-226">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-227">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-227">This method can be called from partially trusted code.</span></span> <span data-ttu-id="9e2dd-228">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>定义了，则调用方可以注册指定类型的提供程序（如果它也是部分受信任的提供程序）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-228">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="9e2dd-229">如果不需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-229">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-230">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-230">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="9e2dd-231">用于注册表访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-231">For registry access.</span></span> <span data-ttu-id="9e2dd-232">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-233">关联的枚举：<see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="9e2dd-233">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="9e2dd-234">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-234">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-235">关联的类型： <see cref="T:System.Security.PermissionSet" />定义<paramref name="type" />的程序集所需的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-235">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e2dd-236">获取或设置用于目标组件的组件对象模型 (COM) 类型信息的提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-236">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span></span></summary>
        <value><span data-ttu-id="9e2dd-237"><see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 实例，表示 COM 类型的信息提供程序实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-237">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-238"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> 属性 <xref:System.ComponentModel.IComNativeDescriptorHandler> 和接口已过时。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-238">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="9e2dd-239">有关更多信息，请参见 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-239">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-240">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-240">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-241">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-241">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-242">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-242">Associated state:</span></span></permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e2dd-243">获取由目标组件表示的组件对象模型 (COM) 对象的类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-243">Gets the type of the Component Object Model (COM) object represented by the target component.</span></span></summary>
        <value><span data-ttu-id="9e2dd-244">由此组件表示的 COM 对象的 <see cref="T:System.Type" />，或非 COM 对象的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-244">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-245">属性返回一个类型，该类型可传递<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>给方法以定义 COM 类型的类型说明提供程序。 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-245">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="9e2dd-246">此<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>类中的属性和其他成员替换了过时<xref:System.ComponentModel.IComNativeDescriptorHandler>接口中的功能。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-246">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="9e2dd-247">若要实现 COM 对象和<xref:System.ComponentModel.TypeDescriptor>之间的映射层，请<xref:System.ComponentModel.TypeDescriptionProvider>将添加到句<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>柄类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-247">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="9e2dd-248">主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-248">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="9e2dd-249">辅助 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-249">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-250">在两个对象之间创建主要和辅助关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-250">Creates a primary-secondary association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-251"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法创建主对象和辅助对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-251">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="9e2dd-252">创建关联后，设计器或其他筛选机制可以将路由到任一对象的属性添加到主对象的属性集中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-252">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="9e2dd-253">对主对象进行属性调用时， <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>将调用方法来解析与类型参数相关的实际对象实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-253">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="9e2dd-254"><xref:System.WeakReference>用于维护主对象和辅助对象之间的关联; 因此，此方法不会阻止任何对象被垃圾回收终止和回收。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-254">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-255">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-255">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e2dd-256"><paramref name="primary" /> 等于 <paramref name="secondary" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-256"><paramref name="primary" /> is equal to <paramref name="secondary" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-257">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-257">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-258">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-258">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-259">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-259">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="designerBaseType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-260">指定要与设计器关联的组件的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-260">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="9e2dd-261">表示要创建的设计器的类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-261">A <see cref="T:System.Type" /> that represents the type of designer to create.</span></span></param>
        <summary><span data-ttu-id="9e2dd-262">创建与指定组件关联的具有特定类型的设计器的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-262">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-263">如果找到组件的设计器实例，则为 <see cref="T:System.ComponentModel.Design.IDesigner" />；如果未找到设计器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-263">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-264">如果此方法无法找到有效<xref:System.ComponentModel.DesignerAttribute>的，则会在类层次结构中搜索设计器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-264">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="9e2dd-265">如果在类层次结构中找不到设计器，则`null`返回。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-265">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-266">创建和现有事件描述符相同的新的事件描述符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-266">Creates a new event descriptor that is identical to an existing event descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-267">要为其创建新事件的组件类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-267">The type of the component for which to create the new event.</span></span></param>
        <param name="oldEventDescriptor"><span data-ttu-id="9e2dd-268">现有事件信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-268">The existing event information.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-269">新属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-269">The new attributes.</span></span></param>
        <summary><span data-ttu-id="9e2dd-270">当传递现有的 <see cref="T:System.ComponentModel.EventDescriptor" /> 时，创建和现有事件描述符相同的新的事件描述符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-270">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-271">将指定元数据属性与现有元数据属性进行合并的新 <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-271">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="9e2dd-272">需要检查组件的非公共成员。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-272">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="9e2dd-273">需要对类型<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />的链接请求访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-273">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-274">该事件依赖的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-274">The type of the component the event lives on.</span></span></param>
        <param name="name"><span data-ttu-id="9e2dd-275">事件的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-275">The name of the event.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-276">处理该事件的委托的类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-276">The type of the delegate that handles the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-277">此事件的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-277">The attributes for this event.</span></span></param>
        <summary><span data-ttu-id="9e2dd-278">通过从类型上的指定事件动态生成描述符信息，创建与现有事件描述符相同的新事件描述符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-278">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-279">绑定到类型的 <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-279">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="9e2dd-280">需要检查组件的非公共成员。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-280">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="9e2dd-281">需要对类型<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />的链接请求访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-281">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="objectType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="argTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-282">提供 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 服务的服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-282">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span></span> <span data-ttu-id="9e2dd-283">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-283">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectType"><span data-ttu-id="9e2dd-284">要创建的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-284">The <see cref="T:System.Type" /> of object to create.</span></span></param>
        <param name="argTypes"><span data-ttu-id="9e2dd-285">要传递给对象的构造函数的可选参数类型数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-285">An optional array of parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="9e2dd-286">此参数可以是 <see langword="null" /> 或长度为零的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-286">This parameter can be <see langword="null" /> or an array of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="9e2dd-287">要传递给对象的构造函数的可选参数值数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-287">An optional array of parameter values to pass to the object's constructor.</span></span> <span data-ttu-id="9e2dd-288">如果不是 <see langword="null" />，元素数则必须与 <paramref name="argTypes" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-288">If not <see langword="null" />, the number of elements must be the same as <paramref name="argTypes" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-289">创建可替换为另一种数据类型的对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-289">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-290">如果找到关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，则为替代数据类型的实例；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-290">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-291">方法将搜索<xref:System.ComponentModel.TypeDescriptionProvider>与指定`objectType`的数据类型相关联的。 <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-291">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="9e2dd-292">此方法首先尝试从`provider`参数获取类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-292">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="9e2dd-293">如果此操作失败，则会在其自己的内部表中搜索提供程序（这些条目是通过<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>以前对的调用创建的）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-293">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="9e2dd-294">如果找到提供程序，则此方法会将创建调用委托给该对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-294">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-295"><paramref name="objectType" /> 是 <see langword="null" />，或者，当 <paramref name="argTypes" /> 不是 <see langword="null" /> 时，则 <paramref name="args" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-295"><paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e2dd-296"><paramref name="argTypes" /> 和 <paramref name="args" /> 具有不同的元素数。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-296"><paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e2dd-297">如果派生类未提供替换实例，则此方法应调用基实现。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-297">If the derived class does not provide a substitute instance, this method should call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-298">为组件的现有属性新建属性说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-298">Creates a new property descriptor for an existing property of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-299">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-299">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="oldPropertyDescriptor"><span data-ttu-id="9e2dd-300">现有的属性描述符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-300">The existing property descriptor.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-301">此属性的新特性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-301">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="9e2dd-302">使用指定的现有 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和特性数组，从现有的属性描述符创建一个新的属性描述符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-302">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-303">一个将指定的元数据属性与现有的元数据属性进行合并的新 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-303">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="9e2dd-304">需要检查组件的非公共成员。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-304">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="9e2dd-305">需要对类型<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />的链接请求访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-305">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-306">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-306">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="name"><span data-ttu-id="9e2dd-307">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-307">The name of the property.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-308">属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-308">The <see cref="T:System.Type" /> of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-309">此属性的新特性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-309">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="9e2dd-310">使用指定的属性名称、类型和属性数组创建属性描述符，并将其动态地绑定到类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-310">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-311">绑定到指定类型并具有与现有元数据属性合并的指定元数据属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-311">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="9e2dd-312">需要检查组件的非公共成员。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-312">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="9e2dd-313">需要对类型<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />的链接请求访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-313">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="primary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-314">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-314">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="primary"><span data-ttu-id="9e2dd-315">关联的主要对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-315">The primary object of the association.</span></span></param>
        <summary><span data-ttu-id="9e2dd-316">返回以下类型的一个实例，该类型与指定的主要对象关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-316">Returns an instance of the type associated with the specified primary object.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-317">如果存在关联，则为与主要对象关联的辅助类型的一个实例；如果不存在指定的关联，则为 <paramref name="primary" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-317">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-318">如果`type` <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>使用方法对参数进行了以前的关联，则方法将返回正确的辅助对象，以便为请求的类型调用。 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-318">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="9e2dd-319">否则， <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>将搜索的兼容`type`设计器并返回设计器（如果找到）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-319">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="9e2dd-320">此方法从不返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-320">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="9e2dd-321"><xref:System.WeakReference>用于维护主对象和辅助对象之间的关联; 因此，此方法不会阻止主要或次要对象被垃圾回收终止和回收。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-321">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-322">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-322">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-323">返回组件或类型的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-323">Returns the collection of attributes for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-324">要获取其特性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-324">The component for which you want to get attributes.</span></span></param>
        <summary><span data-ttu-id="9e2dd-325">返回指定组件的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-325">Returns the collection of attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-326">包含该组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-326">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span></span> <span data-ttu-id="9e2dd-327">如果 <paramref name="component" /> 为 <see langword="null" />，则此方法返回空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-327">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-328">通过扩展程序提供程序<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> （<xref:System.ComponentModel.IExtenderProvider>）、筛选器服务（<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>）和属性筛选器，可以从原始组件的源列表中动态修改方法返回的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-328">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="9e2dd-329">当使用<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`的自定义特性定义时<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> ，必须重写属性以使其唯一。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-329">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="9e2dd-330">如果属性的所有实例都是唯一的， <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>则重写以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-330">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="9e2dd-331">如果仅有属性的某些实例是唯一的，则将返回<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-331">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="9e2dd-332">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-332">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="9e2dd-333">对于这些特性，从<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-333">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-334">的默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回类型标识，而不考虑<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-334">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e2dd-335">若要从返回一个<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的多个实例， <xref:System.ComponentModel.AttributeCollection> <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>您的属性必须重写属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-335">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-336">有关此方法的示例，请参见<xref:System.ComponentModel.AttributeCollection.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-336">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-337">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-337">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-338">返回指定类型组件的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-338">Returns a collection of attributes for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-339">具有该类型组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-339">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span></span> <span data-ttu-id="9e2dd-340">如果该组件为 <see langword="null" />，则此方法返回空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-340">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-341">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-341">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-342">对于<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`的特性，特性集合将移除重复的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-342">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="9e2dd-343">它们是<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性返回相等值的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-343">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="9e2dd-344">当使用<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`的自定义特性定义时<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> ，必须重写属性以使其唯一。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-344">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="9e2dd-345">如果属性的所有实例都是唯一的， <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>则重写以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-345">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="9e2dd-346">如果仅有属性的某些实例是唯一的，则将返回<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-346">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="9e2dd-347">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-347">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="9e2dd-348">对于这些特性，从<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-348">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-349">的默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回类型标识，而不考虑<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-349">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e2dd-350">若要从返回一个<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的多个实例， <xref:System.ComponentModel.AttributeCollection> <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>您的属性必须重写属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-350">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-351">要获取其特性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-351">The component for which you want to get attributes.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-352">如果 <paramref name="component" /> 属于 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 类型，则为 <see langword="true" /> 并使用自定义类型说明符中的基准特性集；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-352"><see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <paramref name="component" /> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-353">返回指定组件的特性的集合，以及指示已创建自定义类型说明符的布尔值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-353">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-354">包含该组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-354">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span></span> <span data-ttu-id="9e2dd-355">如果该组件为 <see langword="null" />，则此方法返回空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-355">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-356">通过扩展程序提供程序<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> （<xref:System.ComponentModel.IExtenderProvider>）、筛选器服务（<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>）和属性筛选器，可以从原始组件源列表中动态修改方法返回的特性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-356">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="9e2dd-357">当使用<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>设置为`true`的自定义特性定义时<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> ，必须重写属性以使其唯一。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-357">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="9e2dd-358">如果属性的所有实例都是唯一的， <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>则重写以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-358">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="9e2dd-359">如果仅有属性的某些实例是唯一的，则将返回<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-359">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="9e2dd-360">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-360">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="9e2dd-361">对于这些特性，从<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-361">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e2dd-362">的默认实现<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>返回类型标识，而不考虑<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-362">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e2dd-363">若要从返回一个<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性的多个实例， <xref:System.ComponentModel.AttributeCollection> <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>您的属性必须重写属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-363">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-364">返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-364">Returns the name of the class for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-365">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-365">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="9e2dd-366">使用默认的类型说明符返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-366">Returns the name of the class for the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-367">一个 <see cref="T:System.String" />，包含指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-367">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-368">通常，此方法返回<xref:System.Type> `component`参数类型的完整名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-368">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="9e2dd-369">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-369">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="9e2dd-370">如果`component` 实现 <xref:System.ComponentModel.ICustomTypeDescriptor> ，则它可以返回替代名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-370">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="9e2dd-371">此方法等效于带有的第<xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>二个参数的`false`重载方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-371">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-372"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-372"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-373">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-373">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-374">返回指定类型的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-374">Returns the name of the class for the specified type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-375">包含指定组件类型的类的名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-375">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-376">此方法使用指定类型的缓存自定义类型描述符来发现关联的类名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-376">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-377"><paramref name="componentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-377"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-378">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-378">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-379">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-379"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-380">使用自定义类型说明符返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-380">Returns the name of the class for the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-381">一个 <see cref="T:System.String" />，包含指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-381">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-382">通常，此方法返回<xref:System.Type> `component`参数类型的完整名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-382">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="9e2dd-383">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-383">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="9e2dd-384">如果参数实现<xref:System.ComponentModel.ICustomTypeDescriptor>，它可以返回替代名称。 `component`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-384">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-385"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-385"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-386"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-386"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-387">返回指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-387">Returns the name of the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-388">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-388">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="9e2dd-389">使用默认的类型说明符返回指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-389">Returns the name of the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-390">包含指定组件的名称的 <see cref="T:System.String" />，如果没有任何组件名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-390">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-391">通常，此方法返回组件的站点名称（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-391">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="9e2dd-392">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-392">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="9e2dd-393">此方法等效于带有的第<xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>二个参数的`false`重载方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-393">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="9e2dd-394">此方法在设计时用于检索组件实例的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-394">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-395"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-395"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-396"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-396"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-397">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-397">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-398">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-398"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-399">使用自定义类型说明符返回指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-399">Returns the name of the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-400">指定组件的类的名称；如果没有任何组件名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-400">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-401">此方法在设计时用于检索组件实例的名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-401">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="9e2dd-402">通常，此方法返回组件的站点名称（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-402">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="9e2dd-403">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-403">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="9e2dd-404">如果组件实现了<xref:System.ComponentModel.ICustomTypeDescriptor>接口，则它可以返回替代名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-404">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-405"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-405"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-406"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-406"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-407">返回组件或类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-407">Returns a type converter for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-408">要获取其转换器的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-408">A component to get the converter for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-409">返回指定组件类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-409">Returns a type converter for the type of the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-410">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-410">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-411">此方法通过查找<xref:System.ComponentModel.TypeConverterAttribute>来查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-411">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="9e2dd-412">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-412">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="9e2dd-413">此方法等效于带有的第<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>二个参数的`false`重载方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-413">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-414">有关使用此方法的示例，请参阅<xref:System.ComponentModel.TypeConverter>类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-414">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-415"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-415"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-416"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-416"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-417">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-417">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-418">返回指定类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-418">Returns a type converter for the specified type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-419">指定类型的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-419">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-420">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-420">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-421">此方法通过查找<xref:System.ComponentModel.TypeConverterAttribute>来查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-421">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="9e2dd-422">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-422">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-423"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-423"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-424">要获取其转换器的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-424">A component to get the converter for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-425">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-425"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-426">使用自定义类型说明符返回指定组件类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-426">Returns a type converter for the type of the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-427">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-427">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-428">此方法通过尝试查找<xref:System.ComponentModel.TypeConverterAttribute>来查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-428">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="9e2dd-429">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-429">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-430"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-430"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-431"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-431"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-432">返回组件或类型的默认事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-432">Returns the default event for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-433">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-433">The component to get the event for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-434">返回指定组件的默认事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-434">Returns the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-435">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-435">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-436">此方法等效于带有的第<xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>二个参数的`false`重载方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-436">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-437"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-437"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-438"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-438"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-439">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-439">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-440">返回指定类型组件的默认事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-440">Returns the default event for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-441">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-441">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-442">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-442">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-443"><paramref name="componentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-443"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-444">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-444">The component to get the event for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-445">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-445"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-446">使用自定义类型说明符返回组件的默认事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-446">Returns the default event for a component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-447">具有默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果没有事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-447">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-448"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-448"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-449"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-449"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-450">返回组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-450">Returns the default property for a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-451">要获取其默认属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-451">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-452">返回指定组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-452">Returns the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-453">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-453">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-454">如果参数为`null`，则此方法返回 `null` 。  `component`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-454">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-455"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-455"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-456">表示要获取其属性的类的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-456">A <see cref="T:System.Type" /> that represents the class to get the property for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-457">返回指定类型组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-457">Returns the default property for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-458">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-458">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-459">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-459">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-460">如果参数为`null`，则此方法返回 `null` 。  `componentType`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-460">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-461">要获取其默认属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-461">The component to get the default property for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-462">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-462"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-463">使用自定义类型说明符返回指定组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-463">Returns the default property for the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-464">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-464">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-465">如果参数为`null`，则此方法返回 `null` 。  `component`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-465">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-466"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-466"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-467">使用指定的基类型返回编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-467">Returns an editor with the specified base type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-468">要为其获取编辑器的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-468">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="9e2dd-469">一个 <see cref="T:System.Type" />，表示要查找的编辑器的基类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-469">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="9e2dd-470">用指定的基类型获取指定组件的编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-470">Gets an editor with the specified base type for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-471">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-471">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-472">的类型`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>为，但也可以使用其他类型（例如， <xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-472">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="9e2dd-473">可以为一个属性定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-473">You can define multiple editors for a property.</span></span> <span data-ttu-id="9e2dd-474">您可以使用此方法来选择要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-474">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-475"><paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-475"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-476"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-476"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="9e2dd-477">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="9e2dd-477">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-478">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-478">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="9e2dd-479">一个 <see cref="T:System.Type" />，表示正在尝试查找的编辑器的基类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-479">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span></span></param>
        <summary><span data-ttu-id="9e2dd-480">使用指定的基类型返回指定类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-480">Returns an editor with the specified base type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-481">可被强制转换为给定基类型的编辑器对象的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-481">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-482">的类型`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>为，但也可以使用其他类型（例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-482">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="9e2dd-483">可以为一个类型定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-483">You can define multiple editors for a type.</span></span> <span data-ttu-id="9e2dd-484">您可以使用此方法来选择要使用的方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-484">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="9e2dd-485">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-485">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-486"><paramref name="type" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-486"><paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="9e2dd-487">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="9e2dd-487">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-488">要为其获取编辑器的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-488">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="9e2dd-489">一个 <see cref="T:System.Type" />，表示要查找的编辑器的基类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-489">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-490">一个指示是否应考虑自定义类型说明信息的标志。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-490">A flag indicating whether custom type description information should be considered.</span></span></param>
        <summary><span data-ttu-id="9e2dd-491">使用指定的基类型和自定义类型说明符返回指定组件的编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-491">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-492">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-492">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-493">的类型`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>为，但也可以使用其他类型（例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-493">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="9e2dd-494">可以为一个属性定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-494">You can define multiple editors for a property.</span></span> <span data-ttu-id="9e2dd-495">您可以使用此方法来选择要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-495">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-496"><paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-496"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-497"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-497"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="9e2dd-498">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="9e2dd-498">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-499">返回组件或类型的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-499">Returns the collection of events for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-500">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-500">A component to get the events for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-501">返回指定组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-501">Returns the collection of events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-502">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-502">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-503">检索给定`component`参数实例提供的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-503">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="9e2dd-504">此集合可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-504">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="9e2dd-505">`component`如果参数已占位，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-505">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="9e2dd-506">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-506">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-507">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-507">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-508">有关此方法的示例，请参见<xref:System.ComponentModel.EventDescriptorCollection.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-508">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-509"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-509"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-510">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-510">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-511">返回指定类型组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-511">Returns the collection of events for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-512">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-512">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-513">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-513">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-514">如果参数为`null`，则返回一个空集合。 `componentType`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-514">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-515">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-515">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-516">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-516">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-517">可用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-517">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="9e2dd-518">通过将指定的特性数组用作筛选器，返回指定组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-518">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-519">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-519">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-520">`component`参数的事件可能与类的事件不同，因为如果该`component`参数被放置，则站点可以添加或删除事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-520">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-521">数组可以具有和<xref:System.Type> <xref:System.Attribute>对象的组合。 `attributes`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-521">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="9e2dd-522">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-522">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-523">被视为通配符; 它与任何在其属性集中具有的<xref:System.Type>事件匹配。 <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="9e2dd-523">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="9e2dd-524">如果某个事件没有具有<xref:System.Attribute>相同类的，则该事件不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-524">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-525">如果该属性是<xref:System.Attribute>类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-525">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-526">如果指定<xref:System.Attribute>了实例并且它是默认事件，则即使<xref:System.Attribute>在事件中没有的实例，它也会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-526">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="9e2dd-527">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-527">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-528">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-528">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-529"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-529"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-530">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-530">A component to get the events for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-531">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-531"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-532">使用自定义类型说明符返回指定组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-532">Returns the collection of events for a specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-533">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-533">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-534">此方法检索给定`component`参数实例提供的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-534">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="9e2dd-535">这可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-535">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="9e2dd-536">`component`如果参数已占位，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-536">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="9e2dd-537">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-537">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-538">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-538">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-539"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-539"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-540">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-540">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-541">可用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-541">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="9e2dd-542">通过将指定的特性数组用作筛选器，返回指定类型组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-542">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-543">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-543">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-544">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-544">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-545">参数数组可以具有和<xref:System.Attribute>对象的<xref:System.Type>组合。 `attributes`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-545">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="9e2dd-546">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-546">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-547">被视为通配符; 它与任何在其属性集中具有的<xref:System.Type>事件匹配。 <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="9e2dd-547">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="9e2dd-548">如果某个事件没有具有<xref:System.Attribute>相同类的，则该事件不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-548">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-549">如果该属性是<xref:System.Attribute>类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-549">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-550">如果指定<xref:System.Attribute>了实例并且它是默认事件，则即使<xref:System.Attribute>在事件中没有的实例，它也会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-550">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="9e2dd-551">如果参数为`null`，则返回一个空集合。 `componentType`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-551">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-552">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-552">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-553">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-553">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-554">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-554">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-555">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-555"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-556">通过将指定的特性数组用作筛选器并使用自定义类型说明符，返回指定组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-556">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-557">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，包含与此组件的指定特性匹配的事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-557">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-558">`component`参数的事件可能与类的事件不同，因为如果该`component`参数被放置，则站点可以添加或删除事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-558">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-559">参数数组可以具有和<xref:System.Attribute>对象的<xref:System.Type>组合。 `attributes`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-559">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="9e2dd-560">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-560">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-561">被视为通配符; 它与任何在其属性集中具有的<xref:System.Type>事件匹配。 <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="9e2dd-561">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="9e2dd-562">如果某个事件没有具有<xref:System.Attribute>相同类的，则该事件不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-562">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-563">如果该属性是<xref:System.Attribute>类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-563">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-564">如果指定<xref:System.Attribute>了实例并且它是默认事件，则即使<xref:System.Attribute>在事件中没有的实例，它也会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-564">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="9e2dd-565">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-565">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-566">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-566">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-567"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-567"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-568">要查找其名称的 <see cref="T:System.ComponentModel.Component" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-568">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-569">返回组件的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-569">Returns the fully qualified name of the component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-570">指定组件的完全限定名，如果该组件没有名称，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-570">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-571">在许多情况下， <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A>该方法将返回与<xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>方法相同的值。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-571">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="9e2dd-572">但是，如果组件驻留在嵌套容器中或者具有其他嵌套语义，则它可能会返回不同的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-572">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-573"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-573"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-574">返回组件或类型的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-574">Returns the collection of properties on a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-575">要获取其属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-575">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-576">返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-576">Returns the collection of properties for a specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-577">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定组件的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-577">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-578">组件的属性可能不同于类的属性，因为如果组件已被放置，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-578">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-579">如果参数为`null`，则返回一个空集合。 `component`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-579">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-580">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-580">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-581">下面的代码示例演示如何使用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法来访问控件的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-581">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="9e2dd-582">此代码示例是为<xref:System.ComponentModel.Design.ComponentDesigner>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-582">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-583"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-583"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/c186c4b6-076c-438d-9ed3-f13da29c8c1f"><span data-ttu-id="9e2dd-584">如何：访问设计时服务</span><span class="sxs-lookup"><span data-stu-id="9e2dd-584">How to: Access Design-time Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-585">一个 <see cref="T:System.Type" />，表示要获取其属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-585">A <see cref="T:System.Type" /> that represents the component to get properties for.</span></span></param>
        <summary><span data-ttu-id="9e2dd-586">返回指定类型组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-586">Returns the collection of properties for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-587">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定类型组件的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-587">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-588">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-588">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-589">如果参数为`null`，则返回一个空集合。 `componentType`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-589">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-590">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-590">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-591">要获取其属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-591">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-592">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-592">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="9e2dd-593">通过将指定的特性数组用作筛选器，返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-593">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-594">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有匹配指定组件的指定特性的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-594">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-595">`component`参数的属性可能不同于类的属性，因为如果该`component`参数被放置，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-595">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-596">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-596">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="9e2dd-597">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-597">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-598">如果某个属性不具有<xref:System.Attribute>相同的类，则该属性不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-598">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-599">如果该属性是<xref:System.Attribute>类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-599">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-600">如果指定<xref:System.Attribute>了实例并且它是默认属性，则即使属性中没有的<xref:System.Attribute>实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-600">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="9e2dd-601">如果`attributes`具有默认属性，则<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>当属性没有应用特性时，方法会与大小写匹配。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-601">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="9e2dd-602">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-602">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-603">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-603">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-604">下面的代码示例演示如何实现<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-604">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="9e2dd-605">此代码示例是为<xref:System.Windows.Forms.Design.PropertyTab>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-605">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-606"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-606"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-607">要获取其属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-607">A component to get the properties for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-608">若不考虑自定义类型说明信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-608"><see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-609">使用默认类型说明符来返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-609">Returns the collection of properties for a specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-610">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有指定组件的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-610">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-611">`component`参数的属性可能不同于类的属性，因为如果该`component`参数被放置，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-611">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-612">如果`component` 为 `null` ，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-612">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-613">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-613">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-614"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-614"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="9e2dd-615">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-615">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-616">用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-616">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="9e2dd-617">通过将指定的特性数组用作筛选器，返回指定类型组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-617">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-618">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有与此类型组件的指定特性相匹配的属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-618">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-619">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-619">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-620">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-620">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="9e2dd-621">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-621">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-622">如果某个属性不具有<xref:System.Attribute>相同的类，则该属性不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-622">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-623">如果该属性是<xref:System.Attribute>类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-623">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-624">如果指定<xref:System.Attribute>了实例并且它是默认属性，则即使属性中没有的<xref:System.Attribute>实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-624">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="9e2dd-625">如果`attributes`具有默认属性，则<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>当属性没有应用特性时，方法会与大小写匹配。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-625">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="9e2dd-626">如果参数为`null`，则返回一个空集合。 `componentType`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-626">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-627">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-627">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-628">下面的代码示例演示如何实现<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-628">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="9e2dd-629">此代码示例是为<xref:System.Windows.Forms.Design.PropertyTab>类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-629">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-630">要获取其属性的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-630">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="9e2dd-631">要用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-631">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="9e2dd-632">若要考虑自定义类型说明信息，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-632"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-633">通过将指定的特性数组用作筛选器并使用自定义类型说明符，返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-633">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-634">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有与指定组件的指定特性匹配的事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-634">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-635">的属性`component`可能不同于类的属性，因为`component`如果是，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-635">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="9e2dd-636">`attributes`参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-636">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="9e2dd-637">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-637">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="9e2dd-638">如果某个属性不具有<xref:System.Attribute>相同的类，则该属性不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-638">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-639">如果该属性是<xref:System.Attribute>类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-639">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="9e2dd-640">如果指定<xref:System.Attribute>了实例并且它是默认属性，则即使属性中没有的<xref:System.Attribute>实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-640">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="9e2dd-641">如果`attributes`具有默认属性，则<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>当属性没有应用特性时，方法会与大小写匹配。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-641">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="9e2dd-642">如果参数为`null`，则返回一个空集合。 `component`</span><span class="sxs-lookup"><span data-stu-id="9e2dd-642">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="9e2dd-643">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-643">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e2dd-644"><paramref name="component" /> 是一个跨进程远程对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-644"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-645">返回组件或类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-645">Returns the type description provider for the component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9e2dd-646">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-646">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-647">返回指定组件的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-647">Returns the type description provider for the specified component.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-648">与指定组件关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法将始终返回类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="9e2dd-650">即使默认<xref:System.ComponentModel.TypeDescriptor>实现是<xref:System.ComponentModel.TypeDescriptionProvider>在上构建的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-651"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-651"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-652">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-652">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-653">返回指定类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-653">Returns the type description provider for the specified type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-654">与指定类型关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-654">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-655"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法将始终返回类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-655">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="9e2dd-656">即使默认<xref:System.ComponentModel.TypeDescriptor>实现是<xref:System.ComponentModel.TypeDescriptionProvider>在上构建的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-656">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-657"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-657"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-658">返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-658">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9e2dd-659">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-659">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-660">如果给定对象，则返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-661">指定对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-661">A <see cref="T:System.Type" /> for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-662">方法是<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法的低级别版本。 <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="9e2dd-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>当找不到某个对象的自定义类型说明符时，通常使用此方法对该对象执行标准反射。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-664"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-664"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-665">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-665">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-666">如果给定类类型，则返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-666">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span></span></summary>
        <returns><span data-ttu-id="9e2dd-667">指定类的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-667">A <see cref="T:System.Type" /> of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-668">方法是<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法的低级别版本。 <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-668">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="9e2dd-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>当找不到任何自定义类型说明符时，通常用于对类执行标准反射。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-670"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-670"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e2dd-671">获取表示所有接口类型的类型说明提供程序的类型。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-671">Gets a type that represents a type description provider for all interface types.</span></span></summary>
        <value><span data-ttu-id="9e2dd-672">表示所有接口类型的类型说明提供程序的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-672">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-673">属性获取一个<xref:System.Type>对象， <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>您可以将该对象传递给方法以定义接口类型的类型说明提供程序。 <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-673">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-674">从缓存中清除属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-674">Clears the properties and events from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9e2dd-675">其属性或事件已更改的组件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-675">A component for which the properties or events have changed.</span></span></param>
        <summary><span data-ttu-id="9e2dd-676">从缓存中清除指定组件的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-676">Clears the properties and events for the specified component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-677">将缓存<xref:System.ComponentModel.TypeDescriptor>属性和事件以获得速度。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-677">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="9e2dd-678">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-678">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="9e2dd-679">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-679">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="9e2dd-680">如果是这样，则应调用此方法以清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-680">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="9e2dd-681">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-681">This method is used only at design time.</span></span> <span data-ttu-id="9e2dd-682">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-682">It is not used during run time.</span></span>  
  
 <span data-ttu-id="9e2dd-683">当组件的属性或<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件发生更改时，此方法也会引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-683">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="9e2dd-684">仅当之前调用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>缓存信息的或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>方法时，才会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-684">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-685">有关使用此方法的示例，请参阅<xref:System.ComponentModel.RefreshEventHandler>类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-685">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="9e2dd-686">表示要刷新的程序集的 <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-686">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span></span> <span data-ttu-id="9e2dd-687">将刷新程序集中的每个 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-687">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span></span></param>
        <summary><span data-ttu-id="9e2dd-688">从缓存中清除指定程序集的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-688">Clears the properties and events for the specified assembly from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-689">将缓存<xref:System.ComponentModel.TypeDescriptor>属性和事件以获得速度。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-689">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="9e2dd-690">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-690">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="9e2dd-691">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-691">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="9e2dd-692">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-692">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="9e2dd-693">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-693">This method is used only at design time.</span></span> <span data-ttu-id="9e2dd-694">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-694">It is not used during run time.</span></span>  
  
 <span data-ttu-id="9e2dd-695">在对<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法进行调用以清除缓存之前，需要为特定的程序集<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>调用方法，以首先缓存信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-695">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="9e2dd-696">此方法还将引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>一个事件，以通知在组件的属性集更改时希望收到通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-696">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module"><span data-ttu-id="9e2dd-697">表示要刷新的模块的 <see cref="T:System.Reflection.Module" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-697">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span></span> <span data-ttu-id="9e2dd-698">将刷新模块中的每个 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-698">Each <see cref="T:System.Type" /> in this module will be refreshed.</span></span></param>
        <summary><span data-ttu-id="9e2dd-699">从缓存中清除指定模块的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-699">Clears the properties and events for the specified module from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-700">将缓存<xref:System.ComponentModel.TypeDescriptor>属性和事件以获得速度。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-700">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="9e2dd-701">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-701">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="9e2dd-702">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-702">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="9e2dd-703">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-703">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="9e2dd-704">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-704">This method is used only at design time.</span></span> <span data-ttu-id="9e2dd-705">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-705">It is not used during run time.</span></span>  
  
 <span data-ttu-id="9e2dd-706">在对<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法进行调用以清除缓存之前，需要先<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>调用特定模块的方法，以首先缓存信息。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-706">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="9e2dd-707">此方法还将引发<xref:System.ComponentModel.TypeDescriptor.Refreshed>一个事件，以通知在组件的属性集更改时希望收到通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-707">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9e2dd-708">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-708">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-709">从缓存中清除指定类型的组件的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-709">Clears the properties and events for the specified type of component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-710">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-710">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="9e2dd-711">将缓存<xref:System.ComponentModel.TypeDescriptor>属性和事件以获得速度。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-711">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="9e2dd-712">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-712">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="9e2dd-713">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-713">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="9e2dd-714">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-714">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="9e2dd-715">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-715">This method is used only at design time.</span></span> <span data-ttu-id="9e2dd-716">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-716">It is not used during run time.</span></span>  
  
 <span data-ttu-id="9e2dd-717">当组件的属性或<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件发生更改时，此方法也会引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-717">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="9e2dd-718">仅当之前调用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>缓存信息的或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>方法时，才会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-718">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e2dd-719">清除组件的缓存时发生。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-719">Occurs when the cache for a component is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-720">有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-720">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e2dd-721">有关使用此事件的示例，请参阅<xref:System.ComponentModel.RefreshEventHandler>类。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-721">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="9e2dd-722">主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-722">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="9e2dd-723">辅助 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-723">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="9e2dd-724">移除两个对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-724">Removes an association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-725"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A>方法移除 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 由方法构成的两个对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-725">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="9e2dd-726"><xref:System.WeakReference>用于维护主对象和辅助对象之间的关联; 因此，此方法不会影响通过垃圾回收来完成或回收任一对象。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-726">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-727">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-727">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-728">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-728">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-729">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-729">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-730">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-730">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="9e2dd-731">处于关联中的主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-731">The primary <see cref="T:System.Object" /> in an association.</span></span></param>
        <summary><span data-ttu-id="9e2dd-732">移除主要对象的所有关联。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-732">Removes all associations for a primary object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-733">方法删除主对象与其所有辅助对象之间的所有关联，这些<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>关联是通过调用方法创建的。 <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A></span><span class="sxs-lookup"><span data-stu-id="9e2dd-733">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="9e2dd-734"><xref:System.WeakReference>用于维护主对象和辅助对象之间的关联; 因此，此方法不会影响通过垃圾回收来完成或回收辅助对象的主对象的时间。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-734">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-735"><paramref name="primary" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-735"><paramref name="primary" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-736">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-736">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-737">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-737">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-738">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-738">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-739">移除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-739">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-740">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-740">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="9e2dd-741">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-741">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-742">移除以前添加的且与指定对象关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-742">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-743">此方法删除以前使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-743">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="9e2dd-744">删除提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>为关联的对象引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-744">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="9e2dd-745">如果需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-745">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-746">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-746">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-747">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-747">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-748">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-748">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-749">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-749">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-750">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-750">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-751">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-751">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-752">移除以前添加的且与指定类型关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-752">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-753">此方法删除以前使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-753">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="9e2dd-754">删除提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>为关联类型引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-754">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="9e2dd-755">如果需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-755">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-756">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-756">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="9e2dd-757">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-757">for full access to system resources.</span></span> <span data-ttu-id="9e2dd-758">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-758">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9e2dd-759">关联状态：</span><span class="sxs-lookup"><span data-stu-id="9e2dd-759">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e2dd-760">移除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-760">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-761">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-761">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="9e2dd-762">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-762">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-763">移除以前添加的且与指定对象关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-763">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-764">此方法删除以前使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-764">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="9e2dd-765">删除提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>为关联的对象引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-765">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="9e2dd-766">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-766">This method can be called from partially trusted code.</span></span> <span data-ttu-id="9e2dd-767">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>定义了，则调用方可以注册指定实例的提供程序（如果其类型也是部分受信任的）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-767">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="9e2dd-768">如果不需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-768">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-769">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-769">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="9e2dd-770">用于注册表访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-770">For registry access.</span></span> <span data-ttu-id="9e2dd-771">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-771">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-772">关联的枚举：<see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="9e2dd-772">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="9e2dd-773">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-773">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-774">关联的类型： <see cref="T:System.Security.PermissionSet" /> <paramref name="instance" />定义参数类型的程序集所需的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-774">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9e2dd-775">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-775">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="9e2dd-776">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-776">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="9e2dd-777">移除以前添加的且与指定类型关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-777">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e2dd-778">此方法删除以前使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-778">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="9e2dd-779">删除提供程序会导致<xref:System.ComponentModel.TypeDescriptor.Refreshed>为关联类型引发事件。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-779">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="9e2dd-780">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-780">This method can be called from partially trusted code.</span></span> <span data-ttu-id="9e2dd-781">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>定义了，则调用方可以取消注册指定类型的提供程序（如果它也是部分受信任的提供程序）。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-781">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="9e2dd-782">如果不需要从部分受信任的代码调用，请使用方法。 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></span><span class="sxs-lookup"><span data-stu-id="9e2dd-782">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-783">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-783">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="9e2dd-784">用于注册表访问。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-784">For registry access.</span></span> <span data-ttu-id="9e2dd-785">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-785">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-786">关联的枚举：<see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="9e2dd-786">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="9e2dd-787">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-787">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9e2dd-788">关联的类型： <see cref="T:System.Security.PermissionSet" />定义<paramref name="type" />的程序集所需的。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-788">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos"><span data-ttu-id="9e2dd-789">一个 <see cref="T:System.Collections.IList" />，包含要排序的说明符。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-789">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span></span></param>
        <summary><span data-ttu-id="9e2dd-790">使用说明符的名称对说明符进行排序。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-790">Sorts descriptors using the name of the descriptor.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e2dd-791"><paramref name="infos" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9e2dd-791"><paramref name="infos" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>
