<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f4ffff29a30f45f48762c63ee0557955925ccc" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63866461" /></Metadata><TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <TypeSignature Language="F#" Value="type ITypedList = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供发现可绑定列表架构的功能，其中可用于绑定的属性不同于要绑定到的对象的公共属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果，例如，你将使用此接口<xref:System.Data.DataView>对象，表示`customer`表中，你想要绑定到属性上的`customer`对象<xref:System.Data.DataView>表示的属性不<xref:System.Data.DataView>。  
  
 此接口不需要的可绑定列表的设计时支持。  
  
 绑定到数据可以发生在运行时或在设计器中，但有两个规则。 在运行时，可以绑定到任何以下中的数据：  
  
-   <xref:System.Array>  
  
-   实施者<xref:System.Collections.IList>，提供强类型化的实施者<xref:System.Collections.IList.Item%2A>属性 (即<xref:System.Type>是任何内容，但是<xref:System.Object>)。 您可以实现此目的的默认实现，从而<xref:System.Collections.IList.Item%2A>专用。 如果你想要创建<xref:System.Collections.IList>后面的强类型集合的规则，应派生自<xref:System.Collections.CollectionBase>。  
  
-   实现器<xref:System.ComponentModel.ITypedList>。  
  
 在设计器中，您可以初始化绑定到<xref:System.ComponentModel.Component>按照相同的规则的对象。  
  
 绑定到数据源的详细信息，请参阅<xref:System.Windows.Forms.Binding?displayProperty=nameWithType>类。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.ComponentModel.ITypedList>接口。 名为的泛型类型`SortableBindingList`派生自<xref:System.ComponentModel.BindingList%601>类，并实现<xref:System.ComponentModel.ITypedList>接口。 完整代码列表，请参阅[如何：实现 ITypedList 接口](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">如何：实现 ITypedList 接口</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Windows 窗体数据绑定</related>
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iTypedList.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">要在组合中查找的可绑定的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
        <summary>返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`listAccessors`参数不是`null`，它通常包含标识的容器，若要检索的实现的对象列表的属性描述符<xref:System.ComponentModel.ITypedList>。 例如，<xref:System.Data.DataSet>包含两个表`myCustomers`并`myOrders`，它们调用之间的关系与`myCustOrders`。 如果您创建<xref:System.Data.DataView>对象以查看`myCustomers`，然后调用<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法替换`null`返回中的列的属性说明符`myCustomers`。 因此，返回的属性描述符之一是为属性的属性描述符`myCustOrders`，则只需为调用<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法与包含的属性说明符的列表访问器数组`myCustOrders`将返回的属性说明符有关`myOrders`。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法。 完整代码列表，请参阅[如何：实现 ITypedList 接口](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">如何：实现 ITypedList 接口</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Windows 窗体数据绑定</related>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="iTypedList.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">为其返回列表名称的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
        <summary>返回列表名称。</summary>
        <returns>列表名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法仅在设计时框架和由已过时<xref:System.Windows.Forms.DataGrid>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.ComponentModel.ITypedList.GetListName%2A>方法。 完整代码列表，请参阅[如何：实现 ITypedList 接口](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/834cc15c-50bc-4a8b-a610-313d6a217357">如何：实现 ITypedList 接口</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c3826d8e-ea25-4ad4-a669-45bfb19192aa">Windows 窗体数据绑定</related>
      </Docs>
    </Member>
  </Members>
</Type>