<Type Name="TypeConverter+SimplePropertyDescriptor" FullName="System.ComponentModel.TypeConverter+SimplePropertyDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03da39fa7ec84a0063a920239a73355fef186355" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63896933" /></Metadata><TypeSignature Language="C#" Value="protected abstract class TypeConverter.SimplePropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi abstract beforefieldinit TypeConverter/SimplePropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Protected MustInherit Class TypeConverter.SimplePropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class TypeConverter::SimplePropertyDescriptor abstract : System::ComponentModel::PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bbf30-101">表示一个 <see langword="abstract" /> 类，该类为没有属性的对象提供属性。</span><span class="sxs-lookup"><span data-stu-id="bbf30-101">Represents an <see langword="abstract" /> class that provides properties for objects that do not have properties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbf30-102">此类的示例，请参阅中的示例<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="bbf30-102">For an example on this class, see the example in <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="bbf30-103">继承自<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />，必须重写<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />和<see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="bbf30-103">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbf30-104">初始化 <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf30-104">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimplePropertyDescriptor (Type componentType, string name, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type componentType, string name, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (componentType As Type, name As String, propertyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SimplePropertyDescriptor(Type ^ componentType, System::String ^ name, Type ^ propertyType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverter.SimplePropertyDescriptor : Type * string * Type -&gt; System.ComponentModel.TypeConverter.SimplePropertyDescriptor" Usage="new System.ComponentModel.TypeConverter.SimplePropertyDescriptor (componentType, name, propertyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="bbf30-105">一个 <see cref="T:System.Type" />，表示此属性说明符绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-105">A <see cref="T:System.Type" /> that represents the type of component to which this property descriptor binds.</span></span></param>
        <param name="name"><span data-ttu-id="bbf30-106">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="bbf30-106">The name of the property.</span></span></param>
        <param name="propertyType"><span data-ttu-id="bbf30-107">一个 <see cref="T:System.Type" />，表示此属性的数据类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-107">A <see cref="T:System.Type" /> that represents the data type for this property.</span></span></param>
        <summary><span data-ttu-id="bbf30-108">初始化 <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf30-108">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimplePropertyDescriptor (Type componentType, string name, Type propertyType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type componentType, string name, class System.Type propertyType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (componentType As Type, name As String, propertyType As Type, attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SimplePropertyDescriptor(Type ^ componentType, System::String ^ name, Type ^ propertyType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeConverter.SimplePropertyDescriptor : Type * string * Type * Attribute[] -&gt; System.ComponentModel.TypeConverter.SimplePropertyDescriptor" Usage="new System.ComponentModel.TypeConverter.SimplePropertyDescriptor (componentType, name, propertyType, attributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="bbf30-109">一个 <see cref="T:System.Type" />，表示此属性说明符绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-109">A <see cref="T:System.Type" /> that represents the type of component to which this property descriptor binds.</span></span></param>
        <param name="name"><span data-ttu-id="bbf30-110">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="bbf30-110">The name of the property.</span></span></param>
        <param name="propertyType"><span data-ttu-id="bbf30-111">一个 <see cref="T:System.Type" />，表示此属性的数据类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-111">A <see cref="T:System.Type" /> that represents the data type for this property.</span></span></param>
        <param name="attributes"><span data-ttu-id="bbf30-112">一个 <see cref="T:System.Attribute" /> 数组，具有要与该属性关联的特性。</span><span class="sxs-lookup"><span data-stu-id="bbf30-112">An <see cref="T:System.Attribute" /> array with the attributes to associate with the property.</span></span></param>
        <summary><span data-ttu-id="bbf30-113">初始化 <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf30-113">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.CanResetValue : obj -&gt; bool" Usage="simplePropertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="bbf30-114">要测试重置功能的组件。</span><span class="sxs-lookup"><span data-stu-id="bbf30-114">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="bbf30-115">返回重置组件是否会更改该组件的值。</span><span class="sxs-lookup"><span data-stu-id="bbf30-115">Returns whether resetting the component changes the value of the component.</span></span></summary>
        <returns><span data-ttu-id="bbf30-116">如果重置组件更改该组件的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbf30-116"><see langword="true" /> if resetting the component changes the value of the component; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf30-117">此方法查找<xref:System.ComponentModel.DefaultValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="bbf30-117">This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>.</span></span> <span data-ttu-id="bbf30-118">如果找到，它会将与该属性的当前值的属性的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="bbf30-118">If it finds one, it compares the value of the attribute with the current value of the property.</span></span> <span data-ttu-id="bbf30-119">它将返回`true`时，默认值与属性的当前值不匹配。</span><span class="sxs-lookup"><span data-stu-id="bbf30-119">It returns `true` when the default value does not match the current value of the property.</span></span> <span data-ttu-id="bbf30-120">如果找不到此方法<xref:System.ComponentModel.DefaultValueAttribute>，它会查找`ShouldSerializeMyProperty`方法。</span><span class="sxs-lookup"><span data-stu-id="bbf30-120">If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ShouldSerializeMyProperty` method.</span></span> <span data-ttu-id="bbf30-121">如果它发现`ShouldSerializeMyProperty`方法，则返回什么`ShouldSerializeMyProperty`返回。</span><span class="sxs-lookup"><span data-stu-id="bbf30-121">If it finds a `ShouldSerializeMyProperty` method, it returns what `ShouldSerializeMyProperty` returns.</span></span> <span data-ttu-id="bbf30-122">如果找不到此方法`ShouldSerializeMyProperty`方法，它会查找`ResetMyProperty`方法。</span><span class="sxs-lookup"><span data-stu-id="bbf30-122">If this method cannot find a `ShouldSerializeMyProperty` method, it looks for a `ResetMyProperty` method.</span></span> <span data-ttu-id="bbf30-123">如果它发现`ResetMyProperty`方法，则返回`true`。</span><span class="sxs-lookup"><span data-stu-id="bbf30-123">If it finds a `ResetMyProperty` method, it returns `true`.</span></span> <span data-ttu-id="bbf30-124">如果找不到此方法<xref:System.ComponentModel.DefaultValueAttribute>、 一个`ShouldSerializeMyProperty`方法，或`ResetMyProperty`方法，则返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bbf30-124">If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, a `ShouldSerializeMyProperty` method, or a `ResetMyProperty` method, then it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbf30-125">获取该属性说明符绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-125">Gets the type of component to which this property description binds.</span></span></summary>
        <value><span data-ttu-id="bbf30-126">一个 <see cref="T:System.Type" />，表示此属性绑定到的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-126">A <see cref="T:System.Type" /> that represents the type of component to which this property binds.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbf30-127">获取指示该属性是否为只读的值。</span><span class="sxs-lookup"><span data-stu-id="bbf30-127">Gets a value indicating whether this property is read-only.</span></span></summary>
        <value><span data-ttu-id="bbf30-128">如果该属性为只读，则为 <see langword="true" />；如果该属性为读/写，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbf30-128"><see langword="true" /> if the property is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbf30-129">获取属性的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-129">Gets the type of the property.</span></span></summary>
        <value><span data-ttu-id="bbf30-130">一个 <see cref="T:System.Type" />，表示属性的类型。</span><span class="sxs-lookup"><span data-stu-id="bbf30-130">A <see cref="T:System.Type" /> that represents the type of the property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.ResetValue : obj -&gt; unit" Usage="simplePropertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="bbf30-131">具有要重置的属性值的组件。</span><span class="sxs-lookup"><span data-stu-id="bbf30-131">The component with the property value to be reset.</span></span></param>
        <summary><span data-ttu-id="bbf30-132">重置组件的此属性的值。</span><span class="sxs-lookup"><span data-stu-id="bbf30-132">Resets the value for this property of the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf30-133">此方法查找<xref:System.ComponentModel.DefaultValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="bbf30-133">This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>.</span></span> <span data-ttu-id="bbf30-134">如果找到，它将属性的值设置为该属性中指定的值。</span><span class="sxs-lookup"><span data-stu-id="bbf30-134">If it finds one, it sets the value of the property to the value specified in the attribute.</span></span> <span data-ttu-id="bbf30-135">如果找不到此方法<xref:System.ComponentModel.DefaultValueAttribute>，它会查找`ResetMyProperty`方法。</span><span class="sxs-lookup"><span data-stu-id="bbf30-135">If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ResetMyProperty` method.</span></span> <span data-ttu-id="bbf30-136">如果它找到`ResetMyProperty`方法，则调用它。</span><span class="sxs-lookup"><span data-stu-id="bbf30-136">If it finds a `ResetMyProperty` method, it invokes it.</span></span> <span data-ttu-id="bbf30-137">如果找不到此方法<xref:System.ComponentModel.DefaultValueAttribute>或`ResetMyProperty`方法，则不会执行操作。</span><span class="sxs-lookup"><span data-stu-id="bbf30-137">If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute> or a `ResetMyProperty` method, then it does not perform an operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.ShouldSerializeValue : obj -&gt; bool" Usage="simplePropertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="bbf30-138">具有要检查持久性的属性的组件。</span><span class="sxs-lookup"><span data-stu-id="bbf30-138">The component with the property that is to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="bbf30-139">返回此属性的值是否可以持续。</span><span class="sxs-lookup"><span data-stu-id="bbf30-139">Returns whether the value of this property can persist.</span></span></summary>
        <returns><span data-ttu-id="bbf30-140">如果属性的值可以持续，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbf30-140"><see langword="true" /> if the value of the property can persist; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf30-141">在此类中实现时，此方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bbf30-141">As implemented in this class, this method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bbf30-142">当在派生类中重写此方法会返回<see langword="true" />如果该属性的当前值不同于其默认值。</span><span class="sxs-lookup"><span data-stu-id="bbf30-142">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span></span> <span data-ttu-id="bbf30-143">它会查找默认值通过第一个查找<see cref="T:System.ComponentModel.DefaultValueAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="bbf30-143">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="bbf30-144">如果此方法找到此属性，它将与该属性的当前值的属性的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="bbf30-144">If the method finds this attribute, it compares the value of the attribute with the current value of the property.</span></span> <span data-ttu-id="bbf30-145">如果找不到此方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />，它会寻找<c>找不</c>方法。</span><span class="sxs-lookup"><span data-stu-id="bbf30-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a <c>ShouldSerializeMyProperty</c> method.</span></span> <span data-ttu-id="bbf30-146">如果此方法找到<c>找不</c>方法，则调用它。</span><span class="sxs-lookup"><span data-stu-id="bbf30-146">If this method finds a <c>ShouldSerializeMyProperty</c> method, it invokes it.</span></span> <span data-ttu-id="bbf30-147">如果找不到此方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />或<c>找不</c>方法，它不能创建优化，并返回<see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="bbf30-147">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a <c>ShouldSerializeMyProperty</c> method, it cannot create optimizations and it returns <see langword="true" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>