<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a88fe9321bd14a09edfac94c7a3c7e606eb7d19" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898430" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="452fa-101">事件源。</span><span class="sxs-lookup"><span data-stu-id="452fa-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="452fa-102">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="452fa-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="452fa-103">表示将处理异步操作的 MethodName<see langword="Completed" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="452fa-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="452fa-104">创建 <xref:System.ComponentModel.AsyncCompletedEventHandler> 委托时，需要标识将要处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="452fa-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="452fa-105">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="452fa-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="452fa-106">除非移除了该委托，称为每当事件发生时，事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="452fa-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="452fa-107">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="452fa-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="452fa-108">为调用的异步方法*MethodName*，在组件中，将具有相应*MethodName* `Completed`事件和一个可选*MethodName*`CompletedEventArgs`类。</span><span class="sxs-lookup"><span data-stu-id="452fa-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="452fa-109">有关支持多个并发调用其异步方法的组件，客户端可以提供一个唯一的标记或任务 ID，以区分的异步任务引发特定事件。</span><span class="sxs-lookup"><span data-stu-id="452fa-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="452fa-110">在客户端<xref:System.ComponentModel.AsyncCompletedEventHandler>可以读取<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType>属性来确定哪些任务报告已完成。</span><span class="sxs-lookup"><span data-stu-id="452fa-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="452fa-111">您的实现应使用<xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType>若要创建<xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType>，将挂起的异步任务的客户端的任务 Id 和相关联。</span><span class="sxs-lookup"><span data-stu-id="452fa-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="452fa-112">有关的代码示例<xref:System.ComponentModel.AsyncCompletedEventHandler>委派，请参阅中的示例<xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="452fa-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="452fa-113">组件的异步模式</span><span class="sxs-lookup"><span data-stu-id="452fa-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>