<Type Name="LicFileLicenseProvider" FullName="System.ComponentModel.LicFileLicenseProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6445ce286789ece7f55057c698b535f8f4c5e06" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63866374" /></Metadata><TypeSignature Language="C#" Value="public class LicFileLicenseProvider : System.ComponentModel.LicenseProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicFileLicenseProvider extends System.ComponentModel.LicenseProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicFileLicenseProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LicFileLicenseProvider&#xA;Inherits LicenseProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicFileLicenseProvider : System::ComponentModel::LicenseProvider" />
  <TypeSignature Language="F#" Value="type LicFileLicenseProvider = class&#xA;    inherit LicenseProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.LicenseProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d593b-101">提供 <see cref="T:System.ComponentModel.LicenseProvider" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="d593b-101">Provides an implementation of a <see cref="T:System.ComponentModel.LicenseProvider" />.</span></span> <span data-ttu-id="d593b-102">提供程序与 Microsoft .NET Framework 标准授权模型的工作方式相似。</span><span class="sxs-lookup"><span data-stu-id="d593b-102">The provider works in a similar fashion to the Microsoft .NET Framework standard licensing model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d593b-103"><xref:System.ComponentModel.LicFileLicenseProvider>提供了<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>和<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d593b-103">The <xref:System.ComponentModel.LicFileLicenseProvider> offers <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> and <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> methods.</span></span> <span data-ttu-id="d593b-104"><xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法确定是否<xref:System.ComponentModel.License.LicenseKey%2A>来检索<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>方法均有效。</span><span class="sxs-lookup"><span data-stu-id="d593b-104">The <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method determines whether the <xref:System.ComponentModel.License.LicenseKey%2A> retrieved by the <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> method is valid.</span></span> <span data-ttu-id="d593b-105">当从此类继承时，可以重写<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法以提供您自己的验证逻辑。</span><span class="sxs-lookup"><span data-stu-id="d593b-105">When you inherit from this class, you can override the <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method to provide your own validation logic.</span></span>  
  
 <span data-ttu-id="d593b-106">此类来提供与 COM 许可类似的许可功能，并使用文本许可证文件。</span><span class="sxs-lookup"><span data-stu-id="d593b-106">This class exists to provide similar licensing functionality to COM licensing and uses text license files.</span></span>  
  
 <span data-ttu-id="d593b-107">有关许可的详细信息，请参阅[如何：授予组件和控件许可](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)。</span><span class="sxs-lookup"><span data-stu-id="d593b-107">For more information on licensing, see [How to: License Components and Controls](https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d593b-108">以下示例创建一个授权的控件使用<xref:System.ComponentModel.LicenseManager.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d593b-108">The following example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method.</span></span> <span data-ttu-id="d593b-109">它使用<xref:System.ComponentModel.LicFileLicenseProvider>许可证管理器。</span><span class="sxs-lookup"><span data-stu-id="d593b-109">It uses <xref:System.ComponentModel.LicFileLicenseProvider> for the license manager.</span></span>  
  
 [!code-cpp[Classic LicenseManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseManager Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
    <related type="Article" href="https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57"><span data-ttu-id="d593b-110">如何：许可组件和控件</span><span class="sxs-lookup"><span data-stu-id="d593b-110">How to: License Components and Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicFileLicenseProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicFileLicenseProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d593b-111">初始化 <see cref="T:System.ComponentModel.LicFileLicenseProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d593b-111">Initializes a new instance of the <see cref="T:System.ComponentModel.LicFileLicenseProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57"><span data-ttu-id="d593b-112">如何：许可组件和控件</span><span class="sxs-lookup"><span data-stu-id="d593b-112">How to: License Components and Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="protected virtual string GetKey (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetKey(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetKey(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : Type -&gt; string&#xA;override this.GetKey : Type -&gt; string" Usage="licFileLicenseProvider.GetKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d593b-113">要返回密钥的对象类型。</span><span class="sxs-lookup"><span data-stu-id="d593b-113">The object type to return the key.</span></span></param>
        <summary><span data-ttu-id="d593b-114">返回指定类型的密钥。</span><span class="sxs-lookup"><span data-stu-id="d593b-114">Returns a key for the specified type.</span></span></summary>
        <returns><span data-ttu-id="d593b-115">对 <paramref name="type" /> 参数已被授权的确认。</span><span class="sxs-lookup"><span data-stu-id="d593b-115">A confirmation that the <paramref name="type" /> parameter is licensed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57"><span data-ttu-id="d593b-116">如何：许可组件和控件</span><span class="sxs-lookup"><span data-stu-id="d593b-116">How to: License Components and Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetLicense">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.License GetLicense(class System.ComponentModel.LicenseContext context, class System.Type type, object instance, bool allowExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::License ^ GetLicense(System::ComponentModel::LicenseContext ^ context, Type ^ type, System::Object ^ instance, bool allowExceptions);" />
      <MemberSignature Language="F#" Value="override this.GetLicense : System.ComponentModel.LicenseContext * Type * obj * bool -&gt; System.ComponentModel.License" Usage="licFileLicenseProvider.GetLicense (context, type, instance, allowExceptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.License</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.LicenseContext" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="allowExceptions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d593b-117">一个 <see cref="T:System.ComponentModel.LicenseContext" />，指定可在何处使用已授权的对象。</span><span class="sxs-lookup"><span data-stu-id="d593b-117">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</span></span></param>
        <param name="type"><span data-ttu-id="d593b-118">一个 <see cref="T:System.Type" />，表示请求 <see cref="T:System.ComponentModel.License" /> 的组件。</span><span class="sxs-lookup"><span data-stu-id="d593b-118">A <see cref="T:System.Type" /> that represents the component requesting the <see cref="T:System.ComponentModel.License" />.</span></span></param>
        <param name="instance"><span data-ttu-id="d593b-119">请求 <see cref="T:System.ComponentModel.License" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="d593b-119">An object that requests the <see cref="T:System.ComponentModel.License" />.</span></span></param>
        <param name="allowExceptions"><span data-ttu-id="d593b-120">如果无法授予组件许可证时应引发 <see cref="T:System.ComponentModel.LicenseException" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d593b-120"><see langword="true" /> if a <see cref="T:System.ComponentModel.LicenseException" /> should be thrown when a component cannot be granted a license; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d593b-121">返回组件实例的许可证（如果有一个可用的话）。</span><span class="sxs-lookup"><span data-stu-id="d593b-121">Returns a license for the instance of the component, if one is available.</span></span></summary>
        <returns><span data-ttu-id="d593b-122">有效的 <see cref="T:System.ComponentModel.License" />。</span><span class="sxs-lookup"><span data-stu-id="d593b-122">A valid <see cref="T:System.ComponentModel.License" />.</span></span> <span data-ttu-id="d593b-123">如果该方法未能找到有效的 <see cref="T:System.ComponentModel.License" /> 或有效的 <paramref name="context" /> 参数，它返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d593b-123">If this method cannot find a valid <see cref="T:System.ComponentModel.License" /> or a valid <paramref name="context" /> parameter, it returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d593b-124">在设计时<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>方法查找名为的许可证文件`myClassName.LIC`，其中`myClassName`是<xref:System.Type.FullName%2A>要创建的组件。</span><span class="sxs-lookup"><span data-stu-id="d593b-124">At design time, the <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> method looks for a license file named `myClassName.LIC`, where `myClassName` is the <xref:System.Type.FullName%2A> of the component to create.</span></span> <span data-ttu-id="d593b-125">此文件必须与包含该组件的.dll 文件相同的目录中。</span><span class="sxs-lookup"><span data-stu-id="d593b-125">This file must be in the same directory as the .dll file that contains the component.</span></span>  
  
 <span data-ttu-id="d593b-126">接下来，此方法检查该许可证文件中指定的密钥进行的第一行<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d593b-126">Next, this method checks the first line of the license file against a key specified in the <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method.</span></span> <span data-ttu-id="d593b-127">如果密钥是有效的此行将用作<xref:System.ComponentModel.License.LicenseKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="d593b-127">If the key is valid, this line is used as the <xref:System.ComponentModel.License.LicenseKey%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57"><span data-ttu-id="d593b-128">如何：许可组件和控件</span><span class="sxs-lookup"><span data-stu-id="d593b-128">How to: License Components and Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyValid">
      <MemberSignature Language="C#" Value="protected virtual bool IsKeyValid (string key, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsKeyValid(string key, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsKeyValid(System::String ^ key, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsKeyValid : string * Type -&gt; bool&#xA;override this.IsKeyValid : string * Type -&gt; bool" Usage="licFileLicenseProvider.IsKeyValid (key, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d593b-129">要检查的 <see cref="P:System.ComponentModel.License.LicenseKey" />。</span><span class="sxs-lookup"><span data-stu-id="d593b-129">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to check.</span></span></param>
        <param name="type"><span data-ttu-id="d593b-130">一个 <see cref="T:System.Type" />，表示请求 <see cref="T:System.ComponentModel.License" /> 的组件。</span><span class="sxs-lookup"><span data-stu-id="d593b-130">A <see cref="T:System.Type" /> that represents the component requesting the <see cref="T:System.ComponentModel.License" />.</span></span></param>
        <summary><span data-ttu-id="d593b-131">确定 <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> 方法检索的密钥对指定的类型是否有效。</span><span class="sxs-lookup"><span data-stu-id="d593b-131">Determines whether the key that the <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> method retrieves is valid for the specified type.</span></span></summary>
        <returns><span data-ttu-id="d593b-132">如果该密钥是指定类型的有效 <see cref="P:System.ComponentModel.License.LicenseKey" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d593b-132"><see langword="true" /> if the key is a valid <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d593b-133">此方法检查针对该短语的键:" `myClassName is a licensed component.` "，其中`myClassName`是<xref:System.Type.FullName%2A>你想要创建的组件。</span><span class="sxs-lookup"><span data-stu-id="d593b-133">This method checks the key against the phrase: " `myClassName is a licensed component.` ", where `myClassName` is the <xref:System.Type.FullName%2A> of the component you want to create.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d593b-134">当从此类继承时，可以重写此方法以提供您自己的验证逻辑。</span><span class="sxs-lookup"><span data-stu-id="d593b-134">When you inherit from this class, you can override this method to provide your own validation logic.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57"><span data-ttu-id="d593b-135">如何：许可组件和控件</span><span class="sxs-lookup"><span data-stu-id="d593b-135">How to: License Components and Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>