<Type Name="ISessionIDManager" FullName="System.Web.SessionState.ISessionIDManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05852a0036da34577ff54526773db9a1f6216f3a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70506948" /></Metadata><TypeSignature Language="C#" Value="public interface ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISessionIDManager" />
  <TypeSignature Language="F#" Value="type ISessionIDManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义自定义会话状态标识符管理器必须实现的协定。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.ISessionIDManager>接口标识为会话标识符值创建自定义管理器必须实现的方法。 <xref:System.Web.SessionState.ISessionIDManager>接口实现创建并验证会话标识符值，并在 http 响应中管理会话标识符的存储，以及从 http 请求中检索会话标识符值。 使用`sessionIDManagerType` [sessionState 元素（ASP.NET 设置架构）](https://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素的属性启用自定义会话 ID 管理器。  
  
 <xref:System.Web.SessionState.ISessionIDManager>如果接口实现将支持无 cookie 会话标识符，你将需要实现一个解决方案，用于在 URL 中发送和检索会话标识符，如 ISAPI 筛选器。  
  
 如果你只想要提供 ASP.NET 会话状态要使用的自定义会话标识符值，则可以创建一个继承<xref:System.Web.SessionState.SessionIDManager>类的类，并<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>只使用你自己的<xref:System.Web.SessionState.SessionIDManager.Validate%2A>自定义实现来重写和方法。 这使你可以提供自己的会话标识符值，同时依赖于基类<xref:System.Web.SessionState.SessionIDManager>将值存储到 http 响应中，并从 http 请求中检索值。 有关替代<xref:System.Web.SessionState.SessionIDManager>类和实现这些方法的示例，请参阅<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>为<xref:System.Web.SessionState.SessionIDManager>类的方法提供的示例。  
  
   
  
## Examples  
 下面的代码示例演示一个实现基于 cookie 的会话 ID 管理器的类。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#1)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
  </Docs>
  <Members>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string" Usage="iSessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>创建一个唯一的会话标识符。</summary>
        <returns>唯一会话标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法用于生成唯一会话标识符<xref:System.Web.SessionState.SessionStateModule> ，对象将使用该标识符来标识新会话。 <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> 返回的<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>值必须唯一，并且必须包含可存储在 HTTP 响应和请求中的有效字符。 如果<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>实现返回的值可能包含在 HTTP 响应或请求中无效的字符，则应<xref:System.Web.HttpUtility.UrlEncode%2A>使用方法对<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法中的会话标识符值进行编码实现和<xref:System.Web.HttpUtility.UrlDecode%2A>方法对<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法实现中的会话标识符值进行解码。  
  
   
  
## Examples  
 下面的代码示例实现<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>方法。 方法创建一个新<xref:System.Guid>的，用作会话标识符。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#3)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string" Usage="iSessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>从当前 HTTP 请求的上下文中获取会话标识符。</summary>
        <returns>随 HTTP 请求一起发送的当前会话标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>在<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType>和事件期间，将调用方法 <xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>  。 如果无法从 HTTP 请求中检索有效会话标识符，则返回`null`。 `null` <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>如果从<xref:System.Web.SessionState.SessionStateModule> 方法接收，它会调用方法来获取新会话的新会话标识符。 <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>  
  
 如果<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>实现返回的值可能包含在 HTTP 响应或请求中无效的字符，则应<xref:System.Web.HttpUtility.UrlEncode%2A>使用方法对<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法中的会话标识符值进行编码实现和<xref:System.Web.HttpUtility.UrlDecode%2A>方法对<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法实现中的会话标识符值进行解码。  
  
   
  
## Examples  
 下面的代码示例演示一个部分实现<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>的方法。 如果自定义会话 ID 管理器支持无 cookie 会话标识符，你将需要实现用于在 URL 中发送和检索会话标识符的解决方案，如 ISAPI 筛选器。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#2)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit" Usage="iSessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.ISessionIDManager.Initialize%2A>使用方法 <xref:System.Web.SessionState.ISessionIDManager> 初始化对象。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="iSessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">包含有关当前请求的信息的 <see cref="T:System.Web.HttpContext" /> 对象。</param>
        <param name="suppressAutoDetectRedirect">如果会话标识符管理器必须重定向来确定 Cookie 支持，则为 <see langword="true" />；否则为 <see langword="false" />，以取消确定 Cookie 支持的自动重定向。</param>
        <param name="supportSessionIDReissue">该方法返回时会包含一个布尔值，指示原始 ID 过期后 <see cref="T:System.Web.SessionState.ISessionIDManager" /> 对象是否支持发出新的会话 ID。 此参数未经初始化即被传递。  
  
当会话状态 ID 在 URL 上被编码，或者存在 URL 被共享或传送的可能性时，重复使用会话 ID 是合理的做法。  
  
如果自定义会话状态实现按虚拟路径将 Cookie 分区，则同样应支持会话状态。</param>
        <summary>针对每个请求执行 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象的初始化。</summary>
        <returns>如果初始化执行了重定向，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为对象 <xref:System.Web.SessionState.ISessionIDManager> 处理的每个请求调用方法。 <xref:System.Web.SessionState.ISessionIDManager.InitializeRequest%2A> 使用方法初始化<xref:System.Web.SessionState.SessionIDManager>对象的每个请求的数据。 <xref:System.Web.SessionState.ISessionIDManager.InitializeRequest%2A>  
  
 当参数为`true`时， <xref:System.Web.SessionState.ISessionIDManager>对象不应使用重定向来确定浏览器是否支持 cookie。 `suppressAutoDetectRedirect`  
  
 如果使用 cookie 进行会话`false`标识，则应返回 `true` 参数; <xref:System.Web.SessionState.ISessionIDManager>否则，如果实现支持重新发出会话 id，则返回。 `supportSessionIDReissue`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="iSessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>从 Cookie 或 URL 删除会话标识符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.SessionState.SessionStateModule>创建了新的会话<xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=nameWithType>但未使用，则在<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>事件中<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>调用方法以从集合中移除会话标识符。  
  
   
  
## Examples  
 下面的代码示例实现<xref:System.Web.SessionState.ISessionIDManager.RemoveSessionID%2A>方法。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#4)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="iSessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <param name="id">会话标识符。</param>
        <param name="redirected">该方法返回时，如果响应重定向到当前 URL（会话标识符已添加至该 URL），则包含布尔值 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="cookieAdded">该方法返回时，如果 Cookie 已添加至 HTTP 响应，则包含布尔值 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将新创建的会话标识符保存到 HTTP 响应。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法在<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType>事件期间<xref:System.Web.SessionState.SessionStateModule>由对象调用。 <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法将会话标识符存储在 URL 中（使用无 cookie 会话状态时），或存储在非过期会话 cookie 中。  
  
 如果从<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>实现返回的值可能包含在 HTTP 响应或请求中无效的字符，则应<xref:System.Web.HttpUtility.UrlEncode%2A>使用方法对<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>方法中的会话标识符值进行编码实现和<xref:System.Web.HttpUtility.UrlDecode%2A>方法对<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>方法实现中的会话标识符值进行解码。  
  
   
  
## Examples  
 下面的代码示例演示一个部分实现<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>的方法。 如果自定义会话 ID 管理器支持无 cookie 会话标识符，你将需要实现用于在 URL 中发送和检索会话标识符的解决方案，如 ISAPI 筛选器。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#5)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool" Usage="iSessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要验证的会话标识符。</param>
        <summary>确认提供的会话标识符有效。</summary>
        <returns>如果会话标识符有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法验证所提供`id`的是否为有效的会话标识符。 <xref:System.Web.SessionState.ISessionIDManager.Validate%2A>  
  
 从 HTTP 请求检索会话<xref:System.Web.SessionState.ISessionIDManager.Validate%2A>标识符时， <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> <xref:System.Web.SessionState.ISessionIDManager>实现应从方法调用方法，以确保所提供的会话标识符的格式正确。  
  
   
  
## Examples  
 下面的代码示例实现<xref:System.Web.SessionState.ISessionIDManager.Validate%2A>方法，并确保会话标识符值是有效<xref:System.Guid>的。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#6)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
