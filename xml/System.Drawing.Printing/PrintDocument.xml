<Type Name="PrintDocument" FullName="System.Drawing.Printing.PrintDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbf6f737e9d4aa5da890260600f2144932a54b71" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68395322" /></Metadata><TypeSignature Language="C#" Value="public class PrintDocument : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDocument extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDocument&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDocument : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type PrintDocument = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("PrintPage")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>从 Windows 窗体应用程序打印时，定义一种可重用的可发送到打印机上的对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument>通常, 您创建类的一个实例, 设置<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> <xref:System.Drawing.Printing.PrintDocument.Print%2A>和<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>等属性, 然后调用方法来开始打印进程。 通过使用 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 的 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics> 属性处理 <xref:System.Drawing.Printing.PrintPageEventArgs> 事件，您在该事件中指定要打印的输出。  
  
 有关从 Windows 窗体应用程序进行打印的详细信息, 请参阅[Windows 窗体打印支持](~/docs/framework/winforms/advanced/windows-forms-print-support.md)。 如果要从 Windows Presentation Foundation 应用程序进行打印, 请参阅<xref:System.Printing>命名空间。  
  
   
  
## Examples  
 下面的代码示例在默认打印机上打印名为 C:\My Documents\MyFile.txt 的文件。 若要运行该示例, 请创建新的 Windows 窗体项目并将示例代码粘贴到窗体中, 并替换文件内容。 对于C#, 你将需要删除 Form1.Designer.cs 文件。 同时, 更改要打印的文件的路径。  
  
> [!NOTE]
>  该示例要求每行均适合页面宽度。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Printing.PageSettings" />
    <altmember cref="T:System.Drawing.Printing.PrintController" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/362427f8-03d4-4826-b49f-60ab066ad322">如何：打印 Windows 窗体中的多页文本文件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Drawing.Printing.PrintDocument" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无参数构造函数根据默认打印机初始化所有字段。 通常, 在创建新<xref:System.Drawing.Printing.PrintDocument>的后, 将分别设置影响<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>通过和<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>属性的输出的打印机和页面设置。  
  
   
  
## Examples  
 下面的代码示例将文档的页面方向设置为横向, 并打印文档。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler BeginPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler BeginPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ BeginPrint;" />
      <MemberSignature Language="F#" Value="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在调用 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法之后、打印文档首页之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常, 您可以处理<xref:System.Drawing.Printing.PrintDocument.BeginPrint>事件, 以便初始化打印过程中使用的字体、文件流和其他资源。  
  
 若要将事件与事件处理程序关联, 请将<xref:System.Drawing.Printing.PrintEventHandler>委托的实例添加到事件。 每当发生事件时, 就会调用事件处理程序。 有关用委托处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); void set(System::Drawing::Printing::PageSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageSettings : System.Drawing.Printing.PageSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置页设置，这些页设置用作要打印的所有页的默认设置。</summary>
        <value>为文档指定默认页设置的 <see cref="T:System.Drawing.Printing.PageSettings" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以通过<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>属性指定多个默认页面设置。 例如, <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType>属性指定是否以彩色打印页面<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> , 属性指定横向或<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>纵向方向, 属性指定页面的边距。  
  
 若要逐页指定设置, 请分别处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>或<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件, 并修改<xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> <xref:System.Drawing.Printing.PrintPageEventArgs>或<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>中包含的参数。  
  
> [!NOTE]
>  开始打印后, 通过属性对页面设置的<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>更改将不会影响要打印的页面。  
  
   
  
## Examples  
 下面的代码示例将文档的页面方向设置为横向, 并打印文档。 该示例进行了三个假设: 已将`filePath`一个名为的变量设置为要打印的文件的路径; 已经定义`pd_PrintPage`了一个名为<xref:System.Drawing.Printing.PrintDocument.PrintPage>的方法, 该方法处理事件, 已经定义了`printer`一个名为的变量。设置为打印机的名称。  
  
 在<xref:System.Drawing>此示例<xref:System.Drawing.Printing>中使用<xref:System.IO> 、和命名空间。  
  
 [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentName : string with get, set" Usage="System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("document")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>打印文档时获取或设置要显示的文档名称(例如，在打印状态对话框中或在打印机队列中)。</summary>
        <value>打印文档时要显示的文档名。 默认情况下为“文档”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>属性未指定要打印的文件。 而是通过处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件来指定要打印的输出。 有关示例, 请参阅<xref:System.Drawing.Printing.PrintDocument>类概述。  
  
   
  
## Examples  
 下面的代码示例使用颜色打印第一页, 如果打印机支持该文档, 并将设置<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>为用户友好名称。 该示例需要创建一个<xref:System.Drawing.Printing.PrintDocument>名为`printDoc`的变量, <xref:System.Drawing.Printing.PrintDocument.PrintPage>并处理和<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件。  
  
 在<xref:System.Drawing>此示例<xref:System.Drawing.Printing>中使用和命名空间。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="EndPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler EndPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler EndPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.EndPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ EndPrint;" />
      <MemberSignature Language="F#" Value="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>打印完文档的最后一页时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常, 你可以处理<xref:System.Drawing.Printing.PrintDocument.EndPrint>事件, 以释放打印过程中使用的字体、文件流和其他资源, 如字体。  
  
 通过在<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> 事件<xref:System.Drawing.Printing.PrintDocument.PrintPage>中将属性设置为`false` , 可以指示没有更多的页可供打印。 如果<xref:System.Drawing.Printing.PrintDocument.EndPrint>打印进程被取消或在打印过程中发生异常, 也会发生此事件。  
  
 若要将事件与事件处理程序关联, 请将<xref:System.Drawing.Printing.PrintEventHandler>委托的实例添加到事件。 每当发生事件时, 就会调用事件处理程序。 有关用委托处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnBeginPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 事件。 该事件在调用 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法之后并在打印文档的第一页之前被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A>方法允许派生类在不附加委托的情况下处理事件。 这是在派生类中处理事件的首选技术。  
  
 当派生类调用<xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A>方法时, 它通过委托调用事件处理程序来<xref:System.Drawing.Printing.PrintDocument.BeginPrint>引发事件。 有关详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> 方法，以便已注册的委托对事件进行接收。 此方法是初始化的好地方。</para></block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnEndPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件。 该事件在文档的最后一页打印完后被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>方法允许派生类在不附加委托的情况下处理事件。 这是在派生类中处理事件的首选技术。 如果打印进程被取消或在打印过程中发生异常, 也会调用方法。<xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>  
  
 当派生类调用<xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>方法时, 它通过委托调用事件处理程序来<xref:System.Drawing.Printing.PrintDocument.EndPrint>引发事件。 有关详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> 方法，以便已注册的委托对事件进行接收。 此方法是取消初始化的好地方。</para></block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPrintPage">
      <MemberSignature Language="C#" Value="protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintPage(class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrintPage (e As PrintPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrintPage(System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit&#xA;override this.OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit" Usage="printDocument.OnPrintPage e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。 该事件在某页打印之前被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A>方法允许派生类在不附加委托的情况下处理事件。 这是在派生类中处理事件的首选技术。  
  
 当派生类调用<xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A>方法时, 它通过委托调用事件处理程序来<xref:System.Drawing.Printing.PrintDocument.PrintPage>引发事件。 有关详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryPageSettings">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryPageSettings(class System.Drawing.Printing.QueryPageSettingsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryPageSettings (e As QueryPageSettingsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryPageSettings(System::Drawing::Printing::QueryPageSettingsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit&#xA;override this.OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit" Usage="printDocument.OnQueryPageSettings e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.QueryPageSettingsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件。 该事件正好在每个 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件之前被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 当派生类调用<xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A>方法时, 它通过委托调用事件处理程序来<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>引发事件。 有关详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OriginAtMargins">
      <MemberSignature Language="C#" Value="public bool OriginAtMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OriginAtMargins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginAtMargins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OriginAtMargins { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OriginAtMargins : bool with get, set" Usage="System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示与页关联的图形对象的位置是位于用户指定边距内，还是位于该页可打印区域的左上角。</summary>
        <value>如果图形起始于页面边距，则为 <see langword="true" />；如果图形原点位于该页可打印区域的左上角，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 计算可用于打印的区域需要知道纸张的物理大小、页面的边距和<xref:System.Drawing.Graphics>对象原点的位置。 当<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>为`true`时<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> , <xref:System.Drawing.Graphics>对象位置会考虑属性值和页面的可打印区域。 如果<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> <xref:System.Drawing.Graphics> <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>为`false`, 则仅使用页面的可打印区域来确定对象原点的位置, 该值将被忽略。  
  
 例如<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> , 如果为<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> ,并且<xref:System.Drawing.Printing.PrintPageEventArgs>每一侧的都设置<xref:System.Drawing.Graphics>为1英寸, 则中包含的对象将位于页面左侧和顶部的1英寸位置。 `true` 如果页面的可打印区域在每一端分别为 .25 英寸, 并且<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>为`false`, 则该<xref:System.Drawing.Graphics>对象从页面的左边缘到页面顶部 .25 英寸。  
  
> [!NOTE]
>  页面的可打印区域因打印机而异, 不保证其对称。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="printDocument.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始文档的打印进程。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件并使用中<xref:System.Drawing.Printing.PrintPageEventArgs>包含的<xref:System.Drawing.Graphics>来指定要打印的输出。  
  
 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType>使用属性指定应打印文档的打印机。  
  
 <xref:System.Drawing.Printing.PrintDocument.Print%2A>方法无需使用打印对话框即可打印文档。 <xref:System.Windows.Forms.PrintDialog>当你希望为用户提供选择打印设置的功能时, 请使用。  
  
> [!NOTE]
>  如果在打印过程中未由<xref:System.Drawing.Printing.PrintDocument.Print%2A>方法处理的异常, 则将中止文档打印。  
  
   
  
## Examples  
 下面的代码示例将通过命令行指定的文件打印到默认打印机。  
  
> [!NOTE]
>  该示例要求每行均适合页面宽度。  
  
 在<xref:System.ComponentModel>此示例<xref:System.Drawing> <xref:System.IO>中,<xref:System.Windows.Forms>使用、、、和命名空间。 <xref:System.Drawing.Printing>  
  
 [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性中命名的打印机不存在。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">对于受限制的对话框的安全打印。 关联的枚举:<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintController">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintController PrintController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintController PrintController" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintController As PrintController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintController ^ PrintController { System::Drawing::Printing::PrintController ^ get(); void set(System::Drawing::Printing::PrintController ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintController : System.Drawing.Printing.PrintController with get, set" Usage="System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指导打印进程的打印控制器。</summary>
        <value>指导打印进程的 <see cref="T:System.Drawing.Printing.PrintController" />。 默认情况下为 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 类的一个新实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 打印控制器通过多种方式引导打印过程。 例如, 若要打印文档, 需要将其转换为<xref:System.Drawing.Graphics>对象。 <xref:System.Drawing.Printing.PrintController>指定在图像中绘制打印预览或打印图像的图形的位置, 以实际打印文档。 打印控制器还可以指定是立即打印文档, 还是等待指定的时间间隔。  
  
   
  
## Examples  
 下面的代码示例要求您已经创建了一个名为<xref:System.Drawing.Printing.PrintDocument> `myPrintDocument`的类的实例。 该示例创建<xref:System.Drawing.Printing.PrintController>类的新实例, 将其分配<xref:System.Drawing.Printing.PrintDocument.PrintController%2A>给的属性`myPrintDocument`, 然后打印文档。  
  
 在<xref:System.Drawing.Printing>此示例<xref:System.Windows.Forms>中使用和命名空间。  
  
 [!code-cpp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintController Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">对于受限制的对话框的安全打印。 关联的枚举:<see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="T:System.Drawing.Printing.PreviewPrintController" />
        <altmember cref="T:System.Drawing.Printing.PrintController" />
        <altmember cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterSettings : System.Drawing.Printing.PrinterSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对文档进行打印的打印机。</summary>
        <value><see cref="T:System.Drawing.Printing.PrinterSettings" />，它指定在何处以及如何打印文档。 默认为 <see cref="T:System.Drawing.Printing.PrinterSettings" />，其属性均设置为默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以通过<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>属性指定多个打印机设置。 例如, 使用<xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=nameWithType>属性指定要打印的份数, 指定要使用的打印机的<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType>属性, 以及<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=nameWithType>指定要打印的页面范围的属性。  
  
   
  
## Examples  
 下面的代码示例在指定的打印机上打印文档。 该示例进行了三个假设: 已将`filePath`变量名称设置为要打印的文件的路径; 已定义了一个名`pd_PrintPage`为的方法, <xref:System.Drawing.Printing.PrintDocument.PrintPage>该方法处理事件, 已经定义了一个名`printer`为的变量。设置为打印机的名称。  
  
 在<xref:System.Drawing>此示例<xref:System.Drawing.Printing>中使用<xref:System.IO> 、和命名空间。  
  
 [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="PrintPage">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintPageEventHandler PrintPage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintPageEventHandler PrintPage" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrintPage As PrintPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintPageEventHandler ^ PrintPage;" />
      <MemberSignature Language="F#" Value="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " Usage="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当需要为当前页打印的输出时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定要打印的输出，请使用 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> 的 <xref:System.Drawing.Printing.PrintPageEventArgs> 属性。 例如, 若要指定应打印的文本行, 请使用<xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType>方法绘制文本。  
  
 除了指定输出之外, 还可以通过将<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType>属性设置为来`true`指示是否有要打印的附加页面。 默认值为`false`, 指示没有要打印的页面。 还可以通过<xref:System.Drawing.Printing.PageSettings>修改各个页面设置, 通过<xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=nameWithType>将属性设置为`true`可取消打印作业。 若要使用不同的页面设置打印文档的每一页, <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>请处理事件。  
  
 若要将事件与事件处理程序关联, 请将<xref:System.Drawing.Printing.PrintPageEventHandler>委托的实例添加到事件。 每当发生事件时, 就会调用事件处理程序。 有关用委托处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何处理<xref:System.Drawing.Printing.PrintDocument.PrintPage>事件。  
  
 有关其他示例, 请[参阅如何:在 Windows 窗体](~/docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)中打印多页文本文件。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintPageEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="https://msdn.microsoft.com/library/362427f8-03d4-4826-b49f-60ab066ad322">如何：打印 Windows 窗体中的多页文本文件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a4a2960c-eb70-48e2-b641-cfb222704e46">Windows 窗体打印支持</related>
      </Docs>
    </Member>
    <Member MemberName="QueryPageSettings">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryPageSettings As QueryPageSettingsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::QueryPageSettingsEventHandler ^ QueryPageSettings;" />
      <MemberSignature Language="F#" Value="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " Usage="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.QueryPageSettingsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件的紧面前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用不同的页面设置打印文档的每一页。 通过修改<xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=nameWithType>属性的各个属性或通过将属性设置<xref:System.Drawing.Printing.PageSettings>为来设置页面设置。 对所做的<xref:System.Drawing.Printing.PageSettings>更改仅影响当前页面, 而不影响文档的默认页面设置。 还可以通过将的<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性设置为来`true` <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>取消打印作业。  
  
 若要将事件与事件处理程序关联, 请将<xref:System.Drawing.Printing.QueryPageSettingsEventHandler>委托的实例添加到事件。 每当发生事件时, 就会调用事件处理程序。 有关用委托处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
如果使用<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件修改打印机设置, 则即使设置了优化配置开关<xref:System.Windows.Forms.PrintPreviewDialog> , 控件的性能也不会提高。 有关详细信息, 请参阅[PrintPreviewDialog 控件概述](~/docs/framework/winforms/controls/printpreviewdialog-control-overview-windows-forms.md)。   
  
## Examples  
 下面的代码示例使用颜色打印第一页, 如果打印机支持该文档。 该示例需要创建一个<xref:System.Drawing.Printing.PrintDocument>名为`printDoc`的变量, <xref:System.Drawing.Printing.PrintDocument.PrintPage>并处理和<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>事件。 在事件中打印每个页面后, 该变量会递增,这不会显示。`currentPageNumber` <xref:System.Drawing.Printing.PrintDocument.PrintPage>  
  
 在<xref:System.Drawing>此示例<xref:System.Drawing.Printing>中使用和命名空间。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="printDocument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以字符串形式提供有关打印文档的信息。</summary>
        <returns>一个字符串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>