<Type Name="IHttpHandlerFactory" FullName="System.Web.IHttpHandlerFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="923b928022b945c7e219c6b62262717054b7c60b" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64235894" /></Metadata><TypeSignature Language="C#" Value="public interface IHttpHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandlerFactory" />
  <TypeSignature Language="F#" Value="type IHttpHandlerFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f0f9a-101">定义类工厂为创建新的 <see cref="T:System.Web.IHttpHandler" /> 对象而必须实现的协定。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-101">Defines the contract that class factories must implement to create new <see cref="T:System.Web.IHttpHandler" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f9a-102">实现的类<xref:System.Web.IHttpHandlerFactory>接口具有除动态创建的类的实现的新实例没有行为<xref:System.Web.IHttpHandler>接口。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-102">A class that implements the <xref:System.Web.IHttpHandlerFactory> interface has no behavior except to dynamically manufacture new instances of classes that implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string url, string pathTranslated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string url, string pathTranslated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (context As HttpContext, requestType As String, url As String, pathTranslated As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ url, System::String ^ pathTranslated);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="iHttpHandlerFactory.GetHandler (context, requestType, url, pathTranslated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="pathTranslated" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="f0f9a-103"><see cref="T:System.Web.HttpContext" /> 类的实例提供用于为 HTTP 请求提供服务的内部服务器对象（如 <see langword="Request" />、<see langword="Response" />、<see langword="Session" /> 和 <see langword="Server" />）的引用。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-103">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</span></span></param>
        <param name="requestType"><span data-ttu-id="f0f9a-104">客户端使用的 HTTP 数据传输方法（<see langword="GET" /> 或 <see langword="POST" />）。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-104">The HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) that the client uses.</span></span></param>
        <param name="url"><span data-ttu-id="f0f9a-105">所请求资源的 <see cref="P:System.Web.HttpRequest.RawUrl" />。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-105">The <see cref="P:System.Web.HttpRequest.RawUrl" /> of the requested resource.</span></span></param>
        <param name="pathTranslated"><span data-ttu-id="f0f9a-106">所请求资源的 <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" />。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-106">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> to the requested resource.</span></span></param>
        <summary><span data-ttu-id="f0f9a-107">返回实现 <see cref="T:System.Web.IHttpHandler" /> 接口的类的实例。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-107">Returns an instance of a class that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span></span></summary>
        <returns><span data-ttu-id="f0f9a-108">处理请求的新的 <see cref="T:System.Web.IHttpHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-108">A new <see cref="T:System.Web.IHttpHandler" /> object that processes the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0f9a-109">下面的代码示例演示如何创建自定义处理程序对象以响应客户端请求。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-109">The following code example demonstrates how to create custom handler objects in response to a client request.</span></span> <span data-ttu-id="f0f9a-110">该示例包含两个部分：</span><span class="sxs-lookup"><span data-stu-id="f0f9a-110">The example has two parts:</span></span>  
  
-   <span data-ttu-id="f0f9a-111">处理程序工厂类。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-111">A handler factory class.</span></span>  
  
-   <span data-ttu-id="f0f9a-112">Web.config 文件摘录中。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-112">A Web.config file excerpt.</span></span>  
  
 <span data-ttu-id="f0f9a-113">该示例的第一部分演示如何创建一个名为 abc.aspx 或 xyz.aspx 页的客户端请求的响应中自定义处理程序对象。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-113">The first part of the example shows how to create custom handler objects in response to a client request for a page named either abc.aspx or xyz.aspx.</span></span> <span data-ttu-id="f0f9a-114">名为的处理程序工厂类`hwf`创建相应的处理程序对象，具体取决于请求的页面。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-114">The handler factory class named `hwf` creates the appropriate handler object depending on the page requested.</span></span>  
  
 [!code-csharp[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f0f9a-115">该示例的第二部分显示了 Web.config 文件摘录。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-115">The second part of the example shows a Web.config file excerpt.</span></span> <span data-ttu-id="f0f9a-116">若要使用上述的处理程序工厂，请将以下行添加到 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-116">To use the above handler factory, add the following lines to the Web.config file.</span></span>  
  
```  
<configuration>   
  <system.web>   
    <httpHandlers>   
      <add verb="*" path="abc.aspx" type="test.MyFactory,HandlerFactoryTest" />   
      <add verb="*" path="xyz.aspx" type="test.MyFactory,HandlerFactoryTest" />   
    </httpHandlers>   
  </system.web>  
</configuration>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="iHttpHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="f0f9a-117">要重用的 <see cref="T:System.Web.IHttpHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-117">The <see cref="T:System.Web.IHttpHandler" /> object to reuse.</span></span></param>
        <summary><span data-ttu-id="f0f9a-118">使工厂可以重用现有的处理程序实例。</span><span class="sxs-lookup"><span data-stu-id="f0f9a-118">Enables a factory to reuse an existing handler instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>