<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95a64699833345bb0098bf2d79582d318f8c0786" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70355284" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc499-101">一个从单一源接收多播流量的客户端，亦称为源特定多播 (SSM)。</span><span class="sxs-lookup"><span data-stu-id="cc499-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-102">多路广播组地址和发件人源地址必须是已知的。</span><span class="sxs-lookup"><span data-stu-id="cc499-102">The multicast group address and sender source address must be known.</span></span>  
  
 <span data-ttu-id="cc499-103">除了从特定发件人接收多播数据外， <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>客户端还可以将单播数据发送回发送方。</span><span class="sxs-lookup"><span data-stu-id="cc499-103">In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.</span></span>  
  
 <span data-ttu-id="cc499-104">若要从多个源接收多播，或在未提前知道源的情况下<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>使用类，请改用类。</span><span class="sxs-lookup"><span data-stu-id="cc499-104">To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="cc499-105">此接收器要订阅的发送器源地址。</span><span class="sxs-lookup"><span data-stu-id="cc499-105">The sender source address for this receiver to subscribe to.</span></span></param>
        <param name="groupAddress"><span data-ttu-id="cc499-106">此接收器要订阅的多播组地址。</span><span class="sxs-lookup"><span data-stu-id="cc499-106">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="cc499-107">此接收器要绑定到的本地端口。</span><span class="sxs-lookup"><span data-stu-id="cc499-107">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="cc499-108">创建一个可以订阅组地址并从单一源接收数据报的新 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP 客户端。</span><span class="sxs-lookup"><span data-stu-id="cc499-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-109"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>构造函数将 UDP 多播套接字与组地址和端口关联，但不绑定或以其他方式使用套接字。</span><span class="sxs-lookup"><span data-stu-id="cc499-109">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="cc499-110">`groupAddress`参数可以是 IPv6 或 IPv4 多播地址。</span><span class="sxs-lookup"><span data-stu-id="cc499-110">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span> <span data-ttu-id="cc499-111">但是， `sourceAddress`和`groupAddress`参数的地址族必须相同。</span><span class="sxs-lookup"><span data-stu-id="cc499-111">However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.</span></span>  
  
 <span data-ttu-id="cc499-112">`localPort`参数不得指定小于1024的端口。</span><span class="sxs-lookup"><span data-stu-id="cc499-112">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc499-113"><paramref name="sourceAddress" /> 和 <paramref name="groupAddress" /> 必须为相同地址族。</span><span class="sxs-lookup"><span data-stu-id="cc499-113"><paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-114"><paramref name="sourceAddress" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-114"><paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="cc499-115">或</span><span class="sxs-lookup"><span data-stu-id="cc499-115">-or-</span></span> 
 <span data-ttu-id="cc499-116"><paramref name="groupAddress" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-116"><paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc499-117"><paramref name="localPort" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="cc499-117"><paramref name="localPort" /> is less than 0</span></span> 
<span data-ttu-id="cc499-118">或</span><span class="sxs-lookup"><span data-stu-id="cc499-118">-or-</span></span> 
 <span data-ttu-id="cc499-119"><paramref name="localPort" /> 大于 65,535。</span><span class="sxs-lookup"><span data-stu-id="cc499-119"><paramref name="localPort" /> is greater than 65,535.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-120"><paramref name="localPort" /> 小于 1024</span><span class="sxs-lookup"><span data-stu-id="cc499-120"><paramref name="localPort" /> is less than 1024</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="cc499-121">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-121">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="cc499-122">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="cc499-122">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="cc499-123">绑定套接字并开始多播组的联接操作，以便允许接收来自单个源地址的数据报。</span><span class="sxs-lookup"><span data-stu-id="cc499-123">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span></span></summary>
        <returns><span data-ttu-id="cc499-124">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-124">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-125"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A>方法将 UDP 多播套接字绑定到本地端口，并联接多播组，以允许从单个源地址接收数据报。</span><span class="sxs-lookup"><span data-stu-id="cc499-125">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</span></span> <span data-ttu-id="cc499-126">要绑定到的多播组地址、单个源地址和本地端口都在<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>构造函数中指定。</span><span class="sxs-lookup"><span data-stu-id="cc499-126">The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="cc499-127">当联接多播组的`callback`操作已完成时，将调用参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-127">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="cc499-128">如果运行时需要，该<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A>方法还执行策略检查以验证是否允许客户端访问多路广播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-128">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="cc499-129">如果不允许客户端访问， <xref:System.Net.Sockets.SocketException>则会<xref:System.Net.Sockets.SocketError.AccessDenied>引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-129">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-130">已经联接多播组，或联接操作正在进行。</span><span class="sxs-lookup"><span data-stu-id="cc499-130">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-131">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-131">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-132">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="cc499-132">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cc499-133">用于存储已接收数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cc499-133">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="cc499-134">应存储数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="cc499-134">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="cc499-135">要接收并存储在 <paramref name="buffer" /> 中的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="cc499-135">The maximum number of bytes to receive and store in the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="cc499-136">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-136">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="cc499-137">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="cc499-137">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="cc499-138">开始执行从已联接的多播组接收数据包的操作，并在来自指定发送器的数据包到达组时调用指定的回叫。</span><span class="sxs-lookup"><span data-stu-id="cc499-138">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span></span></summary>
        <returns><span data-ttu-id="cc499-139">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-139">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-140"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>方法开始从一个发送方的已联接的多播组接收 UDP 数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-140">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</span></span> <span data-ttu-id="cc499-141">本地端口、多播组和发件人源地址在<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>构造函数中指定。</span><span class="sxs-lookup"><span data-stu-id="cc499-141">The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="cc499-142">多播客户端还必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="cc499-142">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="cc499-143">接收到数据包时， `callback`将调用参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-143">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="cc499-144">如果接收操作同步失败，则可能会出现套接字故障，但这种情况不太常见。</span><span class="sxs-lookup"><span data-stu-id="cc499-144">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="cc499-145">如果出现套接字故障， <xref:System.Net.Sockets.SocketException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-145">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="cc499-146">收到的错误被指定为<xref:System.Net.Sockets.SocketError>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="cc499-146">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-147"><paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-147"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc499-148"><paramref name="offset" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="cc499-148"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="cc499-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc499-149">-or-</span></span> 
 <span data-ttu-id="cc499-150"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="cc499-150"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="cc499-151">或</span><span class="sxs-lookup"><span data-stu-id="cc499-151">-or-</span></span> 
 <span data-ttu-id="cc499-152"><paramref name="count" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="cc499-152"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="cc499-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc499-153">-or-</span></span> 
 <span data-ttu-id="cc499-154"><paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="cc499-154"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-155">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-155">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-156">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-156">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-157">试图访问供接收的套接字时发生错误。</span><span class="sxs-lookup"><span data-stu-id="cc499-157">An error occurred when attempting to access the socket for receiving.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cc499-158">包含要发送的数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="cc499-158">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="cc499-159">要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="cc499-159">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="cc499-160">要从 <paramref name="buffer" /> 发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="cc499-160">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="remotePort"><span data-ttu-id="cc499-161">要向其发送数据包的远程端口。</span><span class="sxs-lookup"><span data-stu-id="cc499-161">The remote port to which the packet is to be sent.</span></span> <span data-ttu-id="cc499-162">远程地址由 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> 构造函数指定。</span><span class="sxs-lookup"><span data-stu-id="cc499-162">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span></span></param>
        <param name="callback"><span data-ttu-id="cc499-163">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-163">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="cc499-164">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="cc499-164">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="cc499-165">开始执行向之前指定的源发送单播数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-165">Begins the operation of sending a unicast packet to the source previously specified.</span></span></summary>
        <returns><span data-ttu-id="cc499-166">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-166">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-167"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>方法开始向之前指定的源发送 UDP 数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-167">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.</span></span>  
  
 <span data-ttu-id="cc499-168">某些协议使用此信息传递流控制、服务统计信息或恢复消息。</span><span class="sxs-lookup"><span data-stu-id="cc499-168">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="cc499-169">发送数据包时，将`callback`调用参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-169">The method specified in the `callback` parameter is invoked when a packet has been sent.</span></span>  
  
 <span data-ttu-id="cc499-170">客户端必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="cc499-170">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="cc499-171">如果`remotePort`参数中指定的目标端口小于 1024 <xref:System.Net.Sockets.SocketException> ，则会引发<xref:System.Net.Sockets.SocketError.AccessDenied>。</span><span class="sxs-lookup"><span data-stu-id="cc499-171">If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="cc499-172">如果发送操作同步失败，则可能会出现套接字故障，但这种情况并不常见。</span><span class="sxs-lookup"><span data-stu-id="cc499-172">It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="cc499-173">如果出现套接字故障， <xref:System.Net.Sockets.SocketException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-173">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="cc499-174">收到的错误被指定为<xref:System.Net.Sockets.SocketError>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="cc499-174">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-175"><paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-175"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc499-176"><paramref name="offset" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="cc499-176"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="cc499-177">或</span><span class="sxs-lookup"><span data-stu-id="cc499-177">-or-</span></span> 
 <span data-ttu-id="cc499-178"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="cc499-178"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="cc499-179">或</span><span class="sxs-lookup"><span data-stu-id="cc499-179">-or-</span></span> 
 <span data-ttu-id="cc499-180"><paramref name="count" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="cc499-180"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="cc499-181">或</span><span class="sxs-lookup"><span data-stu-id="cc499-181">-or-</span></span> 
 <span data-ttu-id="cc499-182"><paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="cc499-182"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="cc499-183">或</span><span class="sxs-lookup"><span data-stu-id="cc499-183">-or-</span></span> 
 <span data-ttu-id="cc499-184"><paramref name="remotePort" /> 小于 0 或大于 65,535。</span><span class="sxs-lookup"><span data-stu-id="cc499-184"><paramref name="remotePort" /> is less than 0 or greater than 65,535.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-185">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-185">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-186">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-186">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-187">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="cc499-187">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc499-188">离开多播组并释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 类和基础 <see cref="T:System.Net.Sockets.Socket" /> 的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="cc499-188">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-189">在完成使用 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> 后，应调用 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。</span><span class="sxs-lookup"><span data-stu-id="cc499-189">Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="cc499-190"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> 方法使 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="cc499-190">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="cc499-191">调用<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>后，必须释放对的<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>所有引用，以便垃圾回收器能够<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>回收占用的内存。</span><span class="sxs-lookup"><span data-stu-id="cc499-191">After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="cc499-192">每次释放对 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。</span><span class="sxs-lookup"><span data-stu-id="cc499-192">Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="cc499-193">否则，在垃圾回收器调用 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 对象的 <xref:System.Object.Finalize%2A> 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="cc499-193">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="cc499-194">异步联接操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc499-194">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="cc499-195">完成多播组的异步联接组操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-195">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-196"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A>方法完成到套接字的异步绑定，并将操作联接到多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-196">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="cc499-197">如果运行时需要，该<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A>方法还执行策略检查以验证是否允许客户端访问多路广播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-197">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="cc499-198">如果不允许客户端访问， <xref:System.Net.Sockets.SocketException>则会<xref:System.Net.Sockets.SocketError.AccessDenied>引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-198">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="cc499-199">如果在执行联接组操作时出现套接字错误， <xref:System.Net.Sockets.SocketException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-199">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="cc499-200">收到的错误被指定为<xref:System.Net.Sockets.SocketError>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="cc499-200">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-201"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-201"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-202">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-202">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-203">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="cc499-203">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult * int -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="cc499-204">异步接收操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc499-204">The result of the asynchronous receive operation.</span></span></param>
        <param name="sourcePort"><span data-ttu-id="cc499-205">从中接收数据包的源终结点。</span><span class="sxs-lookup"><span data-stu-id="cc499-205">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="cc499-206">完成从已联接的多播组接收数据包的异步操作并提供接收到的信息。</span><span class="sxs-lookup"><span data-stu-id="cc499-206">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="cc499-207">存储在传递给 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法的 <paramref name="buffer" /> 参数中的消息的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="cc499-207">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-208"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>方法完成异步操作以接收来自多路广播组中单个源的数据包。</span><span class="sxs-lookup"><span data-stu-id="cc499-208">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</span></span>  
  
 <span data-ttu-id="cc499-209">如果在执行接收操作时出现套接字错误， <xref:System.Net.Sockets.SocketException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-209">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="cc499-210">收到的错误被指定为<xref:System.Net.Sockets.SocketError>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="cc499-210">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-211"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-211"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-212">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-212">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-213">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-213">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-214">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="cc499-214">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="cc499-215">异步发送操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc499-215">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="cc499-216">完成向单个源发送单播数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-216">Completes the operation of sending a unicast packet to a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-217"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A>方法完成将数据包发送到以前指定的单一源的异步操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-217">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.</span></span>  
  
 <span data-ttu-id="cc499-218">如果在执行接收操作时出现套接字错误， <xref:System.Net.Sockets.SocketException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc499-218">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="cc499-219">收到的错误被指定为<xref:System.Net.Sockets.SocketError>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="cc499-219">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc499-220"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="cc499-220"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-221">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-221">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-222">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-222">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="cc499-223">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="cc499-223">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc499-224">获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上的多播接收操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-224">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="cc499-225">返回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-225">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="cc499-226">接收缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="cc499-226">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-227">属性获取或设置用于此<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>实例上的多播接收操作的基础<xref:System.Net.Sockets.Socket>的接收缓冲区的大小（以字节为单位）。 `ReceiveBufferSize`</span><span class="sxs-lookup"><span data-stu-id="cc499-227">The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span> <span data-ttu-id="cc499-228">具体而言， `ReceiveBufferSize`属性控制堆栈在包到达时使用的缓冲区大小，但应用程序尚未<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc499-228">Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span> <span data-ttu-id="cc499-229">如果此缓冲区已满，并且包在应用程序调用<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>和<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>方法之前继续存在，则将删除旧的数据包。</span><span class="sxs-lookup"><span data-stu-id="cc499-229">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="cc499-230">应用程序将永远无法接收旧数据包，并将在调用<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>方法时接收到较新的数据包。</span><span class="sxs-lookup"><span data-stu-id="cc499-230">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span>  
  
 <span data-ttu-id="cc499-231">Windows 上的接收缓冲区的默认大小为8192。</span><span class="sxs-lookup"><span data-stu-id="cc499-231">The default size of the receive buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc499-232">指定的缓冲区大小小于 0。</span><span class="sxs-lookup"><span data-stu-id="cc499-232">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-233">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-233">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-234">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-234">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc499-235">获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上的多播发送操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-235">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="cc499-236">返回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-236">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="cc499-237">发送缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="cc499-237">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc499-238">SendBufferSize 属性获取或设置基础<xref:System.Net.Sockets.Socket>的发送缓冲区的大小（以字节为单位），该缓冲区用于此<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>实例上的多播发送操作。</span><span class="sxs-lookup"><span data-stu-id="cc499-238">The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="cc499-239">在 Mac OS X 上， <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>属性控制在其他<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>方法启动失败之前，网络堆栈等待发送的缓冲区中的字节数。</span><span class="sxs-lookup"><span data-stu-id="cc499-239">On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing.</span></span> <span data-ttu-id="cc499-240">如果应用程序在较短时间内发送大量 UDP 数据包，则 Mac OS X 上的应用程序可能需要与此属性相关。</span><span class="sxs-lookup"><span data-stu-id="cc499-240">Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</span></span>  
  
 <span data-ttu-id="cc499-241">在 Windows 上，如果发送<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>缓冲区已满，调用方法将需要更长的时间来调用<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>回调。</span><span class="sxs-lookup"><span data-stu-id="cc499-241">On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="cc499-242"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>属性仅控制用户的缓冲区是否在物理内存中保持锁定状态，直到发送完成。</span><span class="sxs-lookup"><span data-stu-id="cc499-242">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="cc499-243">Windows 上的发送缓冲区的默认大小为8192。</span><span class="sxs-lookup"><span data-stu-id="cc499-243">The default size of the send buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc499-244">指定的缓冲区大小小于 0。</span><span class="sxs-lookup"><span data-stu-id="cc499-244">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc499-245">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="cc499-245">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cc499-246">已释放了 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="cc499-246">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
