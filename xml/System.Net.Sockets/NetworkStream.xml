<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc985411dc66733e90834464e4505449c9b95a29" /><Meta Name="ms.sourcegitcommit" Value="f991677a7374c45590a432ff7ab830beb05f2ccd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/27/2019" /><Meta Name="ms.locfileid" Value="68591525" /></Metadata><TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="4dd8b-101">为网络访问提供数据的基础流。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-101">Provides the underlying stream of data for network access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-102">类提供用于在阻止模式下通过<xref:System.Net.Sockets.SocketType.Stream>套接字发送和接收数据的方法。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="4dd8b-103">有关阻止和非阻止<xref:System.Net.Sockets.Socket>性的详细信息, 请参阅[使用异步客户端套接字](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="4dd8b-104">可以将<xref:System.Net.Sockets.NetworkStream>类用于同步和异步数据传输。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="4dd8b-105">有关同步和异步通信的详细信息, 请参阅[套接字](~/docs/framework/network-programming/sockets.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="4dd8b-106">若要创建<xref:System.Net.Sockets.NetworkStream>, 必须提供连接<xref:System.Net.Sockets.Socket>的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-107">你还可以指定对<xref:System.IO.FileAccess>提供<xref:System.Net.Sockets.Socket>的<xref:System.Net.Sockets.NetworkStream>具有哪些权限。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-108">默认情况下, 关闭<xref:System.Net.Sockets.NetworkStream>不会关闭提供<xref:System.Net.Sockets.Socket>的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-109">如果希望<xref:System.Net.Sockets.NetworkStream>具有关闭提供<xref:System.Net.Sockets.Socket>的权限, 则必须为`ownsSocket`参数的值指定`true` 。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="4dd8b-110">对于简单<xref:System.Net.Sockets.NetworkStream.Write%2A>的<xref:System.Net.Sockets.NetworkStream.Read%2A>单线程同步阻塞 i/o, 使用和方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="4dd8b-111">如果要使用单独的线程来处理 i/o, 请考虑<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>使用和<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法, 或者<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>使用和<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法进行通信。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="4dd8b-112"><xref:System.Net.Sockets.NetworkStream>不支持对网络数据流进行随机访问。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="4dd8b-113"><xref:System.Net.Sockets.NetworkStream.CanSeek%2A>属性的值, 该值指示流是否支持查找, 始终`false`为; 读取<xref:System.Net.Sockets.NetworkStream.Position%2A>属性<xref:System.Net.Sockets.NetworkStream.Seek%2A> 、读取<xref:System.Net.Sockets.NetworkStream.Length%2A>属性或调用方法将引发<xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="4dd8b-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="4dd8b-114">可以在<xref:System.Net.Sockets.NetworkStream>类的实例上同时执行读写操作, 而无需进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="4dd8b-115">只要有一个唯一的线程用于写入操作, 另一个线程用于读取操作, 读取和写入线程之间就不会有交叉干扰, 也不需要进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-116">下面的代码示例演示如何<xref:System.Net.Sockets.NetworkStream>从连接<xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket>的创建, 并执行基本的同步阻塞 i/o。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4dd8b-117">创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="4dd8b-118"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <summary><span data-ttu-id="4dd8b-119">为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-120">使用对指定<xref:System.Net.Sockets.Socket>的读/写访问权限创建。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-121">不拥有基础<xref:System.Net.Sockets.Socket>, 因此调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法不会关闭<xref:System.Net.Sockets.Socket>。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-122">下面的代码示例演示如何<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.Socket>使用创建。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-123"><paramref name="socket" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-124">未连接 <paramref name="socket" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-124">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="4dd8b-125">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-125">-or-</span></span> 
<span data-ttu-id="4dd8b-126"><paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="4dd8b-127">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-127">-or-</span></span> 
<span data-ttu-id="4dd8b-128"><paramref name="socket" /> 参数处于非阻止状态。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="4dd8b-129">在网络上使用流</span><span class="sxs-lookup"><span data-stu-id="4dd8b-129">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="4dd8b-130"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-130">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="4dd8b-131">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-131">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-132">用指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 初始化 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-133">使用对指定<xref:System.Net.Sockets.Socket>的读/写访问权限创建。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-133">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-134">`ownsSocket`如果参数的值为<xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.NetworkStream> `true`, 则获取基础的<xref:System.Net.Sockets.NetworkStream.Close%2A>所有权, 并且调用方法也会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-134">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-135">下面的代码示例创建<xref:System.Net.Sockets.NetworkStream>了具有所有权<xref:System.Net.Sockets.Socket>的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-135">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-136"><paramref name="socket" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-136">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-137">未连接 <paramref name="socket" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-137">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="4dd8b-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-138">-or-</span></span> 
<span data-ttu-id="4dd8b-139"><paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性的值不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-139">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="4dd8b-140">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-140">-or-</span></span> 
<span data-ttu-id="4dd8b-141"><paramref name="socket" /> 参数处于非阻止状态。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-141">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="4dd8b-142"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-142">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="4dd8b-143"><see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-143">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-144">用指定的访问权限为指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 创建 <see cref="T:System.Net.Sockets.Socket" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-144">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-145">使用指定的访问权限<xref:System.Net.Sockets.Socket>创建。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-145">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-146">在<xref:System.Net.Sockets.NetworkStream>此构造函数中, 不拥有基础<xref:System.Net.Sockets.Socket>, 因此调用<xref:System.Net.Sockets.NetworkStream.Close%2A>方法不会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-146">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="4dd8b-147">参数设置的和<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性 。<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead%2A> `access`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-147">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-148">如果指定<xref:System.IO.FileAccess.Write>, <xref:System.Net.Sockets.NetworkStream>则允许对<xref:System.Net.Sockets.NetworkStream.Write%2A>方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-148">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="4dd8b-149">如果指定<xref:System.IO.FileAccess.Read>, <xref:System.Net.Sockets.NetworkStream>则允许对<xref:System.Net.Sockets.NetworkStream.Read%2A>方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-149">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="4dd8b-150">如果指定<xref:System.IO.FileAccess.ReadWrite>, 则允许两种方法调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-150">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-151">下面的代码示例创建一个<xref:System.Net.Sockets.NetworkStream> , 它能够读取和写入。 <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="4dd8b-151">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-152"><paramref name="socket" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-152">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-153">未连接 <paramref name="socket" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-153">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="4dd8b-154">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-154">-or-</span></span> 
<span data-ttu-id="4dd8b-155"><paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-155">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="4dd8b-156">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-156">-or-</span></span> 
<span data-ttu-id="4dd8b-157"><paramref name="socket" /> 参数处于非阻止状态。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-157">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ownsSocket" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="4dd8b-158"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 使用它来发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-158">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="4dd8b-159"><see cref="T:System.IO.FileAccess" /> 值的按位组合，这些值指定向所提供的 <see cref="T:System.Net.Sockets.Socket" /> 上的 <see cref="T:System.Net.Sockets.NetworkStream" /> 授予的访问类型。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-159">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="4dd8b-160">设置为 <see langword="true" /> 可指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 将拥有 <see cref="T:System.Net.Sockets.Socket" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-160">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-161">用指定的访问权限和指定的 <see cref="T:System.Net.Sockets.Socket" /> 所属权为指定的 <see cref="T:System.Net.Sockets.Socket" /> 创建 <see cref="T:System.Net.Sockets.NetworkStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-161">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-162">使用对指定<xref:System.Net.Sockets.Socket>的读/写访问权限创建。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-162">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-163">`ownsSocket`如果参数的值为<xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.NetworkStream> `true`, 则获取基础的<xref:System.Net.Sockets.NetworkStream.Close%2A>所有权, 并且调用方法也会关闭基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-163">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="4dd8b-164">参数设置的和<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>属性 。<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead%2A> `access`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-164">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-165">如果指定<xref:System.IO.FileAccess.Write>, <xref:System.Net.Sockets.NetworkStream>则允许对<xref:System.Net.Sockets.NetworkStream.Write%2A>方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-165">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="4dd8b-166">如果指定<xref:System.IO.FileAccess.Read>, <xref:System.Net.Sockets.NetworkStream>则允许对<xref:System.Net.Sockets.NetworkStream.Read%2A>方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-166">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="4dd8b-167">如果指定<xref:System.IO.FileAccess.ReadWrite>, 则允许两种方法调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-167">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-168">下面的代码示例创建一个<xref:System.Net.Sockets.NetworkStream> , 它能够读取和写入。 <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="4dd8b-168">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-169">的所有权是<xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.NetworkStream>通过`true` 为`ownsSocket`参数指定来提供的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-169">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-170"><paramref name="socket" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-170">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-171">未连接 <paramref name="socket" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-171">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="4dd8b-172">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-172">-or-</span></span> 
<span data-ttu-id="4dd8b-173"><paramref name="socket" /> 参数的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 属性不为 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-173">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="4dd8b-174">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-174">-or-</span></span> 
<span data-ttu-id="4dd8b-175"><paramref name="socket" /> 参数处于非阻止状态。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-175">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-176">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-176">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-177"><paramref name="buffer" /> 中开始存储数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-177">The location in <paramref name="buffer" /> to begin storing the data.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-178">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-178">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="4dd8b-179">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-179">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="4dd8b-180">一个包含用户定义的任何附加数据的对象。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-180">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="4dd8b-181">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 开始异步读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-181">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-182">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-182">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-183"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法从传入网络缓冲区中异步读取数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-183">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="4dd8b-184"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>调用方法使你能够在单独的执行线程中接收数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-184">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="4dd8b-185">您必须创建一个实现<xref:System.AsyncCallback>委托的回调方法, 并将其名称传递<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>给方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-185">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="4dd8b-186">最少`state`的参数必须<xref:System.Net.Sockets.NetworkStream>包含。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-186">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-187">由于你将需要在回调方法中获取收到的数据, 因此, 你应创建一个小型类或结构来保存读取缓冲区和其他有用的信息。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-187">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="4dd8b-188">通过参数将结构或类实例传递<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>给方法。 `state`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-188">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="4dd8b-189">回调方法应调用<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-189">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="4dd8b-190">当应用程序调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>时, 系统将等待, 直到接收到数据或发生错误, 然后系统将使用单独的线程来执行指定的回调方法, 并在<xref:System.Net.Sockets.NetworkStream.EndRead%2A>提供<xref:System.Net.Sockets.NetworkStream>的读取数据或引发异常。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-190">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="4dd8b-191">如果希望在调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法后原始线程会被阻止, 请<xref:System.Threading.WaitHandle.WaitOne%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-191">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="4dd8b-192">如果<xref:System.Threading.EventWaitHandle.Set%2A>希望原始线程继续执行, 请在回调方法中调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-192">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="4dd8b-193">有关编写回调方法的其他信息, 请参阅将[委托作为回调方法进行封送处理](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-193">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="4dd8b-194">方法可读取尽可能多的数据, 最多可达`size`参数指定的字节数。 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A></span><span class="sxs-lookup"><span data-stu-id="4dd8b-194">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-195">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException%2A>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-195">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-196">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode%2A>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-196">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="4dd8b-197">可以在<xref:System.Net.Sockets.NetworkStream>类的实例上同时执行读写操作, 而无需进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-197">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="4dd8b-198">只要有一个唯一的线程用于写入操作, 另一个线程用于读取操作, 读取和写入线程之间就不会有交叉干扰, 也不需要进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-198">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-199">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>从网络流中异步读取数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-199">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="4dd8b-200">方法实现委托, 并在返回时<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>由系统调用。 <xref:System.AsyncCallback> `myReadCallBack`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-200">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-201"><paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-201">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-202"><paramref name="offset" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-202">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-203">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-203">-or-</span></span> 
<span data-ttu-id="4dd8b-204"><paramref name="offset" /> 参数大于 <paramref name="buffer" /> 参数的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-204">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span></span>  
  
<span data-ttu-id="4dd8b-205">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-205">-or-</span></span> 
<span data-ttu-id="4dd8b-206"><paramref name="size" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-206">The <paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-207">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-207">-or-</span></span> 
<span data-ttu-id="4dd8b-208"><paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-208">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-209">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-209">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="4dd8b-210">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-210">-or-</span></span> 
<span data-ttu-id="4dd8b-211">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-211">There was a failure while reading from the network.</span></span>  
  
<span data-ttu-id="4dd8b-212">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-212">-or-</span></span> 
<span data-ttu-id="4dd8b-213">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-213">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-214"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-214">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-215">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-215">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-216"><paramref name="buffer" /> 中开始发送数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-216">The location in <paramref name="buffer" /> to begin sending the data.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-217">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-217">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="4dd8b-218">在 <see cref="T:System.AsyncCallback" /> 完成后执行的 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-218">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="4dd8b-219">一个包含用户定义的任何附加数据的对象。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-219">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="4dd8b-220">开始向流异步写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-220">Begins an asynchronous write to a stream.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-221">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-221">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-222"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法启动到远程主机的异步发送操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-222">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="4dd8b-223">通过调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法, 可以在单独的执行线程中发送数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-223">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="4dd8b-224">您必须创建一个实现<xref:System.AsyncCallback>委托的回调方法, 并将其名称传递<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>给方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-224">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="4dd8b-225">最少`state`的参数必须<xref:System.Net.Sockets.NetworkStream>包含。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-225">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-226">如果回调需要更多的信息, 可以创建一个小型类或结构来保存<xref:System.Net.Sockets.NetworkStream>和其他所需的信息。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-226">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="4dd8b-227">通过参数将结构或类实例传递<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>给方法。 `state`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-227">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="4dd8b-228">回调方法应实现<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-228">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="4dd8b-229">当应用程序调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>时, 系统将使用一个单独的线程来执行指定的回调方法, 并<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>在<xref:System.Net.Sockets.NetworkStream>发送请求的字节数或引发异常前阻止。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-229">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="4dd8b-230">如果希望在调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法后原始线程会被阻止, 请<xref:System.Threading.WaitHandle.WaitOne%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-230">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="4dd8b-231">如果<xref:System.Threading.EventWaitHandle.Set%2A>希望原始线程继续执行, 请在回调方法中调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-231">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="4dd8b-232">有关编写回调方法的其他信息, 请参阅将[委托作为回调方法进行封送处理](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-232">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-233">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException%2A>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-233">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-234">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode%2A>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-234">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="4dd8b-235">可以在<xref:System.Net.Sockets.NetworkStream>类的实例上同时执行读写操作, 而无需进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-235">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="4dd8b-236">只要有一个唯一的线程用于写入操作, 另一个线程用于读取操作, 读取和写入线程之间就不会有交叉干扰, 也不需要进行同步。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-236">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-237">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>将数据异步写入网络流。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-237">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="4dd8b-238">方法实现委托, 并在返回时<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>由系统调用。 <xref:System.AsyncCallback> `myWriteCallBack`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-238">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-239"><paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-239">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-240"><paramref name="offset" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-240">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-241">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-241">-or-</span></span> 
<span data-ttu-id="4dd8b-242"><paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-242">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="4dd8b-243">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-243">-or-</span></span> 
<span data-ttu-id="4dd8b-244"><paramref name="size" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-244">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-245">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-245">-or-</span></span> 
<span data-ttu-id="4dd8b-246"><paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-246">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-247">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-247">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="4dd8b-248">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-248">-or-</span></span> 
<span data-ttu-id="4dd8b-249">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-249">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="4dd8b-250">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-250">-or-</span></span> 
<span data-ttu-id="4dd8b-251">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-251">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-252"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-252">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-253">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-253">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span></span></summary>
        <value><span data-ttu-id="4dd8b-254">如果可从该流读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-254"><see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4dd8b-255">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-256">如果<xref:System.Net.Sockets.NetworkStream.CanRead%2A>为`true` <xref:System.Net.Sockets.NetworkStream.Read%2A> ,则<xref:System.Net.Sockets.NetworkStream>允许对方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-256">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="4dd8b-257">在构造函数<xref:System.IO.FileAccess>中提供适当的枚举值, 以设置的可读性和可写性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-257">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-258">初始化<xref:System.Net.Sockets.NetworkStream.CanRead%2A>时设置属性。<xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-258">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-259">下面的代码示例将<xref:System.Net.Sockets.NetworkStream.CanRead%2A>检查以验证<xref:System.Net.Sockets.NetworkStream>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-259">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="4dd8b-260">然后, 它对<xref:System.Net.Sockets.NetworkStream>执行读取操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-260">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-261">获取一个值，该值指示流是否支持查找。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-261">Gets a value that indicates whether the stream supports seeking.</span></span> <span data-ttu-id="4dd8b-262">当前不支持此属性，它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-262">This property is not currently supported.This property always returns <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="4dd8b-263">所有情况下都为 <see langword="false" />，指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 不能在流中查找特定的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-263"><see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-264">指示超时属性是否可用于 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-264">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <value><span data-ttu-id="4dd8b-265">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-265"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-266">此属性存在, 因为它继承自<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-266">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-267">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-267">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span></span></summary>
        <value><span data-ttu-id="4dd8b-268">如果数据可写入 <see cref="T:System.Net.Sockets.NetworkStream" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-268"><see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4dd8b-269">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-269">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-270">如果<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>为`true` <xref:System.Net.Sockets.NetworkStream.Write%2A> ,则<xref:System.Net.Sockets.NetworkStream>允许对方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-270">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="4dd8b-271">在构造函数<xref:System.IO.FileAccess>中提供适当的枚举值, 以设置的可读性和可写性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-271">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-272">初始化<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>时设置属性。<xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-272">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-273">下面的代码示例将<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>检查以验证<xref:System.Net.Sockets.NetworkStream>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-273">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="4dd8b-274">然后, 它对<xref:System.Net.Sockets.NetworkStream>执行写入操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-274">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd8b-275">关闭 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4dd8b-276">方法释放与关联的<xref:System.Net.Sockets.NetworkStream>非托管资源和托管资源。 `Close`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-276">The `Close` method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-277">如果拥有基础<xref:System.Net.Sockets.Socket>, 则也会将其关闭。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>

<span data-ttu-id="4dd8b-278">如果与关联`Close` , 则该方法将关闭 TCP 连接, 但不会释放关联<xref:System.Net.Sockets.TcpClient>的。 <xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the `Close` method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>

## Examples  
<span data-ttu-id="4dd8b-279">下面的代码示例关闭<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-279">The following code example closes the <xref:System.Net.Sockets.NetworkStream>.</span></span>

```vb
' Example for closing the NetworkStream.
' Close the NetworkStream
myNetworkStream.Close()
```

```csharp
// Example for closing the NetworkStream.

// Close the NetworkStream
myNetworkStream.Close();
```

```cpp
// Example for closing the NetworkStream.
// Close the NetworkStream
myNetworkStream->Close();
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="4dd8b-280">一个 32 位带符号整数，用于指定在关闭前等待发送所有剩余数据的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-280">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span></span></param>
        <summary><span data-ttu-id="4dd8b-281">等待指定的时间获许发送数据之后，关闭 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-281">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-282">方法释放与关联的<xref:System.Net.Sockets.NetworkStream>非托管资源和托管资源。 <xref:System.Net.Sockets.NetworkStream.Close%2A></span><span class="sxs-lookup"><span data-stu-id="4dd8b-282">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-283">如果拥有基础<xref:System.Net.Sockets.Socket>, 则也会将其关闭。 <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-283">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="4dd8b-284">如果与关联<xref:System.Net.Sockets.NetworkStream.Close%2A> , 则该方法将关闭 TCP 连接, 但不会释放关联<xref:System.Net.Sockets.TcpClient>的。 <xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-284">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-285"><paramref name="timeout" /> 参数小于 -1。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-285">The <paramref name="timeout" /> parameter is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-286">获取一个值，该值指示在要读取的 <see cref="T:System.Net.Sockets.NetworkStream" /> 上是否有可用的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-286">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span></span></summary>
        <value><span data-ttu-id="4dd8b-287">如果可以在流上读取数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-287"><see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-288"><xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>使用属性确定数据是否可供读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-288">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="4dd8b-289">如果<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> <xref:System.Net.Sockets.NetworkStream.Read%2A>为`true`, 则对的调用将立即返回。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-289">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="4dd8b-290">如果远程主机关闭或关闭连接, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>则可能会<xref:System.Net.Sockets.SocketException>引发。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-290">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-291">下面的代码示例从中<xref:System.Net.Sockets.NetworkStream>读取数据 (只要数据可用)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-291">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-292"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-292">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-293">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-293">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="4dd8b-294">请使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 属性获取特定的错误代码，并参考 <see href="/windows/desktop/winsock/windows-sockets-error-codes-2"> Windows Sockets 版本 2 API 错误代码</see>文档，以获取有关此错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-294">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code and refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="4dd8b-295"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-295"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="4dd8b-296">释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-296">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-297">此方法由公共`Dispose`方法<xref:System.Object.Finalize%2A>和方法调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-297">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="4dd8b-298">`Dispose`调用受保护`Dispose(Boolean)`的方法, `disposing`并将参数`true`设置为。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-298">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4dd8b-299"><xref:System.Object.Finalize%2A>在`Dispose` 设置`disposing` 为`false`的情况调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-299"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4dd8b-300">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Net.Sockets.NetworkStream> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-300">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="4dd8b-301">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-301">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4dd8b-302">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-302">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="4dd8b-303">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-303">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="4dd8b-304">有关如何实现<see langword="Dispose(Boolean)" />的详细信息, 请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-304">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="4dd8b-305">有关<see langword="Dispose" /> 和<see cref="M:System.Object.Finalize" />的详细信息, 请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-305">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4dd8b-306">一个表示异步调用的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-306">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span></span></param>
        <summary><span data-ttu-id="4dd8b-307">处理异步读取的结束。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-307">Handles the end of an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-308">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-308">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-309">方法完成<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法中启动的异步读取操作。 <xref:System.Net.Sockets.NetworkStream.EndRead%2A></span><span class="sxs-lookup"><span data-stu-id="4dd8b-309">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="4dd8b-310">在调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>之前, 需要创建一个<xref:System.AsyncCallback>实现委托的回调方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-310">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="4dd8b-311">此回调方法在单独的线程中执行, 并在返回后<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>由系统调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-311">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="4dd8b-312">回调方法必须接受<xref:System.IAsyncResult> <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>从方法返回的作为参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-312">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="4dd8b-313">在回调方法中, 调用<xref:System.IAsyncResult.AsyncState%2A>的<xref:System.IAsyncResult>属性以获取传递给该<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法的状态对象。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-313">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="4dd8b-314">从此状态对象<xref:System.Net.Sockets.NetworkStream>提取接收。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-314">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="4dd8b-315">获取<xref:System.Net.Sockets.NetworkStream>后, <xref:System.Net.Sockets.NetworkStream.EndRead%2A>调用方法以成功完成读取操作并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-315">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="4dd8b-316">方法<xref:System.Net.Sockets.NetworkStream.EndRead%2A>会一直阻止, 直到有可用的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-316">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="4dd8b-317">方法可读取尽可能多的数据, 最多可达在<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法的`size`参数中指定的字节数。 <xref:System.Net.Sockets.NetworkStream.EndRead%2A></span><span class="sxs-lookup"><span data-stu-id="4dd8b-317">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="4dd8b-318">如果远程主机<xref:System.Net.Sockets.Socket>关闭连接并且接收到所有可用数据, 则该<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法会立即完成并返回零字节。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-318">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="4dd8b-319">若要获取收到的数据, 请<xref:System.IAsyncResult.AsyncState%2A>调用的<xref:System.IAsyncResult>属性, 然后提取所产生状态对象中包含的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-319">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-320">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException%2A>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-320">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-321">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode%2A>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-321">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-322">在下面的代码示例中`myReadCallback` , 将作为<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>回调方法提供给。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-322">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="4dd8b-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>在中`myReadCallback`实现, 以完成由<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>启动的异步读取调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4dd8b-324"><paramref name="asyncResult" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-324">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-325">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-325">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="4dd8b-326">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-326">-or-</span></span> 
<span data-ttu-id="4dd8b-327">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-327">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-328"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-328">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4dd8b-329">表示异步调用的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-329">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="4dd8b-330">处理异步写入的结束。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-330">Handles the end of an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A>完成在中<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>启动的异步发送操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="4dd8b-332">在调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>之前, 需要创建一个<xref:System.AsyncCallback>实现委托的回调方法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-332">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="4dd8b-333">此回调方法在单独的线程中执行, 并在返回后<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>由系统调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-333">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="4dd8b-334">回调方法必须接受<xref:System.IAsyncResult> <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>从方法返回的作为参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-334">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="4dd8b-335">在回调方法中, 调用<xref:System.IAsyncResult.AsyncState%2A> `IAsyncResult`参数的属性以获取<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-335">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-336">获取<xref:System.Net.Sockets.NetworkStream>后, 可以<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>调用方法来成功完成发送操作, 并返回发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-336">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="4dd8b-337"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法会一直阻止, 直到发送请求的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-337">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-338">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException%2A>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-338">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-339">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode%2A>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-339">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-340">在下面的代码示例中`myWriteCallback` , 将作为<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>回调方法提供给。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-340">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="4dd8b-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A>在中`myWriteCallback`实现, 以完成由<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>启动的异步写入调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-342"><paramref name="asyncResult" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-342">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-343">已关闭基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-343">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="4dd8b-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-344">-or-</span></span> 
<span data-ttu-id="4dd8b-345">写入网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-345">An error occurred while writing to the network.</span></span>  
  
<span data-ttu-id="4dd8b-346">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-346">-or-</span></span> 
<span data-ttu-id="4dd8b-347">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-347">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-348"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-348">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd8b-349">释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-349">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-350">此方法重写 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-350">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4dd8b-351">应用程序代码不应调用此方法;在垃圾回收<xref:System.Object.Finalize%2A>过程中会自动调用对象的方法, 除非已通过调用<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法禁用了垃圾回收器终止。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-351">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4dd8b-352">有关使用 Finalize 方法的详细信息, 请参阅[Finalize 方法和析构函数](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))、[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-352">For more information about using the Finalize method, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd8b-353">刷新流中的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-353">Flushes data from the stream.</span></span> <span data-ttu-id="4dd8b-354">此方法保留供将来使用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-354">This method is reserved for future use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-355">方法实现方法; 但是, 由于<xref:System.Net.Sockets.NetworkStream>不是缓冲的, 因此不会影响网络流。 <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> <xref:System.Net.Sockets.NetworkStream.Flush%2A></span><span class="sxs-lookup"><span data-stu-id="4dd8b-355">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no effect on network streams.</span></span> <span data-ttu-id="4dd8b-356"><xref:System.Net.Sockets.NetworkStream.Flush%2A>调用方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-356">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="4dd8b-357">一个取消标记，用于传播应取消此操作的通知。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-357">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="4dd8b-358">以异步操作形式刷新流中的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-358">Flushes data from the stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-359">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-359">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-360">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-360">This operation will not block.</span></span> <span data-ttu-id="4dd8b-361">从<xref:System.Net.Sockets.NetworkStream>实例<xref:System.Threading.Tasks.Task>的流刷新数据后, 返回的对象将完成。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-361">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-362">获取流上可用数据的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-362">Gets the length of the data available on the stream.</span></span> <span data-ttu-id="4dd8b-363">此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-363">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="4dd8b-364">流上可用数据的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-364">The length of the data available on the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4dd8b-365">此属性的任何用法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-365">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-366">获取或设置流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-366">Gets or sets the current position in the stream.</span></span> <span data-ttu-id="4dd8b-367">此属性当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-367">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="4dd8b-368">流中的当前新位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-368">The current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4dd8b-369">此属性的任何用法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-369">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="networkStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-370">存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的内存区域。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-370">A region of memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-371">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到内存中的字节范围内。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-371">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a span of bytes in memory.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-372">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-372">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-373">此方法读取的`buffer`数据量与参数中的可用数据量相同, 并返回成功读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-373">This method reads as much data as is available into the `buffer` parameter and returns the number of bytes successfully read.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-374">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-374">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="4dd8b-375">如果尝试读取<xref:System.Net.Sockets.NetworkStream>不可读的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-375">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-376">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-376">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-377">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-377">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-378"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-378">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IOException"><span data-ttu-id="4dd8b-379">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-379">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-380">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-380">-or-</span></span>

<span data-ttu-id="4dd8b-381">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-381">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-382"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-382">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-383">一个 <see cref="T:System.Byte" /> 类型的数组，它是内存中用于存储从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取的数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-383">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-384"><paramref name="buffer" /> 中开始将数据存储到的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-384">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-385">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-385">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-386">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到字节数组中。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-386">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a byte array.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-387">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-387">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-388">此方法将数据`buffer`读入并返回已成功读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-388">This method reads data into `buffer` and returns the number of bytes successfully read.</span></span> <span data-ttu-id="4dd8b-389">操作将读取尽可能多的数据, 最多可达`size`参数指定的字节数。 `Read`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-389">The `Read` operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-390">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-390">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="4dd8b-391">如果尝试读取<xref:System.Net.Sockets.NetworkStream>不可读的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-391">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-392">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-392">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-393">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-393">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-394">下面的代码示例使用<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>来确定数据是否可供读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-394">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="4dd8b-395">如果数据可用, 则将从中<xref:System.Net.Sockets.NetworkStream>读取数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-395">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-396"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-396"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-397"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-397"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-398">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-398">-or-</span></span> 
 <span data-ttu-id="4dd8b-399"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-399"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="4dd8b-400">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-400">-or-</span></span> 
 <span data-ttu-id="4dd8b-401"><paramref name="size" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-401"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-402">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-402">-or-</span></span> 
 <span data-ttu-id="4dd8b-403"><paramref name="size" /> 大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-403"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-404"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-404">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IOException"><span data-ttu-id="4dd8b-405">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-405">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-406">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-406">-or-</span></span>

<span data-ttu-id="4dd8b-407">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-407">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-408"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-408">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="4dd8b-409">在网络上使用流</span><span class="sxs-lookup"><span data-stu-id="4dd8b-409">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-410">获取或设置一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可以读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-410">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span></span></summary>
        <value><span data-ttu-id="4dd8b-411">如果 <see cref="T:System.Net.Sockets.NetworkStream" /> 可以读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-411"><see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4dd8b-412">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-412">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-413">若要<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.Readable%2A>使用属性, 必须从类派生。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-413">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="4dd8b-414">如果<xref:System.Net.Sockets.NetworkStream.Readable%2A>为`true` <xref:System.Net.Sockets.NetworkStream.Read%2A> ,则<xref:System.Net.Sockets.NetworkStream>允许对方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-414">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="4dd8b-415">还可以通过检查可公开<xref:System.Net.Sockets.NetworkStream>访问<xref:System.Net.Sockets.NetworkStream.CanRead%2A>的属性来确定是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-415">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="4dd8b-416">初始化<xref:System.Net.Sockets.NetworkStream.Readable%2A>时设置属性。<xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-416">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-417">在下面的代码示例中, `CanCommunicate`属性<xref:System.Net.Sockets.NetworkStream.Readable%2A>检查<xref:System.Net.Sockets.NetworkStream>属性以确定是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-417">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-418">要写入数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-418">The buffer to write the data to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4dd8b-419">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-419">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="4dd8b-420">以异步操作形式，从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储在字节内存范围内。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-420">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it in a byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-421">表示异步读取操作的 <see cref="T:System.Threading.Tasks.ValueTask`1" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-421">A <see cref="T:System.Threading.Tasks.ValueTask`1" /> that represents the asynchronous read operation.</span></span> <span data-ttu-id="4dd8b-422">其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-422">The value of its <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="4dd8b-423">此方法可`buffer`读取尽可能多的数据, 并返回已成功读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-423">This method reads as much data as is available into `buffer` and returns the number of bytes successfully read.</span></span>

> [!NOTE]
>  <span data-ttu-id="4dd8b-424">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-424">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="4dd8b-425">如果尝试读取<xref:System.Net.Sockets.NetworkStream>不可读的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-425">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-426">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-426">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-427">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-427">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-428"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-428">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IOException"><span data-ttu-id="4dd8b-429">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-429">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-430">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-430">-or-</span></span>

<span data-ttu-id="4dd8b-431">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-431">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-432"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-432">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-433">要写入数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-433">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-434"><paramref name="buffer" /> 中开始将数据存储到的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-434">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-435">要从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-435">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4dd8b-436">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-436">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="4dd8b-437">以异步操作形式，从 <see cref="T:System.Net.Sockets.NetworkStream" /> 读取数据，并将其存储到字节数组的指定范围内。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-437">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a specified range of a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-438">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-438">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="4dd8b-439">其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性的值包含读入 <paramref name="buffer" /> 的总字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-439">The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-440">此方法将数据`buffer`读入并返回已成功读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-440">This method reads data into `buffer` and returns the number of bytes successfully read.</span></span> <span data-ttu-id="4dd8b-441">操作将读取尽可能多的数据, 最多可达`size`参数指定的字节数。 `ReadAsync`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-441">The `ReadAsync` operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>

> [!NOTE]
>  <span data-ttu-id="4dd8b-442">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-442">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="4dd8b-443">如果尝试读取<xref:System.Net.Sockets.NetworkStream>不可读的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-443">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-444">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-444">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-445">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-445">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-446"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-446">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IOException"><span data-ttu-id="4dd8b-447">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-447">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-448">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-448">-or-</span></span>

<span data-ttu-id="4dd8b-449">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-449">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-450"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-450">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="networkStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd8b-451">从 <see cref="T:System.Net.Sockets.NetworkStream" /> 中读取一个字节，并将流内的位置向前提升一个字节，或者如果已到达流结尾，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-451">Reads a byte from the <see cref="T:System.Net.Sockets.NetworkStream" /> and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-452">强制转换为 <see langword="Int32" /> 的无符号字节，如果到达流的末尾，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-452">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!NOTE]
>  <span data-ttu-id="4dd8b-453">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanRead>是否可读。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-453">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="4dd8b-454">如果尝试读取<xref:System.Net.Sockets.NetworkStream>不可读的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-454">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-455">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-455">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-456">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考[Windows 套接字版本 2 API 错误代码](/windows/desktop/winsock/windows-sockets-error-codes-2)文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-456">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-457"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-457">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IOException"><span data-ttu-id="4dd8b-458">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-458">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-459">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-459">-or-</span></span>

<span data-ttu-id="4dd8b-460">从网络读取时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-460">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-461"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-461">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-462">获取或设置读取操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-462">Gets or sets the amount of time that a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="4dd8b-463"><see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示读取操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-463">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span></span> <span data-ttu-id="4dd8b-464">默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定读取操作未超时。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-464">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-465">如果读取操作未在此属性指定的时间内完成, 则读取操作将引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-465">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-466">此属性仅影响通过调用<xref:System.Net.Sockets.NetworkStream.Read%2A>方法执行的同步读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-466">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="4dd8b-467">此属性不会影响通过调用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法执行的异步读取。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-467">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-468">下面的代码示例将网络流的读取超时设置为10毫秒。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-468">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-469">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-469">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="4dd8b-470">未使用此参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-470">This parameter is not used.</span></span></param>
        <param name="origin"><span data-ttu-id="4dd8b-471">未使用此参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-471">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="4dd8b-472">将流的当前位置设置为给定值。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-472">Sets the current position of the stream to the given value.</span></span> <span data-ttu-id="4dd8b-473">此方法当前不受支持，总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-473">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-474">流中的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-474">The position in the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4dd8b-475">此属性的任何用法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-475">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4dd8b-476">未使用此参数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-476">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="4dd8b-477">设置流的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-477">Sets the length of the stream.</span></span> <span data-ttu-id="4dd8b-478">此方法始终引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-478">This method always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4dd8b-479">此属性的任何用法。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-479">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-480">获取基础 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-480">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="4dd8b-481">表示基础网络连接的 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-481">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-482">派生自的<xref:System.Net.Sockets.NetworkStream>类可以使用此属性来获取基础<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-482">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dd8b-483">如果<xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.NetworkStream.Socket%2A> 需要超出提供的访问权限,请使用从属性<xref:System.Net.Sockets.NetworkStream>返回的基础。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-483">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-484">此属性只能通过此类或派生类访问。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-484">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-485">下面的代码示例检索基础<xref:System.Net.Sockets.Socket>来验证活动的连接。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-485">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd8b-486">释放由 <see cref="T:System.Net.Sockets.NetworkStream" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-486">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4dd8b-487">在完成使用 `Dispose` 后，应调用 <xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-487">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-488">`Dispose` 方法使 <xref:System.Net.Sockets.NetworkStream> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-488">The `Dispose` method leaves the <xref:System.Net.Sockets.NetworkStream> in an unusable state.</span></span> <span data-ttu-id="4dd8b-489">调用`Dispose`后, 必须释放对的<xref:System.Net.Sockets.NetworkStream>所有引用, 以便垃圾回收器能够<xref:System.Net.Sockets.NetworkStream>回收占用的内存。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-489">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.NetworkStream> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.NetworkStream> was occupying.</span></span> <span data-ttu-id="4dd8b-490">有关使用 Dispose 方法的详细信息, 请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-490">For more information about using the Dispose method, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-491">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-491">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="4dd8b-492">否则, 在垃圾回收器调用<xref:System.Net.Sockets.NetworkStream>对象的 Finalize 方法之前, 不会释放它所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-492">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Net.Sockets.NetworkStream> object's Finalize method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="networkStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary><span data-ttu-id="4dd8b-493">从只读字节范围向 <see cref="T:System.Net.Sockets.NetworkStream" /> 写入数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-493">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />  from a read-only byte span.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4dd8b-494">此方法将中`buffer`的所有字节发送到网络。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-494">This method sends all bytes in `buffer` to the network.</span></span> <span data-ttu-id="4dd8b-495">方法会一直阻止, 直到发送请求的字节数<xref:System.Net.Sockets.SocketException>或引发。 `Write`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-495">The `Write` method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-496">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanWrite>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-496">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="4dd8b-497">如果尝试写入<xref:System.Net.Sockets.NetworkStream>不可写的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-497">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-498">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-498">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-499">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考 Windows 套接字版本 2 API 错误代码文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-499">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-500"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-500">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-501">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-501">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-502">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-502">-or-</span></span>

<span data-ttu-id="4dd8b-503">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-503">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-504"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-504">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-505">一个 <see cref="T:System.Byte" /> 类型的数组，该数组包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-505">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-506"><paramref name="buffer" /> 中开始写入数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-506">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-507">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-507">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="4dd8b-508">从字节数组的指定范围向 <see cref="T:System.Net.Sockets.NetworkStream" /> 写入数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-508">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from a specified range of a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="4dd8b-509">此方法从指定`offset`的开始, 并从的内容`buffer`向网络发送`size`字节。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-509">This method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="4dd8b-510">方法会一直阻止, 直到发送请求的字节数<xref:System.Net.Sockets.SocketException>或引发。 `Write`</span><span class="sxs-lookup"><span data-stu-id="4dd8b-510">The `Write` method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> 
  
> [!NOTE]
> <span data-ttu-id="4dd8b-511">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanWrite>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-511">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="4dd8b-512">如果尝试写入<xref:System.Net.Sockets.NetworkStream>不可写的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-512">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-513">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-513">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-514">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考 Windows 套接字版本 2 API 错误代码文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-514">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

  
## Examples  
 <span data-ttu-id="4dd8b-515">下面的代码示例检查<xref:System.Net.Sockets.NetworkStream>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-515">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="4dd8b-516">如果是, <xref:System.Net.Sockets.NetworkStream.Write%2A>则使用来写入一条小消息。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-516">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-517"><paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-517">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-518"><paramref name="offset" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-518">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-519">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-519">-or-</span></span> 
<span data-ttu-id="4dd8b-520"><paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-520">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="4dd8b-521">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-521">-or-</span></span> 
<span data-ttu-id="4dd8b-522"><paramref name="size" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-522">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-523">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-523">-or-</span></span> 
<span data-ttu-id="4dd8b-524"><paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-524">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-525"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-525">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-526">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-526">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-527">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-527">-or-</span></span>

<span data-ttu-id="4dd8b-528">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-528">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-529"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-529">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-530">获取一个值，该值指示 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可写入数据。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-530">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="4dd8b-531">如果数据可写入该流，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-531"><see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4dd8b-532">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-532">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-533">若要<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.Writeable%2A>使用属性, 必须从类派生。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-533">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="4dd8b-534">如果<xref:System.Net.Sockets.NetworkStream.Writeable%2A>为`true` <xref:System.Net.Sockets.NetworkStream.Write%2A> ,则<xref:System.Net.Sockets.NetworkStream>允许对方法的调用。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-534">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="4dd8b-535">还可以通过检查可公开<xref:System.Net.Sockets.NetworkStream>访问<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>的属性来确定是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-535">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="4dd8b-536">初始化<xref:System.Net.Sockets.NetworkStream.Writeable%2A>时设置属性。<xref:System.Net.Sockets.NetworkStream></span><span class="sxs-lookup"><span data-stu-id="4dd8b-536">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-537">在下面的代码示例中, `CanCommunicate`属性<xref:System.Net.Sockets.NetworkStream.Writeable%2A>检查<xref:System.Net.Sockets.NetworkStream>属性以确定是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-537">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="networkStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4dd8b-538">一个包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据的内存区域。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-538">A region of memory that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4dd8b-539">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-539">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="4dd8b-540">以异步操作的形式，将只读内存字节内存范围中的数据写入 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-540">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from a read-only memory byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-541">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-541">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks 
<span data-ttu-id="4dd8b-542">此方法将中`buffer`的所有字节发送到网络。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-542">This method sends all bytes in `buffer` to the network.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-543">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanWrite>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-543">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="4dd8b-544">如果尝试写入<xref:System.Net.Sockets.NetworkStream>不可写的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-544">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-545">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-545">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-546">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考 Windows 套接字版本 2 API 错误代码文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-546">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-547"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-547">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-548">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-548">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-549">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-549">-or-</span></span>

<span data-ttu-id="4dd8b-550">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-550">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-551"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-551">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>        
        <param name="buffer"><span data-ttu-id="4dd8b-552">一个包含要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-552">A byte array that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="4dd8b-553"><paramref name="buffer" /> 中开始写入数据的位置。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-553">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="4dd8b-554">要写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 的字节数。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-554">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4dd8b-555">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-555">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="4dd8b-556">以异步操作形式，将指定字节数组范围内的数据写入 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-556">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from the specified range of a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4dd8b-557">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-557">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks 
<span data-ttu-id="4dd8b-558">此方法从指定`offset`的开始, 并从的内容`buffer`向网络发送`size`字节。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-558">This method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-559">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanWrite>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-559">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="4dd8b-560">如果尝试写入<xref:System.Net.Sockets.NetworkStream>不可写的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-560">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-561">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-561">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-562">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考 Windows 套接字版本 2 API 错误代码文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-562">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4dd8b-563"><paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-563">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-564"><paramref name="offset" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-564">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-565">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-565">-or-</span></span> 
<span data-ttu-id="4dd8b-566"><paramref name="offset" /> 参数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-566">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="4dd8b-567">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-567">-or-</span></span> 
<span data-ttu-id="4dd8b-568"><paramref name="size" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-568">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="4dd8b-569">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4dd8b-569">-or-</span></span> 
<span data-ttu-id="4dd8b-570"><paramref name="size" /> 参数大于 <paramref name="buffer" /> 的长度减去 <paramref name="offset" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-570">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-571"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-571">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-572">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-572">There was a failure while writing to the network.</span></span>  
  
 <span data-ttu-id="4dd8b-573">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-573">-or-</span></span>  
  
 <span data-ttu-id="4dd8b-574">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-574">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-575"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-575">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="networkStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4dd8b-576">要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-576">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="4dd8b-577">将一个字节写入 <see cref="T:System.Net.Sockets.NetworkStream" /> 内的当前位置，并将流内的位置向前提升一个字节。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-577">Writes a byte to the current position in the <see cref="T:System.Net.Sockets.NetworkStream" /> and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

> [!NOTE]
> <span data-ttu-id="4dd8b-578">通过调用属性检查<xref:System.Net.Sockets.NetworkStream> <xref:System.Net.Sockets.NetworkStream.CanWrite>是否可写。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-578">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="4dd8b-579">如果尝试写入<xref:System.Net.Sockets.NetworkStream>不可写的, 你将<xref:System.InvalidOperationException>获得。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-579">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="4dd8b-580">如果收到<xref:System.IO.IOException>, 请<xref:System.Exception.InnerException>检查属性以确定<xref:System.Net.Sockets.SocketException>它是否是由引发的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-580">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="4dd8b-581">如果是这样, 请<xref:System.Net.Sockets.SocketException.ErrorCode>使用属性获取特定的错误代码, 并参考 Windows 套接字版本 2 API 错误代码文档以获取错误的详细说明。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-581">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4dd8b-582"><see cref="T:System.Net.Sockets.NetworkStream" /> 不支持写入。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-582">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4dd8b-583">访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-583">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="4dd8b-584">或</span><span class="sxs-lookup"><span data-stu-id="4dd8b-584">-or-</span></span>

<span data-ttu-id="4dd8b-585">写入到网络时出错。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-585">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4dd8b-586"><see cref="T:System.Net.Sockets.NetworkStream" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-586">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dd8b-587">获取或设置写入操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-587">Gets or sets the amount of time that a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="4dd8b-588"><see cref="T:System.Int32" /> 指定以毫秒为单位的时间量，表示写入操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-588">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span></span> <span data-ttu-id="4dd8b-589">默认值 <see cref="F:System.Threading.Timeout.Infinite" /> 指定写入操作未超时。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-589">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd8b-590">如果写入操作在此属性指定的时间内未完成, 则写入操作将引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-590">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4dd8b-591">此属性仅影响通过调用<xref:System.Net.Sockets.NetworkStream.Write%2A>方法执行的同步写入操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-591">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="4dd8b-592">此属性不会影响通过调用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法执行的异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-592">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dd8b-593">下面的代码示例将网络流的写入超时设置为10毫秒。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-593">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4dd8b-594">指定的值小于或等于零，并且不为 <see cref="F:System.Threading.Timeout.Infinite" />。</span><span class="sxs-lookup"><span data-stu-id="4dd8b-594">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>