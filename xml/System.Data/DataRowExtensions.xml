<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8aa2592e7b227526a8e295b0e5ea6bd2099fa547" /><Meta Name="ms.sourcegitcommit" Value="2b78f05b0c6fa92adaf5e1dfe5a50388f952efe7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/02/2019" /><Meta Name="ms.locfileid" Value="71805112" /></Metadata><TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b7b5-101">定义 <see cref="T:System.Data.DataRow" /> 类的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-101">Defines the extension methods to the <see cref="T:System.Data.DataRow" /> class.</span></span> <span data-ttu-id="9b7b5-102">这是一个静态类。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-102">This is a static class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-103">已通过第1类 @no__t 的两个新方法（<xref:System.Data.DataRowExtensions.Field%2A> 和 <xref:System.Data.DataRowExtensions.SetField%2A>）对 <xref:System.Data.DataSet> API 进行了扩展。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-103">The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>.</span></span> <span data-ttu-id="9b7b5-104">您可以使用它们来构建对 @no__t 对象的 @no__t 0 表达式和方法查询。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-104">You can use these to form [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects.</span></span> <span data-ttu-id="9b7b5-105">它们是用于访问 @no__t 0 表达式和方法查询中的列值的建议方法。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-105">They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries.</span></span> <span data-ttu-id="9b7b5-106">有关详细信息，请参阅[泛型字段和 SetField 方法](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-106">For more information, see [Generic Field and SetField Methods](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b7b5-107">提供对 <see cref="T:System.Data.DataRow" /> 中的每个列值的强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-107">Provides strongly-typed access to each of the column values in the <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-108">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-108">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-109">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-109">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="column"><span data-ttu-id="9b7b5-110">输入 <see cref="T:System.Data.DataColumn" /> 对象，该对象指定要返回其值的列。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-110">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span></span></param>
        <summary><span data-ttu-id="9b7b5-111">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-111">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-112"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-112">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-113">由 <paramref name="column" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-113">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-114">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-114">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="9b7b5-115">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-115">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-116">此外，<xref:System.Data.DataSet> 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-116">Additionally, <xref:System.Data.DataSet> does not support nullable types.</span></span> <span data-ttu-id="9b7b5-117">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-117">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="9b7b5-118">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-118">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-119">如果指定 <xref:System.Data.DataColumn> 的值是 <xref:System.DBNull.Value>，`T` 是引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-119">If the value of the specified <xref:System.Data.DataColumn> is <xref:System.DBNull.Value> and `T` is a reference type or nullable type, the return type will be **null**.</span></span> <span data-ttu-id="9b7b5-120">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-120">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-121">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-121">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-122">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-122">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-123">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-123">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-124">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-124">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-125"><paramref name="column" /> 指定的列不会出现在包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-125">The column specified by <paramref name="column" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-126">将“null”值赋给了不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-126">A **null** value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-127">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-127">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-128">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-128">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnIndex"><span data-ttu-id="9b7b5-129">列索引。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-129">The column index.</span></span></param>
        <summary><span data-ttu-id="9b7b5-130">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-130">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-131"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-131">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-132">由 <paramref name="columnIndex" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-132">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-133">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-133">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="9b7b5-134">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-134">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-135">此外，@no__t 0 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-135">Additionally, <xref:System.Data.DataSet> doesn't support nullable types.</span></span> <span data-ttu-id="9b7b5-136">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-136">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="9b7b5-137">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-137">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-138">如果指定 <xref:System.Data.DataColumn> 的值为**null** ，并且 `T` 是引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-138">If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, then the return type will be **null**.</span></span>  <span data-ttu-id="9b7b5-139">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-139">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-140">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-140">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-141">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-141">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-142">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-142">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-143">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-143">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-144"><paramref name="ordinal" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-144">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-145">将“null”值赋给了不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-145">A **null** value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-146">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-146">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-147">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-147">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnName"><span data-ttu-id="9b7b5-148">要返回其值的列名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-148">The name of the column to return the value of.</span></span></param>
        <summary><span data-ttu-id="9b7b5-149">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-149">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-150"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-150">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-151">由 <paramref name="columnName" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-151">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-152">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-152">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span> <span data-ttu-id="9b7b5-153">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-153">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-154">此外，<xref:System.Data.DataSet> 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-154">Additionally, <xref:System.Data.DataSet> does not support nullable types.</span></span> <span data-ttu-id="9b7b5-155">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-155">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span> <span data-ttu-id="9b7b5-156">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-156">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-157">如果指定 <xref:System.Data.DataColumn> 的值为**null** ，并且 `T` 是引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-157">If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, the return type will be **null**.</span></span> <span data-ttu-id="9b7b5-158">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-158">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-159">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-159">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-160">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-160">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-161">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-161">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-162">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-162">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-163"><paramref name="columnName" /> 指定的列不会出现在包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-163">The column specified by <paramref name="columnName" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-164">将 <see langword="null" /> 值分配给不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-164">A <see langword="null" /> value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-165">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-165">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-166">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-166">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="column"><span data-ttu-id="9b7b5-167">输入 <see cref="T:System.Data.DataColumn" /> 对象，该对象指定要返回其值的列。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-167">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</span></span></param>
        <param name="version"><span data-ttu-id="9b7b5-168"><see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-168">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span></span></param>
        <summary><span data-ttu-id="9b7b5-169">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-169">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-170"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-170">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-171">由 <paramref name="column" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-171">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" /> and <paramref name="version" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-172">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-172">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="9b7b5-173">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-173">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-174">此外，@no__t 0 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-174">Additionally, <xref:System.Data.DataSet> doesn't support nullable types.</span></span> <span data-ttu-id="9b7b5-175">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-175">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="9b7b5-176">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-176">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-177">如果指定 <xref:System.Data.DataColumn> 的值为 null，并且 @no__t 为引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-177">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="9b7b5-178">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-178">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-179">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-179">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-180">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-180">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-181">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-181">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-182">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-182">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-183"><paramref name="column" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-183">The column specified by <paramref name="column" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-184">将“null”值赋给了不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-184">A **null** value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-185">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-185">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-186">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-186">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnIndex"><span data-ttu-id="9b7b5-187">要返回其值的列的从零开始的序号。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-187">The zero-based ordinal of the column to return the value of.</span></span></param>
        <param name="version"><span data-ttu-id="9b7b5-188"><see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-188">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span></span></param>
        <summary><span data-ttu-id="9b7b5-189">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-189">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-190"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-190">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-191">由 <paramref name="ordinal" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-191">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="ordinal" /> and <paramref name="version" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-192">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-192">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="9b7b5-193">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-193">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-194">此外，@no__t 0 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-194">Additionally, <xref:System.Data.DataSet> doesn't support nullable types.</span></span> <span data-ttu-id="9b7b5-195">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-195">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="9b7b5-196">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-196">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-197">如果指定 <xref:System.Data.DataColumn> 的值为 null，并且 @no__t 为引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-197">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="9b7b5-198">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-198">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-199">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-199">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-200">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-200">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-201">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-201">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-202">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-202">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-203"><paramref name="ordinal" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-203">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-204">将“null”值赋给了不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-204">A **null** value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-205">指定列的返回类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-205">A generic parameter that specifies the return type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-206">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-206">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnName"><span data-ttu-id="9b7b5-207">要返回其值的列名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-207">The name of the column to return the value of.</span></span></param>
        <param name="version"><span data-ttu-id="9b7b5-208"><see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-208">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</span></span></param>
        <summary><span data-ttu-id="9b7b5-209">为指定行中的每个列值提供强类型访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-209">Provides strongly-typed access to each of the column values in the specified row.</span></span> <span data-ttu-id="9b7b5-210"><see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-210">The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> method also supports nullable types.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-211">由 <paramref name="columnName" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-211">The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" /> and <paramref name="version" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-212">@No__t-0 类用 @no__t 类的 @no__t 实例表示**null**值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-212">The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.</span></span>  <span data-ttu-id="9b7b5-213">访问值为**null**的列的 @no__t 0 表达式将在运行时生成 @no__t 2。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-213">A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time.</span></span> <span data-ttu-id="9b7b5-214">此外，@no__t 0 不支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-214">Additionally, <xref:System.Data.DataSet> doesn't support nullable types.</span></span> <span data-ttu-id="9b7b5-215">@No__t-0 方法支持将列作为可为 null 的类型进行访问。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-215">The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.</span></span>  <span data-ttu-id="9b7b5-216">如果 <xref:System.Data.DataSet> 中的基础值为 <xref:System.DBNull.Value>，则返回的可以为 null 的类型的值为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-216">If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.</span></span>  
  
 <span data-ttu-id="9b7b5-217">如果指定 <xref:System.Data.DataColumn> 的值为 null，并且 @no__t 为引用类型或可以为 null 的类型，则返回类型将为**null**。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-217">If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**.</span></span> <span data-ttu-id="9b7b5-218">@No__t-0 方法不会返回 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-218">The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="9b7b5-219">@No__t-0 方法不执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-219">The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions.</span></span> <span data-ttu-id="9b7b5-220">如果类型转换是必需的，则应首先使用 <xref:System.Data.DataRowExtensions.Field%2A> 方法获取列值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-220">If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method.</span></span> <span data-ttu-id="9b7b5-221">然后，应将列值转换为另一种类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-221">The column value should then be converted to another type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-222">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-222">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-223"><paramref name="columnName" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-223">The column specified by <paramref name="columnName" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9b7b5-224">将“null”值赋给了不可为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-224">A **null** value was assigned to a non-nullable type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b7b5-225">为 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-225">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-226">指定列的值类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-226">A generic parameter that specifies the value type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-227">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-227">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="column"><span data-ttu-id="9b7b5-228">输入 <see cref="T:System.Data.DataColumn" /> 指定要检索的行值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-228">The input <see cref="T:System.Data.DataColumn" /> specifies which row value to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="9b7b5-229">指定列的新行值，类型为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-229">The new row value for the specified column, of type <paramref name="T" />.</span></span></param>
        <summary><span data-ttu-id="9b7b5-230">为 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-230">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="9b7b5-231"><see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-231">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> method also supports nullable types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-232">如果 @no__t 为**null**，则 @no__t 2 方法会将**null**值转换为基础 @no__t 中的 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-232">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="9b7b5-233">@No__t-0 方法不执行任何类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-233">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="9b7b5-234">但这并不意味着不会发生类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-234">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="9b7b5-235"><xref:System.Data.DataRowExtensions.SetField%2A> 方法公开 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 类的 <xref:System.Data.DataRow> 行为。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-235">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="9b7b5-236">类型转换可由 <xref:System.Data.DataRow> 对象执行，转换后的值随后将保存到该行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-236">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="9b7b5-237">可以通过 <xref:System.Data.DataRowExtensions.SetField%2A> 方法从基础 @no__t 1 对象向上传递异常。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-237">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-238">找不到由 <paramref name="column" /> 指定的列。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-238">The column specified by <paramref name="column" /> cannot be found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9b7b5-239"><paramref name="column" /> 为“null”。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-239">The <paramref name="column" /> is **null**.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="9b7b5-240">尝试对已删除的行设置值时发生。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-240">Occurs when attempting to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-241">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-241">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-242">指定列的值类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-242">A generic parameter that specifies the value type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-243">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-243">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnIndex"><span data-ttu-id="9b7b5-244">要设置其值的列的从零开始的序号。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-244">The zero-based ordinal of the column to set the value of.</span></span></param>
        <param name="value"><span data-ttu-id="9b7b5-245">指定列的新行值，类型为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-245">The new row value for the specified column, of type <paramref name="T" />.</span></span></param>
        <summary><span data-ttu-id="9b7b5-246">为在其上调用此方法的 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-246">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" /> the method is called on.</span></span> <span data-ttu-id="9b7b5-247"><see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-247">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> method also supports nullable types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-248">如果 @no__t 为**null**，则 @no__t 2 方法会将**null**值转换为基础 @no__t 中的 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-248">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="9b7b5-249">@No__t-0 方法不执行任何类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-249">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="9b7b5-250">但这并不意味着不会发生类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-250">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="9b7b5-251"><xref:System.Data.DataRowExtensions.SetField%2A> 方法公开 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 类的 <xref:System.Data.DataRow> 行为。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-251">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="9b7b5-252">类型转换可由 <xref:System.Data.DataRow> 对象执行，转换后的值随后将保存到该行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-252">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="9b7b5-253">可以通过 <xref:System.Data.DataRowExtensions.SetField%2A> 方法从基础 @no__t 1 对象向上传递异常。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-253">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="9b7b5-254">尝试对已删除的行设置值时发生。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-254">Occurs when attempting to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="9b7b5-255"><paramref name="ordinal" /> 参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-255">The <paramref name="ordinal" /> argument is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-256">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-256">The value type of the underlying column could be not cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9b7b5-257">指定列的值类型的泛型形参。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-257">A generic parameter that specifies the value type of the column.</span></span></typeparam>
        <param name="row"><span data-ttu-id="9b7b5-258">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-258">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</span></span></param>
        <param name="columnName"><span data-ttu-id="9b7b5-259">要设置其值的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-259">The name of the column to set the value of.</span></span></param>
        <param name="value"><span data-ttu-id="9b7b5-260">指定列的新行值，类型为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-260">The new row value for the specified column, of type <paramref name="T" />.</span></span></param>
        <summary><span data-ttu-id="9b7b5-261">为 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-261">Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="9b7b5-262"><see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 方法还支持可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-262">The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> method also supports nullable types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-263">如果 @no__t 为**null**，则 @no__t 2 方法会将**null**值转换为基础 @no__t 中的 <xref:System.DBNull.Value>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-263">If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="9b7b5-264">@No__t-0 方法不执行任何类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-264">The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions.</span></span> <span data-ttu-id="9b7b5-265">但这并不意味着不会发生类型转换。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-265">This does not mean, however, that a type conversion will not occur.</span></span> <span data-ttu-id="9b7b5-266"><xref:System.Data.DataRowExtensions.SetField%2A> 方法公开 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 类的 <xref:System.Data.DataRow> 行为。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-266">The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class.</span></span> <span data-ttu-id="9b7b5-267">类型转换可由 <xref:System.Data.DataRow> 对象执行，转换后的值随后将保存到该行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-267">A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.</span></span>  
  
 <span data-ttu-id="9b7b5-268">可以通过 <xref:System.Data.DataRowExtensions.SetField%2A> 方法从基础 @no__t 1 对象向上传递异常。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-268">Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-269">找不到由 <paramref name="columnName" /> 指定的列。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-269">The column specified by <paramref name="columnName" /> cannot be found.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="9b7b5-270">尝试对已删除的行设置值时发生。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-270">Occurs when attempting to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-271">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-271">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
