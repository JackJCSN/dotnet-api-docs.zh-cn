<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7fe0b84bec2618671b279ad6f9ff0996241062" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367200" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9f5ae-101">表示一组与命令有关的属性，用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据源，由访问关系数据库的 .NET Framework 数据提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f5ae-102"><xref:System.Data.IDbDataAdapter>接口继承<xref:System.Data.IDataAdapter>自接口, 并允许对象创建用于关系数据库的 DataAdapter。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="9f5ae-103">接口和 (可选) 实用工具<xref:System.Data.Common.DbDataAdapter>类允许继承类实现 DataAdapter 类, 该类表示数据源与<xref:System.Data.DataSet>之间的桥梁。 <xref:System.Data.IDbDataAdapter></span><span class="sxs-lookup"><span data-stu-id="9f5ae-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9f5ae-104">有关 DataAdapter 类的详细信息, 请参阅[从 DataAdapter 填充数据集](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="9f5ae-105">有关实现 .NET Framework 数据提供程序的详细信息, 请参阅[实现 .NET Framework 数据提供程序](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71))。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-105">For more information about implementing .NET Framework data providers, see [Implementing a .NET Framework Data Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).</span></span>  
  
 <span data-ttu-id="9f5ae-106">应用程序不会直接创建<xref:System.Data.IDbDataAdapter>接口的实例, 而是创建继承<xref:System.Data.IDbDataAdapter>和<xref:System.Data.Common.DbDataAdapter>的类的实例。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="9f5ae-107">继承<xref:System.Data.IDbDataAdapter>的类必须实现继承成员, 并且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="9f5ae-108"><xref:System.Data.IDbDataAdapter>例如, <xref:System.Data.DataTable>接口<xref:System.Data.IDbDataAdapter.SelectCommand%2A>定义属性, <xref:System.Data.Common.DbDataAdapter>接口定义<xref:System.Data.IDataAdapter.Fill%2A>采用作为参数的方法。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="9f5ae-109">反过来, <xref:System.Data.OleDb.OleDbDataAdapter>该类<xref:System.Data.IDbDataAdapter.SelectCommand%2A>继承属性和<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法, 还定义<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法的两个附加重载, 该重载采用 ADO 记录集对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f5ae-110">下面的示例使用派生类 ( <xref:System.Data.SqlClient.SqlCommand> <xref:System.Data.SqlClient.SqlDataAdapter>和<xref:System.Data.SqlClient.SqlConnection>) 从数据源中选择记录。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="9f5ae-111">然后返回<xref:System.Data.DataSet>填充的。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="9f5ae-112">为实现此目的, 会将方法传递给<xref:System.Data.DataSet>已初始化的、连接字符串和作为 transact-sql SELECT 语句的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9f5ae-113">若要提升 .NET Framework 数据提供程序之间的一致性, 请将该继承<paramref name="Prv" />类命名<paramref name="Prv" />为 DataAdapter, 其中是为特定 .NET Framework 数据提供程序命名空间中的所有类指定的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-113">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="9f5ae-114">例如, <paramref name="Sql" />是<see langword="System.Data.SqlClient" />命名空间中<see cref="T:System.Data.SqlClient.SqlDataAdapter" />类的前缀。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-114">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="9f5ae-115">从<see cref="T:System.Data.IDbDataAdapter" />接口继承时, 应实现以下构造函数:</span><span class="sxs-lookup"><span data-stu-id="9f5ae-115">When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="9f5ae-116">项</span><span class="sxs-lookup"><span data-stu-id="9f5ae-116">Item</span></span> 
 </term><description> <span data-ttu-id="9f5ae-117">说明</span><span class="sxs-lookup"><span data-stu-id="9f5ae-117">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9f5ae-118">PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="9f5ae-118">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="9f5ae-119">初始化 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-119">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9f5ae-120">PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="9f5ae-120">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="9f5ae-121">使用指定的 SQL SELECT 语句初始化 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-121">Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9f5ae-122">PrvDataAdapter (string selectCommandText, string selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="9f5ae-122">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="9f5ae-123">使用 SQL SELECT 语句和连接字符串初始化 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-123">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9f5ae-124">PrvDataAdapter (string selectCommandText, PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="9f5ae-124">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="9f5ae-125">使用 SQL SELECT 语句和 PrvConnection 对象初始化 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-125">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f5ae-126">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-126">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="9f5ae-127"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-127">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f5ae-128">在<xref:System.Data.Common.DbDataAdapter.Update%2A>过程中, 如果未设置此属性, 并且主键信息存在<xref:System.Data.DataSet>于中, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>则`SelectCommand`可以在设置 .NET Framework 数据提供程序的属性时自动生成。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-128">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9f5ae-129">然后, CommandBuilder 将生成未设置的任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-129">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="9f5ae-130">此代逻辑要求密钥列信息存在于中<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-130">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9f5ae-131">有关详细信息, 请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-131">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="9f5ae-132">当<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>分配给以前创建<xref:System.Data.IDbCommand>的时, <xref:System.Data.IDbCommand>不会克隆。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-132">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="9f5ae-133">维护对先前创建<xref:System.Data.IDbCommand>的对象的引用。 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A></span><span class="sxs-lookup"><span data-stu-id="9f5ae-133">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f5ae-134">下面的示例创建继承<xref:System.Data.OleDb.OleDbDataAdapter>类的实例, 并<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>设置和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-134">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="9f5ae-135">假设您已经创建了一个<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-135">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f5ae-136">获取或设置用于将新记录插入到数据源中的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-136">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="9f5ae-137">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-137">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f5ae-138">在<xref:System.Data.Common.DbDataAdapter.Update%2A>过程中, 如果未设置此属性, 并且主键信息存在<xref:System.Data.DataSet>于中, <xref:System.Data.IDbDataAdapter.InsertCommand%2A>则`SelectCommand`可以在设置 .NET Framework 数据提供程序的属性时自动生成。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-138">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9f5ae-139">然后, CommandBuilder 将生成未设置的任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-139">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="9f5ae-140">此代逻辑要求密钥列信息存在于中<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-140">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9f5ae-141">有关详细信息, 请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-141">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="9f5ae-142">当<xref:System.Data.IDbDataAdapter.InsertCommand%2A>分配给以前创建<xref:System.Data.IDbCommand>的时, <xref:System.Data.IDbCommand>不会克隆。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-142">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="9f5ae-143">维护对先前创建<xref:System.Data.IDbCommand>的对象的引用。 <xref:System.Data.IDbDataAdapter.InsertCommand%2A></span><span class="sxs-lookup"><span data-stu-id="9f5ae-143">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f5ae-144">如果执行此命令将返回行, 则可能会根据设置<xref:System.Data.DataSet> <xref:System.Data.IDbCommand>对象的<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性的方式将这些行添加到中。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-144">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f5ae-145">下面的示例创建继承<xref:System.Data.OleDb.OleDbDataAdapter>类的实例, 并<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>设置和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-145">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="9f5ae-146">假设您已经创建了一个<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-146">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f5ae-147">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-147">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="9f5ae-148">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-148">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f5ae-149">当<xref:System.Data.IDbDataAdapter.SelectCommand%2A>分配给以前创建<xref:System.Data.IDbCommand>的时, <xref:System.Data.IDbCommand>不会克隆。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-149">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="9f5ae-150">维护对先前创建<xref:System.Data.IDbCommand>的对象的引用。 <xref:System.Data.IDbDataAdapter.SelectCommand%2A></span><span class="sxs-lookup"><span data-stu-id="9f5ae-150">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="9f5ae-151">如果未返回任何行, 则不会<xref:System.Data.DataSet>向中添加任何表, 也不会引发异常。 <xref:System.Data.IDbDataAdapter.SelectCommand%2A></span><span class="sxs-lookup"><span data-stu-id="9f5ae-151">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f5ae-152">下面的示例创建继承<xref:System.Data.OleDb.OleDbDataAdapter>类的实例, 并<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>设置和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-152">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="9f5ae-153">假设您已经创建了一个<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-153">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f5ae-154">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-154">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="9f5ae-155">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-155">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f5ae-156">在<xref:System.Data.Common.DbDataAdapter.Update%2A>过程中, 如果未设置此属性, 并且主键信息存在<xref:System.Data.DataSet>于中, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>则`SelectCommand`可以在设置 .NET Framework 数据提供程序的属性时自动生成。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9f5ae-157">然后, CommandBuilder 将生成未设置的任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-157">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="9f5ae-158">此代逻辑要求密钥列信息存在于中<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9f5ae-159">有关详细信息, 请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-159">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="9f5ae-160">当<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>分配给以前创建<xref:System.Data.IDbCommand>的时, <xref:System.Data.IDbCommand>不会克隆。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-160">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="9f5ae-161">维护对先前创建<xref:System.Data.IDbCommand>的对象的引用。 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A></span><span class="sxs-lookup"><span data-stu-id="9f5ae-161">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f5ae-162">如果执行此命令将返回行, 则会将这些行添加<xref:System.Data.DataSet>到中。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-162">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f5ae-163">下面的示例创建继承<xref:System.Data.OleDb.OleDbDataAdapter>类的实例, 并<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>设置和<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-163">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="9f5ae-164">假设您已经创建了一个<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="9f5ae-164">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
