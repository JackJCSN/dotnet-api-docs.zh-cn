<Type Name="IColumnMapping" FullName="System.Data.IColumnMapping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31b48d45a200589da680d7fced5fa58d92e965c4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70723582" /></Metadata><TypeSignature Language="C#" Value="public interface IColumnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IColumnMapping" />
  <TypeSignature Language="DocId" Value="T:System.Data.IColumnMapping" />
  <TypeSignature Language="VB.NET" Value="Public Interface IColumnMapping" />
  <TypeSignature Language="C++ CLI" Value="public interface class IColumnMapping" />
  <TypeSignature Language="F#" Value="type IColumnMapping = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>将数据源列与 <see cref="T:System.Data.DataSet" /> 列关联起来，并由 <see cref="T:System.Data.Common.DataColumnMapping" /> 类实现，这是 .NET Framework 数据提供程序通常使用的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口允许继承类实现列映射类，该类将数据源列<xref:System.Data.DataSet>与列相关联。 <xref:System.Data.IColumnMapping> 有关详细信息，请参阅[DataAdapter DataTable And DataColumn 映射](~/docs/framework/data/adonet/dataadapter-datatable-and-datacolumn-mappings.md)。  
  
 应用程序不会直接创建<xref:System.Data.IColumnMapping>接口的实例，而是创建继承<xref:System.Data.IColumnMapping>的类的实例。  
  
 继承<xref:System.Data.IColumnMapping>的类必须实现所有继承成员，并且通常定义其他成员来添加特定于提供程序的功能。 例如， <xref:System.Data.IColumnMapping>接口<xref:System.Data.IColumnMapping.DataSetColumn%2A>定义属性。 反过来， <xref:System.Data.Common.DataColumnMapping>该类继承此属性，并<xref:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction%2A>定义方法。  
  
   
  
## Examples  
 下面的示例创建派生类<xref:System.Data.Common.DataColumnMapping>的实例，并将其添加<xref:System.Data.Common.DataColumnMappingCollection>到集合中。 然后，它会通知用户已将映射添加到集合，并显示映射的父项。  
  
 [!code-csharp[Classic WebData DataColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>从<see cref="T:System.Data.IColumnMapping" />接口继承时，应实现以下构造函数： 
 <list type="table"><listheader><term> 项 
 </term><description> 说明 
 </description></listheader><item><term> ColumnMapping （） 
 </term><description> 初始化 ColumnMapping 类的新实例。  
  
 </description></item><item><term> ColumnMapping （string sourceColumn，string dataSetColumn） 
 </term><description> 使用具有指定源列名称和<see cref="T:System.Data.DataSet" />列名称的源初始化 ColumnMapping 类的新实例。  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DataSetColumn">
      <MemberSignature Language="C#" Value="public string DataSetColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSetColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IColumnMapping.DataSetColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSetColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSetColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSetColumn : string with get, set" Usage="System.Data.IColumnMapping.DataSetColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。</summary>
        <value><see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。 该名称不区分大小写。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建派生类<xref:System.Data.Common.DataColumnMapping>的实例，并设置其属性。  
  
 [!code-csharp[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IColumnMapping.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IColumnMapping.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中从其映射的列的名称。 该名称区分大小写。</summary>
        <value>数据源中列的区分大小写的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建派生类<xref:System.Data.Common.DataColumnMapping>的实例，并设置其属性。  
  
 [!code-csharp[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumnMapping.DataSetColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumnMapping.DataSetColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
