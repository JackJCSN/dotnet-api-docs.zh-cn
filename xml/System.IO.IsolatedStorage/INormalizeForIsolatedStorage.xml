<Type Name="INormalizeForIsolatedStorage" FullName="System.IO.IsolatedStorage.INormalizeForIsolatedStorage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ced9c141a3c2fa7908088ee460fa3c0a03d2c948" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66817394" /></Metadata><TypeSignature Language="C#" Value="public interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INormalizeForIsolatedStorage" />
  <TypeSignature Language="DocId" Value="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" />
  <TypeSignature Language="VB.NET" Value="Public Interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="C++ CLI" Value="public interface class INormalizeForIsolatedStorage" />
  <TypeSignature Language="F#" Value="type INormalizeForIsolatedStorage = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>启用独立存储和应用程序域与程序集的证据之间的比较。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 独立的存储使用以标识此物料并为其提供唯一的文件存储位置的程序集的证据。 当程序集请求存储时，其证据 （主讲人加载它的主机） 是处理并用于创建现有的存储区的证据进行比较。 这会确定如果需要创建一个新的存储，或如果已存在有问题的程序集。 由于使用的比较方法，在功能上等效的证据部分可能会不导致 true 比较如果序列化的窗体并不完全相同。 在实现自定义的证据，请考虑是否这是您的证据类的这种情况，如果是，实现<xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage>。 为实现此接口的证据<xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A>调用方法和比较将基于该方法返回的对象的正常化副本。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>要实现自定义的证据并需要确定是否已存在存储区时，请实现此接口。 序列化的对象不应在某些情况下，如区分大小写的字符串比较。 例如，`www.MSN.com`等同于`WWW.msn.com`，并将返回<see langword="true" />相比。 若要创建<see cref="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" />对象，您需要实现<see cref="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" />方法。</para></block>
    <block subset="none" type="usage"><para>调用此接口，以便在比较程序集的证据和当前现有的独立存储区之前规范化该实例的方法。</para></block>
  </Docs>
  <Members>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public object Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; obj" Usage="iNormalizeForIsolatedStorage.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，返回在其上调用它的对象的正常化副本。</summary>
        <returns>一个正常化的对象，它表示在其上调用该方法的实例。 该实例可以是字符串、流或任何可序列化的对象。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>如果重写此方法返回的对象是一个流，它假定要序列化并直接与用于创建现有的存储区的证据的序列化形式进行比较。 如果返回的对象是一个字符串，它是被视为独立存储区的名称，与现有的存储区的名称。</para></block>
        <block subset="none" type="usage"><para>如果你正在编写从独立存储派生的类，并且需要进行检查，查看当前程序集是否已存在独立的存储，通常会调用此方法。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>