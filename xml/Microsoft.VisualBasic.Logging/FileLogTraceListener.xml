<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79d81733dd974b761fa8f5c8e73982d5652e1db8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70427583" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2cdae-101">提供一个简单的侦听器，用于将日志记录输出指引至文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-102">此<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类提供了自动维护功能，可根据需要每天或按应用程序存档日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="2cdae-103">此自动存档功能有助于降低开发人员和管理员的维护责任。</span><span class="sxs-lookup"><span data-stu-id="2cdae-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="2cdae-104"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可将的实例添加<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>到或<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合，以将日志记录的输出重定向到文本文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="2cdae-105">此类的实例还可以添加到`My.Application.Log` Visual Basic 应用程序中的或`My.Log` （适用于 Web 应用程序）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="2cdae-106">有关详细信息，请参阅[演练：更改 My. Log 写入信息的位置](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="2cdae-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="2cdae-107">此类的主要功能是：</span><span class="sxs-lookup"><span data-stu-id="2cdae-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="2cdae-108">*存档功能*。</span><span class="sxs-lookup"><span data-stu-id="2cdae-108">*Archival functionality*.</span></span> <span data-ttu-id="2cdae-109">此类生成的日志文件根据基名称和日期命名，以及一个数字来区分日志文件与日志的后续版本。</span><span class="sxs-lookup"><span data-stu-id="2cdae-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="2cdae-110">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="2cdae-111">文件名的显式形式为`baseName`[-`dateStamp`] [-`version`] .log，其中：</span><span class="sxs-lookup"><span data-stu-id="2cdae-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="2cdae-112">`baseName`部分是 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 由属性指定的基本日志名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="2cdae-113">部分的格式为 "yyyy-mm-dd"，当<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>为或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>时<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> ，将显示它。 `dateStamp`</span><span class="sxs-lookup"><span data-stu-id="2cdae-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="2cdae-114">如果需要多个具有`baseName`相同和`dateStamp`的日志文件， `Integer`则会在`version`文件名中添加该部分。</span><span class="sxs-lookup"><span data-stu-id="2cdae-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="2cdae-115">*多个类实例*。</span><span class="sxs-lookup"><span data-stu-id="2cdae-115">*Multiple class instances*.</span></span> <span data-ttu-id="2cdae-116">如果<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类的实例写入正在使用的文件：</span><span class="sxs-lookup"><span data-stu-id="2cdae-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="2cdae-117">如果文件正由同一进程中的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类的另一个实例使用，则该类共享该文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="2cdae-118">类将使用下一个可用的名称创建新的日志文件（如果该文件正由另一个进程使用）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="2cdae-119">*线程安全性*。</span><span class="sxs-lookup"><span data-stu-id="2cdae-119">*Thread safety*.</span></span> <span data-ttu-id="2cdae-120">类<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="2cdae-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="2cdae-121">这使你可以从多个线程安全地将消息写入日志，而无需使用锁定。</span><span class="sxs-lookup"><span data-stu-id="2cdae-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="2cdae-122">**日志文件位置**</span><span class="sxs-lookup"><span data-stu-id="2cdae-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="2cdae-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> 属性 <xref:Microsoft.VisualBasic.Logging.LogFileLocation> 采用枚举来指定要将日志文件写入其中的一个典型目录。</span><span class="sxs-lookup"><span data-stu-id="2cdae-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="2cdae-124">若要将日志写入到其他位置，请<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>将属性设置为该位置。</span><span class="sxs-lookup"><span data-stu-id="2cdae-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="2cdae-125">**日志文件名**</span><span class="sxs-lookup"><span data-stu-id="2cdae-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="2cdae-126">日志文件的基名称由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>属性指定。</span><span class="sxs-lookup"><span data-stu-id="2cdae-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="2cdae-127">可以从<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>属性读取当前日志文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="2cdae-128">它派生自多个其他属性以及文件系统中日志的当前状态。</span><span class="sxs-lookup"><span data-stu-id="2cdae-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="2cdae-129">**日志维护**</span><span class="sxs-lookup"><span data-stu-id="2cdae-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="2cdae-130">创建新日志文件的最小频率由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>属性确定。</span><span class="sxs-lookup"><span data-stu-id="2cdae-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="2cdae-131">如果值为<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>，则每日或每周至少创建一次新的日志文件，并且<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名称中包含日期戳。</span><span class="sxs-lookup"><span data-stu-id="2cdae-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="2cdae-132">日志文件的最大大小（以字节为单位）由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>属性确定。</span><span class="sxs-lookup"><span data-stu-id="2cdae-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="2cdae-133">如果日志文件大小超过此大小，则会丢弃写入到日志中的其他消息，并根据<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="2cdae-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="2cdae-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>属性确定必须有多少可用空间（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="2cdae-135">这有助于确保<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类不会使用所有可用的磁盘空间。</span><span class="sxs-lookup"><span data-stu-id="2cdae-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="2cdae-136">当可用空间<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>小于可用字节时，使用属性指定日志写入的行为。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="2cdae-137">**日志文件输出设置**</span><span class="sxs-lookup"><span data-stu-id="2cdae-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="2cdae-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>属性指定是否应在每次写入日志文件后自动刷新基础流。</span><span class="sxs-lookup"><span data-stu-id="2cdae-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="2cdae-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>属性指定是将消息追加到当前日志文件（如果允许），还是将其写入新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="2cdae-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定用于在日志消息中分隔字段的字符串。</span><span class="sxs-lookup"><span data-stu-id="2cdae-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="2cdae-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>属性指定在创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="2cdae-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="2cdae-142">**日志文件输出**</span><span class="sxs-lookup"><span data-stu-id="2cdae-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="2cdae-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 和 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 方法将消息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="2cdae-144">这些方法将<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>检查属性以及具有相同基名称的任何现有日志，以确定是否应创建新日志。</span><span class="sxs-lookup"><span data-stu-id="2cdae-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="2cdae-145">方法<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>将当前在输出缓冲区中的所有消息刷新到日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="2cdae-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法会关闭日志文件，以使其可供其他进程使用。</span><span class="sxs-lookup"><span data-stu-id="2cdae-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="2cdae-147">**启用输出**</span><span class="sxs-lookup"><span data-stu-id="2cdae-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="2cdae-148">您必须启用跟踪或调试才能使用跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="2cdae-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="2cdae-149">以下语法是编译器特定的。</span><span class="sxs-lookup"><span data-stu-id="2cdae-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="2cdae-150">如果使用C#或 Visual Basic 以外的编译器，请参阅编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="2cdae-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="2cdae-151">若要在中C#启用调试， `/d:DEBUG`请在编译代码时将标志添加到编译器命令行，或者将添加`#define DEBUG`到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="2cdae-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="2cdae-152">在 Visual Basic 中，将`/d:DEBUG=True`标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="2cdae-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="2cdae-153">若要在中C#启用跟踪， `/d:TRACE`请在编译代码时将标志添加到编译器命令行，或`#define TRACE`将添加到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="2cdae-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="2cdae-154">在 Visual Basic 中，将`/d:TRACE=True`标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="2cdae-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="2cdae-155">若要设置侦听器的级别，请编辑应用程序的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="2cdae-156">在此文件中，您可以添加一个侦听器，设置其类型并设置其参数，删除侦听器，或者清除之前由应用程序设置的所有侦听器。</span><span class="sxs-lookup"><span data-stu-id="2cdae-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="2cdae-157">配置文件的格式应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="2cdae-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="2cdae-158">若要运行此示例，必须提供完全限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="2cdae-159">有关如何获取完全限定的程序集名称的信息，请参阅[程序集名称](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="2cdae-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a"><span data-ttu-id="2cdae-160">演练：更改 My.Application.Log 写入信息的位置</span><span class="sxs-lookup"><span data-stu-id="2cdae-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2cdae-161">初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例并设置名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdae-162">使用默认名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2cdae-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-163">此方法将<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类的实例名称设置为 microsoft.visualbasic.logging.filelogtracelistener。</span><span class="sxs-lookup"><span data-stu-id="2cdae-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="2cdae-164">您可以通过<xref:System.Diagnostics.TraceListener.Name%2A>属性访问实例名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="2cdae-165">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2cdae-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cdae-166"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-166"><see langword="String" />.</span></span> <span data-ttu-id="2cdae-167">实例对象的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="2cdae-168">用提供的名称初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2cdae-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-169">此方法将<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类的实例名称设置为`name`。</span><span class="sxs-lookup"><span data-stu-id="2cdae-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="2cdae-170">您可以使用<xref:System.Diagnostics.TraceListener.Name%2A>属性来访问实例名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="2cdae-171">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2cdae-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-172">确定是将输出追加到当前文件还是将输出写入新文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-172">Determines whether to append the output to the current file or write it to a new file.</span></span></summary>
        <value><span data-ttu-id="2cdae-173"><see langword="Boolean" />，<see langword="True" /> 指示将输出追加到当前文件，<see langword="False" /> 指示将输出写入新文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="2cdae-174">此属性的默认设置为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-175">当属性为`False`时，会将输出写入新文件。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="2cdae-176">当属性为`True`时，输出将追加到当前文件中，除非：</span><span class="sxs-lookup"><span data-stu-id="2cdae-176">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="2cdae-177">输出文件被另一个进程锁定。</span><span class="sxs-lookup"><span data-stu-id="2cdae-177">The output file is locked by another process.</span></span> <span data-ttu-id="2cdae-178">在这种情况下，将创建一个新的日志文件，其中包含包含在<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名称中的版本号。</span><span class="sxs-lookup"><span data-stu-id="2cdae-178">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="2cdae-179">当前文件的大小大于<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>属性允许的大小。</span><span class="sxs-lookup"><span data-stu-id="2cdae-179">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="2cdae-180">在这种情况下，将丢弃附加消息，并根据<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="2cdae-180">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="2cdae-181">根据<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>属性指定的日志创建计划，现有文件名已过期。</span><span class="sxs-lookup"><span data-stu-id="2cdae-181">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="2cdae-182">在这种情况下，将创建一个新的日志文件，并将日期戳<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>合并到该名称中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-182">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-183">指示写入日志文件流时是否刷新缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2cdae-183">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="2cdae-184"><see langword="Boolean" />，<see langword="True" /> 指示每次写入之后都刷新日志文件流；否则将缓存日志条目，这样写入会更有效率。</span><span class="sxs-lookup"><span data-stu-id="2cdae-184"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="2cdae-185">此属性的默认设置为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-185">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-186"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>属性`False`的设置可为大多数应用程序提供最佳性能，因为一次将多个消息写入日志文件会更有效。</span><span class="sxs-lookup"><span data-stu-id="2cdae-186">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="2cdae-187">您可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法来刷新日志文件的输出缓冲区中当前的所有消息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-187">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="2cdae-188">你还可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法，该方法在关闭日志文件之前隐式刷新流。</span><span class="sxs-lookup"><span data-stu-id="2cdae-188">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-189">获取或设置日志文件的基名称，该名称用于创建日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-189">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="2cdae-190"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-190"><see langword="String" />.</span></span> <span data-ttu-id="2cdae-191">日志文件的基名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-191">The base name for the log files.</span></span> <span data-ttu-id="2cdae-192">默认为应用程序的产品名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-192">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-193">属性确定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类写入的日志文件的基名称。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-193">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="2cdae-194"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>属性提供当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-194">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="2cdae-195">它是根据日志路径、基名称、日期和数字生成的，以将其与不同的日志版本区分开来。</span><span class="sxs-lookup"><span data-stu-id="2cdae-195">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="2cdae-196">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-196">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="2cdae-197">完整日志文件名称的显式`path`形式为\\ `baseName`[-`dateStamp`] [-`iteration`] .log，其中</span><span class="sxs-lookup"><span data-stu-id="2cdae-197">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="2cdae-198">部分由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>属性确定，如果该属性值设置为<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>， <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>则由属性确定。 `path`</span><span class="sxs-lookup"><span data-stu-id="2cdae-198">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="2cdae-199">`baseName`部分是 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 由属性指定的基本日志名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-199">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="2cdae-200">部件的格式为 "yyyy-mm-dd"，当设置<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>为或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>时<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> ，将显示它。 `dateStamp`</span><span class="sxs-lookup"><span data-stu-id="2cdae-200">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="2cdae-201">如果需要多个具有`baseName`相同和`dateStamp`的日志文件， `Integer`则会在`iteration`文件名中添加该部分。</span><span class="sxs-lookup"><span data-stu-id="2cdae-201">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdae-202">关闭当前日志文件的基础流，并释放与当前流关联的所有资源。</span><span class="sxs-lookup"><span data-stu-id="2cdae-202">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-203">不需要显式调用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法， <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>因为类管理基础流。</span><span class="sxs-lookup"><span data-stu-id="2cdae-203">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-204">当 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 属性设置为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> 时获取或设置日志文件目录。</span><span class="sxs-lookup"><span data-stu-id="2cdae-204">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="2cdae-205"><see langword="String" />，日志文件目录的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-205"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="2cdae-206">此属性的默认设置是用户的应用程序数据目录。</span><span class="sxs-lookup"><span data-stu-id="2cdae-206">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-207">设置属性时，它还<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>将属性设置为 <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom> 。  <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-207">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="2cdae-208">如果<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>无法解析该目录，则该属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2cdae-208">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-209">获取或设置用于在日志消息中分隔字段的分隔符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-209">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="2cdae-210"><see langword="String" />，用作日志消息中字段的分隔符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-210"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="2cdae-211">此属性的默认设置为制表符字符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-211">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-212"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性允许您更改默认分隔符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-212">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-213">确定在写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间时应采取的操作。</span><span class="sxs-lookup"><span data-stu-id="2cdae-213">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="2cdae-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="2cdae-215">确定在尝试写入日志文件时，如果可用磁盘空间小于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性所指定的磁盘空间，或日志文件大小大于 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 属性所允许的大小，应采取的操作。</span><span class="sxs-lookup"><span data-stu-id="2cdae-215">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="2cdae-216">默认值为 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-216">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-217">当属性设置为<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>时，如果没有足够的保留磁盘空间，则会悄悄地丢弃日志消息。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-217">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="2cdae-218">这是默认行为，它会阻止简单应用程序在磁盘太满时失败。</span><span class="sxs-lookup"><span data-stu-id="2cdae-218">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="2cdae-219">更可靠的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>应用程序可以将属性<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>设置为， `Try...Catch`并在写入日志的所有代码周围添加块。</span><span class="sxs-lookup"><span data-stu-id="2cdae-219">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2cdae-220">若为 <see langword="True" />，释放托管资源和非托管资源；若为 <see langword="False" />，则只释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="2cdae-220"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2cdae-221">关闭基础流，并可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="2cdae-221">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-222">当 `disposing` 参数为 `True` 时，此方法释放该 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="2cdae-222">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="2cdae-223">此方法调用每个引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="2cdae-223">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2cdae-224">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="2cdae-224">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2cdae-225">重写 <see langword="Dispose" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="2cdae-225">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="2cdae-226">此方法调用<see langword="Dispose" />基类<see langword="Dispose" />的方法。</span><span class="sxs-lookup"><span data-stu-id="2cdae-226">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-227">获取或设置创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="2cdae-227">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="2cdae-228"><see cref="T:System.Text.Encoding" />，创建新日志文件时使用的编码。</span><span class="sxs-lookup"><span data-stu-id="2cdae-228"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="2cdae-229">此属性的默认值为 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-229">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-230">将文本追加到现有日志文件时，将使用该文件的编码，而不是由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>属性指定的编码。</span><span class="sxs-lookup"><span data-stu-id="2cdae-230">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdae-231">刷新写入当前日志文件的基础流。</span><span class="sxs-lookup"><span data-stu-id="2cdae-231">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-232"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>使用方法将所有缓冲数据写入当前日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-232">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-233">获取当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-233">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="2cdae-234"><see langword="String" />，当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-234"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-235"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>属性提供当前日志文件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-235">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="2cdae-236">它是根据日志路径、基名称、日期和数字生成的，以将其与不同的日志版本区分开来。</span><span class="sxs-lookup"><span data-stu-id="2cdae-236">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="2cdae-237">根据需要创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-237">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="2cdae-238">完整日志文件名称的显式`path`形式为\\ `baseName`[-`dateStamp`] [-`iteration`] .log，其中：</span><span class="sxs-lookup"><span data-stu-id="2cdae-238">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="2cdae-239">部分由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>属性确定，如果该属性值设置为<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>， <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>则由属性确定。 `path`</span><span class="sxs-lookup"><span data-stu-id="2cdae-239">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="2cdae-240">`baseName`部分是 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> 由属性指定的基本日志名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-240">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="2cdae-241">部分的格式为 yyyy-mm-dd，当<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>为或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>时<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> ，将显示此部分。 `dateStamp`</span><span class="sxs-lookup"><span data-stu-id="2cdae-241">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="2cdae-242">如果需要多个具有`baseName`相同和`dateStamp`的日志文件， `Integer`则会在`iteration`文件名中添加该部分。</span><span class="sxs-lookup"><span data-stu-id="2cdae-242">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdae-243">获取跟踪侦听器支持的自定义 XML 配置特性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-243">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="2cdae-244"><see langword="String" /> 数组，包含此侦听器识别的 XML 配置特性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-244"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-245">可在 XML 配置文件<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>中使用的自定义特性，以控制<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类的实例的行为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-245">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="2cdae-246">使用任何其他特性会导致配置异常。</span><span class="sxs-lookup"><span data-stu-id="2cdae-246">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-247">指示输出中是否应包括日志记录计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="2cdae-247">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="2cdae-248"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-248"><see langword="Boolean" />.</span></span> <span data-ttu-id="2cdae-249">如果应包括主机标识符，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-249">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="2cdae-250">默认值为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-250">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-251">使用属性配置<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法的行为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-251">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-252">获取或设置日志文件的位置。</span><span class="sxs-lookup"><span data-stu-id="2cdae-252">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="2cdae-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />，日志文件的位置。</span><span class="sxs-lookup"><span data-stu-id="2cdae-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="2cdae-254">默认值为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-254">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-255">使用属性将日志路径设置为预定义的路径之一，由<xref:Microsoft.VisualBasic.Logging.LogFileLocation>枚举值确定。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-255">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="2cdae-256">**位置值**</span><span class="sxs-lookup"><span data-stu-id="2cdae-256">**Location value**</span></span>|<span data-ttu-id="2cdae-257">**路径**</span><span class="sxs-lookup"><span data-stu-id="2cdae-257">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="2cdae-258">所有用户共享的应用程序数据的路径，格式为：</span><span class="sxs-lookup"><span data-stu-id="2cdae-258">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="2cdae-259">的典型值`BasePath`为：</span><span class="sxs-lookup"><span data-stu-id="2cdae-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="2cdae-260">C:\documents and 和 Settings\All Users\Application 数据</span><span class="sxs-lookup"><span data-stu-id="2cdae-260">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="2cdae-261">`CompanyName` 、 `ProductName` 和的 `ProductVersion` 值来自程序集。</span><span class="sxs-lookup"><span data-stu-id="2cdae-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="2cdae-262">启动了应用程序的可执行文件的路径。</span><span class="sxs-lookup"><span data-stu-id="2cdae-262">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="2cdae-263">用户的应用程序数据的路径，格式为：</span><span class="sxs-lookup"><span data-stu-id="2cdae-263">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="2cdae-264">的典型值`BasePath`为：</span><span class="sxs-lookup"><span data-stu-id="2cdae-264">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="2cdae-265">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="2cdae-265">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="2cdae-266">`CompanyName` 、 `ProductName` 和的 `ProductVersion` 值将构成程序集。</span><span class="sxs-lookup"><span data-stu-id="2cdae-266">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="2cdae-267">当前系统的临时文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="2cdae-267">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="2cdae-268">如果由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>指定的字符串不为空，则将其用作路径; 否则，请使用用户的应用程序数据的路径。</span><span class="sxs-lookup"><span data-stu-id="2cdae-268">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-269">确定要包括在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="2cdae-269">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="2cdae-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="2cdae-271">此项指示要包括在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="2cdae-271">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="2cdae-272">默认值为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-272">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-273">将其中一个<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>枚举值<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>分配给属性，以指定要包含在日志文件名称中的日期。</span><span class="sxs-lookup"><span data-stu-id="2cdae-273">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="2cdae-274">日期的格式为 YYYY-MM-DD。</span><span class="sxs-lookup"><span data-stu-id="2cdae-274">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="2cdae-275">有关日志文件名格式的详细信息，请参阅<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="2cdae-275">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="2cdae-276">**LogFileCreationSchedule 值**</span><span class="sxs-lookup"><span data-stu-id="2cdae-276">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="2cdae-277">**日志文件名称中的日期**</span><span class="sxs-lookup"><span data-stu-id="2cdae-277">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="2cdae-278">将当前日期包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-278">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="2cdae-279">不要将日期包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-279">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="2cdae-280">将当前周的第一天包括在日志文件名称中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-280">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="2cdae-281">周从星期六开始。</span><span class="sxs-lookup"><span data-stu-id="2cdae-281">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-282">获取或设置所允许的日志文件的最大大小，以字节为单位。</span><span class="sxs-lookup"><span data-stu-id="2cdae-282">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="2cdae-283"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-283"><see langword="Long" />.</span></span> <span data-ttu-id="2cdae-284">这是允许的日志文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-284">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="2cdae-285">默认值为5000000。</span><span class="sxs-lookup"><span data-stu-id="2cdae-285">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-286">使用此属性可确保日志文件不会增长得太大。</span><span class="sxs-lookup"><span data-stu-id="2cdae-286">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="2cdae-287">如果日志文件大小（以字节为单位）大于此属性的值，则当<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类尝试将消息写入日志时，消息将被丢弃，失败或引发异常的原因取决于 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-287">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="2cdae-288">否则，如果可用磁盘空间量（以字节为单位）小于<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>，则将消息写入日志。</span><span class="sxs-lookup"><span data-stu-id="2cdae-288">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2cdae-289">当此属性被设置为一个小于 1000 的值时。</span><span class="sxs-lookup"><span data-stu-id="2cdae-289">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdae-290">获取或设置在将消息写入日志文件之前需要满足的可用磁盘空间量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-290">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="2cdae-291"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-291"><see langword="Long" />.</span></span> <span data-ttu-id="2cdae-292">这是所需的可用磁盘空间量。</span><span class="sxs-lookup"><span data-stu-id="2cdae-292">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="2cdae-293">默认值为10000000。</span><span class="sxs-lookup"><span data-stu-id="2cdae-293">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-294">使用此属性可确保日志文件不会完全填满磁盘空间。</span><span class="sxs-lookup"><span data-stu-id="2cdae-294">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="2cdae-295">如果可用磁盘空间量（以字节为单位）小于此属性的值，则当<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>类尝试将消息写入日志时，消息将被丢弃，失败或引发异常的原因取决于 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-295">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="2cdae-296">否则，如果日志文件大小（以字节为单位）大于<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>，则将消息写入日志。</span><span class="sxs-lookup"><span data-stu-id="2cdae-296">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2cdae-297">当此属性被设置为小于 0 的值时。</span><span class="sxs-lookup"><span data-stu-id="2cdae-297">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2cdae-298">向输出文件写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="2cdae-298">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="2cdae-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="2cdae-300">这些方法由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的成员调用以将跟踪数据写入输出。</span><span class="sxs-lookup"><span data-stu-id="2cdae-300">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2cdae-301">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2cdae-301">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2cdae-302">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-302">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="2cdae-303"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2cdae-303">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="2cdae-304">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-304">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="2cdae-305">要发出的跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="2cdae-305">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="2cdae-306">向输出文件或流中写入跟踪信息、数据对象和事件信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-306">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-307">此方法：</span><span class="sxs-lookup"><span data-stu-id="2cdae-307">This method:</span></span>  
  
1.  <span data-ttu-id="2cdae-308">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-308">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="2cdae-309">如有必要，创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-309">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="2cdae-310">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-310">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="2cdae-311">有关创建新日志文件的详细信息，请<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>参阅。</span><span class="sxs-lookup"><span data-stu-id="2cdae-311">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="2cdae-312">下表按显示的顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="2cdae-312">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="2cdae-313">这些字段由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定的字符串进行分隔，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-313">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="2cdae-314">**字段**</span><span class="sxs-lookup"><span data-stu-id="2cdae-314">**Field**</span></span>|<span data-ttu-id="2cdae-315">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="2cdae-315">**Output condition**</span></span>|<span data-ttu-id="2cdae-316">**说明**</span><span class="sxs-lookup"><span data-stu-id="2cdae-316">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="2cdae-317">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-317">Always</span></span>|<span data-ttu-id="2cdae-318">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="2cdae-318">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="2cdae-319">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-319">Always</span></span>|<span data-ttu-id="2cdae-320">的枚举值名称`eventType`。</span><span class="sxs-lookup"><span data-stu-id="2cdae-320">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="2cdae-321">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-321">Always</span></span>|<span data-ttu-id="2cdae-322">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-322">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="2cdae-323">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-323">Always</span></span>|<span data-ttu-id="2cdae-324">`data` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-324">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="2cdae-325">如果在<xref:System.Diagnostics.TraceOptions.Callstack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-325">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-326"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-326">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="2cdae-327">如果在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-327">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-328"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-328">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="2cdae-329">如果在<xref:System.Diagnostics.TraceOptions.DateTime> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-329">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-330"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-331">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-331">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="2cdae-332">如果在<xref:System.Diagnostics.TraceOptions.ProcessId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-332">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-333"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-334">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-334">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="2cdae-335">如果在<xref:System.Diagnostics.TraceOptions.ThreadId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-335">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-336"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="2cdae-337">如果在<xref:System.Diagnostics.TraceOptions.Timestamp> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-337">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-338"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-339">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-339">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="2cdae-340">当属性为 `True` 时。  <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-340">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="2cdae-341">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-341">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2cdae-342">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2cdae-342">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2cdae-343">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-343">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="2cdae-344"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2cdae-344">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="2cdae-345">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-345">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="2cdae-346">要作为数据发出的对象数组。</span><span class="sxs-lookup"><span data-stu-id="2cdae-346">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="2cdae-347">将跟踪信息、数据对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-347">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-348">此方法：</span><span class="sxs-lookup"><span data-stu-id="2cdae-348">This method:</span></span>  
  
1.  <span data-ttu-id="2cdae-349">设置输出的数据和上下文信息的格式，</span><span class="sxs-lookup"><span data-stu-id="2cdae-349">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="2cdae-350">创建新的日志文件（如有必要）</span><span class="sxs-lookup"><span data-stu-id="2cdae-350">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="2cdae-351">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-351">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="2cdae-352">有关创建新日志文件的详细信息，请<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>参阅。</span><span class="sxs-lookup"><span data-stu-id="2cdae-352">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="2cdae-353">此表按显示的顺序列出输出字段。</span><span class="sxs-lookup"><span data-stu-id="2cdae-353">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="2cdae-354">这些字段由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定的字符串进行分隔，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-354">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="2cdae-355">**字段**</span><span class="sxs-lookup"><span data-stu-id="2cdae-355">**Field**</span></span>|<span data-ttu-id="2cdae-356">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="2cdae-356">**Output condition**</span></span>|<span data-ttu-id="2cdae-357">**说明**</span><span class="sxs-lookup"><span data-stu-id="2cdae-357">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="2cdae-358">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-358">Always</span></span>|<span data-ttu-id="2cdae-359">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="2cdae-359">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="2cdae-360">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-360">Always</span></span>|<span data-ttu-id="2cdae-361">的枚举值名称`eventType`。</span><span class="sxs-lookup"><span data-stu-id="2cdae-361">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="2cdae-362">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-362">Always</span></span>|<span data-ttu-id="2cdae-363">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-363">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="2cdae-364">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-364">Always</span></span>|<span data-ttu-id="2cdae-365">由中`data`每个元素的字符串表示形式组成的字符串，每个<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>元素由分隔。</span><span class="sxs-lookup"><span data-stu-id="2cdae-365">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="2cdae-366">如果在<xref:System.Diagnostics.TraceOptions.Callstack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-366">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-367"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-367">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="2cdae-368">如果在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-368">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-369"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-369">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="2cdae-370">如果在<xref:System.Diagnostics.TraceOptions.DateTime> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-370">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-371"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-372">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-372">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="2cdae-373">如果在<xref:System.Diagnostics.TraceOptions.ProcessId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-373">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-374"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-375">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-375">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="2cdae-376">如果在<xref:System.Diagnostics.TraceOptions.ThreadId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-376">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-377"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="2cdae-378">如果在<xref:System.Diagnostics.TraceOptions.Timestamp> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-378">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-379"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-380">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-380">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="2cdae-381">当属性为 `True` 时。  <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-381">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="2cdae-382">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-382">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2cdae-383">向输出文件或流中写入跟踪信息和事件信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-383">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="2cdae-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="2cdae-385">这些方法由<xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.TraceSource>类的成员调用以将跟踪数据写入输出。</span><span class="sxs-lookup"><span data-stu-id="2cdae-385">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2cdae-386">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2cdae-386">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2cdae-387">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-387">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="2cdae-388"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2cdae-388">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="2cdae-389">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-389">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="2cdae-390">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-390">A message to write.</span></span></param>
        <summary><span data-ttu-id="2cdae-391">将跟踪信息、消息和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-391">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-392">此方法：</span><span class="sxs-lookup"><span data-stu-id="2cdae-392">This method:</span></span>  
  
1.  <span data-ttu-id="2cdae-393">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-393">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="2cdae-394">如有必要，创建新的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-394">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="2cdae-395">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-395">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="2cdae-396">有关创建新日志文件的详细信息，请<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>参阅。</span><span class="sxs-lookup"><span data-stu-id="2cdae-396">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="2cdae-397">此表按其显示顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="2cdae-397">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="2cdae-398">这些字段由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定的字符串进行分隔，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-398">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="2cdae-399">**字段**</span><span class="sxs-lookup"><span data-stu-id="2cdae-399">**Field**</span></span>|<span data-ttu-id="2cdae-400">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="2cdae-400">**Output condition**</span></span>|<span data-ttu-id="2cdae-401">**说明**</span><span class="sxs-lookup"><span data-stu-id="2cdae-401">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="2cdae-402">始终。</span><span class="sxs-lookup"><span data-stu-id="2cdae-402">Always.</span></span>|<span data-ttu-id="2cdae-403">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="2cdae-403">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="2cdae-404">始终。</span><span class="sxs-lookup"><span data-stu-id="2cdae-404">Always.</span></span>|<span data-ttu-id="2cdae-405">的枚举值名称`eventType`。</span><span class="sxs-lookup"><span data-stu-id="2cdae-405">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="2cdae-406">始终。</span><span class="sxs-lookup"><span data-stu-id="2cdae-406">Always.</span></span>|<span data-ttu-id="2cdae-407">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-407">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="2cdae-408">始终。</span><span class="sxs-lookup"><span data-stu-id="2cdae-408">Always.</span></span>|<span data-ttu-id="2cdae-409">`message` 的值。</span><span class="sxs-lookup"><span data-stu-id="2cdae-409">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="2cdae-410">如果在<xref:System.Diagnostics.TraceOptions.Callstack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-410">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-411"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-411">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="2cdae-412">如果在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-412">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-413"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-413">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="2cdae-414">如果在<xref:System.Diagnostics.TraceOptions.DateTime> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-414">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-415"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-416">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-416">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="2cdae-417">如果在<xref:System.Diagnostics.TraceOptions.ProcessId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-417">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-418"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-419">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-419">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="2cdae-420">如果在<xref:System.Diagnostics.TraceOptions.ThreadId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-420">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-421"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="2cdae-422">如果在<xref:System.Diagnostics.TraceOptions.Timestamp> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-422">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-423"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-424">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-424">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="2cdae-425">当属性为 `True` 时。  <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-425">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="2cdae-426">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-426">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2cdae-427">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2cdae-427">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2cdae-428">调用此方法的跟踪源的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-428">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="2cdae-429"><see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="2cdae-429">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="2cdae-430">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-430">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="2cdae-431">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="2cdae-431">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="2cdae-432">包含零个或多个要格式化的对象的 <see langword="Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2cdae-432">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="2cdae-433">将跟踪信息、格式化对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="2cdae-433">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-434">此方法：</span><span class="sxs-lookup"><span data-stu-id="2cdae-434">This method:</span></span>  
  
1.  <span data-ttu-id="2cdae-435">设置输出的数据和上下文信息的格式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-435">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="2cdae-436">创建新的日志文件（如有必要）。</span><span class="sxs-lookup"><span data-stu-id="2cdae-436">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="2cdae-437">将信息写入日志文件。</span><span class="sxs-lookup"><span data-stu-id="2cdae-437">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="2cdae-438">有关创建新日志文件的详细信息，请<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>参阅。</span><span class="sxs-lookup"><span data-stu-id="2cdae-438">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="2cdae-439">此表按其显示顺序列出了输出字段。</span><span class="sxs-lookup"><span data-stu-id="2cdae-439">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="2cdae-440">这些字段由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>属性指定的字符串分隔，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="2cdae-440">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="2cdae-441">**字段**</span><span class="sxs-lookup"><span data-stu-id="2cdae-441">**Field**</span></span>|<span data-ttu-id="2cdae-442">**输出条件**</span><span class="sxs-lookup"><span data-stu-id="2cdae-442">**Output condition**</span></span>|<span data-ttu-id="2cdae-443">**说明**</span><span class="sxs-lookup"><span data-stu-id="2cdae-443">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="2cdae-444">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-444">Always</span></span>|<span data-ttu-id="2cdae-445">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="2cdae-445">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="2cdae-446">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-446">Always</span></span>|<span data-ttu-id="2cdae-447">的枚举值名称`eventType`。</span><span class="sxs-lookup"><span data-stu-id="2cdae-447">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="2cdae-448">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-448">Always</span></span>|<span data-ttu-id="2cdae-449">`id` 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-449">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="2cdae-450">Always</span><span class="sxs-lookup"><span data-stu-id="2cdae-450">Always</span></span>|<span data-ttu-id="2cdae-451">使用字符串格式化 `args` 的数据，并使用固定区域性进行字符串转换。 `format`</span><span class="sxs-lookup"><span data-stu-id="2cdae-451">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="2cdae-452">如果在<xref:System.Diagnostics.TraceOptions.Callstack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-452">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-453"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-453">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="2cdae-454">如果在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-454">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-455"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-455">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="2cdae-456">如果在<xref:System.Diagnostics.TraceOptions.DateTime> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-456">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-457"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-458">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-458">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="2cdae-459">如果在<xref:System.Diagnostics.TraceOptions.ProcessId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-459">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-460"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-461">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-461">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="2cdae-462">如果在<xref:System.Diagnostics.TraceOptions.ThreadId> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-462">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-463"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> 的 `eventCache` 属性。</span><span class="sxs-lookup"><span data-stu-id="2cdae-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="2cdae-464">如果在<xref:System.Diagnostics.TraceOptions.Timestamp> <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性中设置了标志，则为。</span><span class="sxs-lookup"><span data-stu-id="2cdae-464">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="2cdae-465"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> 的 `eventCache` 属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2cdae-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="2cdae-466">固定区域性用于字符串转换。</span><span class="sxs-lookup"><span data-stu-id="2cdae-466">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="2cdae-467">当属性为 `True` 时。  <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A></span><span class="sxs-lookup"><span data-stu-id="2cdae-467">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="2cdae-468">计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="2cdae-468">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2cdae-469"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-469"><see langword="String" />.</span></span> <span data-ttu-id="2cdae-470">要写入的自定义消息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-470">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="2cdae-471">将消息逐字写入磁盘，不带任何附加上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-471">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-472"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>方法将特定消息写入日志文件，而不包含任何其他上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="2cdae-473">使用其中一种<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2cdae-474"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="2cdae-474"><see langword="String" />.</span></span> <span data-ttu-id="2cdae-475">要写入的自定义消息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-475">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="2cdae-476">将消息逐字写入磁盘，后跟当前行分隔符，不带任何附加上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-476">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdae-477"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>方法将特定消息写入日志文件，而不包含任何其他上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-477">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="2cdae-478">使用其中一种<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="2cdae-478">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
