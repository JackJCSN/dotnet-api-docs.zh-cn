<Type Name="FormatterTypeStyle" FullName="System.Runtime.Serialization.Formatters.FormatterTypeStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f643cfdbcb2bf8dc7a3e643b1caf28823543d1d" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247416" /></Metadata><TypeSignature Language="C#" Value="public enum FormatterTypeStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FormatterTypeStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum FormatterTypeStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class FormatterTypeStyle" />
  <TypeSignature Language="F#" Value="type FormatterTypeStyle = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="19043-101">指示类型说明在序列化流中的布局格式。</span><span class="sxs-lookup"><span data-stu-id="19043-101">Indicates the format in which type descriptions are laid out in the serialized stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="19043-102">`XsdString`和`TypesWhenNeeded`设置适用于高性能基于 particular.NET 实现的相同版本的服务之间的序列化。</span><span class="sxs-lookup"><span data-stu-id="19043-102">The `XsdString` and `TypesWhenNeeded` settings are meant for high performance serialization between services built on the same version of a particular.NET implementation.</span></span> <span data-ttu-id="19043-103">不支持这两个值[VTS （版本容错序列化）](~/docs/standard/serialization/version-tolerant-serialization.md)因为它们有意省略 VTS 用来跳过或添加可选字段和属性的类型信息。</span><span class="sxs-lookup"><span data-stu-id="19043-103">These two values do not support [VTS (Version Tolerant Serialization)](~/docs/standard/serialization/version-tolerant-serialization.md) because they intentionally omit type information that VTS uses to skip or add optional fields and properties.</span></span> <span data-ttu-id="19043-104">不应使用`XsdString`或`TypesWhenNeeded`键入格式序列化和反序列化类型运行不同版本的.NET 实现，而不序列化类型的计算机的计算机上时。</span><span class="sxs-lookup"><span data-stu-id="19043-104">You should not use the `XsdString` or `TypesWhenNeeded` type formats when serializing and deserializing types on a computer running a different version of the .NET implementation than the computer on which the type was serialized.</span></span> <span data-ttu-id="19043-105">序列化和反序列化计算机运行不同版本的.NET 实现上会导致要跳过的类型信息，从而使得反序列化程序无法跳过可选字段，如果它们不在序列化的格式化程序另一个版本的.NET 实现中可能存在某些类型。</span><span class="sxs-lookup"><span data-stu-id="19043-105">Serializing and deserializing on computers running different versions of a .NET implementation causes the formatter to skip serialization of type information, thus making it impossible for the deserializer to skip optional fields if they are not present in certain types that may exist in the other version of the .NET implementation.</span></span> <span data-ttu-id="19043-106">如果必须使用`XsdString`或`TypesWhenNeeded`必须在此类方案中，提供有关已从一个版本更改为其他类型的自定义序列化。</span><span class="sxs-lookup"><span data-stu-id="19043-106">If you must use `XsdString` or `TypesWhenNeeded` in such a scenario, you must provide custom serialization for types that have changed from one version to the other.</span></span>  
  
       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TypesAlways">
      <MemberSignature Language="C#" Value="TypesAlways" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesAlways = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways" />
      <MemberSignature Language="VB.NET" Value="TypesAlways" />
      <MemberSignature Language="C++ CLI" Value="TypesAlways" />
      <MemberSignature Language="F#" Value="TypesAlways = 1" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="19043-107">指示类型可以提供给所有对象成员和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 对象成员。</span><span class="sxs-lookup"><span data-stu-id="19043-107">Indicates that types can be given to all object members and <see cref="T:System.Runtime.Serialization.ISerializable" /> object members.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TypesWhenNeeded">
      <MemberSignature Language="C#" Value="TypesWhenNeeded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesWhenNeeded = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded" />
      <MemberSignature Language="VB.NET" Value="TypesWhenNeeded" />
      <MemberSignature Language="C++ CLI" Value="TypesWhenNeeded" />
      <MemberSignature Language="F#" Value="TypesWhenNeeded = 0" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="19043-108">指示只能为对象数组、<see cref="T:System.Object" /> 类型的对象成员和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 非基元值类型声明类型。</span><span class="sxs-lookup"><span data-stu-id="19043-108">Indicates that types can be stated only for arrays of objects, object members of type <see cref="T:System.Object" />, and <see cref="T:System.Runtime.Serialization.ISerializable" /> non-primitive value types.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="XsdString">
      <MemberSignature Language="C#" Value="XsdString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle XsdString = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString" />
      <MemberSignature Language="VB.NET" Value="XsdString" />
      <MemberSignature Language="C++ CLI" Value="XsdString" />
      <MemberSignature Language="F#" Value="XsdString = 2" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="19043-109">指示可以采用 XSD 格式（而不是 SOAP 格式）来提供字符串。</span><span class="sxs-lookup"><span data-stu-id="19043-109">Indicates that strings can be given in the XSD format rather than SOAP.</span></span> <span data-ttu-id="19043-110">不传输任何字符串 ID。</span><span class="sxs-lookup"><span data-stu-id="19043-110">No string IDs are transmitted.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>