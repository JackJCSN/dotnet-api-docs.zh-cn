<Type Name="TypeReference" FullName="System.Reflection.Metadata.TypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69c2fa594e8b66265a07e9e385fcba9876e5a20c" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67249079" /></Metadata><TypeSignature Language="C#" Value="public struct TypeReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeReference extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.TypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypeReference" />
  <TypeSignature Language="C++ CLI" Value="public value class TypeReference" />
  <TypeSignature Language="F#" Value="type TypeReference = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Name { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acbc6-101">获取目标类型的名称。</span><span class="sxs-lookup"><span data-stu-id="acbc6-101">Gets the name of the target type.</span></span></summary>
        <value><span data-ttu-id="acbc6-102">目标类型的名称。</span><span class="sxs-lookup"><span data-stu-id="acbc6-102">The name of the target type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Namespace { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acbc6-103">获取在其中定义目标类型的命名空间的全名。</span><span class="sxs-lookup"><span data-stu-id="acbc6-103">Gets the full name of the namespace where the target type is defined.</span></span></summary>
        <value><span data-ttu-id="acbc6-104">目标类型的定义位置，命名空间的完整名称或句柄其<see cref="P:System.Reflection.Metadata.StringHandle.IsNil" />属性是<see langword="true" />如果嵌套或根命名空间中定义该类型</span><span class="sxs-lookup"><span data-stu-id="acbc6-104">The full name of the namespace where the target type is defined, or a handle whose the <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> property is <see langword="true" /> if the type is nested or defined in a root namespace,</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EntityHandle ResolutionScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.EntityHandle ResolutionScope" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolutionScope As EntityHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::EntityHandle ResolutionScope { System::Reflection::Metadata::EntityHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolutionScope : System.Reflection.Metadata.EntityHandle" Usage="System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EntityHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acbc6-105">获取解析范围，目标类型在该范围内定义且由指定的 <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> 和 <see cref="P:System.Reflection.Metadata.TypeReference.Name" /> 唯一标识。</span><span class="sxs-lookup"><span data-stu-id="acbc6-105">Gets the resolution scope in which the target type is defined and is uniquely identified by the specified <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> and <see cref="P:System.Reflection.Metadata.TypeReference.Name" />.</span></span></summary>
        <value><span data-ttu-id="acbc6-106">在其中唯一定义的目标类型解析范围。</span><span class="sxs-lookup"><span data-stu-id="acbc6-106">The resolution scope in which the target type is uniquely defined.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>