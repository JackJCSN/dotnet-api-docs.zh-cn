<Type Name="GeoCoordinateWatcher" FullName="System.Device.Location.GeoCoordinateWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fb0bcf796fda03e3449e7ec7ed2d337645fda38" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67239931" /></Metadata><TypeSignature Language="C#" Value="public class GeoCoordinateWatcher : IDisposable, System.ComponentModel.INotifyPropertyChanged, System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeoCoordinateWatcher extends System.Object implements class System.ComponentModel.INotifyPropertyChanged, class System.Device.Location.IGeoPositionWatcher`1&lt;class System.Device.Location.GeoCoordinate&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Device.Location.GeoCoordinateWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class GeoCoordinateWatcher&#xA;Implements IDisposable, IGeoPositionWatcher(Of GeoCoordinate), INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GeoCoordinateWatcher : IDisposable, System::ComponentModel::INotifyPropertyChanged, System::Device::Location::IGeoPositionWatcher&lt;System::Device::Location::GeoCoordinate ^&gt;" />
  <TypeSignature Language="F#" Value="type GeoCoordinateWatcher = class&#xA;    interface IDisposable&#xA;    interface INotifyPropertyChanged&#xA;    interface IGeoPositionWatcher&lt;GeoCoordinate&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Device</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供基于纬度和经度坐标的位置数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Device.Location.GeoCoordinateWatcher>类提供了从当前位置提供程序基于坐标的位置数据。 当前的位置提供程序设置优先级最高的计算机上，根据多种因素，如年龄和准确性的数据，所有提供程序位置应用程序请求的准确性和功耗和性能影响与位置提供程序相关联。 随着时间推移，例如，当 GPS 设备失去其附属信号功能和 Wi-fi 三角测量提供程序将在计算机上最准确的提供程序可能会更改当前的位置提供程序。  
  
 若要开始访问位置数据，创建<xref:System.Device.Location.GeoCoordinateWatcher>，并调用<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>或<xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A>若要开始从当前位置提供程序的数据获取。  
  
 <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性可以进行检查，以确定数据是否可用。 如果数据不可用，可以获取该位置从一次<xref:System.Device.Location.GeoCoordinateWatcher.Position*>属性，或通过处理接收持续的位置更新<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件。  
  
 <xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>， <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>，并<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性支持<xref:System.ComponentModel.INotifyPropertyChanged>，以便应用程序可以数据绑定到这些属性。  
  
 在 Windows 7 中，所有<xref:System.Device.Location>类是完全安装位置提供程序的情况下正常运行并能够解析计算机的位置。  
  
> [!NOTE]
>  在 Windows 7 简易版，唯一受支持的位置提供程序是默认位置中的提供程序控制面板中，并且外接程序必须安装指定纬度和经度。  
  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。  
  
   
  
## Examples  
 以下程序演示如何创建<xref:System.Device.Location.GeoCoordinateWatcher>和开始使用初始化超时获取数据。 如果已知，代码然后输出位置的坐标。  
  
 [!code-csharp[System.Device.Location.GetLocationDataSync1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasync1/cs/getlocationdatasync.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasync1/vb/GetLocationDataSync.vb#1)]  
  
 以下程序演示如何通过订阅来接收持续的位置更新<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件。  
  
 [!code-csharp[System.Device.Location.GetLocationDataAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdataasync/cs/getlocationdataasync.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdataasync/vb/GetLocationDataAsync.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinateWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinateWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>使用默认精度设置初始化 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认精度设置是<xref:System.Device.Location.GeoPositionAccuracy.Default>。  
  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeoCoordinateWatcher (System.Device.Location.GeoPositionAccuracy desiredAccuracy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Device.Location.GeoPositionAccuracy desiredAccuracy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (desiredAccuracy As GeoPositionAccuracy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeoCoordinateWatcher(System::Device::Location::GeoPositionAccuracy desiredAccuracy);" />
      <MemberSignature Language="F#" Value="new System.Device.Location.GeoCoordinateWatcher : System.Device.Location.GeoPositionAccuracy -&gt; System.Device.Location.GeoCoordinateWatcher" Usage="new System.Device.Location.GeoCoordinateWatcher desiredAccuracy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="desiredAccuracy" Type="System.Device.Location.GeoPositionAccuracy" />
      </Parameters>
      <Docs>
        <param name="desiredAccuracy">指示请求的位置提供程序精度级别的 <see cref="T:System.Device.Location.GeoPositionAccuracy" />。  
  
<see cref="F:System.Device.Location.GeoPositionAccuracy.High" /> 级别的精度会降低性能，仅当需要高精度时才应指定。</param>
        <summary>使用给定的精度级别初始化 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredAccuracy">
      <MemberSignature Language="C#" Value="public System.Device.Location.GeoPositionAccuracy DesiredAccuracy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Device.Location.GeoPositionAccuracy DesiredAccuracy" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredAccuracy As GeoPositionAccuracy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Device::Location::GeoPositionAccuracy DesiredAccuracy { System::Device::Location::GeoPositionAccuracy get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredAccuracy : System.Device.Location.GeoPositionAccuracy" Usage="System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Location.GeoPositionAccuracy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>由 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 提供的位置数据所需的精度级别。</summary>
        <value><see cref="T:System.Device.Location.GeoPositionAccuracy" /> 指示定位程序所需的精度级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Device.Location.GeoPositionAccuracy.High> 级别的精度会降低性能，仅当需要高精度时才应指定。  
  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>释放由 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 类的当前实例占用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>完成后使用<xref:System.Device.Location.GeoCoordinateWatcher>类。  
  
 应调用此方法，这样可以释放非托管的资源。  
  
 有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="geoCoordinateWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 类的当前实例占用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>完成后使用<xref:System.Device.Location.GeoCoordinateWatcher>类。  
  
 应调用此方法，这样可以释放非托管的资源。  
  
 有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="geoCoordinateWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
        <summary>释放 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 类的当前实例所使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>完成后使用<xref:System.Device.Location.GeoCoordinateWatcher>类。  
  
 应调用此方法，这样可以释放非托管的资源。  
  
 有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GeoCoordinateWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GeoCoordinateWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="geoCoordinateWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在通过垃圾回收回收 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 之前，释放资源并执行其他清理操作。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MovementThreshold">
      <MemberSignature Language="C#" Value="public double MovementThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MovementThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinateWatcher.MovementThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property MovementThreshold As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MovementThreshold { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MovementThreshold : double with get, set" Usage="System.Device.Location.GeoCoordinateWatcher.MovementThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>相对于最后一个 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件中的坐标必须移动的距离（以米为单位），移动该距离之后位置提供程序将引发另一个 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件。</summary>
        <value>距离，（以米为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认移动阈值为零，这意味着任何更改在当前的位置提供程序会导致检测到的位置<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件和中的更新<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性。  
  
> [!NOTE]
>  移动阈值不保证将在所请求的阈值接收事件。 平台会尝试遵循请求特定移动阈值，但在某些情况下，事件将不引发在请求的阈值。  
  
 **请注意**中的 Windows 7 之前的 Windows 版本中，以下条件适用：  
  
-   所有<xref:System.Device.Location>可以创建具有构造函数的对象，但<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性将始终具有值<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
-   所指示的位置<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>始终会<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
-   将会不引发任何位置事件。  
  
 下图表示的位置提供程序 （例如，GPS 设备） 提供到计算机的位置坐标。 P1，在图中，表示包含在的位置数据<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件，和 P2、 P3 和 P4 表示内移动阈值的点。 因此，当位置提供程序提供数据不在这些点 （P1、 P2、 P3 和 P4） 的某个位置，该值指示<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>会引发事件，并<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>返回 P1。 外部的为点 P5<xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>距离，因此在该点，<xref:System.Device.Location.GeoCoordinateWatcher.Position*>更新和<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>引发事件。  
  
 ![说明 MovementThreshold 的关系图](~/add/media/ndp-movementthreshold.png "演示 MovementThreshold 的关系图")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected void OnPositionChanged (System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt; e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPositionChanged(class System.Device.Location.GeoPositionChangedEventArgs`1&lt;class System.Device.Location.GeoCoordinate&gt; e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPositionChanged (e As GeoPositionChangedEventArgs(Of GeoCoordinate))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPositionChanged(System::Device::Location::GeoPositionChangedEventArgs&lt;System::Device::Location::GeoCoordinate ^&gt; ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPositionChanged : System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt; -&gt; unit" Usage="geoCoordinateWatcher.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;" />
      </Parameters>
      <Docs>
        <param name="e">包含新位置的 <see cref="T:System.Device.Location.GeoPositionChangedEventArgs`1" /> 对象。</param>
        <summary>在 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件发生时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的程序演示如何从持续不断的更新订阅<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件。  
  
 [!code-csharp[System.Device.Location.GetLocationDataAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdataasync/cs/getlocationdataasync.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdataasync/vb/GetLocationDataAsync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPositionStatusChanged">
      <MemberSignature Language="C#" Value="protected void OnPositionStatusChanged (System.Device.Location.GeoPositionStatusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPositionStatusChanged(class System.Device.Location.GeoPositionStatusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPositionStatusChanged (e As GeoPositionStatusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPositionStatusChanged(System::Device::Location::GeoPositionStatusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPositionStatusChanged : System.Device.Location.GeoPositionStatusChangedEventArgs -&gt; unit" Usage="geoCoordinateWatcher.OnPositionStatusChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Device.Location.GeoPositionStatusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含新状态的 <see cref="T:System.Device.Location.GeoPositionStatusChangedEventArgs" /> 对象。</param>
        <summary>在 <see cref="E:System.Device.Location.GeoCoordinateWatcher.StatusChanged" /> 事件发生时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.OnPropertyChanged : string -&gt; unit" Usage="geoCoordinateWatcher.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">已更改的属性名。</param>
        <summary>当 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 的某个属性更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理<xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>事件以在 Windows 窗体应用程序中实现数据绑定。  
  
 此方法指示<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性，<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性，或<xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>属性已更改。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public System.Device.Location.GeoPositionPermission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Device.Location.GeoPositionPermission Permission" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinateWatcher.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As GeoPositionPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Device::Location::GeoPositionPermission Permission { System::Device::Location::GeoPositionPermission get(); };" />
      <MemberSignature Language="F#" Value="member this.Permission : System.Device.Location.GeoPositionPermission" Usage="System.Device.Location.GeoCoordinateWatcher.Permission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Location.GeoPositionPermission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示访问来自位置提供程序的位置数据的权限是已授予还是已拒绝。</summary>
        <value>指示权限是已授予还是已拒绝的值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Device.Location.GeoPositionPermission" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Device.Location.GeoPosition&lt;System.Device.Location.GeoCoordinate&gt; Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Device.Location.GeoPosition`1&lt;class System.Device.Location.GeoCoordinate&gt; Position" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinateWatcher.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As GeoPosition(Of GeoCoordinate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Device::Location::GeoPosition&lt;System::Device::Location::GeoCoordinate ^&gt; ^ Position { System::Device::Location::GeoPosition&lt;System::Device::Location::GeoCoordinate ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Device.Location.GeoPosition&lt;System.Device.Location.GeoCoordinate&gt;" Usage="System.Device.Location.GeoCoordinateWatcher.Position" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Device.Location.IGeoPositionWatcher`1.Position</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Device.Location.GeoPosition&lt;System.Device.Location.GeoCoordinate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示当前位置的 <see cref="T:System.Device.Location.GeoCoordinate" />。</summary>
        <value>指示当前位置的 <see cref="T:System.Device.Location.GeoCoordinate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在以下示例中，<xref:System.Device.Location.GeoPosition%601.Location%2A>的属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性保存在<xref:System.Device.Location.GeoCoordinate>对象。 纬度和经度字段<xref:System.Device.Location.GeoCoordinate>它们为已知时才打印。  
  
 [!code-csharp[System.Device.Location.GetLocationDataSync1#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasync1/cs/getlocationdatasync.cs#2)]
 [!code-vb[System.Device.Location.GetLocationDataSync1#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasync1/vb/GetLocationDataSync.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt; PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Device.Location.GeoPositionChangedEventArgs`1&lt;class System.Device.Location.GeoCoordinate&gt;&gt; PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PositionChanged As EventHandler(Of GeoPositionChangedEventArgs(Of GeoCoordinate)) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Device::Location::GeoPositionChangedEventArgs&lt;System::Device::Location::GeoCoordinate ^&gt; ^&gt; ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt; " Usage="member this.PositionChanged : System.EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Device.Location.IGeoPositionWatcher`1.PositionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示位置数据的纬度或经度已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当移动的距离，因为最后一个事件超出指定的阈值时，仅将引发此事件<xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>。  
  
 <xref:System.Device.Location.GeoPositionChangedEventArgs%601>传递给事件处理程序对象包括<xref:System.Device.Location.GeoPosition%601>对象，其中包含更新的位置数据。  
  
   
  
## Examples  
 下面的示例演示如何处理第一个<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>事件。  
  
 [!code-csharp[System.Device.Location.LocationEvent1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.locationevent1/cs/locationevent.cs#1)]
 [!code-vb[System.Device.Location.LocationEvent1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.locationevent1/vb/locationevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Device.Location.GeoCoordinateWatcher.MovementThreshold" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>开始从当前位置提供程序获取数据。 此方法启用 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件并允许访问 <see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> 属性。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="geoCoordinateWatcher.Start " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.IGeoPositionWatcher`1.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始从当前位置提供程序获取数据。 此方法启用 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件并允许访问 <see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法将开始从当前位置提供程序的数据的获取。 选择当前的位置提供程序基于如年龄和来自所有提供程序、 请求的应用程序或应用程序和功率消耗的准确性和性能影响与位置提供程序关联的数据的准确性. 随着时间推移，例如，当 GPS 设备失去其附属信号功能和 Wi-fi 三角测量提供程序将在计算机上最准确的提供程序可能会更改当前的位置提供程序。  
  
 如果当前设置优先级位置提供程序不具有数据时<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>方法调用时，便会启动以获取数据。 如果权限已被授予给客户端，当数据变为可用时，数据可以同步访问，如果正在处理事件以异步方式传递。  
  
 如果禁用了 Windows 7 传感器和位置平台时<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>调用时，<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>将立即返回，请<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>将不会引发事件，并且其位置由返回<xref:System.Device.Location.GeoPosition%601.Location%2A>属性<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>将包含<xref:System.Device.Location.GeoCoordinate.Unknown>.  
  
 如果数据包含有当前按优先顺序排列的位置提供程序，它将立即可用以同步方式，并将以异步方式传递，如果正在处理事件。  
  
 如果调用应用程序没有从一个位置提供程序访问数据的权限，以授予或拒绝权限的对话框将提示用户。 将无模式对话框。  
  
   
  
## Examples  
 下面的程序处理之后发生的第一个位置更新<xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>调用。  
  
 [!code-csharp[System.Device.Location.GetLocationDataUpdateOnce#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdataupdateonce/cs/getlocationdataupdateonce.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataUpdateOnce#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdataupdateonce/vb/GetLocationDataUpdateOnce.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (bool suppressPermissionPrompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start(bool suppressPermissionPrompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (suppressPermissionPrompt As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start(bool suppressPermissionPrompt);" />
      <MemberSignature Language="F#" Value="abstract member Start : bool -&gt; unit&#xA;override this.Start : bool -&gt; unit" Usage="geoCoordinateWatcher.Start suppressPermissionPrompt" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suppressPermissionPrompt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="suppressPermissionPrompt">如果为 <see langword="true" />，则禁止显示权限对话框；如果为 <see langword="false" />，则在尚未授予权限的情况下可以选择显示权限对话框。</param>
        <summary>开始从当前位置提供程序获取数据。 此方法启用 <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> 事件并允许访问 <see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> 属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Device.Location.GeoPositionStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Device.Location.GeoPositionStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.GeoCoordinateWatcher.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As GeoPositionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Device::Location::GeoPositionStatus Status { System::Device::Location::GeoPositionStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Device.Location.GeoPositionStatus" Usage="System.Device.Location.GeoCoordinateWatcher.Status" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Device.Location.IGeoPositionWatcher`1.Status</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Device.Location.GeoPositionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 的当前状态。</summary>
        <value>一个 <see cref="T:System.Device.Location.GeoPositionStatus" />，用于指示来自 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 的数据的可用性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例处理<xref:System.Device.Location.GeoCoordinateWatcher.StatusChanged>事件并将打印一条消息基于<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>。  
  
 [!code-csharp[System.Device.Location.ShowStatusUpdates#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.showstatusupdates/cs/showstatusupdates.cs#1)]
 [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.showstatusupdates/vb/ShowStatusUpdates.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Device.Location.GeoPositionStatus" />
      </Docs>
    </Member>
    <Member MemberName="StatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt; StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Device.Location.GeoPositionStatusChangedEventArgs&gt; StatusChanged" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.GeoCoordinateWatcher.StatusChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusChanged As EventHandler(Of GeoPositionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Device::Location::GeoPositionStatusChangedEventArgs ^&gt; ^ StatusChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusChanged : EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt; " Usage="member this.StatusChanged : System.EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Device.Location.IGeoPositionWatcher`1.StatusChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 对象的状态已更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Device.Location.GeoCoordinateWatcher.StatusChanged>上引发事件的那个线程<xref:System.Device.Location.GeoCoordinateWatcher>上创建对象。  
  
   
  
## Examples  
 下面的示例演示如何处理<xref:System.Device.Location.GeoCoordinateWatcher.StatusChanged>事件。  
  
 [!code-csharp[System.Device.Location.ShowStatusUpdates#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.showstatusupdates/cs/showstatusupdates.cs#1)]
 [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.showstatusupdates/vb/ShowStatusUpdates.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="geoCoordinateWatcher.Stop " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.IGeoPositionWatcher`1.Stop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止 <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> 提供位置数据和事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之后<xref:System.Device.Location.GeoCoordinateWatcher.Stop%2A>调用时，无需再<xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>发生事件，并<xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>属性将返回<xref:System.Device.Location.GeoCoordinate.Unknown>。  
  
 当<xref:System.Device.Location.GeoCoordinateWatcher.Stop%2A>调用时，<xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>属性设置为<xref:System.Device.Location.GeoPositionStatus.Disabled>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.GeoCoordinateWatcher.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 <see cref="P:System.Device.Location.GeoCoordinateWatcher.Status" /> 属性、<see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> 属性或 <see cref="P:System.Device.Location.GeoCoordinateWatcher.Permission" /> 属性已更改。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.PositionChanged">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt; System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Device.Location.GeoPositionChangedEventArgs`1&lt;class System.Device.Location.GeoCoordinate&gt;&gt; System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.GeoCoordinateWatcher.System#Device#Location#IGeoPositionWatcher&lt;System#Device#Location#GeoCoordinate&gt;#PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PositionChanged As EventHandler(Of GeoPositionChangedEventArgs(Of GeoCoordinate)) Implements System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Device.Location.IGeoPositionWatcher`1.PositionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Device.Location.GeoPositionChangedEventArgs&lt;System.Device.Location.GeoCoordinate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示位置数据已更改。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.StatusChanged">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt; System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Device.Location.GeoPositionStatusChangedEventArgs&gt; System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;.StatusChanged" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.GeoCoordinateWatcher.System#Device#Location#IGeoPositionWatcher&lt;System#Device#Location#GeoCoordinate&gt;#StatusChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event StatusChanged As EventHandler(Of GeoPositionStatusChangedEventArgs) Implements System.Device.Location.IGeoPositionWatcher&lt;System.Device.Location.GeoCoordinate&gt;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Device.Location.IGeoPositionWatcher`1.StatusChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Device.Location.GeoPositionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示位置提供程序的状态已更改。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryStart">
      <MemberSignature Language="C#" Value="public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryStart(bool suppressPermissionPrompt, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryStart (suppressPermissionPrompt As Boolean, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryStart(bool suppressPermissionPrompt, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryStart : bool * TimeSpan -&gt; bool&#xA;override this.TryStart : bool * TimeSpan -&gt; bool" Usage="geoCoordinateWatcher.TryStart (suppressPermissionPrompt, timeout)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suppressPermissionPrompt" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="suppressPermissionPrompt">如果为 <see langword="true" />，则禁止显示权限对话框；如果为 <see langword="false" />，则显示权限对话框。</param>
        <param name="timeout">超时前等待位置提供程序启动的时间（以毫秒为单位）。</param>
        <summary>开始从当前位置提供程序获取数据。 此方法同步返回。</summary>
        <returns>如果在 <paramref name="timeout" /> 指定的时间内开始数据获取，则为 <see langword="true" /> ；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该方法会阻止调用线程的执行期间指定的时间段内`timeout`。 调用时要格外小心<xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A>从你的应用程序在用户界面线程。  
  
   
  
## Examples  
 下面的示例演示如何调用<xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A>。  
  
 [!code-csharp[System.Device.Location.GetLocationDataSync1#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.getlocationdatasync1/cs/getlocationdatasync.cs#1)]
 [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.getlocationdatasync1/vb/GetLocationDataSync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>