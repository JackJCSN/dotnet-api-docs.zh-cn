<Type Name="ASCIIEncoding" FullName="System.Text.ASCIIEncoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03f9628965f0def34cf1ea1a02000027ee728017" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68434817" /></Metadata><TypeSignature Language="C#" Value="public class ASCIIEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ASCIIEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.ASCIIEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class ASCIIEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class ASCIIEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type ASCIIEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cca60-101">表示 Unicode 字符的 ASCII 字符编码。</span><span class="sxs-lookup"><span data-stu-id="cca60-101">Represents an ASCII character encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-102">编码是将一组 Unicode 字符转换为一个字节序列的过程。</span><span class="sxs-lookup"><span data-stu-id="cca60-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="cca60-103">解码是将编码字节序列转换为一组 Unicode 字符的过程。</span><span class="sxs-lookup"><span data-stu-id="cca60-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="cca60-104"><xref:System.Text.ASCIIEncoding>对应于 Windows 代码页20127。</span><span class="sxs-lookup"><span data-stu-id="cca60-104"><xref:System.Text.ASCIIEncoding> corresponds to the Windows code page 20127.</span></span> <span data-ttu-id="cca60-105">因为 ASCII 是一种7位编码, 所以 ASCII 字符限制为从 U + 0000 到 U + 007F 的最低 128 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-105">Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span> <span data-ttu-id="cca60-106">如果使用<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性<xref:System.Text.ASCIIEncoding.%23ctor%2A>或构造函数返回的默认编码器, 则在执行编码操作之前, 该范围外的字符将被替换为问号 (？)。</span><span class="sxs-lookup"><span data-stu-id="cca60-106">If you use the default encoder returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property or the <xref:System.Text.ASCIIEncoding.%23ctor%2A> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</span></span>  <span data-ttu-id="cca60-107">由于类仅支持有限字符集<xref:System.Text.UTF8Encoding>, 因此、 <xref:System.Text.UnicodeEncoding>和<xref:System.Text.UTF32Encoding>类更适用于全球化应用程序。 <xref:System.Text.ASCIIEncoding></span><span class="sxs-lookup"><span data-stu-id="cca60-107">Because the <xref:System.Text.ASCIIEncoding> class supports only a limited character set, the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> classes are better suited for globalized applications.</span></span> <span data-ttu-id="cca60-108">以下注意事项可帮助您决定是否要使用<xref:System.Text.ASCIIEncoding>:</span><span class="sxs-lookup"><span data-stu-id="cca60-108">The following considerations can help you to decide whether to use <xref:System.Text.ASCIIEncoding>:</span></span>  
  
-   <span data-ttu-id="cca60-109">某些协议需要 ASCII 或 ASCII 的子集。</span><span class="sxs-lookup"><span data-stu-id="cca60-109">Some protocols require ASCII or a subset of ASCII.</span></span> <span data-ttu-id="cca60-110">在这些情况下, ASCII 编码非常合适。</span><span class="sxs-lookup"><span data-stu-id="cca60-110">In these cases ASCII encoding is appropriate.</span></span>  
  
-   <span data-ttu-id="cca60-111">如果需要8位编码, 则 ASCII 可能不是正确的选择。</span><span class="sxs-lookup"><span data-stu-id="cca60-111">If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</span></span> <span data-ttu-id="cca60-112">请考虑使用 UTF8 而不是 ASCII。</span><span class="sxs-lookup"><span data-stu-id="cca60-112">Instead, consider using UTF8 instead of ASCII.</span></span> <span data-ttu-id="cca60-113">对于 U + 0000 到 U + 007F 的字符, 结果是相同的, 但所有 Unicode 字符都以 UTF-8 表示, 这可避免数据丢失。</span><span class="sxs-lookup"><span data-stu-id="cca60-113">For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-114"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-114"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-115">出于安全原因, 应使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-115">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="cca60-116">方法确定导致对一组 Unicode 字符进行编码的字节数, <xref:System.Text.ASCIIEncoding.GetBytes%2A>方法执行实际编码。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-116">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="cca60-117">同样, <xref:System.Text.ASCIIEncoding.GetCharCount%2A>方法确定有多少字符导致一系列字节进行解码, <xref:System.Text.ASCIIEncoding.GetChars%2A>并且和<xref:System.Text.ASCIIEncoding.GetString%2A>方法执行实际解码。</span><span class="sxs-lookup"><span data-stu-id="cca60-117">Likewise, the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.ASCIIEncoding.GetChars%2A> and <xref:System.Text.ASCIIEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="cca60-118">请注意, 默认<xref:System.Text.ASCIIEncoding>构造函数本身可能没有适用于你的应用程序的行为。</span><span class="sxs-lookup"><span data-stu-id="cca60-118">Note that the default <xref:System.Text.ASCIIEncoding> constructor by itself might not have the appropriate behavior for your application.</span></span> <span data-ttu-id="cca60-119">你可能需要考虑<xref:System.Text.Encoding.EncoderFallback%2A>将或<xref:System.Text.Encoding.DecoderFallback%2A>属性设置为<xref:System.Text.EncoderExceptionFallback>或<xref:System.Text.DecoderExceptionFallback> , 以阻止设置第8位的序列。</span><span class="sxs-lookup"><span data-stu-id="cca60-119">You might want to consider setting the <xref:System.Text.Encoding.EncoderFallback%2A> or <xref:System.Text.Encoding.DecoderFallback%2A> property to <xref:System.Text.EncoderExceptionFallback> or <xref:System.Text.DecoderExceptionFallback> to prevent sequences with the 8th bit set.</span></span> <span data-ttu-id="cca60-120">自定义行为也可能适用于这种情况。</span><span class="sxs-lookup"><span data-stu-id="cca60-120">Custom behavior might also be appropriate for these cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-121">下面的示例演示如何将 Unicode 字符编码为 ASCII。</span><span class="sxs-lookup"><span data-stu-id="cca60-121">The following example demonstrates how to encode Unicode characters into ASCII.</span></span> <span data-ttu-id="cca60-122">请注意, 当您的应用程序使用<xref:System.Text.ASCIIEncoding>对 ASCII 范围外的 Unicode 字符进行编码时所发生的数据丢失。</span><span class="sxs-lookup"><span data-stu-id="cca60-122">Notice the loss of data that occurs when your application uses <xref:System.Text.ASCIIEncoding> to encode Unicode characters outside of the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="cca60-123">了解编码</span><span class="sxs-lookup"><span data-stu-id="cca60-123">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ASCIIEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ASCIIEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cca60-124">初始化 <see cref="T:System.Text.ASCIIEncoding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cca60-124">Initializes a new instance of the <see cref="T:System.Text.ASCIIEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-125"><xref:System.Text.ASCIIEncoding>类不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-125">The <xref:System.Text.ASCIIEncoding> class does not provide error detection.</span></span> <span data-ttu-id="cca60-126">出于安全原因, 应使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>类并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-126">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> class and enable error detection.</span></span>  
  
 <span data-ttu-id="cca60-127">如果选择使用 ASCII 编码, 此构造函数可能不会为你的应用程序提供适当的回退行为。</span><span class="sxs-lookup"><span data-stu-id="cca60-127">If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</span></span> <span data-ttu-id="cca60-128">它使用<xref:System.Text.EncoderReplacementFallback>和<xref:System.Text.DecoderReplacementFallback>类将 u + 0000 到 u + 007F 范围之外的每个字符替换为问号 (？)。</span><span class="sxs-lookup"><span data-stu-id="cca60-128">It uses the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallback> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</span></span> <span data-ttu-id="cca60-129">相反, 可以<xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType>调用或<xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType>方法, 并将其<xref:System.Text.EncoderExceptionFallback>传递给<xref:System.Text.DecoderExceptionFallback>对象并使用异常回退。</span><span class="sxs-lookup"><span data-stu-id="cca60-129">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method and pass it <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> objects to use exception fallback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cca60-130"><xref:System.Text.ASCIIEncoding>仅支持 U + 0000 和 U + 007F 之间的 Unicode 字符值。</span><span class="sxs-lookup"><span data-stu-id="cca60-130"><xref:System.Text.ASCIIEncoding> supports only the Unicode character values between U+0000 and U+007F.</span></span> <span data-ttu-id="cca60-131">因此,、和<xref:System.Text.UTF32Encoding>更适用于全球化应用程序。 <xref:System.Text.UTF8Encoding> <xref:System.Text.UnicodeEncoding></span><span class="sxs-lookup"><span data-stu-id="cca60-131">Therefore, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> are better suited for globalized applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-132">下面的示例演示如何创建新<xref:System.Text.ASCIIEncoding>的实例并显示编码的名称。</span><span class="sxs-lookup"><span data-stu-id="cca60-132">The following example demonstrates how to create a new <xref:System.Text.ASCIIEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cca60-133">计算对一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-133">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-134">包含要编码的字符集的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-134">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="cca60-135">计算对指定 <see cref="T:System.String" /> 中的字符进行编码时所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-135">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="cca60-136">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-136">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-137">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-137">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-138">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-138">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-139">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-139">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-140">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetByteCount%2A>方法返回使用<xref:System.Text.ASCIIEncoding>对字符串进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-140">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode a string using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CPP/getbytecount-string.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CS/getbytecount-string.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/VB/getbytecount-string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-141"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-141"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-142">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-142">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-143">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-143">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-144">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-144">-and-</span></span> 
 <span data-ttu-id="cca60-145">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-145"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="cca60-146">了解编码</span><span class="sxs-lookup"><span data-stu-id="cca60-146">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-147">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="cca60-147">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="cca60-148">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-148">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="cca60-149">计算对从指定的字符指针开始的一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-149">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="cca60-150">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-150">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-151">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-151">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-152">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-152">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-153">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-153">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-154"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-154"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-155"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-155"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-156">或</span><span class="sxs-lookup"><span data-stu-id="cca60-156">-or-</span></span> 
<span data-ttu-id="cca60-157">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-157">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-158">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-158">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-159">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-159">-and-</span></span> 
 <span data-ttu-id="cca60-160">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-160"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cca60-161">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="cca60-161">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cca60-162">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="cca60-162">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-163">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-163">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="cca60-164">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-164">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="cca60-165">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-165">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="cca60-166">计算对指定字符数组中的一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-166">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="cca60-167">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-167">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-168">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-168">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-169">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-169">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-170">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-170">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-171">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetByteCount%2A>方法返回使用<xref:System.Text.ASCIIEncoding>对 Unicode 字符数组进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-171">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-172"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-172"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-173"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-173"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-174">或</span><span class="sxs-lookup"><span data-stu-id="cca60-174">-or-</span></span> 
 <span data-ttu-id="cca60-175"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="chars" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-175"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="cca60-176">或</span><span class="sxs-lookup"><span data-stu-id="cca60-176">-or-</span></span> 
<span data-ttu-id="cca60-177">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-177">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-178">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-178">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-179">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-179">-and-</span></span> 
 <span data-ttu-id="cca60-180">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-180"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cca60-181">将一组字符编码为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="cca60-181">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-182">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="cca60-182">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="cca60-183">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-183">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="cca60-184">一个指针，指向开始写入所产生的字节序列的位置。</span><span class="sxs-lookup"><span data-stu-id="cca60-184">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="cca60-185">最多写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-185">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="cca60-186">将从指定的字符指针开始的一组字符编码为一个字节序列，并从指定的字节指针开始存储该字节序列。</span><span class="sxs-lookup"><span data-stu-id="cca60-186">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="cca60-187">在由 <paramref name="bytes" /> 指示的位置处写入的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-187">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-188">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-188">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-189">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-189">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-190">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-190">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-191">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-191">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-192">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-192">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-193"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-193"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-194">大于 U + 007F 的任何 Unicode 字符都将转换为 ASCII 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-194">Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-195">出于安全原因, 建议您的应用程序使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-195">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-196"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-196"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cca60-197">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-197">-or-</span></span> 
 <span data-ttu-id="cca60-198"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-198"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-199"><paramref name="charCount" /> 或 <paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-199"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cca60-200"><paramref name="byteCount" /> 少于所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-200"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-201">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-201">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-202">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-202">-and-</span></span> 
 <span data-ttu-id="cca60-203">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-203"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cca60-204">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="cca60-204">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cca60-205">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="cca60-205">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-206">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-206">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="cca60-207">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-207">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="cca60-208">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-208">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="cca60-209">要包含所产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-209">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="cca60-210">要开始写入所产生的字节序列的索引位置。</span><span class="sxs-lookup"><span data-stu-id="cca60-210">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="cca60-211">将指定字符数组中的一组字符编码到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="cca60-211">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="cca60-212">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-212">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-213">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-213">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-214">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-214">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-215">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-215">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-216">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-216">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-217">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-217">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-218"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-218"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-219">大于 U + 007F 的任何 Unicode 字符都编码为 ASCII 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-219">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-220">出于安全原因, 建议您的应用程序使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-220">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-221">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetBytes%2A>方法对字符串中的某个范围的字符进行编码, 并在字节数组中的一系列元素中存储编码字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-221">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-222"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-222"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cca60-223">或</span><span class="sxs-lookup"><span data-stu-id="cca60-223">-or-</span></span> 
 <span data-ttu-id="cca60-224"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-224"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-225"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-225"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-226">-or-</span></span> 
 <span data-ttu-id="cca60-227"><paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-227"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="cca60-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-228">-or-</span></span> 
 <span data-ttu-id="cca60-229"><paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-229"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cca60-230"><paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</span><span class="sxs-lookup"><span data-stu-id="cca60-230"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-231">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-231">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-232">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-232">-and-</span></span> 
 <span data-ttu-id="cca60-233">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-233"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="cca60-234">包含要编码的字符集的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-234">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="cca60-235">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-235">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="cca60-236">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-236">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="cca60-237">要包含所产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-237">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="cca60-238">要开始写入所产生的字节序列的索引位置。</span><span class="sxs-lookup"><span data-stu-id="cca60-238">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="cca60-239">将指定 <see cref="T:System.String" /> 中的一组字符编码到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="cca60-239">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="cca60-240">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-240">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-241">若要计算存储生成的字节所<xref:System.Text.ASCIIEncoding.GetBytes%2A>需的确切数组大小, 应用程序将<xref:System.Text.ASCIIEncoding.GetByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-241">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="cca60-242">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-242">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="cca60-243">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-243">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-244">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-244">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-245">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-245">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-246"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-246"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-247">大于 U + 007F 的任何 Unicode 字符都编码为 ASCII 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-247">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-248">出于安全原因, 建议您的应用程序使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-248">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-249">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetBytes%2A>方法对 Unicode 字符数组中的一系列元素进行编码, 并将已编码的字节存储在字节数组中的一系列元素中。</span><span class="sxs-lookup"><span data-stu-id="cca60-249">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-250"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-250"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cca60-251">或</span><span class="sxs-lookup"><span data-stu-id="cca60-251">-or-</span></span> 
 <span data-ttu-id="cca60-252"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-252"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-253"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-253"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-254">或</span><span class="sxs-lookup"><span data-stu-id="cca60-254">-or-</span></span> 
 <span data-ttu-id="cca60-255"><paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-255"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="cca60-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-256">-or-</span></span> 
 <span data-ttu-id="cca60-257"><paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-257"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cca60-258"><paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</span><span class="sxs-lookup"><span data-stu-id="cca60-258"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="cca60-259">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-259">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-260">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-260">-and-</span></span> 
 <span data-ttu-id="cca60-261">将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-261"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cca60-262">计算对一个字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-262">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cca60-263">指向第一个要解码的字节的指针。</span><span class="sxs-lookup"><span data-stu-id="cca60-263">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="cca60-264">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-264">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="cca60-265">计算对一个字节序列（从指定的字节指针开始）进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-265">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="cca60-266">对指定字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-266">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-267">若要计算存储所生成的字符<xref:System.Text.ASCIIEncoding.GetChars%2A>所需的确切数组大小, 应用程序<xref:System.Text.ASCIIEncoding.GetCharCount%2A>将使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-267">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="cca60-268">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-268">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="cca60-269">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-269">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-270"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-270"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-271"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-271"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-272">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-272">-or-</span></span> 
<span data-ttu-id="cca60-273">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-273">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="cca60-274">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-274">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-275">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-275">-and-</span></span> 
 <span data-ttu-id="cca60-276">将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-276"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cca60-277">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="cca60-277">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cca60-278">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="cca60-278">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cca60-279">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-279">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="cca60-280">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-280">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="cca60-281">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-281">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="cca60-282">计算对指定字节数组中的一个字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-282">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="cca60-283">对指定字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-283">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-284">若要计算存储所生成的字符<xref:System.Text.ASCIIEncoding.GetChars%2A>所需的确切数组大小, 应用程序<xref:System.Text.ASCIIEncoding.GetCharCount%2A>将使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-284">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="cca60-285">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-285">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="cca60-286">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-286">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-287">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetCharCount%2A>方法返回对字节数组中的一系列元素进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-287">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-288"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-288"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-289"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-289"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-290">或</span><span class="sxs-lookup"><span data-stu-id="cca60-290">-or-</span></span> 
 <span data-ttu-id="cca60-291"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-291"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="cca60-292">或</span><span class="sxs-lookup"><span data-stu-id="cca60-292">-or-</span></span> 
<span data-ttu-id="cca60-293">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-293">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="cca60-294">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-295">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-295">-and-</span></span> 
 <span data-ttu-id="cca60-296">将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-296"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cca60-297">将一个字节序列解码为一组字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-297">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cca60-298">指向第一个要解码的字节的指针。</span><span class="sxs-lookup"><span data-stu-id="cca60-298">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="cca60-299">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-299">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="cca60-300">一个指针，指向开始写入所产生的字符集的位置。</span><span class="sxs-lookup"><span data-stu-id="cca60-300">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="cca60-301">要写入的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-301">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="cca60-302">将从指定的字节指针开始的一个字节序列解码为一组字符，并从指定的字符指针开始存储这组字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-302">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="cca60-303">在由 <paramref name="chars" /> 指示的位置处写入的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-303">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-304">若要计算存储所生成的字符<xref:System.Text.ASCIIEncoding.GetChars%2A>所需的确切数组大小, 应用程序<xref:System.Text.ASCIIEncoding.GetCharCount%2A>将使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-304">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="cca60-305">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-305">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="cca60-306">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-306">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-307">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-307">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-308">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-308">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-309"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-309"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-310">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-310">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-311">出于安全原因, 建议您的应用程序使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-311">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-312"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-312"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cca60-313">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-313">-or-</span></span> 
 <span data-ttu-id="cca60-314"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-314"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-315"><paramref name="byteCount" /> 或 <paramref name="charCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-315"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cca60-316"><paramref name="charCount" /> 少于所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-316"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="cca60-317">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-317">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-318">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-318">-and-</span></span> 
 <span data-ttu-id="cca60-319">将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-319"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cca60-320">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="cca60-320">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="cca60-321">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="cca60-321">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cca60-322">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-322">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="cca60-323">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-323">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="cca60-324">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-324">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="cca60-325">要用于包含所产生的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-325">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="cca60-326">开始写入所产生的字符集的索引位置。</span><span class="sxs-lookup"><span data-stu-id="cca60-326">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="cca60-327">将指定字节数组中的一个字节序列解码为指定的字符数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-327">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="cca60-328">写入 <paramref name="chars" /> 的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-328">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-329">若要计算存储所生成的字符<xref:System.Text.ASCIIEncoding.GetChars%2A>所需的确切数组大小, 应用程序<xref:System.Text.ASCIIEncoding.GetCharCount%2A>将使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-329">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="cca60-330">若要计算最大数组大小, 应用程序应<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-330">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="cca60-331">方法通常允许分配较少的内存, 而方法<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-331">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-332">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-332">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-333">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-333">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-334"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-334"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-335">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-335">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-336">出于安全原因, 建议您的应用程序使用<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-336">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-337">下面的示例演示如何对字节数组中的一系列元素进行解码, 并将结果存储在 Unicode 字符数组中的一组元素中。</span><span class="sxs-lookup"><span data-stu-id="cca60-337">The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-338"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-338"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="cca60-339">或</span><span class="sxs-lookup"><span data-stu-id="cca60-339">-or-</span></span> 
 <span data-ttu-id="cca60-340"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-340"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-341"><paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-341"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-342">或</span><span class="sxs-lookup"><span data-stu-id="cca60-342">-or-</span></span> 
 <span data-ttu-id="cca60-343"><paramref name="byteindex" /> 和 <paramref name="byteCount" /> 不表示 <paramref name="bytes" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-343"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="cca60-344">或</span><span class="sxs-lookup"><span data-stu-id="cca60-344">-or-</span></span> 
 <span data-ttu-id="cca60-345"><paramref name="charIndex" /> 不是 <paramref name="chars" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-345"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cca60-346"><paramref name="chars" /> 中从 <paramref name="charIndex" /> 到数组结尾没有足够容量来容纳所产生的字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-346"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="cca60-347">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="cca60-347">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-348">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-348">-and-</span></span> 
 <span data-ttu-id="cca60-349">将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-349"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="aSCIIEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cca60-350">获取可以将 ASCII 编码的字节序列转换为 Unicode 字符序列的解码器。</span><span class="sxs-lookup"><span data-stu-id="cca60-350">Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="cca60-351"><see cref="T:System.Text.Decoder" /> 用于将 ASCII 编码的字节序列转换为 Unicode 字符序列。</span><span class="sxs-lookup"><span data-stu-id="cca60-351">A <see cref="T:System.Text.Decoder" /> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-352">方法使用类似于此类的<xref:System.Text.ASCIIEncoding.GetChars%2A>方法的方式将连续字节块转换为连续的字符块。 <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cca60-352">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="cca60-353">但是, 会<xref:System.Text.Decoder>在调用之间维护状态信息, 以便能够正确地对跨块的字节序列进行解码。</span><span class="sxs-lookup"><span data-stu-id="cca60-353">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="cca60-354"><xref:System.Text.Decoder>还保留数据块末尾的尾随字节, 并在下一个解码操作中使用尾随字节。</span><span class="sxs-lookup"><span data-stu-id="cca60-354">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="cca60-355">因此, <xref:System.Text.ASCIIEncoding.GetDecoder%2A>和<xref:System.Text.ASCIIEncoding.GetEncoder%2A>对于网络传输和文件操作非常有用, 因为这些操作经常处理数据块而不是完整的数据流。</span><span class="sxs-lookup"><span data-stu-id="cca60-355">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="cca60-356">了解编码</span><span class="sxs-lookup"><span data-stu-id="cca60-356">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="aSCIIEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cca60-357">获取可将 Unicode 字符序列转换为 ASCII 编码的字节序列的编码器。</span><span class="sxs-lookup"><span data-stu-id="cca60-357">Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="cca60-358">一个 <see cref="T:System.Text.Encoder" />，它将一个 Unicode 字符序列转换为一个 ASCII 编码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="cca60-358">An <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-359">方法使用类似于此类的<xref:System.Text.ASCIIEncoding.GetBytes%2A>方法的方式将顺序块字符转换为顺序字节块。 <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cca60-359">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="cca60-360">但是, <xref:System.Text.Encoder>会在调用之间维护状态信息, 以便能够正确地对跨块的字符序列进行编码。</span><span class="sxs-lookup"><span data-stu-id="cca60-360">However, an <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="cca60-361"><xref:System.Text.Encoder>还保留数据块末尾的尾随字符, 并在下一编码操作中使用尾随字符。</span><span class="sxs-lookup"><span data-stu-id="cca60-361">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="cca60-362">例如, 数据块可能以不匹配的高代理项结束, 并且匹配的低代理项可能位于下一个数据块中。</span><span class="sxs-lookup"><span data-stu-id="cca60-362">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="cca60-363">因此, <xref:System.Text.ASCIIEncoding.GetDecoder%2A>和<xref:System.Text.ASCIIEncoding.GetEncoder%2A>对于网络传输和文件操作非常有用, 因为这些操作经常处理数据块而不是完整的数据流。</span><span class="sxs-lookup"><span data-stu-id="cca60-363">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="cca60-364">了解编码</span><span class="sxs-lookup"><span data-stu-id="cca60-364">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="cca60-365">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="cca60-365">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="cca60-366">计算对指定数目的字符进行编码时产生的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-366">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="cca60-367">对指定数目的字符进行编码所产生的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-367">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-368">方法计算<xref:System.Text.ASCIIEncoding.GetBytes%2A>方法用来存储生成的字节所需的精确数组大小, 而方法则<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>计算最大数组大小。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-368">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to store the resulting bytes, whereas the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="cca60-369">方法通常分配较少的内存, 但<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>方法的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-369">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allocates less memory, but the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-370"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>是最差的事例数, 包括当前所选<xref:System.Text.EncoderFallback>的最糟糕的情况。</span><span class="sxs-lookup"><span data-stu-id="cca60-370"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span>  <span data-ttu-id="cca60-371">如果您选择的是包含可能较大字符串的替换<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>回退, 则可以返回大值。</span><span class="sxs-lookup"><span data-stu-id="cca60-371">If you choose a replacement fallback with a potentially large string, <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="cca60-372"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>方法考虑先前编码操作中的潜在遗留代理项。</span><span class="sxs-lookup"><span data-stu-id="cca60-372">The <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method considers potential leftover surrogates from a previous encoding operation.</span></span> <span data-ttu-id="cca60-373">因此, 如果<xref:System.Text.ASCIIEncoding>对象使用默认的替换回退, 或使用单个可能的回退字符定义了自定义的替换回退, 则该方法将返回`charCount` + 1。</span><span class="sxs-lookup"><span data-stu-id="cca60-373">As a result, if the <xref:System.Text.ASCIIEncoding> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns `charCount` + 1.</span></span> <span data-ttu-id="cca60-374">如果对象使用具有多个可能的回退字符的替换回退, 则该方法将返回*n* \*`charCount` (+ 1), 其中 n 是最大回退字符数。  <xref:System.Text.ASCIIEncoding></span><span class="sxs-lookup"><span data-stu-id="cca60-374">If the <xref:System.Text.ASCIIEncoding> object uses a replacement fallback with more than one possible fallback character, the method returns *n* \* (`charCount` + 1), where *n* is the maximum number of fallback characters.</span></span>  
  
 <span data-ttu-id="cca60-375"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>与<xref:System.Text.ASCIIEncoding.GetChars%2A>之间没有关系。</span><span class="sxs-lookup"><span data-stu-id="cca60-375"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetChars%2A>.</span></span> <span data-ttu-id="cca60-376">如果你的应用程序需要与一起<xref:System.Text.ASCIIEncoding.GetChars%2A>使用的类似函数, 则它应使用。 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-376">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetChars%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cca60-377">`GetMaxByteCount(N)`不一定与相同`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="cca60-377">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-378">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>方法来计算对指定数目的字符进行编码所需的字节。</span><span class="sxs-lookup"><span data-stu-id="cca60-378">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method to calculate the bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-379"><paramref name="charCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-379"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-380">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-380">-or-</span></span> 
<span data-ttu-id="cca60-381">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-381">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="cca60-382">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-382">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="cca60-383">计算对指定数目的字节进行解码时产生的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-383">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="cca60-384">对指定数目的字节进行解码时所产生的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-384">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-385">方法计算<xref:System.Text.ASCIIEncoding.GetChars%2A>方法用于存储所生成的字符的精确数组大小, 而方法则<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>计算最大数组大小。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-385">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetChars%2A> method to store the resulting characters, whereas  the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="cca60-386">方法通常分配较少的内存, 而<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>方法的执行速度通常更快。 <xref:System.Text.ASCIIEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-386">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="cca60-387"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>检索最差事例数, 包括当前所选<xref:System.Text.DecoderFallback>的最糟糕的情况。</span><span class="sxs-lookup"><span data-stu-id="cca60-387"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="cca60-388">如果存在最大回退长度为*n*的解码器回退<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> , 则该方法返回*n* \* `byteCount`。</span><span class="sxs-lookup"><span data-stu-id="cca60-388">If a decoder fallback is present that has a maximum fallback length of *n*, the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method returns *n* \* `byteCount`.</span></span>  
  
 <span data-ttu-id="cca60-389"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>与<xref:System.Text.ASCIIEncoding.GetBytes%2A>之间没有关系。</span><span class="sxs-lookup"><span data-stu-id="cca60-389"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="cca60-390">如果你的应用程序需要与一起<xref:System.Text.ASCIIEncoding.GetBytes%2A>使用的类似函数, 则它应使用。 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="cca60-390">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetBytes%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cca60-391">`GetMaxCharCount(N)`不一定与相同`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="cca60-391">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-392">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>方法来计算对指定数目的字节进行解码所需的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="cca60-392">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method to calculate the maximum number of characters needed to decode a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-393"><paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-393"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-394">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cca60-394">-or-</span></span> 
<span data-ttu-id="cca60-395">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="cca60-395">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] -&gt; string" Usage="aSCIIEncoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 byteIndex, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), byteIndex As Integer, byteCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="aSCIIEncoding.GetString (bytes, byteIndex, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="cca60-396">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="cca60-396">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="cca60-397">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="cca60-397">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="cca60-398">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="cca60-398">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="cca60-399">将字节数组中某个范围的字节解码为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="cca60-399">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="cca60-400">包含指定字节序列解码结果的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-400">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-401">要转换的数据 (如从流中读取的数据) 只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="cca60-401">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="cca60-402">在这种情况下, 或者如果数据量很大以致需要分为较小的块, 则应用程序应<xref:System.Text.Decoder>分别使用<xref:System.Text.ASCIIEncoding.GetDecoder%2A>方法或<xref:System.Text.ASCIIEncoding.GetEncoder%2A>方法<xref:System.Text.Encoder>提供的或。</span><span class="sxs-lookup"><span data-stu-id="cca60-402">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="cca60-403"><xref:System.Text.ASCIIEncoding>不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="cca60-403"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="cca60-404">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号 ("？")。</span><span class="sxs-lookup"><span data-stu-id="cca60-404">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cca60-405">出于安全原因, 应<xref:System.Text.UTF8Encoding>使用、 <xref:System.Text.UnicodeEncoding>或<xref:System.Text.UTF32Encoding>类, <xref:System.Text.ASCIIEncoding>并启用错误检测, 而不是使用类。</span><span class="sxs-lookup"><span data-stu-id="cca60-405">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> classes and enable error detection instead of using the <xref:System.Text.ASCIIEncoding> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca60-406">下面的示例演示如何使用<xref:System.Text.ASCIIEncoding.GetString%2A>方法将字节数组<xref:System.String>转换为。</span><span class="sxs-lookup"><span data-stu-id="cca60-406">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetString%2A> method to convert a byte array into a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CPP/getstring-byte[].cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CS/getstring-byte[].cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/VB/getstring-byte[].vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cca60-407"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-407"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cca60-408"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cca60-408"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="cca60-409">或</span><span class="sxs-lookup"><span data-stu-id="cca60-409">-or-</span></span> 
 <span data-ttu-id="cca60-410"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="cca60-410"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="cca60-411">发生了回退（如需完整说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md) ）</span><span class="sxs-lookup"><span data-stu-id="cca60-411">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="cca60-412">－和－</span><span class="sxs-lookup"><span data-stu-id="cca60-412">-and-</span></span> 
 <span data-ttu-id="cca60-413">将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-413"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public override bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cca60-414">获取一个可以指示当前编码是否使用单字节码位的值。</span><span class="sxs-lookup"><span data-stu-id="cca60-414">Gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value><span data-ttu-id="cca60-415">此属性始终为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="cca60-415">This property is always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca60-416">而不是使用<xref:System.Text.ASCIIEncoding.IsSingleByte%2A>属性来确定编码操作的字节数组的大小以及用于解码操作的字符数组大小 (例如, 使字节数组的大小为<xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* 要编码), <xref:System.Text.ASCIIEncoding.GetByteCount%2A>则应<xref:System.Text.ASCIIEncoding.GetCharCount%2A>为编码操作<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>调用或方法, 并调用用于<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>解码操作的或方法。</span><span class="sxs-lookup"><span data-stu-id="cca60-416">Instead of using the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* the number of characters to be encoded), you should call the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method for encoding operations and the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method for decoding operations.</span></span> <span data-ttu-id="cca60-417">计算所需的<xref:System.Text.ASCIIEncoding>数组大小时, 这些方法会考虑对象的替换回退策略。</span><span class="sxs-lookup"><span data-stu-id="cca60-417">These methods takes the <xref:System.Text.ASCIIEncoding> object's replacement fallback strategy into account when calculating the required array size.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>