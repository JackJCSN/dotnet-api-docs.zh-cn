<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="205829b3aae2ef172509db7e9101c23343aa655f" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68434822" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dbd56-101">为只在桌面 .NET Framework 中可用的代码页提供对编码提供程序的访问权限。</span><span class="sxs-lookup"><span data-stu-id="dbd56-101">Provides access to an encoding provider for code pages that otherwise are available only in the desktop .NET Framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
    
 <span data-ttu-id="dbd56-102">Windows 桌面的 .NET Framework 支持大量的 Unicode 和代码页编码。</span><span class="sxs-lookup"><span data-stu-id="dbd56-102">The .NET Framework for the Windows desktop supports a large set of Unicode and code page encodings.</span></span> <span data-ttu-id="dbd56-103">另一方面, .NET Core 仅支持以下编码:</span><span class="sxs-lookup"><span data-stu-id="dbd56-103">.NET Core, on the other hand, supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="dbd56-104">ASCII (代码页 20127), 由<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-104">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-105">ISO-8859-1 (代码页 28591)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-105">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="dbd56-106">由<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性返回的 utf-7 (代码页 65000)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-106">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-107">Utf-8 (代码页 65001), 由<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-107">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-108">Utf-16 和 utf-16le (代码页 1200), 由<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-108">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-109">Utf-16be (代码页 1201), 它<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>通过调用`bigEndian`值为的`true`或<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>构造函数进行实例化。</span><span class="sxs-lookup"><span data-stu-id="dbd56-109">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="dbd56-110">由<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性返回的32LE 和 utf-32 (代码页 12000)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-110">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-111">32BE (代码页 12001), 该方法通过调用<xref:System.Text.UTF32Encoding> `bigEndian`具有参数的构造函数并在方法调用中提供的`true`值来进行实例化。</span><span class="sxs-lookup"><span data-stu-id="dbd56-111">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="dbd56-112">除代码页20127之外, 不支持代码页编码。</span><span class="sxs-lookup"><span data-stu-id="dbd56-112">Other than code page 20127, code page encodings are not supported.</span></span>  
  
 <span data-ttu-id="dbd56-113"><xref:System.Text.CodePagesEncodingProvider>类扩展<xref:System.Text.EncodingProvider> , 使这些代码页可用于 .net Core。</span><span class="sxs-lookup"><span data-stu-id="dbd56-113">The <xref:System.Text.CodePagesEncodingProvider> class extends <xref:System.Text.EncodingProvider> to make these code pages available to .NET Core.</span></span> <span data-ttu-id="dbd56-114">若要使用这些附加代码页, 请执行以下操作:</span><span class="sxs-lookup"><span data-stu-id="dbd56-114">To use these additional code pages, you do the following:</span></span>  
  
-   <span data-ttu-id="dbd56-115">将对代码页程序集的引用添加到你的项目。</span><span class="sxs-lookup"><span data-stu-id="dbd56-115">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
-   <span data-ttu-id="dbd56-116">从静态<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>属性中检索对象。<xref:System.Text.CodePagesEncodingProvider></span><span class="sxs-lookup"><span data-stu-id="dbd56-116">Retrieve a <xref:System.Text.CodePagesEncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-117">将 <xref:System.Text.CodePagesEncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="dbd56-117">Pass the <xref:System.Text.CodePagesEncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dbd56-118">注册对象之后, 通过调用的<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>重载可以使用它支持的编码; 不应调用<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>重载。 <xref:System.Text.EncodingProvider></span><span class="sxs-lookup"><span data-stu-id="dbd56-118">After an <xref:System.Text.EncodingProvider> object is registered, the encodings that it supports are available by calling the overloads of <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; you should not call the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> overloads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="codepage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbd56-119">获取桌面 .NET Framework 支持但当前 .NET Framework 平台不支持的代码页的编码提供程序。</span><span class="sxs-lookup"><span data-stu-id="dbd56-119">Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.</span></span></summary>
        <value><span data-ttu-id="dbd56-120">允许访问当前 .NET Framework 平台上不支持的编码的编码提供程序。</span><span class="sxs-lookup"><span data-stu-id="dbd56-120">An encoding provider that allows access to encodings not supported on the current .NET Framework platform.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="dbd56-121">Windows 桌面上的 .NET Framework 支持大量字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="dbd56-121">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="dbd56-122">可以通过调用<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法获取完整的编码列表, 该方法可在 Windows 桌面上的完整 .NET Framework 中获得。</span><span class="sxs-lookup"><span data-stu-id="dbd56-122">You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method, which is available in the full .NET Framework on the Windows desktop.</span></span> <span data-ttu-id="dbd56-123">另一方面, .NET Core 默认情况下仅支持以下编码:</span><span class="sxs-lookup"><span data-stu-id="dbd56-123">.NET Core, on the other hand, supports only the following encodings by default:</span></span>  
  
-   <span data-ttu-id="dbd56-124">ASCII (代码页 20127), 由<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-124">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-125">ISO-8859-1 (代码页 28591)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-125">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="dbd56-126">由<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性返回的 utf-7 (代码页 65000)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-126">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-127">Utf-8 (代码页 65001), 由<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-127">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-128">Utf-16 和 utf-16le (代码页 1200), 由<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>属性返回。</span><span class="sxs-lookup"><span data-stu-id="dbd56-128">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-129">Utf-16be (代码页 1201), 它<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>通过调用`bigEndian`值为的`true`或<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>构造函数进行实例化。</span><span class="sxs-lookup"><span data-stu-id="dbd56-129">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="dbd56-130">由<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性返回的32LE 和 utf-32 (代码页 12000)。</span><span class="sxs-lookup"><span data-stu-id="dbd56-130">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-131">32BE (代码页 12001), 该方法通过调用<xref:System.Text.UTF32Encoding> `bigEndian`具有参数的构造函数并在方法调用中提供的`true`值来进行实例化。</span><span class="sxs-lookup"><span data-stu-id="dbd56-131">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="dbd56-132">若要检索在 Windows 桌面的 .NET Framework 中存在但在 .NET Core 中不存在的编码, 请执行以下操作:</span><span class="sxs-lookup"><span data-stu-id="dbd56-132">To retrieve an encoding that is present in the .NET Framework on the Windows desktop but not in .NET Core, you do the following:</span></span>  
  
-   <span data-ttu-id="dbd56-133">将对代码页程序集的引用添加到你的项目。</span><span class="sxs-lookup"><span data-stu-id="dbd56-133">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
-   <span data-ttu-id="dbd56-134">获取静态<xref:System.Text.EncodingProvider> <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>属性中的对象。</span><span class="sxs-lookup"><span data-stu-id="dbd56-134">Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dbd56-135">将对象传递<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>给方法, 以使<xref:System.Text.EncodingProvider>对象提供的编码可供公共语言运行时使用。 <xref:System.Text.EncodingProvider></span><span class="sxs-lookup"><span data-stu-id="dbd56-135">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
-   <span data-ttu-id="dbd56-136"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>调用重载以检索编码。</span><span class="sxs-lookup"><span data-stu-id="dbd56-136">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="dbd56-137">方法将调用相应<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>的方法来确定它是否可以提供请求的编码。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="dbd56-137">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method to determine whether it can supply the requested encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>