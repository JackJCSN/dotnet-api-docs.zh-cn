<Type Name="IObjectHandle" FullName="System.Runtime.Remoting.IObjectHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df5ed07fe54e431693b6c604d8e4734622578e50" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70502278" /></Metadata><TypeSignature Language="C#" Value="public interface IObjectHandle" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectHandle" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.IObjectHandle" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectHandle" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectHandle" />
  <TypeSignature Language="F#" Value="type IObjectHandle = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("C460E2B4-E199-412a-8456-84DC3E4838C3")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f0b9-101">定义用于从间接寻址打开按值封送对象的接口。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-101">Defines the interface for unwrapping marshal-by-value objects from indirection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f0b9-102">按值封送对象可以通过间接寻址返回，允许调用方控制将对象加载到其域的时间。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-102">Marshal-by-value objects can be returned through an indirection, allowing the caller to control when the object is loaded into their domain.</span></span> <span data-ttu-id="8f0b9-103">调用方可以通过此接口从间接寻址解包对象。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-103">The caller can unwrap the object from the indirection through this interface.</span></span>  
  
 <span data-ttu-id="8f0b9-104">实现<xref:System.Runtime.Remoting.IObjectHandle>接口的类可用于在多个应用程序域之间传递对象（处于已包装状态），而无需在每个<xref:System.AppDomain> <xref:System.Runtime.Remoting.IObjectHandle>应用程序域中加载被包装对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-104">The class implementing the <xref:System.Runtime.Remoting.IObjectHandle> interface can be used to pass an object (in a wrapped state) between multiple application domains without loading the metadata for the wrapped object in each <xref:System.AppDomain> through which the <xref:System.Runtime.Remoting.IObjectHandle> travels.</span></span> <span data-ttu-id="8f0b9-105">因此， <xref:System.Runtime.Remoting.IObjectHandle> <xref:System.Type>当远程对象的在其域中加载时，类将为调用方提供控制。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-105">Thus, the <xref:System.Runtime.Remoting.IObjectHandle> class gives the caller control of when the <xref:System.Type> of the remote object is loaded into their domain.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public object Unwrap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Unwrap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.IObjectHandle.Unwrap" />
      <MemberSignature Language="VB.NET" Value="Public Function Unwrap () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Unwrap();" />
      <MemberSignature Language="F#" Value="abstract member Unwrap : unit -&gt; obj" Usage="iObjectHandle.Unwrap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f0b9-106">打开该对象。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-106">Unwraps the object.</span></span></summary>
        <returns><span data-ttu-id="8f0b9-107">已打开的对象。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-107">The unwrapped object.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8f0b9-108"><see cref="T:System.Runtime.Remoting.ObjectHandle" />是远程 <see cref="T:System.MarshalByRefObject" /> 的，由远程处理生存期服务跟踪。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-108">A <see cref="T:System.Runtime.Remoting.ObjectHandle" /> is a remoted <see cref="T:System.MarshalByRefObject" /> and is tracked by the remoting lifetime service.</span></span> <span data-ttu-id="8f0b9-109">如果的<see cref="T:System.Runtime.Remoting.ObjectHandle" />生存期租约过期，则对当前方法的调用可能会失败。</span><span class="sxs-lookup"><span data-stu-id="8f0b9-109">A call to the current method might fail if the lifetime lease on the <see cref="T:System.Runtime.Remoting.ObjectHandle" /> expires.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
