<Type Name="ObjRef" FullName="System.Runtime.Remoting.ObjRef">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ea602fb49397bdb2726d1645d88b49427c0f4c6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69060456" /></Metadata><TypeSignature Language="C#" Value="public class ObjRef : System.Runtime.Serialization.IObjectReference, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ObjRef extends System.Object implements class System.Runtime.Serialization.IObjectReference, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.ObjRef" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjRef&#xA;Implements IObjectReference, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjRef : System::Runtime::Serialization::IObjectReference, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ObjRef = class&#xA;    interface IObjectReference&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IObjectReference</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8cfd5-101">存储生成代理以与远程对象通信所需的所有相关信息。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-101">Stores all relevant information required to generate a proxy in order to communicate with a remote object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-102"><xref:System.Runtime.Remoting.ObjRef>是扩展<xref:System.MarshalByRefObject> (MBR) 的对象的可序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-102">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object that extends <xref:System.MarshalByRefObject> (MBR).</span></span> <span data-ttu-id="8cfd5-103"><xref:System.Runtime.Remoting.ObjRef> 用于<xref:System.AppDomain>跨边界传输对象引用。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-103">A <xref:System.Runtime.Remoting.ObjRef> is used to transfer an object reference across a <xref:System.AppDomain> boundary.</span></span> <span data-ttu-id="8cfd5-104"><xref:System.Runtime.Remoting.ObjRef>为对象创建是封送处理。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-104">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="8cfd5-105">通过向远程处理<xref:System.Runtime.Remoting.ObjRef>基础结构 ( <xref:System.MarshalByRefObject>请参阅<xref:System.Runtime.Remoting.RemotingConfiguration>和<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType>) 注册 mbr 对象, 或隐式创建 (封送 a), 方法是在调用远程对象.</span><span class="sxs-lookup"><span data-stu-id="8cfd5-105">You can create a <xref:System.Runtime.Remoting.ObjRef> (marshal a <xref:System.MarshalByRefObject>) either explicitly, by registering the MBR object with the remoting infrastructure (see <xref:System.Runtime.Remoting.RemotingConfiguration> and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType>), or implicitly, by passing an MBR object as a parameter when calling a remote object.</span></span> <span data-ttu-id="8cfd5-106">远程处理<xref:System.Runtime.Remoting.ObjRef>使用对象来存储和传输有关正在进行远程处理<xref:System.MarshalByRefObject>的所有相关信息。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-106">Remoting uses <xref:System.Runtime.Remoting.ObjRef> objects to store and transmit all the relevant information about the <xref:System.MarshalByRefObject> being remoted.</span></span>  
  
 <span data-ttu-id="8cfd5-107">包含描述要封送处理<xref:System.Type>的对象的和类、其确切位置以及与通信相关的信息的信息, 这些信息介绍如何到达对象所在的远程处理细分。 <xref:System.Runtime.Remoting.ObjRef></span><span class="sxs-lookup"><span data-stu-id="8cfd5-107">The <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, its exact location, and communication-related information on how to reach the remoting subdivision where the object is located.</span></span>  
  
 <span data-ttu-id="8cfd5-108">封送类实现<xref:System.MarshalByRefObject>后, 表示它<xref:System.Runtime.Remoting.ObjRef>的将通过通道传输到另一个应用程序域中, 可能是在另一个进程或计算机中。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-108">After a class implementing <xref:System.MarshalByRefObject> is marshaled, the <xref:System.Runtime.Remoting.ObjRef> that represents it is transferred through a channel into another application domain, possibly in another process or computer.</span></span> <span data-ttu-id="8cfd5-109">当在<xref:System.Runtime.Remoting.ObjRef>目标应用程序域中对进行反序列化 (请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)) 时, 将对其进行分析, 以创建远程 MBR 对象的透明代理。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-109">When the <xref:System.Runtime.Remoting.ObjRef> is deserialized (see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)) in the target application domain, it is parsed to create a transparent proxy for the remote MBR object.</span></span> <span data-ttu-id="8cfd5-110">此操作称为 "取消封送"。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-110">This operation is known as unmarshaling.</span></span>  
  
 <span data-ttu-id="8cfd5-111">透明代理是一个对象, 该对象提供实际对象驻留在客户端空间中的假象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-111">A transparent proxy is an object that provides the illusion that the actual object resides in the client's space.</span></span> <span data-ttu-id="8cfd5-112">它通过使用远程处理基础结构将对其进行的调用转发到实际对象来实现此目标。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-112">It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</span></span> <span data-ttu-id="8cfd5-113">透明代理本身由类型<xref:System.Runtime.Remoting.Proxies.RealProxy>的托管运行时类的实例驻留。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-113">The transparent proxy is itself housed by an instance of a managed run-time class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span> <span data-ttu-id="8cfd5-114"><xref:System.Runtime.Remoting.Proxies.RealProxy>实现从透明代理转发操作所需的部分功能。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-114">The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.</span></span>  
  
 <span data-ttu-id="8cfd5-115">在中, 可以使用代理对象, 而无需考虑中的<xref:System.AppDomain>任何远程处理细分。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-115">A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>.</span></span> <span data-ttu-id="8cfd5-116">应用程序不需要区分代理引用和对象引用。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-116">Applications need not distinguish between proxy references and object references.</span></span> <span data-ttu-id="8cfd5-117">不过, 处理诸如激活、生存期管理和事务等问题的服务提供商需要进行这种区分。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-117">However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.</span></span>  
  
 <span data-ttu-id="8cfd5-118">此类在类级别建立链接要求和继承要求。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="8cfd5-119">当直接调用方或派生类没有基础结构权限时,将引发。<xref:System.Security.SecurityException></span><span class="sxs-lookup"><span data-stu-id="8cfd5-119">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="8cfd5-120">有关安全要求的详细信息, 请参阅[链接要求](~/docs/framework/misc/link-demands.md)和[继承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cfd5-121">下面的代码示例演示如何使用自定义<xref:System.Runtime.Remoting.ObjRef>。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-121">The following code example demonstrates the use of a custom <xref:System.Runtime.Remoting.ObjRef>.</span></span> <span data-ttu-id="8cfd5-122">若要查看测试自定义<xref:System.Runtime.Remoting.ObjRef>的激活代码, 请参阅<xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A>方法的示例。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-122">To view the activation code that tests the custom <xref:System.Runtime.Remoting.ObjRef>, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> method.</span></span>  
  
 [!code-cpp[CreateObjRef2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#1)]
 [!code-vb[CreateObjRef2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8cfd5-123">用于处理基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-123">for operating with infrastructure code.</span></span> <span data-ttu-id="8cfd5-124">要求值: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />;权限值:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="8cfd5-124">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission Value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" />
    <altmember cref="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)" />
    <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8cfd5-125">初始化 <see cref="T:System.Runtime.Remoting.ObjRef" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-125">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjRef();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8cfd5-126">使用默认值初始化 <see cref="T:System.Runtime.Remoting.ObjRef" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-126">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class with default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjRef (MarshalByRefObject o, Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.MarshalByRefObject o, class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (o As MarshalByRefObject, requestedType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjRef(MarshalByRefObject ^ o, Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.ObjRef : MarshalByRefObject * Type -&gt; System.Runtime.Remoting.ObjRef" Usage="new System.Runtime.Remoting.ObjRef (o, requestedType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="o" Type="System.MarshalByRefObject" />
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="8cfd5-127">新的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 实例将引用的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-127">The object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> instance will reference.</span></span></param>
        <param name="requestedType"><span data-ttu-id="8cfd5-128">新的 <see cref="T:System.Type" /> 实例将引用的对象的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-128">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> instance will reference.</span></span></param>
        <summary><span data-ttu-id="8cfd5-129">初始化 <see cref="T:System.Runtime.Remoting.ObjRef" /> 类的新实例以引用指定 <see cref="T:System.MarshalByRefObject" /> 的指定 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-129">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class to reference a specified <see cref="T:System.MarshalByRefObject" /> of a specified <see cref="T:System.Type" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjRef (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjRef(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.ObjRef : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Remoting.ObjRef" Usage="new System.Runtime.Remoting.ObjRef (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8cfd5-130">承载序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-130">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="8cfd5-131">有关异常的源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-131">The contextual information about the source or destination of the exception.</span></span></param>
        <summary><span data-ttu-id="8cfd5-132">用序列化数据初始化 <see cref="T:System.Runtime.Remoting.ObjRef" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-132">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class from serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-133">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-133">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="8cfd5-134">有关详细信息，请参阅 <xref:System.Runtime.Serialization.ISerializable>。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-134">For more information, see <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IChannelInfo ChannelInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IChannelInfo ChannelInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.ChannelInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChannelInfo As IChannelInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Remoting::IChannelInfo ^ ChannelInfo { System::Runtime::Remoting::IChannelInfo ^ get(); void set(System::Runtime::Remoting::IChannelInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelInfo : System.Runtime.Remoting.IChannelInfo with get, set" Usage="System.Runtime.Remoting.ObjRef.ChannelInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IChannelInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cfd5-135">获取或设置 <see cref="T:System.Runtime.Remoting.IChannelInfo" /> 的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-135">Gets or sets the <see cref="T:System.Runtime.Remoting.IChannelInfo" /> for the <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></summary>
        <value><span data-ttu-id="8cfd5-136"><see cref="T:System.Runtime.Remoting.IChannelInfo" /> 的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-136">The <see cref="T:System.Runtime.Remoting.IChannelInfo" /> interface for the <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-137">当创建时<xref:System.Runtime.Remoting.ObjRef> , 当前属性保存由进程中的活动通道提供的信息 (有关封<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>送处理的详细信息, 请参阅)。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-137">The current property holds information contributed by active channels in the process, when the <xref:System.Runtime.Remoting.ObjRef> is created (see <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> for details on marshaling).</span></span> <span data-ttu-id="8cfd5-138">其他进程或应用程序域中的通道可使用此信息来确定是否创建传输接收器来与当前实例所表示的对象进行通信。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-138">This information can be used by the channels in other processes or application domains to decide whether or not to create a transport sink to communicate with the object represented by the current instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomain" />
      </Docs>
    </Member>
    <Member MemberName="EnvoyInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IEnvoyInfo EnvoyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IEnvoyInfo EnvoyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.EnvoyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnvoyInfo As IEnvoyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Remoting::IEnvoyInfo ^ EnvoyInfo { System::Runtime::Remoting::IEnvoyInfo ^ get(); void set(System::Runtime::Remoting::IEnvoyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EnvoyInfo : System.Runtime.Remoting.IEnvoyInfo with get, set" Usage="System.Runtime.Remoting.ObjRef.EnvoyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IEnvoyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cfd5-139">获取或设置 <see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> 的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-139">Gets or sets the <see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> for the <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></summary>
        <value><span data-ttu-id="8cfd5-140"><see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> 的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-140">The <see cref="T:System.Runtime.Remoting.IEnvoyInfo" /> interface for the <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-141">当前属性包含一个序列化的消息接收器链, 在创建代理以表示对象时, 将重新生成该链。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-141">The current property contains a serialized chain of message sinks that gets regenerated when a proxy is created to represent the object.</span></span> <span data-ttu-id="8cfd5-142">这仅用于<xref:System.Runtime.Remoting.Contexts.Context>绑定的对象类型, 表示将此类运行时服务作为事务提供的对象组。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-142">This is used for <xref:System.Runtime.Remoting.Contexts.Context> bound object types only, and represents the groups of objects that provide such run-time services as transactions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Remoting.IEnvoyInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="objRef.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8cfd5-143">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-143">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="8cfd5-144">有关序列化的源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-144">The contextual information about the source or destination of the serialization.</span></span></param>
        <summary><span data-ttu-id="8cfd5-145">用序列化当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例所需的数据来填充指定的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-145">Populates a specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the current <see cref="T:System.Runtime.Remoting.ObjRef" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-146">当前方法用<xref:System.Runtime.Remoting.ObjRef>重新创建所<xref:System.Runtime.Serialization.SerializationInfo>需的所有数据填充所提供的。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-146">The current method fills the provided <xref:System.Runtime.Serialization.SerializationInfo> with all the data needed to recreate the <xref:System.Runtime.Remoting.ObjRef>.</span></span>  
  
 <span data-ttu-id="8cfd5-147">当前方法是的<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>实现。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-147">The current method is an implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8cfd5-148"><paramref name="info" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-148">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8cfd5-149">直接调用方没有序列化格式化程序权限。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-149">The immediate caller does not have serialization formatter permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8cfd5-150">用于提供序列化服务。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-150">for providing serialization services.</span></span> <span data-ttu-id="8cfd5-151">要求值: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="8cfd5-151">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public virtual object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetRealObject : System.Runtime.Serialization.StreamingContext -&gt; obj&#xA;override this.GetRealObject : System.Runtime.Serialization.StreamingContext -&gt; obj" Usage="objRef.GetRealObject context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cfd5-152">当前对象所驻留的上下文。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-152">The context where the current object resides.</span></span></param>
        <summary><span data-ttu-id="8cfd5-153">返回对 <see cref="T:System.Runtime.Remoting.ObjRef" /> 描述的远程对象的引用。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-153">Returns a reference to the remote object that the <see cref="T:System.Runtime.Remoting.ObjRef" /> describes.</span></span></summary>
        <returns><span data-ttu-id="8cfd5-154">对 <see cref="T:System.Runtime.Remoting.ObjRef" /> 描述的远程对象的引用。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-154">A reference to the remote object that the <see cref="T:System.Runtime.Remoting.ObjRef" /> describes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-155">当前方法是在反序列化的修复阶段调用的。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-155">The current method is called during the fix-up stage of deserialization.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8cfd5-156">直接调用方没有序列化格式化程序权限。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-156">The immediate caller does not have serialization formatter permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8cfd5-157">用于提供序列化服务。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-157">for providing serialization services.</span></span> <span data-ttu-id="8cfd5-158">要求值: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="8cfd5-158">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ObjectManager" />
      </Docs>
    </Member>
    <Member MemberName="IsFromThisAppDomain">
      <MemberSignature Language="C#" Value="public bool IsFromThisAppDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFromThisAppDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.IsFromThisAppDomain" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFromThisAppDomain () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFromThisAppDomain();" />
      <MemberSignature Language="F#" Value="member this.IsFromThisAppDomain : unit -&gt; bool" Usage="objRef.IsFromThisAppDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8cfd5-159">返回一个布尔值，该值指示当前的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 实例是否引用位于当前 <see cref="T:System.AppDomain" /> 中的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-159">Returns a Boolean value that indicates whether the current <see cref="T:System.Runtime.Remoting.ObjRef" /> instance references an object located in the current <see cref="T:System.AppDomain" />.</span></span></summary>
        <returns><span data-ttu-id="8cfd5-160">一个布尔值，指示当前的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 实例是否引用位于当前 <see cref="T:System.AppDomain" /> 中的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-160">A Boolean value that indicates whether the current <see cref="T:System.Runtime.Remoting.ObjRef" /> instance references an object located in the current <see cref="T:System.AppDomain" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromThisProcess">
      <MemberSignature Language="C#" Value="public bool IsFromThisProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFromThisProcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.ObjRef.IsFromThisProcess" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFromThisProcess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFromThisProcess();" />
      <MemberSignature Language="F#" Value="member this.IsFromThisProcess : unit -&gt; bool" Usage="objRef.IsFromThisProcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8cfd5-161">返回一个布尔值，该值指示当前的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 实例是否引用位于当前进程中的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-161">Returns a Boolean value that indicates whether the current <see cref="T:System.Runtime.Remoting.ObjRef" /> instance references an object located in the current process.</span></span></summary>
        <returns><span data-ttu-id="8cfd5-162">一个布尔值，指示当前的 <see cref="T:System.Runtime.Remoting.ObjRef" /> 实例是否引用位于当前进程中的对象。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-162">A Boolean value that indicates whether the current <see cref="T:System.Runtime.Remoting.ObjRef" /> instance references an object located in the current process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInfo">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.IRemotingTypeInfo TypeInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.IRemotingTypeInfo TypeInfo" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.TypeInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TypeInfo As IRemotingTypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Remoting::IRemotingTypeInfo ^ TypeInfo { System::Runtime::Remoting::IRemotingTypeInfo ^ get(); void set(System::Runtime::Remoting::IRemotingTypeInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInfo : System.Runtime.Remoting.IRemotingTypeInfo with get, set" Usage="System.Runtime.Remoting.ObjRef.TypeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.IRemotingTypeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cfd5-163">获取或设置 <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> 描述的对象的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-163">Gets or sets the <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> for the object that the <see cref="T:System.Runtime.Remoting.ObjRef" /> describes.</span></span></summary>
        <value><span data-ttu-id="8cfd5-164"><see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> 描述的对象的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-164">The <see cref="T:System.Runtime.Remoting.IRemotingTypeInfo" /> for the object that the <see cref="T:System.Runtime.Remoting.ObjRef" /> describes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-165"><xref:System.Runtime.Remoting.ObjRef.TypeInfo%2A>包含当前<xref:System.Runtime.Remoting.ObjRef>所表示的远程对象的类型的详细信息。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-165"><xref:System.Runtime.Remoting.ObjRef.TypeInfo%2A> contains detailed information about the type of remote object represented by the current <xref:System.Runtime.Remoting.ObjRef>.</span></span> <span data-ttu-id="8cfd5-166">当前属性包含类型所实现的接口的列表以及类型层次结构。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-166">The current property contains a list of interfaces that the type implements, as well as the type hierarchy.</span></span> <span data-ttu-id="8cfd5-167">此信息可用于对代理进行增量优化, 以便调整到远程对象类型的客户端视图。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-167">This information might be used to refine the proxy incrementally to adjust to the client's view of the remote object's type.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="URI">
      <MemberSignature Language="C#" Value="public virtual string URI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string URI" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.ObjRef.URI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property URI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ URI { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.URI : string with get, set" Usage="System.Runtime.Remoting.ObjRef.URI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cfd5-168">获取或设置特定对象实例的 URI。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-168">Gets or sets the URI of the specific object instance.</span></span></summary>
        <value><span data-ttu-id="8cfd5-169">特定对象实例的 URI。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-169">The URI of the specific object instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cfd5-170">URI 用于唯一标识特定对象实例。</span><span class="sxs-lookup"><span data-stu-id="8cfd5-170">A URI uniquely identifies the specific object instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef/CPP/example.cpp#1)]
 [!code-csharp[CreateObjRef#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>
