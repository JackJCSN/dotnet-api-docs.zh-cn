<Type Name="MouseDevice" FullName="System.Windows.Input.MouseDevice">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc2e4f066b0fe1e22272c555b7cbc3fc71447c97" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69170564" /></Metadata><TypeSignature Language="C#" Value="public abstract class MouseDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MouseDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MouseDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseDevice abstract : System::Windows::Input::InputDevice" />
  <TypeSignature Language="F#" Value="type MouseDevice = class&#xA;    inherit InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c108-101">表示鼠标设备。</span><span class="sxs-lookup"><span data-stu-id="7c108-101">Represents a mouse device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-102"><xref:System.Windows.Input.MouseDevice> 支持基础结构,不应在[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="7c108-102">The <xref:System.Windows.Input.MouseDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="7c108-103">对于与鼠标相关的输入, <xref:System.Windows.Input.Mouse>请使用类。</span><span class="sxs-lookup"><span data-stu-id="7c108-103">For mouse related input, use the <xref:System.Windows.Input.Mouse> class.</span></span>  <span data-ttu-id="7c108-104"><xref:System.Windows.Input.Mouse>类表示应用程序的鼠标, 并提供反映鼠标状态的方法、属性和事件。</span><span class="sxs-lookup"><span data-stu-id="7c108-104">The <xref:System.Windows.Input.Mouse> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-105">获取报告此设备的输入的 <see cref="T:System.Windows.PresentationSource" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-105">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="7c108-106">此设备的输入源。</span><span class="sxs-lookup"><span data-stu-id="7c108-106">The source of input for this device.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="7c108-107">用于获取活动源。</span><span class="sxs-lookup"><span data-stu-id="7c108-107">for getting the active source.</span></span>  <span data-ttu-id="7c108-108">关联的枚举:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="7c108-108">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c108-109">将鼠标输入捕获到指定元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-109">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-110">当某个元素捕获鼠标时, 它将接收鼠标输入, 无论光标是否在其边界内。</span><span class="sxs-lookup"><span data-stu-id="7c108-110">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7c108-111">如果未指定, 则默认值<xref:System.Windows.Input.CaptureMode>为<xref:System.Windows.Input.CaptureMode.Element>。 <xref:System.Windows.Input.CaptureMode></span><span class="sxs-lookup"><span data-stu-id="7c108-111">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="7c108-112">若要释放鼠标捕获, <xref:System.Windows.Input.MouseDevice.Capture%2A>请`null`调用作为要捕获的元素传递。</span><span class="sxs-lookup"><span data-stu-id="7c108-112">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7c108-113">如果在引发<xref:System.Windows.Input.Mouse.MouseDown>或<xref:System.Windows.Input.Mouse.MouseUp>事件时捕获鼠标, 并且输入不会转到鼠标<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>下的元素, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>则首先引发。</span><span class="sxs-lookup"><span data-stu-id="7c108-113">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7c108-114">这使得捕获的元素有机会在路由<xref:System.Windows.Input.Mouse.MouseDown>和<xref:System.Windows.Input.Mouse.MouseUp>事件之前释放捕获。</span><span class="sxs-lookup"><span data-stu-id="7c108-114">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="mouseDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7c108-115">要捕获鼠标的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-115">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="7c108-116">将鼠标事件捕获到指定元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-116">Captures mouse events to the specified element.</span></span></summary>
        <returns><span data-ttu-id="7c108-117">如果元素能够捕获鼠标，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-117"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-118">当某个元素捕获鼠标时, 它将接收鼠标输入, 无论光标是否在其边框内</span><span class="sxs-lookup"><span data-stu-id="7c108-118">When an element captures the mouse, it receives mouse input whether the cursor is within its borders</span></span>  
  
 <span data-ttu-id="7c108-119">如果未指定, 则默认值<xref:System.Windows.Input.CaptureMode>为<xref:System.Windows.Input.CaptureMode.Element>。 <xref:System.Windows.Input.CaptureMode></span><span class="sxs-lookup"><span data-stu-id="7c108-119">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="7c108-120">若要释放鼠标捕获, <xref:System.Windows.Input.MouseDevice.Capture%2A>请`null`调用作为要捕获的元素传递。</span><span class="sxs-lookup"><span data-stu-id="7c108-120">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7c108-121">如果在引发<xref:System.Windows.Input.Mouse.MouseDown>或<xref:System.Windows.Input.Mouse.MouseUp>事件时捕获鼠标, 并且输入不会转到鼠标<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>下的元素, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>则首先引发。</span><span class="sxs-lookup"><span data-stu-id="7c108-121">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7c108-122">这使得捕获的元素有机会在路由<xref:System.Windows.Input.Mouse.MouseDown>和<xref:System.Windows.Input.Mouse.MouseUp>事件之前释放捕获。</span><span class="sxs-lookup"><span data-stu-id="7c108-122">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c108-123"><paramref name="element" /> 不是 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-123"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="mouseDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7c108-124">要捕获鼠标的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-124">The element to capture the mouse.</span></span></param>
        <param name="captureMode"><span data-ttu-id="7c108-125">要使用的捕获策略。</span><span class="sxs-lookup"><span data-stu-id="7c108-125">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="7c108-126">使用指定的 <see cref="T:System.Windows.Input.CaptureMode" /> 将鼠标输入捕获到指定元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-126">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="7c108-127">如果元素能够捕获鼠标，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-127"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-128">当某个元素捕获鼠标时, 它将接收鼠标输入, 无论光标是否在其边界内。</span><span class="sxs-lookup"><span data-stu-id="7c108-128">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="7c108-129">若要释放鼠标捕获, <xref:System.Windows.Input.MouseDevice.Capture%2A>请`null`调用作为要捕获的元素传递。</span><span class="sxs-lookup"><span data-stu-id="7c108-129">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="7c108-130">如果在引发<xref:System.Windows.Input.Mouse.MouseDown>或<xref:System.Windows.Input.Mouse.MouseUp>事件时捕获鼠标, 并且输入不会转到鼠标<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>下的元素, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>则首先引发。</span><span class="sxs-lookup"><span data-stu-id="7c108-130">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="7c108-131">这使得捕获的元素有机会在路由<xref:System.Windows.Input.Mouse.MouseDown>和<xref:System.Windows.Input.Mouse.MouseUp>事件之前释放捕获。</span><span class="sxs-lookup"><span data-stu-id="7c108-131">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c108-132"><paramref name="element" /> 不是 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-132"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="7c108-133"><paramref name="captureMode" /> 不是有效的 <see cref="T:System.Windows.Input.CaptureMode" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-133"><paramref name="captureMode" /> is not a valid <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-134">获取由鼠标捕获的 <see cref="T:System.Windows.IInputElement" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-134">Gets the <see cref="T:System.Windows.IInputElement" /> that is captured by the mouse.</span></span></summary>
        <value><span data-ttu-id="7c108-135">鼠标捕获的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-135">The element which is captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-136">当某个元素捕获鼠标时, 它将接收鼠标输入, 无论光标是否在其边界内。</span><span class="sxs-lookup"><span data-stu-id="7c108-136">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-137">获取鼠标指针正好悬停的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-137">Gets the element that the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="7c108-138">鼠标指针悬停的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-138">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-139">如果已将鼠标捕获到该元素, 则会直接将鼠标置于元素上。</span><span class="sxs-lookup"><span data-stu-id="7c108-139">The mouse is considered directly over an element if the mouse has been captured to that element.</span></span>  
  
 <span data-ttu-id="7c108-140">控件可以包含多个元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-140">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="7c108-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A>报告复合控件中的鼠标指针位于的特定元素, 而不是控件本身。</span><span class="sxs-lookup"><span data-stu-id="7c108-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span>  <span data-ttu-id="7c108-142">例如, 根据指针的<xref:System.Windows.Controls.Button>哪一部分<xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> , 属性<xref:System.Windows.Controls.ContentControl.Content%2A>可能会报告<xref:System.Windows.Controls.TextBox>属性或<xref:Microsoft.Windows.Themes.ButtonChrome>的。</span><span class="sxs-lookup"><span data-stu-id="7c108-142">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="7c108-143">使用和<xref:System.Windows.IInputElement.IsMouseOver%2A> 上<xref:System.Windows.ContentElement>的属性来确定鼠标是否位于元素上, 该元素包括其可视子元素或控件复合元素。 <xref:System.Windows.UIElement></span><span class="sxs-lookup"><span data-stu-id="7c108-143">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Input.MouseButtonState GetButtonState(valuetype System.Windows.Input.MouseButton mouseButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Input::MouseButtonState GetButtonState(System::Windows::Input::MouseButton mouseButton);" />
      <MemberSignature Language="F#" Value="member this.GetButtonState : System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonState" Usage="mouseDevice.GetButtonState mouseButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mouseButton" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouseButton"><span data-ttu-id="7c108-144">被查询的按钮。</span><span class="sxs-lookup"><span data-stu-id="7c108-144">The button which is being queried.</span></span></param>
        <summary><span data-ttu-id="7c108-145">获取指定鼠标按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-145">Gets the state of the specified mouse button.</span></span></summary>
        <returns><span data-ttu-id="7c108-146">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-146">The state of the button.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClientPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c108-147">计算鼠标指针的位置（采用客户端坐标）。</span><span class="sxs-lookup"><span data-stu-id="7c108-147">Calculates the position of the mouse pointer, in client coordinates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetClientPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition();" />
      <MemberSignature Language="F#" Value="member this.GetClientPosition : unit -&gt; System.Windows.Point" Usage="mouseDevice.GetClientPosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c108-148">计算鼠标指针的位置（采用客户端坐标）。</span><span class="sxs-lookup"><span data-stu-id="7c108-148">Calculates the position of the mouse pointer, in client coordinates.</span></span></summary>
        <returns><span data-ttu-id="7c108-149">鼠标指针的位置（采用客户端坐标）。</span><span class="sxs-lookup"><span data-stu-id="7c108-149">The position of the mouse pointer, in client coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition(class System.Windows.PresentationSource presentationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition(System::Windows::PresentationSource ^ presentationSource);" />
      <MemberSignature Language="F#" Value="member this.GetClientPosition : System.Windows.PresentationSource -&gt; System.Windows.Point" Usage="mouseDevice.GetClientPosition presentationSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentationSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="presentationSource"><span data-ttu-id="7c108-150">要在其中获取鼠标位置的源。</span><span class="sxs-lookup"><span data-stu-id="7c108-150">The source in which to obtain the mouse position.</span></span></param>
        <summary><span data-ttu-id="7c108-151">计算鼠标指针在指定 <see cref="T:System.Windows.PresentationSource" /> 中的位置（采用客户端坐标）。</span><span class="sxs-lookup"><span data-stu-id="7c108-151">Calculates the position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span></span></summary>
        <returns><span data-ttu-id="7c108-152">鼠标指针在指定 <see cref="T:System.Windows.PresentationSource" /> 中的位置（采用客户端坐标）。</span><span class="sxs-lookup"><span data-stu-id="7c108-152">The position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="mouseDevice.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="7c108-153">要在其中计算鼠标位置的参考框架。</span><span class="sxs-lookup"><span data-stu-id="7c108-153">The frame of reference in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="7c108-154">获取与指定元素相对的鼠标位置。</span><span class="sxs-lookup"><span data-stu-id="7c108-154">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="7c108-155">与参数 <paramref name="relativeTo" /> 相对的鼠标位置。</span><span class="sxs-lookup"><span data-stu-id="7c108-155">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-156">鼠标指针的位置相对于指定<xref:System.Windows.IInputElement>的计算, 其左上角的元素是原点, 0, 0。</span><span class="sxs-lookup"><span data-stu-id="7c108-156">The position of the mouse pointer is calculated relative to the specified <xref:System.Windows.IInputElement> with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c108-157"><paramref name="relativeTo" /> 为 <see langword="null" />，或不为 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-157"><paramref name="relativeTo" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetScreenPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetScreenPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetScreenPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetScreenPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetScreenPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetScreenPosition();" />
      <MemberSignature Language="F#" Value="member this.GetScreenPosition : unit -&gt; System.Windows.Point" Usage="mouseDevice.GetScreenPosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c108-158">计算鼠标指针的屏幕位置。</span><span class="sxs-lookup"><span data-stu-id="7c108-158">Calculates the screen position of the mouse pointer.</span></span></summary>
        <returns><span data-ttu-id="7c108-159">鼠标指针的位置。</span><span class="sxs-lookup"><span data-stu-id="7c108-159">The position of the mouse pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-160">获取此鼠标设备鼠标左键的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-160">Gets the state of the left mouse button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="7c108-161">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-161">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-162">获取此鼠标设备鼠标中键的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-162">The state of the middle button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="7c108-163">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-163">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-164">获取或设置整个应用程序的光标。</span><span class="sxs-lookup"><span data-stu-id="7c108-164">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="7c108-165">如果没有设置 <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" />，则为重写光标或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-165">The override cursor or <see langword="null" /> if <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-166"><xref:System.Windows.Input.Cursor> 设置为的将应用<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A>于整个应用程序。</span><span class="sxs-lookup"><span data-stu-id="7c108-166">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="7c108-167">若要清除替代<xref:System.Windows.Input.Cursor>, 请<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A>将`null`设置为。</span><span class="sxs-lookup"><span data-stu-id="7c108-167">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="7c108-168">设置<xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> 为<xref:System.Windows.Input.Cursors.None%2A>将强制鼠标光标不显示, 但仍会处理鼠标事件。</span><span class="sxs-lookup"><span data-stu-id="7c108-168">Setting <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-169">获取此鼠标设备鼠标右键的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-169">Gets the state of the right button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="7c108-170">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-170">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="member this.SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="mouseDevice.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="7c108-171">要将鼠标指针设置为的光标。</span><span class="sxs-lookup"><span data-stu-id="7c108-171">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="7c108-172">将鼠标指针设置为指定的 <see cref="T:System.Windows.Input.Cursor" /></span><span class="sxs-lookup"><span data-stu-id="7c108-172">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" /></span></span></summary>
        <returns><span data-ttu-id="7c108-173">如果设置鼠标光标，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-173"><see langword="true" /> if the mouse cursor is set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-174">请注意, 此游标不会应用任何<xref:System.Windows.UIElement>特定的, 而是应用于整个应用程序。</span><span class="sxs-lookup"><span data-stu-id="7c108-174">Note that this cursor does not apply any particular <xref:System.Windows.UIElement>, but rather it applies to the whole application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="mouseDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c108-175">强制同步鼠标重新。</span><span class="sxs-lookup"><span data-stu-id="7c108-175">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-176">监视器布局发生更改并调用<xref:System.Windows.Input.MouseDevice.Synchronize%2A>。 <xref:System.Windows.Input.MouseDevice></span><span class="sxs-lookup"><span data-stu-id="7c108-176">The <xref:System.Windows.Input.MouseDevice> monitors layout changes and calls <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span></span>  <span data-ttu-id="7c108-177">在某些情况下, 必须强制对鼠标输入系统进行更新以响应更改。</span><span class="sxs-lookup"><span data-stu-id="7c108-177">There are cases in which the mouse input system must be forced to update for it to respond to changes.</span></span>  <span data-ttu-id="7c108-178">例如, 必须在计时器上重新同步鼠标。</span><span class="sxs-lookup"><span data-stu-id="7c108-178">For example, you must resynchronize the mouse on a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-179">获取要将此鼠标设备的输入发送到的 <see cref="T:System.Windows.IInputElement" />。</span><span class="sxs-lookup"><span data-stu-id="7c108-179">Gets the <see cref="T:System.Windows.IInputElement" /> that the input from this mouse device is sent to.</span></span></summary>
        <value><span data-ttu-id="7c108-180">接收输入的元素。</span><span class="sxs-lookup"><span data-stu-id="7c108-180">The element that receives the input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c108-181">的目标<xref:System.Windows.Input.MouseDevice>是鼠标位于其上的对象或带有鼠标捕获的对象。</span><span class="sxs-lookup"><span data-stu-id="7c108-181">The target for a <xref:System.Windows.Input.MouseDevice> is the object the mouse is over or the object with mouse capture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberSignature Language="F#" Value="member this.UpdateCursor : unit -&gt; unit" Usage="mouseDevice.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c108-182">强制更新鼠标光标。</span><span class="sxs-lookup"><span data-stu-id="7c108-182">Forces the mouse cursor to update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-183">获取此鼠标设备第一个扩展按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-183">Gets the state of the first extended button on this mouse device.</span></span></summary>
        <value><span data-ttu-id="7c108-184">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-184">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c108-185">获取此鼠标设备第二个扩展按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-185">Gets the state of the second extended button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="7c108-186">按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="7c108-186">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
