<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35a60f0f769f573b1f328dd308f71d2e5bb1bf4b" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64203624" /></Metadata><TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为报告鼠标设备的鼠标滚轮增量值更改的各事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseWheelEventArgs> 用于以下事件：  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> （附加的事件）  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> （附加的事件）  
  
 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>属性为正; 如果向上移动鼠标滚轮或向前 （远离用户） 或负如果向下移动鼠标滚轮或向后 （朝向用户）。  
  
 即使对于小型鼠标滚轮的移动，将引发此事件。 在某些情况下，最好实现通过检查增量是否超过特定阈值限制小鼠标滚轮增量数据的处理程序。 否则，可能会调用该处理程序的鼠标滚轮增量已绑定到鼠标滚轮移动任何 UI 不会更新非常小的情况。 如何完全在一个处理程序中实现的阈值行为和该阈值应是完全特定于实现。  
  
   
  
## Examples  
 下面的示例将<xref:System.Windows.Controls.TextBox>如果鼠标滚轮<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>为正，移动<xref:System.Windows.Controls.TextBox>下如果鼠标滚轮<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>为负。 <xref:System.Windows.Controls.TextBox>附加到<xref:System.Windows.Controls.Canvas>。  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">与此事件关联的鼠标设备。</param>
        <param name="timestamp">发生输入的时间。</param>
        <param name="delta">鼠标滚轮的变更量。</param>
        <summary>初始化 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示鼠标滚轮变更量的值。</summary>
        <value>鼠标滚轮的变更量。 如果鼠标滚轮朝上旋转（背离用户的方向），则该值为正；如果鼠标滚轮朝下旋转（朝着用户的方向），则该值为负。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值的有效上限和下限范围可能来自设备实现或其他调用方引发事件，并因此未定义。  
  
   
  
## Examples  
 下面的示例将<xref:System.Windows.Controls.TextBox>如果鼠标滚轮<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>为正，移动<xref:System.Windows.Controls.TextBox>下如果鼠标滚轮<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>为负。 <xref:System.Windows.Controls.TextBox>附加到<xref:System.Windows.Controls.Canvas>。  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">以特定于类型的方式调用的一般处理程序。</param>
        <param name="genericTarget">要对其调用处理程序的目标。</param>
        <summary>以特定于类型的方式调用事件处理程序，这样做可以提高事件系统效率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现将强制转换为泛型处理程序<xref:System.Windows.Input.MouseWheelEventHandler>，然后调用它。 有关此实现模式以及它的原因的详细信息，请参阅<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>并[路由事件概述](~/docs/framework/wpf/advanced/routed-events-overview.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>