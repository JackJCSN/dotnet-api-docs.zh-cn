<Type Name="TouchEventArgs" FullName="System.Windows.Input.TouchEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="145e55d71b67dc3869e89c334abd560aa941582c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69169019" /></Metadata><TypeSignature Language="C#" Value="public class TouchEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TouchEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TouchEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchEventArgs : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type TouchEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="521c3-101">为触摸屏输入事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="521c3-101">Provides data for touch input events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521c3-102">以下事件使用<xref:System.Windows.Input.TouchEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="521c3-102">The following events use <xref:System.Windows.Input.TouchEventArgs>.</span></span>  
  
-   <xref:System.Windows.UIElement.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.TouchMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.TouchMove?displayProperty=nameWithType>  
  
   
  
## Examples  
 <span data-ttu-id="521c3-103">下面的示例处理<xref:System.Windows.UIElement.TouchUp>中发生<xref:System.Windows.Controls.Canvas>的事件。</span><span class="sxs-lookup"><span data-stu-id="521c3-103">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="521c3-104">它检查<xref:System.Windows.Input.TouchDevice.Captured%2A>属性以验证引发事件的设备是否被捕获<xref:System.Windows.Controls.Canvas>到。</span><span class="sxs-lookup"><span data-stu-id="521c3-104">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="521c3-105">如果为, <xref:System.Windows.Input.TouchDevice>则释放。</span><span class="sxs-lookup"><span data-stu-id="521c3-105">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="521c3-106">此示例是<xref:System.Windows.Input.TouchDevice>类概述中提供的一个更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="521c3-106">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TouchEventArgs (System.Windows.Input.TouchDevice touchDevice, int timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.TouchDevice touchDevice, int32 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TouchEventArgs(System::Windows::Input::TouchDevice ^ touchDevice, int timestamp);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchEventArgs : System.Windows.Input.TouchDevice * int -&gt; System.Windows.Input.TouchEventArgs" Usage="new System.Windows.Input.TouchEventArgs (touchDevice, timestamp)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="521c3-107">要与此事件关联的输入设备。</span><span class="sxs-lookup"><span data-stu-id="521c3-107">The input device to associate with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="521c3-108">发生输入的时间。</span><span class="sxs-lookup"><span data-stu-id="521c3-108">The time when the input occurred.</span></span></param>
        <summary><span data-ttu-id="521c3-109">初始化 <see cref="T:System.Windows.Input.TouchEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="521c3-109">Initializes a new instance of the <see cref="T:System.Windows.Input.TouchEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchEventArgs.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="521c3-110">用于定义坐标空间的元素。</span><span class="sxs-lookup"><span data-stu-id="521c3-110">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="521c3-111">返回在最近触摸事件与上一个触摸事件之间收集到的所有触点。</span><span class="sxs-lookup"><span data-stu-id="521c3-111">Returns all touch points that were collected between the most recent and previous touch events.</span></span></summary>
        <returns><span data-ttu-id="521c3-112">在最近触摸事件与上一个触摸事件之间收集到的所有触点。</span><span class="sxs-lookup"><span data-stu-id="521c3-112">All touch points that were collected between the most recent and previous touch events.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchEventArgs.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="521c3-113">用于定义坐标空间的元素。</span><span class="sxs-lookup"><span data-stu-id="521c3-113">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="521c3-114">返回触摸设备相对于指定元素的当前位置。</span><span class="sxs-lookup"><span data-stu-id="521c3-114">Returns the current position of the touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="521c3-115">触摸设备相对于指定元素的当前位置。</span><span class="sxs-lookup"><span data-stu-id="521c3-115">The current position of the touch device relative to the specified element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="touchEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="521c3-116">以特定于类型的方式调用的一般处理程序。</span><span class="sxs-lookup"><span data-stu-id="521c3-116">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="521c3-117">要对其调用处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="521c3-117">The target on which to call the handler.</span></span></param>
        <summary><span data-ttu-id="521c3-118">以特定于类型的方式调用事件处理程序，这样做可以提高事件系统效率。</span><span class="sxs-lookup"><span data-stu-id="521c3-118">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521c3-119">此实现将泛型处理程序强制转换<xref:System.EventHandler%601>为类型<xref:System.Windows.Input.TouchEventArgs>的, 然后调用它。</span><span class="sxs-lookup"><span data-stu-id="521c3-119">This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it.</span></span> <span data-ttu-id="521c3-120">有关此实现模式及其原因的详细信息, 请参阅<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由事件概述](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="521c3-120">For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchDevice TouchDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.TouchDevice TouchDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchEventArgs.TouchDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchDevice As TouchDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::TouchDevice ^ TouchDevice { System::Windows::Input::TouchDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchDevice : System.Windows.Input.TouchDevice" Usage="System.Windows.Input.TouchEventArgs.TouchDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="521c3-121">获取生成事件的触摸设备。</span><span class="sxs-lookup"><span data-stu-id="521c3-121">Gets the touch that generated the event.</span></span></summary>
        <value><span data-ttu-id="521c3-122">生成事件的触摸设备。</span><span class="sxs-lookup"><span data-stu-id="521c3-122">The touch that generated the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="521c3-123">下面的示例处理<xref:System.Windows.UIElement.TouchUp>中发生<xref:System.Windows.Controls.Canvas>的事件。</span><span class="sxs-lookup"><span data-stu-id="521c3-123">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="521c3-124">它检查<xref:System.Windows.Input.TouchDevice.Captured%2A>属性以验证引发事件的设备是否被捕获<xref:System.Windows.Controls.Canvas>到。</span><span class="sxs-lookup"><span data-stu-id="521c3-124">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="521c3-125">如果为, <xref:System.Windows.Input.TouchDevice>则释放。</span><span class="sxs-lookup"><span data-stu-id="521c3-125">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="521c3-126">此示例是<xref:System.Windows.Input.TouchDevice>类概述中提供的一个更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="521c3-126">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
