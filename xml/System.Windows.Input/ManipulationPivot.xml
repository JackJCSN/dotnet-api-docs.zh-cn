<Type Name="ManipulationPivot" FullName="System.Windows.Input.ManipulationPivot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d78fa101c33a220f5da2890a930fb82e81cfd836" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64266949" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationPivot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationPivot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationPivot" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationPivot" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationPivot" />
  <TypeSignature Language="F#" Value="type ManipulationPivot = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定如何使用一个用户输入点发生旋转。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType>属性是<xref:System.Windows.Input.ManipulationPivot>。 当您将设置<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A>中的事件处理程序<xref:System.Windows.UIElement.ManipulationStarting>事件中，当用户在操作过程中使用一个手指，操作将包含轮换数据。  这是为了模拟真实情况下，可以使用一个手指来旋转对象，例如一张纸上一个表。  如果<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A>是`null`，用户必须使用两根手指进行旋转。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序<xref:System.Windows.UIElement.ManipulationStarting>事件和集<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType>属性。 若要测试此示例中，按照中的步骤[演练：创建在第一个触控应用程序](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)和在步骤 4 中的代码替换此代码。  
  
 [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]
 [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.ManipulationPivot" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationPivot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationPivot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.ManipulationPivot" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot (System.Windows.Point center, double radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point center, float64 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationPivot.#ctor(System.Windows.Point,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (center As Point, radius As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationPivot(System::Windows::Point center, double radius);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationPivot : System.Windows.Point * double -&gt; System.Windows.Input.ManipulationPivot" Usage="new System.Windows.Input.ManipulationPivot (center, radius)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="center" Type="System.Windows.Point" />
        <Parameter Name="radius" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="center">单点操作的中心。</param>
        <param name="radius">数据附近的区域，用于确定单一触点启动操作时所发生的旋转量和转换量。</param>
        <summary>用单点操作的指定点初始化 <see cref="T:System.Windows.Input.ManipulationPivot" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Center">
      <MemberSignature Language="C#" Value="public System.Windows.Point Center { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Center" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationPivot.Center" />
      <MemberSignature Language="VB.NET" Value="Public Property Center As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Center { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Center : System.Windows.Point with get, set" Usage="System.Windows.Input.ManipulationPivot.Center" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单点操作的中心。</summary>
        <value>单点操作的中心。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public double Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationPivot.Radius" />
      <MemberSignature Language="VB.NET" Value="Public Property Radius As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Radius { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Radius : double with get, set" Usage="System.Windows.Input.ManipulationPivot.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置轴附近的区域，此区域用于确定单一触点启动操作时所发生的旋转量和转换量。</summary>
        <value>数据附近的区域，用于确定单一触点启动操作时所发生的旋转量和转换量。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>