<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83d83150d64a10e751976181c0d5499bc4228676" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69173063" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad2eb-101">提供一组静态方法、附加属性和事件，用于确定和设置焦点范围以及设置该范围内具有焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-102">在 Windows Presentation Foundation (WPF) 中, 有两个与焦点有关的概念: 键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="ad2eb-103">键盘焦点适用于当前正在接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="ad2eb-104">只能有一个具有键盘焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="ad2eb-105">此具有键盘焦点<xref:System.Windows.IInputElement.IsKeyboardFocused%2A>的元素设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="ad2eb-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType>返回具有键盘焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="ad2eb-107">逻辑焦点适用于特定<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>焦点范围内的。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="ad2eb-108">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-109">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-110">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-111">可以有多个具有逻辑焦点的元素, 但在单个焦点范围内只能有一个具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="ad2eb-112">具有逻辑焦点的元素不一定具有键盘焦点, 但具有键盘焦点的元素将具有逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="ad2eb-113">可以在焦点范围内定义焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="ad2eb-114">在这种情况下, 父焦点范围和子焦点范围都可以具有<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad2eb-115">下面的方案演示<xref:System.Windows.Window>了如何在具有<xref:System.Windows.Controls.TextBox>具有<xref:System.Windows.Controls.MenuItem>和<xref:System.Windows.Controls.Menu>的的 WPF 应用程序中, 键盘焦点和逻辑焦点发生变化。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="ad2eb-116">当键盘焦点<xref:System.Windows.Controls.TextBox>从更改<xref:System.Windows.Controls.MenuItem>为时, 会失去<xref:System.Windows.Controls.TextBox> <xref:System.Windows.Window>键盘焦点, 但会保留焦点范围的逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="ad2eb-117">获取键盘焦点并获得<xref:System.Windows.Controls.Menu>焦点范围的逻辑焦点。 <xref:System.Windows.Controls.MenuItem></span><span class="sxs-lookup"><span data-stu-id="ad2eb-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="ad2eb-118">当键盘焦点返回到根<xref:System.Windows.Window>时, 焦点范围中<xref:System.Windows.Window>具有逻辑焦点的元素将获取键盘焦点, <xref:System.Windows.Controls.TextBox>在本例中为。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="ad2eb-119"><xref:System.Windows.Controls.TextBox>现在具有键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="ad2eb-120">失去键盘焦点, 但保留<xref:System.Windows.Controls.Menu>焦点范围的逻辑焦点。 <xref:System.Windows.Controls.MenuItem></span><span class="sxs-lookup"><span data-stu-id="ad2eb-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="ad2eb-121"><xref:System.Windows.Window>、 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 、<xref:System.Windows.Controls.Menu>和上的的默认值为`true`。 <xref:System.Windows.Controls.ToolBar> <xref:System.Windows.Controls.ContextMenu></span><span class="sxs-lookup"><span data-stu-id="ad2eb-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-122">有关焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)和[焦点概述](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-123">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="ad2eb-124">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="ad2eb-125">为 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-126">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="ad2eb-127">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="ad2eb-128">为 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad2eb-129">确定此属性附加到的元素是否具有逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-129">Determines whether the element this property is attached to has logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-130"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="ad2eb-131">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ad2eb-132">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ad2eb-133">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ad2eb-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>和<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>可用于获取和设置指定焦点范围内的聚焦元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ad2eb-135">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="ad2eb-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ad2eb-136">标识符字段</span><span class="sxs-lookup"><span data-stu-id="ad2eb-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="ad2eb-137">元数据属性设置为`true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="ad2eb-138">None</span><span class="sxs-lookup"><span data-stu-id="ad2eb-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ad2eb-139">下面的示例演示如何使成为<xref:System.Windows.Controls.Button>焦点元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad2eb-140">标识 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-141">在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-141">The element with logical focus in the specified focus scope.</span></span></param>
        <summary><span data-ttu-id="ad2eb-142">获取在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-142">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="ad2eb-143">在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-143">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-144"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="ad2eb-145">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-145">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ad2eb-146">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-146">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ad2eb-147">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-147">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ad2eb-148">如果`element`不是焦点范围, 则此方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-148">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="ad2eb-149">使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, 指定在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-149">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad2eb-150">下面的示例使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>来设置具有逻辑焦点的元素, 并<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>使用来获取具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-150">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad2eb-151"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-151"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-152">要获取其最接近的焦点范围的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-152">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="ad2eb-153">确定指定元素的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" /> 的最接近的上级。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-153">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="ad2eb-154">指定元素的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-154">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-155"><xref:System.Windows.Window>、 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 、<xref:System.Windows.Controls.ToolBar>、上的默认值为。`true` <xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.Menu></span><span class="sxs-lookup"><span data-stu-id="ad2eb-155">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-156">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-156">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-157">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-157">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-158">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-158">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-159">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-159">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad2eb-160"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-160"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-161">从中读取附加属性的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-161">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="ad2eb-162">确定指定的 <see cref="T:System.Windows.DependencyObject" /> 是否为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-162">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns><span data-ttu-id="ad2eb-163">如果指定元素上的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-163"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-164">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-164">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-165">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-165">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-166">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-166">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-167">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-167">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad2eb-168">当元素获得焦点时发生。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-168">Occurs when an element gets focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad2eb-169">标识 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-169">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad2eb-170">确定此属性附加到的元素是否是焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-170">Determines whether the element this property is attached to is a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-171">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-171">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-172">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-172">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-173">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-173">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-174">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-174">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ad2eb-175">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="ad2eb-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ad2eb-176">标识符字段</span><span class="sxs-lookup"><span data-stu-id="ad2eb-176">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="ad2eb-177">元数据属性设置为`true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="ad2eb-178">None</span><span class="sxs-lookup"><span data-stu-id="ad2eb-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ad2eb-179">下面的示例<xref:System.Windows.Controls.StackPanel>将创建一个焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-179">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad2eb-180">标识 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-180">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-181"><xref:System.Windows.Window>、 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 、<xref:System.Windows.Controls.ToolBar>、上的默认值为。`true` <xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.Menu></span><span class="sxs-lookup"><span data-stu-id="ad2eb-181">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-182">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-182">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-183">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-183">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-184">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-184">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-185">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-185">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad2eb-186">当元素丢失焦点时发生。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-186">Occurs when an element loses focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad2eb-187">标识 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-187">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-188">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-188">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="ad2eb-189">要删除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-189">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="ad2eb-190">移除 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-190">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-191">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-191">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="ad2eb-192">要删除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-192">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="ad2eb-193">移除 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-193">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-194">焦点范围，将使指定元素成为该范围内的 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-194">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="ad2eb-195">要获得逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-195">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="ad2eb-196">对指定元素设置逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-196">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-197"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-197">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="ad2eb-198">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-198">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="ad2eb-199">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-199">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="ad2eb-200">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-200">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ad2eb-201">可以指定一个焦点作用域, 该作用域是元素所在的焦点作用域的上级。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-201">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="ad2eb-202">例如, <xref:System.Windows.Controls.StackPanel>如果是焦点范围, 其父级<xref:System.Windows.Window>为焦点范围, <xref:System.Windows.Controls.TextBox>则的子将<xref:System.Windows.Controls.StackPanel>在调用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>时将指定<xref:System.Windows.Window>为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-202">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="ad2eb-203">对于焦点范围和<xref:System.Windows.Controls.StackPanel>焦点范围, 则为。 <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Input.FocusManager.FocusedElement%2A></span><span class="sxs-lookup"><span data-stu-id="ad2eb-203">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="ad2eb-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>将在指定的焦点范围内给指定元素指定逻辑焦点, 并尝试为元素键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad2eb-205">下面的示例使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>来设置具有逻辑焦点的元素, 并<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>使用来获取具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-205">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="ad2eb-206">要成为焦点范围的元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-206">The element to make a focus scope.</span></span></param>
        <param name="value"><span data-ttu-id="ad2eb-207">如果 <paramref name="element" /> 为焦点范围，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-207"><see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ad2eb-208">将指定的 <see cref="T:System.Windows.DependencyObject" /> 设置为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-208">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad2eb-209">焦点范围是在其作用域内跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>容器元素。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-209">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="ad2eb-210">默认情况下, <xref:System.Windows.Window>类是<xref:System.Windows.Controls.Menu>、 <xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ToolBar>类的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-210">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="ad2eb-211">作为焦点范围的元素已<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为。 `true`</span><span class="sxs-lookup"><span data-stu-id="ad2eb-211">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="ad2eb-212">有关焦点、键盘焦点和逻辑焦点的详细信息, 请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-212">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad2eb-213">下面的示例通过使用<xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>使元素成为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="ad2eb-213">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
