<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bbff3f7e9b001bcb0d05f1a7b17730044138ba8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70648239" /></Metadata><TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01b85-101">包含在预编译期间传递给 ASP.NET 编译器的值。</span><span class="sxs-lookup"><span data-stu-id="01b85-101">Contains values passed to the ASP.NET compiler during precompilation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b85-102">可以对 ASP.NET 网页和代码文件进行预编译，以便为用户提供更快的响应，并允许在不部署源代码的情况下部署站点。</span><span class="sxs-lookup"><span data-stu-id="01b85-102">ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</span></span> <span data-ttu-id="01b85-103">有关预编译 ASP.NET 网站的详细信息，请参阅[ASP.NET 网站项目预编译概述](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)。</span><span class="sxs-lookup"><span data-stu-id="01b85-103">For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span></span>  
  
 <span data-ttu-id="01b85-104"><xref:System.Web.Compilation.ClientBuildManagerParameter>类存储预编译期间使用的值。</span><span class="sxs-lookup"><span data-stu-id="01b85-104">The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation.</span></span> <span data-ttu-id="01b85-105"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性确定如何生成程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-105">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="01b85-106">例如，可以将设置<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>为<xref:System.Web.Compilation.PrecompilationFlags.Clean>以重新编译任何以前编译过的组件，或将<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>其设置为，以允许生成的程序集覆盖目标目录中的任何组件。</span><span class="sxs-lookup"><span data-stu-id="01b85-106">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="01b85-107">枚举器有一个<xref:System.FlagsAttribute>允许其成员值的按位组合的属性。 <xref:System.Web.Compilation.PrecompilationFlags></span><span class="sxs-lookup"><span data-stu-id="01b85-107">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="01b85-108">属性可以包含<xref:System.Web.Compilation.PrecompilationFlags>来自枚举的多个值，以指定预编译行为的组合。 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A></span><span class="sxs-lookup"><span data-stu-id="01b85-108">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
 <span data-ttu-id="01b85-109"><xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>为属性 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 或属性分配一个值，以创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-109">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="01b85-110">不需要设置这两个值来创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-110">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
 <span data-ttu-id="01b85-111"><xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager>通过构造 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 函数传递给对象。</span><span class="sxs-lookup"><span data-stu-id="01b85-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b85-112">下面的代码示例是<xref:System.Web.Compilation.ClientBuildManager>类概述中的代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="01b85-112">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="01b85-113">在此示例中， <xref:System.Web.Compilation.ClientBuildManagerParameter>将创建一个对象并设置其值。</span><span class="sxs-lookup"><span data-stu-id="01b85-113">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="01b85-114">生成的程序集将具有基于所提供的密钥文件的强名称，并将根据提供<xref:System.Web.Compilation.PrecompilationFlags>的值进行预编译。</span><span class="sxs-lookup"><span data-stu-id="01b85-114">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a"><span data-ttu-id="01b85-115">ASP.NET 网站预编译</span><span class="sxs-lookup"><span data-stu-id="01b85-115">ASP.NET Web Site Precompilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01b85-116">初始化 <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01b85-116">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b85-117">此构造函数不初始化任何属性值。</span><span class="sxs-lookup"><span data-stu-id="01b85-117">This constructor does not initialize any property values.</span></span> <span data-ttu-id="01b85-118">创建对象后<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>，必须通过、 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>和<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性设置这些值。</span><span class="sxs-lookup"><span data-stu-id="01b85-118">Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b85-119">下面的代码示例是<xref:System.Web.Compilation.ClientBuildManager>类概述中的代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="01b85-119">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="01b85-120">在此示例中， <xref:System.Web.Compilation.ClientBuildManagerParameter>将创建一个对象并设置其值。</span><span class="sxs-lookup"><span data-stu-id="01b85-120">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="01b85-121">生成的程序集将具有基于所提供的密钥文件的强名称，并将根据提供<xref:System.Web.Compilation.PrecompilationFlags>的值进行预编译。</span><span class="sxs-lookup"><span data-stu-id="01b85-121">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b85-122">获取或设置排除的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="01b85-122">Gets or sets excluded virtual paths.</span></span></summary>
        <value><span data-ttu-id="01b85-123">排除的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="01b85-123">Excluded virtual paths.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b85-124">获取或设置确定预编译行为的标志。</span><span class="sxs-lookup"><span data-stu-id="01b85-124">Gets or sets the flags that determine precompilation behavior.</span></span></summary>
        <value><span data-ttu-id="01b85-125">用于客户端生成的 <see cref="T:System.Web.Compilation.PrecompilationFlags" />。</span><span class="sxs-lookup"><span data-stu-id="01b85-125">The <see cref="T:System.Web.Compilation.PrecompilationFlags" /> for a client build.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b85-126"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性确定如何生成程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-126">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="01b85-127">例如，可以将设置<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>为<xref:System.Web.Compilation.PrecompilationFlags.Clean>以重新编译任何以前编译过的组件，或将<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>其设置为，以允许生成的程序集覆盖目标目录中的任何组件。</span><span class="sxs-lookup"><span data-stu-id="01b85-127">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="01b85-128">枚举器有一个<xref:System.FlagsAttribute>允许其成员值的按位组合的属性。 <xref:System.Web.Compilation.PrecompilationFlags></span><span class="sxs-lookup"><span data-stu-id="01b85-128">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="01b85-129">属性可以包含<xref:System.Web.Compilation.PrecompilationFlags>来自枚举的多个值，以指定预编译行为的组合。 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A></span><span class="sxs-lookup"><span data-stu-id="01b85-129">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b85-130">下面的代码示例是<xref:System.Web.Compilation.ClientBuildManager>类概述中的代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="01b85-130">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="01b85-131">在此示例中， <xref:System.Web.Compilation.ClientBuildManagerParameter>将创建一个对象并设置其值。</span><span class="sxs-lookup"><span data-stu-id="01b85-131">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="01b85-132">生成的程序集将具有基于所提供的密钥文件的强名称，并将根据提供<xref:System.Web.Compilation.PrecompilationFlags>的值进行预编译。</span><span class="sxs-lookup"><span data-stu-id="01b85-132">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a"><span data-ttu-id="01b85-133">ASP.NET 网站预编译</span><span class="sxs-lookup"><span data-stu-id="01b85-133">ASP.NET Web Site Precompilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b85-134">获取或设置编译期间使用的密钥容器。</span><span class="sxs-lookup"><span data-stu-id="01b85-134">Gets or sets the key container used during compilation.</span></span></summary>
        <value><span data-ttu-id="01b85-135">表示密钥容器的值的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="01b85-135">A <see cref="T:System.String" /> of the value for the key container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b85-136"><xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>为属性 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 或属性分配一个值，以创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-136">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="01b85-137">不需要设置这两个值来创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-137">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b85-138">下面的代码示例类似于<xref:System.Web.Compilation.ClientBuildManager>类概述中的代码示例，但生成的程序集将具有基于所提供的密钥容器的强名称。</span><span class="sxs-lookup"><span data-stu-id="01b85-138">The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container.</span></span> <span data-ttu-id="01b85-139">它将根据提供<xref:System.Web.Compilation.PrecompilationFlags>的值预编译。</span><span class="sxs-lookup"><span data-stu-id="01b85-139">It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a"><span data-ttu-id="01b85-140">ASP.NET 网站预编译</span><span class="sxs-lookup"><span data-stu-id="01b85-140">ASP.NET Web Site Precompilation</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc"><span data-ttu-id="01b85-141">导入和导出受保护的配置 RSA 密钥容器</span><span class="sxs-lookup"><span data-stu-id="01b85-141">Importing and Exporting Protected Configuration RSA Key Containers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b85-142">获取或设置编译期间使用的密钥文件。</span><span class="sxs-lookup"><span data-stu-id="01b85-142">Gets or sets the key file used during compilation.</span></span></summary>
        <value><span data-ttu-id="01b85-143">表示密钥文件的值的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="01b85-143">A <see cref="T:System.String" /> of the value for the key file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01b85-144"><xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>为属性 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 或属性分配一个值，以创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-144">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="01b85-145">不需要设置这两个值来创建具有强名称的程序集。</span><span class="sxs-lookup"><span data-stu-id="01b85-145">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01b85-146">下面的代码示例是<xref:System.Web.Compilation.ClientBuildManager>类概述中的代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="01b85-146">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="01b85-147">在此示例中， <xref:System.Web.Compilation.ClientBuildManagerParameter>将创建一个对象并设置其值。</span><span class="sxs-lookup"><span data-stu-id="01b85-147">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="01b85-148">生成的程序集将具有基于所提供的密钥文件的强名称，并将根据提供<xref:System.Web.Compilation.PrecompilationFlags>的值进行预编译。</span><span class="sxs-lookup"><span data-stu-id="01b85-148">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a"><span data-ttu-id="01b85-149">ASP.NET 网站预编译</span><span class="sxs-lookup"><span data-stu-id="01b85-149">ASP.NET Web Site Precompilation</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9"><span data-ttu-id="01b85-150">创建和使用具有强名称的程序集</span><span class="sxs-lookup"><span data-stu-id="01b85-150">Creating and Using Strong-Named Assemblies</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
