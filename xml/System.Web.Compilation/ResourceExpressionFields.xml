<Type Name="ResourceExpressionFields" FullName="System.Web.Compilation.ResourceExpressionFields">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dde2fd5d659256bb8a4928b430d169bad7d28f8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69141990" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceExpressionFields" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceExpressionFields extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceExpressionFields" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceExpressionFields" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionFields sealed" />
  <TypeSignature Language="F#" Value="type ResourceExpressionFields = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含已分析资源表达式中的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分析页时, 会分析资源表达式中包含的值并将其存储在<xref:System.Web.Compilation.ResourceExpressionFields>类的实例中。 此<xref:System.Web.Compilation.ResourceExpressionFields>对象包含两个字段<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> : <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>和。 这些字段是从显式 (`<%$ Resources: ClassKey, ResourceKey %>`) 或隐式 (`meta:resourcekey="ResourceKey"`) 形式的资源表达式的值中提取的。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性标识映射到资源文件的资源的类名。 例如, 若要引用名为理财的资源文件或本地化版本 (例如, 财经. .resx), 资源表达式将显示为`<%$ Resources: Financial, ResourceKey %>`。 分析后, <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性将返回 "金融" 作为其值。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性标识要从文件中检索的特定键/值对。 如果财务 .resx 文件包含一个名`Currency`为的键, 则可以使用资源表达式`<%$ Resources: Financial, Currency %>`来指定该值。 分析后, <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性会将 "Currency" 返回为其值。  
  
 资源表达式通过<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>方法进行分析。  
  
> [!CAUTION]
>  不应将敏感信息存储在资源文件中。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过分析的资源表达式的类键。</summary>
        <value>包含类键的 <see cref="T:System.String" />；如果尚未设置类键，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回已分析的资源表达式的类键。 类键表示资源文件的名称, 是在窗体`<%$ Resources: [Namespace.]ClassKey, ResourceKey $>`的表达式中的逗号 (,) 之前指定的值。 资源类的命名空间值是可选的。 当提供命名空间时, 将在<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性中返回命名空间和类键。 类键不能包含空格或双字节字符集 (DBCS)。  
  
 若要引用名为 "财经" 的资源文件或本地化版本 (例如, 财经. .resx), 请将资源表达式 <`%$ Resources: Financial, ResourceKey %>`包括在内。 分析后, <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性将返回 "金融" 作为其值。  
  
> [!CAUTION]
>  不应将敏感信息存储在资源文件中。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过分析的资源表达式的资源键。</summary>
        <value>包含资源键的 <see cref="T:System.String" />；或者如果尚未设置资源键，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回已分析的资源表达式的资源键。 资源键是在窗体`<%$ Resources: ClassKey, ResourceKey %>`的表达式中的逗号 (,) 之后指定的值。 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性标识映射到类键的资源文件中的特定键/值对。 例如, 如果名为 "财经" 的文件包含一个名`Currency`为的密钥, 则可以使用资源表达式`<%$ Resources: Financial, Currency %>`来指定该值。 分析后, <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性会将 "Currency" 返回为其值。  
  
> [!CAUTION]
>  不应将敏感信息存储在资源文件中。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>
