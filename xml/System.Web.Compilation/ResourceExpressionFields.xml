<Type Name="ResourceExpressionFields" FullName="System.Web.Compilation.ResourceExpressionFields">
  <Metadata><Meta Name="ms.openlocfilehash" Value="975e5b4a4716bc84aadf297f61a78a2dd2c68fdb" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64091080" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceExpressionFields" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceExpressionFields extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceExpressionFields" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceExpressionFields" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionFields sealed" />
  <TypeSignature Language="F#" Value="type ResourceExpressionFields = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含已分析资源表达式中的字段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分析页面时，分析和存储的实例中的资源表达式中包含的值<xref:System.Web.Compilation.ResourceExpressionFields>类。 这<xref:System.Web.Compilation.ResourceExpressionFields>对象包含两个字段<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>和<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>。 这些字段来自中的显式资源表达式的值 (`<%$ Resources: ClassKey, ResourceKey %>`) 或隐式 (`meta:resourcekey="ResourceKey"`) 窗体。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性标识映射到资源文件的资源的类名。 例如，若要引用一个名为 Financial.resx 或如 Financial.en GB.resx 的本地化的版本的资源文件，该资源表达式将显示为`<%$ Resources: Financial, ResourceKey %>`。 分析后,<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性将返回"财务"作为其值。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性标识要从文件中检索特定的键/值对。 如果 Financial.resx 文件包含名为的项`Currency`，可以指定值与资源表达式`<%$ Resources: Financial, Currency %>`。 分析后,<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性将返回"货币"作为其值。  
  
 通过分析资源表达式<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>方法。  
  
> [!CAUTION]
>  不应在资源文件中存储敏感信息。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过分析的资源表达式的类键。</summary>
        <value>包含类键的 <see cref="T:System.String" />；如果尚未设置类键，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回经过分析的资源表达式的类键。 类键表示的资源文件的名称，是在窗体的表达式中指定逗号 （，） 之前的值`<%$ Resources: [Namespace.]ClassKey, ResourceKey $>`。 资源类的命名空间值是可选的。 如果提供了一个命名空间中, 返回的命名空间和类键<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性。 类键不能包含空格或双字节字符集 (DBCS)。  
  
 若要引用一个名为 Financial.resx 或如 Financial.en GB.resx 的本地化的版本的资源文件，应包括资源表达式 <`%$ Resources: Financial, ResourceKey %>`。 分析后,<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>属性将返回"财务"作为其值。  
  
> [!CAUTION]
>  不应在资源文件中存储敏感信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过分析的资源表达式的资源键。</summary>
        <value>包含资源键的 <see cref="T:System.String" />；或者如果尚未设置资源键，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回的已分析的资源表达式的资源键。 资源键是逗号 （，） 后在窗体的表达式中指定的值`<%$ Resources: ClassKey, ResourceKey %>`。 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性标识映射到类键的资源文件中的特定键/值对。 例如，如果名为的文件 Financial.resx 包含名为的项`Currency`，可以指定值与资源表达式`<%$ Resources: Financial, Currency %>`。 分析后,<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>属性将返回"货币"作为其值。  
  
> [!CAUTION]
>  不应在资源文件中存储敏感信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>