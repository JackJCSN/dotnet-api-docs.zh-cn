<Type Name="OracleDataReader" FullName="System.Data.OracleClient.OracleDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="335f641da266e49acce02bd59fa451815a99fb7a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70684519" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OracleDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1467c-101">提供从数据源读取数据行的只进流的方法。</span><span class="sxs-lookup"><span data-stu-id="1467c-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="1467c-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="1467c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-103">若要创建<xref:System.Data.OracleClient.OracleDataReader>，必须<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>调用<xref:System.Data.OracleClient.OracleCommand>对象的方法，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="1467c-103">To create an <xref:System.Data.OracleClient.OracleDataReader>, you must call the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of the <xref:System.Data.OracleClient.OracleCommand> object, rather than directly using a constructor.</span></span>  
  
 <span data-ttu-id="1467c-104">在读取数据时，由其他进程或线程对结果集所做的更改可能对的用户<xref:System.Data.OracleClient.OracleDataReader>可见。</span><span class="sxs-lookup"><span data-stu-id="1467c-104">Changes made to a resultset by another process or thread while data is being read may be visible to the user of the <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="1467c-105"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.OracleClient.OracleDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="1467c-105"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span> <span data-ttu-id="1467c-106">在某些情况下，必须先<xref:System.Data.OracleClient.OracleDataReader.Close%2A>调用，然后才能<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="1467c-106">In some cases, you must call <xref:System.Data.OracleClient.OracleDataReader.Close%2A> before you can call <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.</span></span>  
  
 <span data-ttu-id="1467c-107">在任意给定时间，都可以打开多个。 <xref:System.Data.OracleClient.OracleDataReader></span><span class="sxs-lookup"><span data-stu-id="1467c-107">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
 <span data-ttu-id="1467c-108">下面两个 Visual Basic 示例演示如何使用<xref:System.Data.OracleClient.OracleDataReader>来检索 Oracle。 `REF CURSOR`</span><span class="sxs-lookup"><span data-stu-id="1467c-108">The following two Visual Basic examples demonstrate how to use an <xref:System.Data.OracleClient.OracleDataReader> to retrieve an Oracle `REF CURSOR`.</span></span> <span data-ttu-id="1467c-109">这些示例使用 Oracle Scott/Tiger 架构中定义的表，并且需要以下 PL/SQL 包和包正文。</span><span class="sxs-lookup"><span data-stu-id="1467c-109">These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</span></span> <span data-ttu-id="1467c-110">你必须在服务器上创建它们以使用这些示例。</span><span class="sxs-lookup"><span data-stu-id="1467c-110">You must create these on your server to use the examples.</span></span>  
  
 <span data-ttu-id="1467c-111">在 Oracle 服务器上创建以下 Oracle 包。</span><span class="sxs-lookup"><span data-stu-id="1467c-111">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR IN OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="1467c-112">在 Oracle 服务器上创建下面的 Oracle 包正文。</span><span class="sxs-lookup"><span data-stu-id="1467c-112">Create the following Oracle package body on the Oracle server.</span></span>  
  
```  
  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="1467c-113">此 Visual Basic 示例执行一个 PL/SQL 存储过程，该存储`REF CURSOR`过程返回一个参数，并将值<xref:System.Data.OracleClient.OracleDataReader>作为读取。</span><span class="sxs-lookup"><span data-stu-id="1467c-113">This Visual Basic example executes a PL/SQL stored procedure that returns a `REF CURSOR` parameter, and reads the value as an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369  
   command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader()  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
End Sub  
```  
  
 <span data-ttu-id="1467c-114">此 Visual Basic 示例执行一个 PL/SQL 存储过程，该存储`REF CURSOR`过程返回两个参数，并<xref:System.Data.OracleClient.OracleDataReader>使用读取值。</span><span class="sxs-lookup"><span data-stu-id="1467c-114">This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and reads the values using an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim dataSet As New DataSet()  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
   command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader(CommandBehavior.CloseConnection)  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.NextResult()  
   While (reader.Read())  
        ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
 End Sub  
```  
  
 <span data-ttu-id="1467c-115">此C#示例将创建一个 Oracle 表并将其与数据一起加载。</span><span class="sxs-lookup"><span data-stu-id="1467c-115">This C# example creates an Oracle table and loads it with data.</span></span> <span data-ttu-id="1467c-116">必须先运行此示例，然后再运行后面的示例，该示例演示<xref:System.Data.OracleClient.OracleDataReader>如何使用来访问使用 OracleType 结构的数据。</span><span class="sxs-lookup"><span data-stu-id="1467c-116">You must run this example prior to running the subsequent example, which demonstrates using an <xref:System.Data.OracleClient.OracleDataReader> to access the data using OracleType structures.</span></span>  
  
```csharp  
public void Setup(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   try  
   {  
      connection.Open();  
      OracleCommand command = connection.CreateCommand();  
      command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";  
      command.ExecuteNonQuery();  
      command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";  
      command.ExecuteNonQuery();  
      command.CommandText="SELECT * FROM OracleTypesTable";  
   }  
   catch(Exception)  
   {  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
 <span data-ttu-id="1467c-117">此C#示例使用<xref:System.Data.OracleClient.OracleDataReader>来访问数据，并使用多个<xref:System.Data.OracleClient.OracleType>结构来显示数据。</span><span class="sxs-lookup"><span data-stu-id="1467c-117">This C# example uses an <xref:System.Data.OracleClient.OracleDataReader> to access data, and uses several <xref:System.Data.OracleClient.OracleType> structures to display the data.</span></span>  
  
```csharp  
public void ReadOracleTypesExample(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   connection.Open();  
   OracleCommand command = connection.CreateCommand();  
   try  
   {  
      command.CommandText = "SELECT * FROM OracleTypesTable";  
      OracleDataReader reader = command.ExecuteReader();  
      reader.Read();  
      //Using the Oracle specific getters for each type is faster than  
      //using GetOracleValue.  
      //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server  
      //and maps to OracleString.  
      OracleString oraclestring1 = reader.GetOracleString(0);  
      Console.WriteLine("OracleString " + oraclestring1.ToString());  
  
      //Second column, MyNumber, is a NUMBER data type in Oracle Server  
      //and maps to OracleNumber.  
      OracleNumber oraclenumber1 = reader.GetOracleNumber(1);  
      Console.WriteLine("OracleNumber " + oraclenumber1.ToString());  
  
      //Third column, MyDate, is a DATA data type in Oracle Server  
      //and maps to OracleDateTime.  
      OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);  
      Console.WriteLine("OracleDateTime " + oracledatetime1.ToString());  
  
      //Fourth column, MyRaw, is a RAW data type in Oracle Server and  
      //maps to OracleBinary.  
      OracleBinary oraclebinary1 = reader.GetOracleBinary(3);  
  
      //Calling value on a null OracleBinary throws  
      //OracleNullValueException; therefore, check for a null value.  
      if (oraclebinary1.IsNull==false)  
      {  
         foreach(byte b in oraclebinary1.Value)  
         {  
            Console.WriteLine("byte " + b.ToString());  
         }  
      }  
      reader.Close();  
   }  
   catch(Exception e)  
   {  
      Console.WriteLine(e.ToString());  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="1467c-118">下面的示例创建一个<xref:System.Data.OracleClient.OracleConnection>、一个<xref:System.Data.OracleClient.OracleCommand>和一个<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="1467c-118">The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>.</span></span> <span data-ttu-id="1467c-119">该示例将读取数据，并将其写出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1467c-119">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="1467c-120">最后，该示例关闭<xref:System.Data.OracleClient.OracleDataReader>， <xref:System.Data.OracleClient.OracleConnection>然后关闭。</span><span class="sxs-lookup"><span data-stu-id="1467c-120">Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-121">关闭 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1467c-121">Closes the <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-122">在任意给定时间，都可以打开多个。 <xref:System.Data.OracleClient.OracleDataReader></span><span class="sxs-lookup"><span data-stu-id="1467c-122">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1467c-123">不要对连接`Close` 、 `Dispose` `DataReader`或类的`Finalize`方法中的任何其他托管对象调用或。</span><span class="sxs-lookup"><span data-stu-id="1467c-123">Do not call `Close` or `Dispose` on a connection, a `DataReader`, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="1467c-124">在终结器中，只应释放类直接拥有的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="1467c-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="1467c-125">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="1467c-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="1467c-126">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1467c-126">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.OracleClient.OracleDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1467c-127">获取一个值，该值指示当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="1467c-127">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="1467c-128">当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="1467c-128">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-129">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="1467c-129">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleDataReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-130">释放此对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="1467c-130">Releases the resources that are used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.OracleClient.OracleDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1467c-131">获取当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="1467c-131">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="1467c-132">如果不是位于有效的记录集中，则为 0；否则为当前记录的列数。</span><span class="sxs-lookup"><span data-stu-id="1467c-132">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="1467c-133">默认值为 -1。</span><span class="sxs-lookup"><span data-stu-id="1467c-133">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-134">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="1467c-134">Includes hidden fields.</span></span> <span data-ttu-id="1467c-135">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="1467c-135">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="1467c-136">执行不返回行的查询后， <xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A>将返回0。</span><span class="sxs-lookup"><span data-stu-id="1467c-136">After executing a query that does not return rows, <xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1467c-137">没有到数据源的当前连接。</span><span class="sxs-lookup"><span data-stu-id="1467c-137">There is no current connection to a data source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="oracleDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-138">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-138">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-139">获取指定列的布尔值形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-139">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="1467c-140">一个表示列值的布尔值。</span><span class="sxs-lookup"><span data-stu-id="1467c-140">A Boolean that is the value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-141">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-141">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-142">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-142">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="oracleDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-143">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-143">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-144">以字节的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-144">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="1467c-145">指定列的字节形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-145">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-146">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-146">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-147">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-147">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, fieldOffset As Long, buffer2 As Byte(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long fieldOffset, cli::array &lt;System::Byte&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="oracleDataReader.GetBytes (i, fieldOffset, buffer2, bufferoffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-148">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-148">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="1467c-149">字段中读取操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="1467c-149">The index within the field where the read operation is to begin.</span></span></param>
        <param name="buffer2"><span data-ttu-id="1467c-150">要读入字节流的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1467c-150">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="1467c-151"><paramref name="buffer2" /> 开始写操作位置的索引。</span><span class="sxs-lookup"><span data-stu-id="1467c-151">The index where <paramref name="buffer2" /> is to begin the write operation.</span></span></param>
        <param name="length"><span data-ttu-id="1467c-152">要读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="1467c-152">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="1467c-153">将字节流从指定列偏移量读入到缓冲区中，将其作为从给定缓冲区偏移量开始的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-153">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="1467c-154">读取的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="1467c-154">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-155"><xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A>返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="1467c-155"><xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="1467c-156">在大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="1467c-156">In most cases this is the exact length of the field.</span></span> <span data-ttu-id="1467c-157">但是，如果`GetBytes`已使用从字段获取字节，则返回的数字可能小于字段的实际长度。</span><span class="sxs-lookup"><span data-stu-id="1467c-157">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="1467c-158">例如，如果<xref:System.Data.OracleClient.OracleDataReader>正在将大数据结构读入缓冲区，则可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="1467c-158">This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="1467c-159">有关详细信息，请参阅`SequentialAccess`的<xref:System.Data.CommandBehavior>设置。</span><span class="sxs-lookup"><span data-stu-id="1467c-159">For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="1467c-160">如果传递的缓冲区为空值，则返回字段<xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A>的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1467c-160">If you pass a buffer that is a null value, <xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="oracleDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-161">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-161">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-162">获取指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-162">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="1467c-163">指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-163">The value of the specified column as a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-164">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-164">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-165">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-165">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 fieldOffset, char[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, fieldOffset As Long, buffer2 As Char(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long fieldOffset, cli::array &lt;char&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="oracleDataReader.GetChars (i, fieldOffset, buffer2, bufferoffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-166">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-166">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="1467c-167">行中读取操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="1467c-167">The index within the row where the read operation is to begin.</span></span></param>
        <param name="buffer2"><span data-ttu-id="1467c-168">要向其中复制数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1467c-168">The buffer into which to copy data.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="1467c-169"><paramref name="buffer2" /> 开始写操作位置的索引。</span><span class="sxs-lookup"><span data-stu-id="1467c-169">The index where <paramref name="buffer2" /> is to begin the write operation.</span></span></param>
        <param name="length"><span data-ttu-id="1467c-170">要读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="1467c-170">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="1467c-171">将字符流从指定列偏移量读入到缓冲区中，将其作为从给定缓冲区偏移量开始的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-171">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="1467c-172">读取的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="1467c-172">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-173"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="1467c-173"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="1467c-174">在大多数情况下，这是字段的准确长度。</span><span class="sxs-lookup"><span data-stu-id="1467c-174">In most cases this is the exact length of the field.</span></span> <span data-ttu-id="1467c-175">但是，如果`GetChars`已使用从字段获取字符，则返回的数字可能小于字段的实际长度。</span><span class="sxs-lookup"><span data-stu-id="1467c-175">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="1467c-176">例如，如果<xref:System.Data.OracleClient.OracleDataReader>正在将大数据结构读入缓冲区，则可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="1467c-176">This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="1467c-177">有关详细信息，请参阅`SequentialAccess`的<xref:System.Data.CommandBehavior>设置。</span><span class="sxs-lookup"><span data-stu-id="1467c-177">For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="1467c-178">如果传递的缓冲区为 null 值，则为。</span><span class="sxs-lookup"><span data-stu-id="1467c-178">If you pass a buffer that is a null value.</span></span> <span data-ttu-id="1467c-179"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>返回字段的长度（以字符为限）。</span><span class="sxs-lookup"><span data-stu-id="1467c-179"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="oracleDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-180">列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-180">A column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-181">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-181">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></summary>
        <returns><span data-ttu-id="1467c-182">指定的列序号的 IdataReader 实例。</span><span class="sxs-lookup"><span data-stu-id="1467c-182">The IdataReader instance for the specified column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="oracleDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-183">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-183">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-184">获取源数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-184">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="1467c-185">源数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-185">The name of the source data type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="oracleDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-186">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-186">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-187">以 <see langword="DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-187">Gets the value of the specified column as a <see langword="DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-188">指定列的 <see langword="DateTime" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-188">The value of the specified column as a <see langword="DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-189">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-189">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-190">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-190">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="oracleDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-191">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-191">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-192">以 <see langword="Decimal" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-192">Gets the value of the specified column as a <see langword="Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-193">指定列的 <see langword="Decimal" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-193">The value of the specified column as a <see langword="Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-194">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-194">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-195">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-195">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="oracleDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-196">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-196">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-197">以双精度浮点数字的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-197">Gets the value of the specified column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="1467c-198">指定列的双精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-198">The value of the specified column as a double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-199">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-199">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-200">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-200">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="oracleDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-201">返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-201">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="1467c-202">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span><span class="sxs-lookup"><span data-stu-id="1467c-202">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-203">尽管可以使用此方法来检索显式枚举器，但在支持 foreach 构造的语言中，直接使用循环构造来循环访问数据读取器中的行更为简单。</span><span class="sxs-lookup"><span data-stu-id="1467c-203">Although you can use this method to retrieve an explicit enumerator, in languages that support a foreach construct, it's simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="oracleDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-204">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-204">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-205">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-205">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="1467c-206">作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-206">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="oracleDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-207">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-207">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-208">获取指定列的单精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-208">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1467c-209">指定列的单精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-209">The value of the specified column as a single-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-210">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-210">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-211">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-211">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="oracleDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-212">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-213">以全局唯一标识符 (GUID) 的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-213">Gets the value of the specified column as a globally-unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="1467c-214">指定列的 GUID 形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-214">The value of the specified column as a GUID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-215">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-215">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-216">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-216">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="oracleDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-217">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-217">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-218">获取指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-218">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="1467c-219">指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-219">The value of the specified column as a 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-220">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-220">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-221">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-221">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="oracleDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-222">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-222">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-223">获取指定列的 32 位带符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-223">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="1467c-224">指定列的 32 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-224">The value of the specified column as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-225">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-225">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-226">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-226">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="oracleDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-227">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-227">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-228">以 64 位有符号整数的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-228">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="1467c-229">指定列的 64 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-229">The value of the specified column as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-230">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-230">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-231">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-231">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="oracleDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-232">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-232">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-233">获取指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-233">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="1467c-234">指定列的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="1467c-234">A string that is the name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOracleBFile">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleBFile GetOracleBFile(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBFile (i As Integer) As OracleBFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBFile ^ GetOracleBFile(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleBFile : int -&gt; System.Data.OracleClient.OracleBFile" Usage="oracleDataReader.GetOracleBFile i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-235">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-235">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-236">获取指定列的 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-236">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBFile" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-237">指定列的 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-237">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBFile" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-238">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-238">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-239">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-239">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleBinary">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleBinary GetOracleBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBinary (i As Integer) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBinary GetOracleBinary(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleBinary : int -&gt; System.Data.OracleClient.OracleBinary" Usage="oracleDataReader.GetOracleBinary i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-240">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-240">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-241">获取指定列的 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-241">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-242">指定列的 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-242">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-243">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-243">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-244">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-244">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDateTime">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleDateTime GetOracleDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleDateTime (i As Integer) As OracleDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDateTime GetOracleDateTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleDateTime : int -&gt; System.Data.OracleClient.OracleDateTime" Usage="oracleDataReader.GetOracleDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-245">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-245">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-246">获取指定列的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-246">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleDateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-247">指定列的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-247">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleDateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-248">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-248">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-249">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-249">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleLob">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleLob GetOracleLob (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleLob GetOracleLob(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleLob (i As Integer) As OracleLob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleLob ^ GetOracleLob(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleLob : int -&gt; System.Data.OracleClient.OracleLob" Usage="oracleDataReader.GetOracleLob i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-250">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-250">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-251">获取指定列的 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-251">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-252">指定列的 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-252">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-253">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-253">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-254">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-254">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleMonthSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleMonthSpan (i As Integer) As OracleMonthSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleMonthSpan GetOracleMonthSpan(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleMonthSpan : int -&gt; System.Data.OracleClient.OracleMonthSpan" Usage="oracleDataReader.GetOracleMonthSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleMonthSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-255">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-255">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-256">获取指定列的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-256">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-257">指定列的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-257">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-258">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-258">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-259">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-259">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleNumber">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleNumber GetOracleNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleNumber (i As Integer) As OracleNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleNumber GetOracleNumber(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleNumber : int -&gt; System.Data.OracleClient.OracleNumber" Usage="oracleDataReader.GetOracleNumber i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-260">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-260">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-261">获取指定列的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-261">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleNumber" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-262">指定列的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-262">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleNumber" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-263">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-263">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-264">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-264">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleString">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleString GetOracleString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleString GetOracleString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleString (i As Integer) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleString GetOracleString(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleString : int -&gt; System.Data.OracleClient.OracleString" Usage="oracleDataReader.GetOracleString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-265">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-265">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-266">获取指定列的 <see cref="T:System.Data.OracleClient.OracleString" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-266">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleString" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-267">指定列的 <see cref="T:System.Data.OracleClient.OracleString" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-267">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleString" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-268">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-268">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-269">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-269">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleTimeSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleTimeSpan (i As Integer) As OracleTimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTimeSpan GetOracleTimeSpan(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleTimeSpan : int -&gt; System.Data.OracleClient.OracleTimeSpan" Usage="oracleDataReader.GetOracleTimeSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-270">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-270">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-271">获取指定列的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-271">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="1467c-272">指定列的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-272">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-273">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-273">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-274">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-274">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValue">
      <MemberSignature Language="C#" Value="public object GetOracleValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOracleValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOracleValue(int i);" />
      <MemberSignature Language="F#" Value="member this.GetOracleValue : int -&gt; obj" Usage="oracleDataReader.GetOracleValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-275">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-275">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-276">获取以 Oracle 格式表示的指定序号处的列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-276">Gets the value of the column at the specified ordinal in its Oracle format.</span></span></summary>
        <returns><span data-ttu-id="1467c-277">要返回的 Oracle 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-277">The Oracle value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-278">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1467c-278">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValues">
      <MemberSignature Language="C#" Value="public int GetOracleValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOracleValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOracleValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetOracleValues : obj[] -&gt; int" Usage="oracleDataReader.GetOracleValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="1467c-279">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-279">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="1467c-280">获取以 Oracle 格式表示的当前行中所有的特性列。</span><span class="sxs-lookup"><span data-stu-id="1467c-280">Gets all the attribute columns in the current row in Oracle format.</span></span></summary>
        <returns><span data-ttu-id="1467c-281">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="1467c-281">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-282">对于大多数应用程序， <xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A>该方法提供了一种有效的方法来检索所有列，而不是单独检索每个列。</span><span class="sxs-lookup"><span data-stu-id="1467c-282">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="1467c-283">可以传递一个<xref:System.Object>数组，该数组包含的列数少于所产生行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="1467c-283">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="1467c-284">只有<xref:System.Object>数组保存的数据量会复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="1467c-284">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="1467c-285">还可以传递<xref:System.Object>其长度大于结果行中所含列数的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-285">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="1467c-286">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1467c-286">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="oracleDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1467c-287">列的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-287">The name of the column.</span></span></param>
        <summary><span data-ttu-id="1467c-288">在给定列名时获取相应的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-288">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="1467c-289">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-289">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-290"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>首先执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="1467c-290"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="1467c-291">如果失败，将进行第二个不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="1467c-291">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="1467c-292">如果找不到`IndexOutOfRange`基于零的列序号，方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="1467c-292">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="1467c-293"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="1467c-293"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="1467c-294">由于基于序号的查找比命名查找更有效，因此在循环内调用<xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>是低效的。</span><span class="sxs-lookup"><span data-stu-id="1467c-294">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="1467c-295">相反，调用<xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>一次，然后将结果赋给整数变量以便在循环中使用。</span><span class="sxs-lookup"><span data-stu-id="1467c-295">Instead, call <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> once and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1467c-296">下面的示例演示如何使用 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1467c-296">The following example demonstrates how to use the <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> method.</span></span>  
  
```vb  
Public Sub ReadOracleData(ByVal connectionString As String)  
  
    Dim queryString As String = "SELECT OrderID, CustomerID FROM Orders"  
    Dim connection As New OracleConnection(connectionString)  
    Dim command As New OracleCommand(queryString, connectionString)  
  
    connection.Open()  
  
    Dim reader As OracleDataReader = command.ExecuteReader()  
  
    Dim custIdCol As Integer = reader.GetOrdinal("CustomerID")  
  
    Do While reader.Read()  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol))  
    Loop  
  
    reader.Close()  
    connection.Close()  
End Sub  
```  
  
```csharp  
public void ReadOracleData(string connectionString)  
{  
    string queryString = "SELECT OrderID, CustomerID FROM Orders";  
    OracleConnection connection = new OracleConnection(connectionString);  
    OracleCommand command = new OracleCommand(queryString,connection);  
  
    connection.Open();  
    OracleDataReader reader = command.ExecuteReader();  
  
    int custIdCol = reader.GetOrdinal("CustomerID");  
  
    while (reader.Read())  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol));  
  
    reader.Close();  
    connection.Close();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="oracleDataReader.GetProviderSpecificFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-297">一个 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-297">An <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="1467c-298">获取一个 <see langword="Object" />，该对象表示特定于基础提供程序的字段类型。</span><span class="sxs-lookup"><span data-stu-id="1467c-298">Gets an <see langword="Object" /> that is a representation of the underlying provider specific field type.</span></span></summary>
        <returns><span data-ttu-id="1467c-299">获取一个 <see cref="T:System.Object" />，该对象表示特定于基础提供程序的字段类型。</span><span class="sxs-lookup"><span data-stu-id="1467c-299">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider specific field type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="oracleDataReader.GetProviderSpecificValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-300">一个 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-300">An <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="1467c-301">获取一个 <see langword="Object" />，该对象表示特定于基础提供程序的字段类型。</span><span class="sxs-lookup"><span data-stu-id="1467c-301">Gets an <see langword="Object" /> that is a representation of the underlying provider specific field type.</span></span></summary>
        <returns><span data-ttu-id="1467c-302">获取一个 <see cref="T:System.Object" />，该对象表示特定于基础提供程序的字段类型。</span><span class="sxs-lookup"><span data-stu-id="1467c-302">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider specific field type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="oracleDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="1467c-303">一个 <see cref="T:System.Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-303">An array of <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="1467c-304">获取表示基础提供程序特定值的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-304">Gets an array of objects that are a representation of the underlying provider specific values.</span></span></summary>
        <returns><span data-ttu-id="1467c-305">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="1467c-305">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-306">对于大多数应用程序， <xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A>该方法提供了一种有效的方法来检索所有列，而不是单独检索每个列。</span><span class="sxs-lookup"><span data-stu-id="1467c-306">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="1467c-307">可以传递一个<xref:System.Object>数组，该数组包含的列数少于所产生行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="1467c-307">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="1467c-308">只有<xref:System.Object>数组保存的数据量会复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="1467c-308">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="1467c-309">还可以传递<xref:System.Object>其长度大于结果行中所含列数的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-309">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="1467c-310">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1467c-310">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="oracleDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-311">返回一个 <see cref="T:System.Data.DataTable" />，它描述 OracleDataReader 的列元数据。</span><span class="sxs-lookup"><span data-stu-id="1467c-311">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the OracleDataReader.</span></span></summary>
        <returns><span data-ttu-id="1467c-312">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-312">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-313"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A>方法按以下顺序返回有关每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="1467c-313">The <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="1467c-314">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="1467c-314">DataReader Column</span></span>|<span data-ttu-id="1467c-315">说明</span><span class="sxs-lookup"><span data-stu-id="1467c-315">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="1467c-316">列名</span><span class="sxs-lookup"><span data-stu-id="1467c-316">ColumnName</span></span>|<span data-ttu-id="1467c-317">列的名称;这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="1467c-317">The name of the column; this might not be unique.</span></span> <span data-ttu-id="1467c-318">如果无法确定列名，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-318">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="1467c-319">此名称始终反映当前视图或命令文本中列的最新命名。</span><span class="sxs-lookup"><span data-stu-id="1467c-319">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="1467c-320">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="1467c-320">ColumnOrdinal</span></span>|<span data-ttu-id="1467c-321">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-321">The zero-based ordinal of the column.</span></span> <span data-ttu-id="1467c-322">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-322">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="1467c-323">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="1467c-323">ColumnSize</span></span>|<span data-ttu-id="1467c-324">列中的值的最大可能长度。</span><span class="sxs-lookup"><span data-stu-id="1467c-324">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="1467c-325">对于使用固定长度数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="1467c-325">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="1467c-326">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="1467c-326">NumericPrecision</span></span>|<span data-ttu-id="1467c-327">如果<xref:System.Data.OracleClient.OracleParameter.DbType%2A>是数值数据类型，则这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="1467c-327">If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="1467c-328">精度取决于该列的定义。</span><span class="sxs-lookup"><span data-stu-id="1467c-328">The precision depends on the definition of the column.</span></span> <span data-ttu-id="1467c-329">`Float`Oracle `Double`中的数据类型和数据类型是二进制精度。</span><span class="sxs-lookup"><span data-stu-id="1467c-329">`Float` and `Double` data types in Oracle are binary precision.</span></span>|  
|<span data-ttu-id="1467c-330">NumericScale</span><span class="sxs-lookup"><span data-stu-id="1467c-330">NumericScale</span></span>|<span data-ttu-id="1467c-331">如果<xref:System.Data.OracleClient.OracleParameter.DbType%2A>是数值数据类型，则为小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="1467c-331">If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="1467c-332">`Float`Oracle 中的数据类型为二进制小数位数。 `Double`</span><span class="sxs-lookup"><span data-stu-id="1467c-332">`Float` and `Double` data types in Oracle are binary scale.</span></span>|  
|<span data-ttu-id="1467c-333">数据类型</span><span class="sxs-lookup"><span data-stu-id="1467c-333">DataType</span></span>|<span data-ttu-id="1467c-334">映射到的公共语言运行时类型<xref:System.Data.OracleClient.OracleParameter.DbType%2A>。</span><span class="sxs-lookup"><span data-stu-id="1467c-334">Maps to the common language runtime type of <xref:System.Data.OracleClient.OracleParameter.DbType%2A>.</span></span>|  
|<span data-ttu-id="1467c-335">IsLong</span><span class="sxs-lookup"><span data-stu-id="1467c-335">IsLong</span></span>|<span data-ttu-id="1467c-336">`true`如果列包含包含非常长数据的二进制长对象（BLOB），则为。</span><span class="sxs-lookup"><span data-stu-id="1467c-336">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="1467c-337">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="1467c-337">AllowDBNull</span></span>|<span data-ttu-id="1467c-338">`true`如果使用者可以将列设置为 null 值，则为;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="1467c-338">`true` if the consumer can set the column to a null value; otherwise, `false`.</span></span> <span data-ttu-id="1467c-339">列可能包含空值，即使它不能设置为 null 值也是如此。</span><span class="sxs-lookup"><span data-stu-id="1467c-339">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="1467c-340">IsUnique</span><span class="sxs-lookup"><span data-stu-id="1467c-340">IsUnique</span></span>|<span data-ttu-id="1467c-341">`true`：基表中没有两行-返回<xref:System.Data.Common.SchemaTableColumn.BaseTableName>的表在此列中可能具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-341">`true`: No two rows in the base table-the table returned in <xref:System.Data.Common.SchemaTableColumn.BaseTableName> -can have the same value in this column.</span></span> <span data-ttu-id="1467c-342">如果列本身构成键`true` ，或者存在仅适用于此列的 UNIQUE 类型的约束，则可保证 IsUnique 为。</span><span class="sxs-lookup"><span data-stu-id="1467c-342">**IsUnique** is guaranteed to be `true` if the column constitutes a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="1467c-343">`false`：列可以包含基表中的重复值。</span><span class="sxs-lookup"><span data-stu-id="1467c-343">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="1467c-344">此列的默认值为 false。</span><span class="sxs-lookup"><span data-stu-id="1467c-344">The default for this column is false.</span></span>|  
|<span data-ttu-id="1467c-345">IsKey</span><span class="sxs-lookup"><span data-stu-id="1467c-345">IsKey</span></span>|<span data-ttu-id="1467c-346">`true`：列是行集中的一组列，这些列汇集在一起，以唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="1467c-346">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="1467c-347">将**IsKey**设置为 true 的一组列必须唯一地标识行集中的一行。</span><span class="sxs-lookup"><span data-stu-id="1467c-347">The set of columns with **IsKey** set to true must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="1467c-348">不要求这组列是最少的一组列。</span><span class="sxs-lookup"><span data-stu-id="1467c-348">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="1467c-349">这组列可以从基表主键、唯一约束或唯一索引生成。</span><span class="sxs-lookup"><span data-stu-id="1467c-349">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="1467c-350">`false`：唯一标识行不需要此列。</span><span class="sxs-lookup"><span data-stu-id="1467c-350">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="1467c-351">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="1467c-351">BaseTableName</span></span>|<span data-ttu-id="1467c-352">包含该列的数据存储区中的表或视图的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-352">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="1467c-353">如果无法确定基表名称，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-353">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="1467c-354">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-354">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="1467c-355">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="1467c-355">BaseColumnName</span></span>|<span data-ttu-id="1467c-356">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-356">The name of the column in the data store.</span></span> <span data-ttu-id="1467c-357">如果使用了别名，则该名称可能不同于列名称**返回的列**名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-357">This might be different than the column name returned in the **ColumnName** column if an alias was used.</span></span> <span data-ttu-id="1467c-358">如果无法确定基列名称，或者如果行集列派生，但与数据存储区中的列不完全相同，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-358">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="1467c-359">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-359">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="1467c-360">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="1467c-360">BaseSchemaName</span></span>|<span data-ttu-id="1467c-361">数据存储中包含该列的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-361">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="1467c-362">如果无法确定基本架构名称，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-362">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="1467c-363">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-363">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="1467c-364">为结果集中的每一列返回一行。</span><span class="sxs-lookup"><span data-stu-id="1467c-364">A row is returned for every column in the results set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1467c-365">若要确保 metadata 列返回正确的信息，必须在<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> `behavior`参数设置为`KeyInfo`的情况下调用。</span><span class="sxs-lookup"><span data-stu-id="1467c-365">To ensure that metadata columns return the correct information, you must call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="1467c-366">否则，架构表中的某些列可能返回默认值、null 值或不正确的数据。</span><span class="sxs-lookup"><span data-stu-id="1467c-366">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md"><span data-ttu-id="1467c-367">检索数据库架构信息 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="1467c-367">Retrieving Database Schema Information (ADO.NET)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="oracleDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-368">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-368">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-369">获取指定列的字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-369">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="1467c-370">指定列的值为字符串形式。</span><span class="sxs-lookup"><span data-stu-id="1467c-370">The value of the specified column as a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-371">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-371">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-372">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-372">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTimeSpan : int -&gt; TimeSpan" Usage="oracleDataReader.GetTimeSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-373">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-373">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-374">获取指定列的 <see langword="System.TimeSpan" /> 形式的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-374">Gets the value of the specified column as a <see langword="System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="1467c-375">以 <see cref="T:System.TimeSpan" /> 的形式指定的列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-375">The value of the specified column as a <see cref="T:System.TimeSpan" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-376">调用<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>以在调用此方法前检查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="1467c-376">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1467c-377">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="1467c-377">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="oracleDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-378">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-378">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-379">获取以本机格式表示的指定序号处的列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-379">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="1467c-380">要返回的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-380">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-381">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1467c-381">This method returns <xref:System.DBNull> for null database columns.</span></span> <span data-ttu-id="1467c-382">此方法返回的值可能是从 Oracle 的数字数据类型转换为 .NET Decimal 类型的结果。</span><span class="sxs-lookup"><span data-stu-id="1467c-382">The value returned by this method might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</span></span> <span data-ttu-id="1467c-383">如果值太大而无法存储在 .net Decimal 中，此方法将引发一个<xref:System.Data.OracleClient.OracleException>溢出异常的。</span><span class="sxs-lookup"><span data-stu-id="1467c-383">If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1467c-384">该值太大，无法以 .NET Decimal 形式存储。</span><span class="sxs-lookup"><span data-stu-id="1467c-384">The value is too large to be stored in the .NET Decimal.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="oracleDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="1467c-385">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-385">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="1467c-386">使用当前行的列值来填充对象数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-386">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="1467c-387">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="1467c-387">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-388">对于大多数应用程序， <xref:System.Data.OracleClient.OracleDataReader.GetValues%2A>该方法提供了一种有效的方法来检索所有列，而不是单独检索每个列。</span><span class="sxs-lookup"><span data-stu-id="1467c-388">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="1467c-389">可以传递一个<xref:System.Object>数组，该数组包含的列数少于所产生行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="1467c-389">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="1467c-390">只有<xref:System.Object>数组保存的数据量会复制到数组中。</span><span class="sxs-lookup"><span data-stu-id="1467c-390">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="1467c-391">还可以传递<xref:System.Object>其长度大于结果行中所含列数的数组。</span><span class="sxs-lookup"><span data-stu-id="1467c-391">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="1467c-392">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1467c-392">This method returns <xref:System.DBNull> for null database columns.</span></span> <span data-ttu-id="1467c-393">在<xref:System.Object>数组中返回的值可能是从 Oracle 的数字数据类型转换为 .net Decimal 类型的结果。</span><span class="sxs-lookup"><span data-stu-id="1467c-393">The value returned in the <xref:System.Object> array might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</span></span> <span data-ttu-id="1467c-394">如果值太大而无法存储在 .net Decimal 中，此方法将引发一个<xref:System.Data.OracleClient.OracleException>溢出异常的。</span><span class="sxs-lookup"><span data-stu-id="1467c-394">If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1467c-395">该值太大，无法以 .NET Decimal 形式存储。</span><span class="sxs-lookup"><span data-stu-id="1467c-395">The value is too large to be stored in the .NET Decimal.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.OracleClient.OracleDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1467c-396">获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否包含一行或多行。</span><span class="sxs-lookup"><span data-stu-id="1467c-396">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleDataReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="1467c-397">如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-397"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.OracleClient.OracleDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1467c-398">指示 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否关闭。</span><span class="sxs-lookup"><span data-stu-id="1467c-398">Indicates whether the <see cref="T:System.Data.OracleClient.OracleDataReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="1467c-399">如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-399"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleDataReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-400"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.OracleClient.OracleDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="1467c-400"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="oracleDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-401">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-401">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-402">获取一个值，该值指示列中是否包含不存在的或缺少的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-402">Gets a value indicating whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="1467c-403">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-403"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-404">若要避免引发错误，请在调用类型化 Get 方法之前调用此方法以检查是否有空列值（例如<xref:System.Data.OracleClient.OracleDataReader.GetByte%2A> <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>，、等）。</span><span class="sxs-lookup"><span data-stu-id="1467c-404">To avoid raising an error, call this method to check for null column values before calling the typed Get methods (for example, <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1467c-405">获取以本机格式表示的列的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-405">Gets the value of a column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.OracleClient.OracleDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="1467c-406">列序号。</span><span class="sxs-lookup"><span data-stu-id="1467c-406">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="1467c-407">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-407">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="1467c-408">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-408">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="1467c-409">传递的索引超出了 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="1467c-409">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.OracleClient.OracleDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1467c-410">列名称。</span><span class="sxs-lookup"><span data-stu-id="1467c-410">The column name.</span></span></param>
        <summary><span data-ttu-id="1467c-411">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-411">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="1467c-412">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="1467c-412">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="1467c-413">未找到具有指定名称的列。</span><span class="sxs-lookup"><span data-stu-id="1467c-413">No column with the specified name was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="oracleDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-414">使 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 前进到下一个结果</span><span class="sxs-lookup"><span data-stu-id="1467c-414">Advances the <see cref="T:System.Data.OracleClient.OracleDataReader" /> to the next result</span></span></summary>
        <returns><span data-ttu-id="1467c-415">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-415"><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-416">调用此方法`REF CURSOR`时，必须使用。</span><span class="sxs-lookup"><span data-stu-id="1467c-416">You must use a `REF CURSOR` when calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="oracleDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-417">让 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 前进到下一条记录。</span><span class="sxs-lookup"><span data-stu-id="1467c-417">Advances the <see cref="T:System.Data.OracleClient.OracleDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="1467c-418">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1467c-418"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-419">的<xref:System.Data.OracleClient.OracleDataReader>默认位置早于第一条记录。</span><span class="sxs-lookup"><span data-stu-id="1467c-419">The default position of the <xref:System.Data.OracleClient.OracleDataReader> is prior to the first record.</span></span> <span data-ttu-id="1467c-420">因此，您必须调用<xref:System.Data.OracleClient.OracleDataReader.Read%2A>以开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="1467c-420">Therefore, you must call <xref:System.Data.OracleClient.OracleDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="1467c-421">在任意给定时间，都可以打开多个。 <xref:System.Data.OracleClient.OracleDataReader></span><span class="sxs-lookup"><span data-stu-id="1467c-421">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1467c-422">下面的示例创建一个<xref:System.Data.OracleClient.OracleConnection>、一个<xref:System.Data.OracleClient.OracleCommand>和一个<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="1467c-422">The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>.</span></span> <span data-ttu-id="1467c-423">该示例将读取数据，并将其写出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1467c-423">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="1467c-424">最后，该示例关闭<xref:System.Data.OracleClient.OracleDataReader>， <xref:System.Data.OracleClient.OracleConnection>然后关闭。</span><span class="sxs-lookup"><span data-stu-id="1467c-424">Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.OracleClient.OracleDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1467c-425">通过执行 SQL 语句获取更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="1467c-425">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="1467c-426">更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="1467c-426">The number of rows changed, inserted, or deleted.</span></span> <span data-ttu-id="1467c-427">对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</span><span class="sxs-lookup"><span data-stu-id="1467c-427">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1467c-428">在<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>读取所有行并<xref:System.Data.OracleClient.OracleDataReader>关闭之前，不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="1467c-428">The <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="1467c-429"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>是在关闭后可调用的<xref:System.Data.OracleClient.OracleDataReader>唯一属性。</span><span class="sxs-lookup"><span data-stu-id="1467c-429"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1467c-430">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="1467c-430">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="1467c-431">用于循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="1467c-431">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
