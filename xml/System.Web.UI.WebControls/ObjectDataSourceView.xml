<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d07f31d8a62f2215e8e8bf8fb42371ca9f6023b7" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68393088" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>支持 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件并提供一个接口，使数据绑定控件可以对业务对象和数据对象执行数据操作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类主要用于数据绑定控件, 而不是页代码中的可编程对象。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>类实现控件的数据功能, 包括、、和<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作、排序、筛选和管理保存在视图状态中的设置。 <xref:System.Web.UI.WebControls.ObjectDataSourceView>  
  
 在<xref:System.Web.UI.WebControls.ObjectDataSourceView>运行时为<xref:System.Web.UI.WebControls.ObjectDataSource>类的每个实例创建一个对象。 对<xref:System.Web.UI.WebControls.ObjectDataSource>类的实例的数据操作的调用由<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象的实例来处理。 页面开发人员不直接访问<xref:System.Web.UI.WebControls.ObjectDataSourceView>类的实例。 控件开发人员可以通过扩展<xref:System.Web.UI.WebControls.ObjectDataSource>和<xref:System.Web.UI.WebControls.ObjectDataSourceView>类来创建自定义数据控件。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>类通过使用反射对业务或数据对象调用方法来执行数据操作。 在运行时, <xref:System.Web.UI.WebControls.ObjectDataSource>控件创建<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>由属性标识的类型的实例, 然后为数据操作调用适当的方法。 实例化对象不在内存<xref:System.Web.UI.WebControls.ObjectDataSourceView>中缓存。 为每个数据方法调用创建并销毁对象。 如果该方法为`static` (`Shared`在 Visual Basic 中), 则不会创建实例, 但仍会调用数据操作方法。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件不会直接向页面<xref:System.Web.UI.WebControls.ObjectDataSourceView>开发人员公开。 而是<xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSource>通过访问的属性和方法。 例如, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>通过<xref:System.Web.UI.WebControls.ObjectDataSourceView>设置的属性设置的属性。 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>  
  
## <a name="retrieving-data"></a>检索数据  
 数据源视图执行的最基本操作是使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法从基础数据存储中检索数据, 该方法将<xref:System.Collections.IEnumerable>检索数据项的集合。 以下数据检索方法、属性和事件由<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象实现并直接由其<xref:System.Web.UI.WebControls.ObjectDataSource>控件向页面开发人员和其他调用方公开:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>事件  
  
## <a name="updating-data"></a>更新数据  
 对象通过调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>由属性标识的业务或数据对象方法来支持数据更新。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 自动执行更新的数据绑定控件 ( <xref:System.Web.UI.WebControls.GridView>如和<xref:System.Web.UI.WebControls.DetailsView>控件) 会将<xref:System.Collections.Specialized.IOrderedDictionary>接口<xref:System.Web.UI.WebControls.ObjectDataSourceView>中的参数传递给, 而视图对象则会将这些参数与任何参数 (在<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合中找到。  
  
 以下更新方法、属性和事件由<xref:System.Web.UI.WebControls.ObjectDataSourceView>实现并直接由其<xref:System.Web.UI.WebControls.ObjectDataSource>控件向页面开发人员和其他调用方公开:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件  
  
## <a name="inserting-data"></a>插入数据  
 对象支持通过调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性标识的业务或数据对象方法插入新的数据行。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 自动执行插入的数据绑定控件 ( <xref:System.Web.UI.WebControls.GridView>如和<xref:System.Web.UI.WebControls.DetailsView>) 将<xref:System.Web.UI.WebControls.ObjectDataSourceView>在<xref:System.Collections.Specialized.IOrderedDictionary>接口中将它们的参数传递给, 并且视图对象将这些参数与中找到的任何参数合并<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。  
  
 以下插入方法、属性和事件由<xref:System.Web.UI.WebControls.ObjectDataSourceView>实现并直接由其<xref:System.Web.UI.WebControls.ObjectDataSource>控件向页面开发人员和其他调用方公开:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件  
  
## <a name="deleting-data"></a>删除数据  
 对象支持通过调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>由属性标识的业务或数据对象方法来删除数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 自动执行删除的数据绑定控件 ( <xref:System.Web.UI.WebControls.GridView>如和<xref:System.Web.UI.WebControls.DetailsView>) 将<xref:System.Web.UI.WebControls.ObjectDataSourceView>在<xref:System.Collections.Specialized.IOrderedDictionary>接口中将它们的参数传递给, 并且视图对象将这些参数与中找到的任何参数合并<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合。 以下 delete 方法、属性和事件由<xref:System.Web.UI.WebControls.ObjectDataSourceView>实现并直接由其<xref:System.Web.UI.WebControls.ObjectDataSource>控件向页面开发人员和其他调用方公开:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 方法  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 属性  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>事件  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件  
  
## <a name="filtering-and-sorting-data"></a>对数据进行筛选和排序  
 当你可以动态筛选数据时, 数据检索功能更强大。 仅当该<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Data.DataSet>对象时, 控件才支持筛选。 您可以使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>属性将动态筛选应用到数据检索。 这些属性由<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象实现, 由其<xref:System.Web.UI.WebControls.ObjectDataSource>控件直接向数据绑定控件和其他调用方公开。  
  
 您可以<xref:System.Web.UI.WebControls.ObjectDataSource>通过在检索数据后对其进行排序来对检索到的数据进行排序。 仅当该<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回<xref:System.Data.DataTable>或<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Data.DataSet>时, 控件才支持排序。 属性始终返回`true`, <xref:System.Web.UI.WebControls.ObjectDataSourceView> 因为<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>无法确定方法返回的类型, 而不调用方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> 属性语法与<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>属性的语法相同。 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>  
  
## <a name="tracking-view-state"></a>跟踪视图状态  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实现接口,并使用视图状态在页请求<xref:System.Web.UI.IStateManager>之间跟踪其状态。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>提供、和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法的实现,以便为控件启用<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>视图状态跟踪。 有关详细信息, 请参阅[ASP.NET 状态管理概述](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ObjectDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceView(System::Web::UI::WebControls::ObjectDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceView : System.Web.UI.WebControls.ObjectDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.ObjectDataSourceView" Usage="new System.Web.UI.WebControls.ObjectDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">与 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</param>
        <param name="name">数据源视图的唯一名称（在拥有它的数据源控件的范围内）。</param>
        <param name="context">当前的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数由方法调用, 以返回具有指定`viewName`参数的数据源视图的新实例。 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView> `DefaultView` <xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSource>控件在任何时候都只与一个控件相关联, 并且始终将该视图命名为, 尽管此命名限制由控件 (而不是) 施加。 <xref:System.Web.UI.WebControls.ObjectDataSource> 可以重写<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>方法, 以支持具有不同命名约定的视图。  
  
 由传递的对象由数据源视图用来访问<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>参数对象, 如和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>属性。 <xref:System.Web.HttpContext> `context`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 对象是否支持删除操作。</summary>
        <value>如果支持该操作，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 属性是空字符串 ("")，则不支持删除操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A> `true`设置了属性,<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>则属性返回。 如果所有数据属性未设置或设置不正确, 则删除操作可能仍会失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 对象是否支持插入操作。</summary>
        <value>如果支持该操作，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 属性是空字符串，则不支持插入操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A> `true`设置了属性,<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>则属性返回。 如果所有数据属性未设置或设置不正确, 则插入操作可能仍会失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 对象是否支持对检索的数据分页。</summary>
        <value>如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" /> 值设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性指示<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象是否支持分页。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A> 有关如何支持<xref:System.Web.UI.WebControls.ObjectDataSourceView>分页的信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 对象除了支持检索数据集外，是否还支持检索数据行总数。</summary>
        <value>如果支持该操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> `true`设置了属性,<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>则属性返回。 返回计数的方法应返回可以分页的总行数, 而不是页面中的行数。 数据绑定控件使用可以分页的总行数来确定如何呈现分页控件。 例如, 在<xref:System.Web.UI.WebControls.GridView>控件页导航器中呈现多少数字页导航按钮。 有关分页支持的详细信息, 请<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>参阅。  
  
 <xref:System.Web.UI.DataSourceSelectArguments>在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法的过程中检查属性,以确保数据源控件支持通过设置各种属性而请求的所有功能。<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象是否支持基础数据源上的排序视图。</summary>
        <value><see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>由于控件仅支持在方法返回、或<xref:System.Data.DataTable>对象时对数据进行排序, 因此视图对象无法确定是否支持排序, 直到<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>方法称为, 并返回。 出于此原因, <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>属性始终返回。 `true`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与当前的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 对象是否支持更新操作。</summary>
        <value>如果支持该操作，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性是空字符串 ("")，则不支持更新操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A> `true`设置了属性,<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>则属性返回。 如果所有数据属性未设置或设置不正确, 则更新操作可能仍会失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定在操作期间，当基础数据存储中某行的数据更改时，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件如何执行更新和删除操作。</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 值之一。 默认为 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性确定是否将旧值和新值的参数应用`Update`于方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 例如, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>如果属性指定的方法返回一个<xref:System.Data.DataTable>具有<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>列`Name`和`Number`的对象, 并且属性设置为<xref:System.Web.UI.ConflictOptions.OverwriteChanges>值, 则会为`Name`方法和`Number` 。 `Update` `Number` `original_Name` `original_Name` `Name`如果将<xref:System.Web.UI.ConflictOptions.CompareAllValues>属性设置为值, 则会创建参数, 其中包含名称、、和。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> (原始值的参数的准确名称取决于<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。)然后确定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性中指定的方法是否具有匹配的参数。 <xref:System.Web.UI.WebControls.ObjectDataSourceView>  
  
 并发控制是一种技术数据存储, 用于控制当多个客户端访问和处理相同数据时, 如何在存储中读取和更改数据。 例如, 一个客户端读取数据并向用户显示数据, 而另一个客户端读取相同的数据, 并将其呈现给其他用户。 如果这两个用户更新数据并将其提交到数据存储, 则可能会发生一些意外的结果, 因为这两个客户端可能会为同一数据更新不同的值。 这被视为冲突。 通过将<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性设置<xref:System.Web.UI.ConflictOptions.CompareAllValues>为值, 该`Update`方法可以将旧值和新值与原始数据源进行比较, 以检测冲突并根据需要对其进行处理。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选值不是 <see cref="T:System.Web.UI.ConflictOptions" /> 值之一。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource 控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示传递给更新、插入或删除操作的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 值是否自动从 <see langword="null" /> 转换为 <see cref="F:System.DBNull.Value" /> 值。</summary>
        <value>如果传递给 <see cref="T:System.Web.UI.WebControls.Parameter" /> 的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象中的 <see langword="true" /> 自动转换为 <see cref="F:System.DBNull.Value" /> 值，则为 <see langword="null" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不转换`null` <xref:System.DBNull.Value?displayProperty=nameWithType>为值会导致运行时出现错误。 使用属性来指示传递给更新<xref:System.Web.UI.WebControls.Parameter> 、插入或删除操作的值是否<xref:System.DBNull.Value?displayProperty=nameWithType>自动从`null`转换为值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A> 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件用于数据操作中的参数的类的名称。 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件使用指定的类，而不是位于各种参数集合中的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
        <value>部分或完全限定类名，标识 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可以用作 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 或 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作参数的对象类型。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以创建一个聚合多个项的对象`Select`, 而`Insert`不是`Delete`指定传递到、 `Update`、和方法的多个参数。 此对象将传递给方法, 而不是多个参数。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource 控件概述</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">用于标识要删除的项的键值的 <see cref="T:System.Collections.IDictionary" />。 这些参数与 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 属性一起使用以执行删除操作。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <param name="oldValues">一个 <see cref="T:System.Collections.IDictionary" />，包含用于匹配数据源中的项的其他非键值。 仅当 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 属性设置为 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 字段时，才将行值传递给方法。</param>
        <summary>执行删除操作，方法是使用指定的 <paramref name="keys" /> 和 <paramref name="oldValues" /> 集合调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 属性标识的业务对象方法。</summary>
        <returns>删除的行数；否则，如果行数未知，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为-1, 表示已删除未知数量的行。 若要返回不同的值, 请<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>设置<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>程序的对象的属性。 受影响的行`Delete`数通常由业务对象的方法返回, 该值可<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>从<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>事件处理程序的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数的属性中获取。  
  
 方法调用方法, 传递`keys` 和`oldValues`集合。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 操作完成时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以检查返回值和输出参数的值, 或确定在<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作完成后是否引发了异常。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 可从与事件关联的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象中获取返回值、输出参数和异常处理属性。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.GridView>和控件结合使用来删除数据。 最初使用由属性指定的方法从`EmployeeLogic`对象中检索数据, 从而显示一组所有雇员。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView> 由于属性设置为`true`, 因此该控件会<xref:System.Web.UI.WebControls.GridView>自动显示 "删除" 按钮。  <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 如果单击 "**删除**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 还执行了一些预处理和后处理步骤。 在`NorthwindEmployeeDeleting`执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> `NorthwindEmployeeDeleted` <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>操作之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>调用委托来处理事件, 并在操作完成后调用委托来处理事件。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>执行异常处理。 在此示例中, 如果`NorthwindDataException`引发了, 则由该委托处理。  
  
 若要检查此代码示例`EmployeeLogic`使用的中间层业务对象的实现, 请参见。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象调用以删除数据的方法或函数的名称。</summary>
        <value>一个字符串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用于删除数据的方法或函数的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性标识的方法可以是实例方法, `static`也可以是 (`Shared`在 Visual Basic) 方法。 如果它是实例方法, 则每次调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法时都会创建并销毁业务对象。 在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>的方法之前, 您可以处理该事件以使用业务对象。 你还可以处理在<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>由属性指定的方法之后引发的事件。 如果该方法是一个`static` (`Shared`在 Visual Basic) 方法中, 则永远不会创建业务对象, 也不能处理这些事件。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSource>控件所使用的业务对象实现了多个具有相同名称的方法或函数 (方法重载), 数据源控件会尝试根据一组条件 (包括参数) 调用正确的方法或函数。集合中<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>的。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中的参数与<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>方法签名的参数不匹配, 则数据源会引发异常。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性的值存储在视图状态中。  
  
 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.GridView>和控件结合使用来删除数据。 最初使用由属性指定的方法从`EmployeeLogic`对象中检索数据, 从而显示一组所有雇员。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView> 由于属性设置为`true`, 因此该控件会<xref:System.Web.UI.WebControls.GridView>自动显示 "删除" 按钮。  <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 如果单击 "**删除**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 还执行了一些预处理和后处理步骤。 在`NorthwindEmployeeDeleting`执行<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> `NorthwindEmployeeDeleted` <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>操作之前<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>调用委托来处理事件, 并在操作完成后调用委托来处理事件。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>执行异常处理。 在此示例中, 如果`NorthwindDataException`引发了, 则由该委托处理。  
  
 若要检查此代码示例`EmployeeLogic`使用的中间层业务对象的实现, 请参见。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取参数集合，该集合包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 方法使用的参数。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 属性指定的方法所使用的参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中包含的参数的名称和类型必须与<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性签名所指定的方法中的参数的名称和类型相匹配。 参数名称受<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性影响, 并区分大小写。 在使用提供参数的数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) <xref:System.Web.UI.WebControls.ObjectDataSource>时, 控件会自动将集合中显式指定的所有参数与提供的参数合并在一起。数据绑定控件。  
  
 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 操作前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以执行其他特定于应用程序的初始化操作, 验证参数的值, 或者在<xref:System.Web.UI.WebControls.ObjectDataSource>控件执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>之前更改参数值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>运作. 参数可用作<xref:System.Collections.IDictionary>由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性所访问的集合。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.GridView>和控件结合使用来删除数据。 最初使用由属性指定的方法从`EmployeeLogic`对象中检索数据, 从而显示一组所有雇员。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView> 由于属性设置为`true`, 因此该控件会<xref:System.Web.UI.WebControls.GridView>自动显示 "删除" 按钮。  <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 如果单击 "**删除**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 还执行了一些预处理和后处理步骤。 在`NorthwindEmployeeDeleting`执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> `NorthwindEmployeeDeleted` <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>操作之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>调用委托来处理事件, 并在操作完成后调用委托来处理事件。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>执行异常处理。 在此示例中, 如果`NorthwindDataException`引发了, 则由该委托处理。  
  
 若要检查此代码示例`EmployeeLogic`使用的中间层业务对象的实现, 请参见。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示数据源控件是否支持对它检索的数据集进行分页。</summary>
        <value>如果数据源控件支持对它检索的数据进行分页，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>通过`Select`设置的、<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>、和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性,并使用正确的参数定义业务对象中的方法,对控件进行分页。<xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> 当属性设置为`true`时, 该<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合包括两个附加参数, 用于请求的第一行和请求的行数。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 这两个参数的命名方式由<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>和<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性定义。 `Select`方法应返回从指定索引处开始的请求的行数。 由于数据可能不会被页面大小平均分割, 因此最后一页可能包含较少的行。 因此, 所请求的行数实际上是返回的最大行数。  
  
 <xref:System.Web.UI.DataSourceSelectArguments>在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法的过程中检查属性,以确保数据源控件支持通过设置各种属性而请求的所有功能。<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>  
  
 如果对关联的数据绑定控件启用了分页, 则数据绑定控件将调用`Select`具有所需的起始索引和行数的方法。 此外, 如果设置<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>了属性, 数据绑定控件将在呈现页导航控件之前调用方法。 例如, 如果<xref:System.Web.UI.WebControls.GridView>控件启用了分页, 页面大小为 5, 并且该<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>方法返回 20, 则在页导航中只显示4页。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">与 <see cref="T:System.Collections.IDictionary" /> 属性一起使用以执行删除操作的参数的 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <param name="oldValues">一个 <see cref="T:System.Collections.IDictionary" />，包含仅当 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 属性设置为 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 字段时才计算的行值。</param>
        <summary>使用 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 方法和指定的 <paramref name="keys" /> 和 <paramref name="oldValues" /> 集合执行删除操作。</summary>
        <returns>删除的行数；否则，如果行数未知，则为 -1。 有关更多信息，请参见<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法, 以使用业务对象从基础数据存储区中删除数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 页面开发人员和数据绑定控件作者不会直接调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>方法; 而是使用<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>公开的方法。  
  
 在执行删除操作之前, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>将调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>引发事件。 你可以处理此事件以检查参数的值, 并在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>方法之前执行任何预处理。  
  
 若要执行删除操作, 请<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>由属性标识的方法和和`oldValues`集合中的`keys`任何关联参数, 然后执行该操作。 操作完成后, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>引发事件。 您可以处理此事件以检查任何返回值和错误代码, 并执行任何后续处理。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> 属性返回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 属性被设置为 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 值，<paramref name="oldValues" /> 集合中未传递任何值。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">与 <see cref="T:System.Collections.IDictionary" /> 属性一起使用以执行插入操作的参数的 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <summary>执行插入操作，方法是使用指定的 <paramref name="values" /> 集合调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 属性标识的业务对象方法。</summary>
        <returns>插入的行数；否则，如果行数未知，则为 -1。 有关更多信息，请参见<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法, 以使用业务对象将数据插入基础数据存储区中。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 页面开发人员和数据绑定控件作者不会直接调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>方法; 而是使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>公开的方法。  
  
 在执行插入之前, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>将调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>引发事件。 你可以处理此事件以检查参数的值, 并在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法之前执行任何预处理。  
  
 若要执行插入操作, <xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性标识的方法和`values`集合中的任何关联参数, 然后执行该操作。 操作完成后, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>引发事件。 您可以处理此事件以检查任何返回值、错误代码以及执行任何后续处理。  
  
 有关返回插入的行数的详细信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 属性返回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="values" /> 为 <see langword="null" /> 或空。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" />，用于请求对数据执行基本数据检索操作以外的操作。</param>
        <summary>通过调用 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 属性标识的方法并传递 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 集合中的所有值，从 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 属性标识的对象中检索数据。</summary>
        <returns>数据行的 <see cref="T:System.Collections.IEnumerable" /> 列表。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法, 以使用业务对象检索数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 页面开发人员和数据绑定控件作者不会直接调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>方法; 而是使用<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>公开的方法。  
  
 指定的方法可以具有任何方法签名, 但必须返回下表中列出的<xref:System.Web.UI.WebControls.ObjectDataSource>控件的一个类型才能成功调用它。  
  
|返回类型|操作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> 由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回。|  
|<xref:System.Data.DataTable>|使用方法创建并返回。 <xref:System.Data.DataTable> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>|  
|<xref:System.Data.DataSet>|的<xref:System.Data.DataTable> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>第一个提取, 并由方法创建并返回。 <xref:System.Data.DataSet>|  
|<xref:System.Object>|对象包装在一个元素<xref:System.Collections.IEnumerable>中, 并<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>由方法返回。|  
  
 在执行数据检索之前, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>将调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>引发事件。 你可以处理此事件以检查参数的值并在操作之前执行任何预处理。  
  
 若要执行选择操作, <xref:System.Web.UI.WebControls.ObjectDataSourceView>控件使用反射来调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>由属性标识的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合中的任何关联参数, 然后执行该方法。 操作完成后, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>引发事件。 您可以处理此事件以检查任何返回值和错误代码, 并执行任何后续处理。  
  
 如果该<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法<xref:System.Data.DataSet>返回对象并启用了缓存, 则将<xref:System.Web.UI.WebControls.ObjectDataSourceView>从中检索数据, 并在操作过程中将数据保存到缓存中。 根据<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 和<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>属性的组合指定的缓存行为, 创建、放弃或刷新缓存。  
  
 如果该<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回一个<xref:System.Data.DataSet>对象并<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>指定了属性, 则会与任何提供<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>的属性一起进行计算, 并将<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>生成的筛选器应用于运作.  
  
 有关返回所选行数的信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">传递给 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="arguments" /> 指定数据源在检索数据时应执行一些附加操作，以便对检索到的数据启用分页或排序，但此数据源控件不支持请求的功能。  
  
或 
<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法返回的对象不是 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />，并且启用缓存。 对于 <see cref="T:System.Data.DataSet" /> 控件，只能缓存 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象。  
  
- 或 - 
已启用缓存和客户端模拟。 启用客户端模拟时，<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 不支持缓存。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法返回的对象是 <see cref="T:System.Data.DataSet" />，但它的 <see cref="P:System.Data.DataSet.Tables" /> 集合中没有表。  
  
或 
<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> 属性设置为 <see langword="true" />，但没有设置 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> 和 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> 属性。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">与 <see cref="T:System.Collections.IDictionary" /> 属性一起使用以执行更新数据库操作的主键的 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />。 如果没有与方法关联的键，则传递 <see langword="null" />。</param>
        <param name="values">与 <see cref="T:System.Collections.IDictionary" /> 一起使用以执行更新数据库操作的值的 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <param name="oldValues">表示基础数据存储区中的原始值的 <see cref="T:System.Collections.IDictionary" />。 如果没有与查询关联的参数，则传递 <see langword="null" />。</param>
        <summary>通过调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性标识的方法和使用 <paramref name="keys" />、<paramref name="values" /> 或 <paramref name="oldValues" /> 集合中提供的所有参数以执行更新操作。</summary>
        <returns>更新的行数；如果行数未知，则为 -1。 有关更多信息，请参见<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类实现继承<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>的方法, 以使用业务对象更新数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 页面开发人员和数据绑定控件作者不会直接调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>方法; 而是使用<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>公开的方法。  
  
 计算和`values`集合中包含的值`keys` , 并将其与<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合中包含的任何值合并。 如果将<xref:System.Web.UI.ConflictOptions.CompareAllValues> `oldValues`属性设置为值, 则会将集合中包含的值设置为<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性的格式, 并且还将合并这些值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>  
  
 在执行更新操作之前, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>将调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>引发事件。 你可以处理此事件以检查参数的值, 并在更新之前执行任何预处理。 若要执行更新操作, 请<xref:System.Web.UI.WebControls.ObjectDataSourceView>使用反射来调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>由属性标识的方法和`keys`集合中的任何关联参数, 然后执行该操作。 操作完成后, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>调用方法来<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>引发事件。 您可以处理此事件以检查任何返回值、错误代码以及执行任何后续处理。  
  
 有关返回更新的行数的详细信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 属性返回 <see langword="false" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="oldValues" /> 为 <see langword="null" /> 或为空，并将 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 设置为 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 属性标识的业务对象方法时应用的筛选表达式。</summary>
        <value>一个字符串，表示在使用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 属性标识的业务对象方法检索数据时应用的筛选表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>仅当<xref:System.Data.DataSet>方法返回、<xref:System.Data.DataView>或对象<xref:System.Data.DataTable>时, 控件才支持筛选数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>  
  
 用于<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性的语法是格式字符串样式表达式。 筛选<xref:System.Data.DataView.RowFilter%2A>表达式语法与属性接受的语法相同, 因为筛选器表达式应用<xref:System.Data.DataView.RowFilter%2A>于从执行<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法返回的<xref:System.Data.DataView>对象的属性。 （有关详细信息，请参阅 <xref:System.Data.DataColumn.Expression%2A>。）如果将参数添加到<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合中, 则还可以在表达式中包含格式字符串占位符`"{0}"`来替换参数值。 根据<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合中参数的索引替换占位符。  
  
 可以在中<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>包含参数。 如果参数的类型是字符串或字符类型, 则将参数括在单引号内。 如果参数是数值类型, 则不需要引号。集合包含为<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>中找到的占位符计算的参数。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性的值存储在视图状态中。  
  
> [!IMPORTANT]
>  建议验证从客户端接收的任何筛选器参数值。 运行时只需将参数值替换为筛选表达式, 并将其<xref:System.Data.DataView>应用于<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法返回的对象。 如果使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为安全措施来限制返回的项目数, 则必须在进行筛选之前验证参数值。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件显示筛选数据, 以便从中间层业务对象检索数据<xref:System.Web.UI.WebControls.GridView>和显示结果的控件。 第二个代码示例提供了在第一个代码示例中使用的中间层业务对象的示例。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件显示筛选的数据, 以便从中间层业务对象检索数据<xref:System.Web.UI.WebControls.GridView>和显示结果的控件。 仅当检索数据的方法将其检索<xref:System.Data.DataSet>为对象时,控件才能筛选数据。<xref:System.Web.UI.WebControls.ObjectDataSource> 出于此原因, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性标识将数据<xref:System.Data.DataSet>作为检索的业务对象方法。  
  
 此代码<xref:System.Web.UI.WebControls.TextBox>示例包含一个、一个<xref:System.Web.UI.WebControls.GridView>控件、 <xref:System.Web.UI.WebControls.ObjectDataSource>一个控件和一个**提交**按钮。 默认情况下, <xref:System.Web.UI.WebControls.TextBox>将使用其中一个 Northwind 商贸员工的名称填充。 显示由中的名称标识的员工的相关信息。 <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.GridView> 若要检索另一个雇员的数据, <xref:System.Web.UI.WebControls.TextBox>请在中输入雇员的全名, 然后单击 "**提交**" 按钮。  
  
 属性指定一个表达式, 该表达式用于筛选<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>由属性检索的数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 它使用计算结果为<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合中包含的参数的参数占位符。 在此示例中, 参数占位符由单引号界定, 因为参数的类型是可能包含空格的字符串类型。 如果参数的类型是数值或日期类型, 则不需要用到边界引号。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象的示例。 此代码示例包含两个基本类:  
  
-   `EmployeeLogic`类, 该类是封装业务逻辑的类。  
  
-   `NorthwindEmployee`类, 该类是一个模型类, 其中只包含从数据层加载和保存数据所需的基本功能。  
  
 为简单起见, `EmployeeLogic`类创建了静态数据集, 而不是从数据层检索数据。 它在此示例中也很有帮助, 因为示例需要提供 Northwind 商贸员工的全名才能演示筛选。  
  
 对于完整的工作示例, 必须使用所提供的 Web 窗体页代码示例编译并使用这些类。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">设置了 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 属性但 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法没有返回 <see cref="T:System.Data.DataSet" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>执行筛选操作前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件, 在<xref:System.Web.UI.WebControls.ObjectDataSource>控件执行筛选器操作之前对筛选器参数值执行验证操作。 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 您可以通过<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>将<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>对象的属性设置为来`true`取消该操作。 只有在<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>设置了属性的情况下, 才会引发事件。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
> [!IMPORTANT]
>  应该验证从客户端接收的任何筛选器参数值。 运行时只需将参数值替换为筛选表达式, 并将其<xref:System.Data.DataView>应用于<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>方法返回的对象。 如果使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>属性作为安全措施来限制返回的项目数, 则必须在进行筛选之前验证参数值。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 字符串中的任何参数占位符关联的参数的集合。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" />，它包含与在 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 属性中找到的任何参数占位符相关联的一组参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>仅当<xref:System.Data.DataSet>方法返回、<xref:System.Data.DataTable>或对象<xref:System.Data.DataView>时, 控件才支持筛选数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合中的参数与<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>属性中指定的任何参数相关联。 当调用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性指定的方法时, 在属性中指定的参数占位符<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>将与集合中的参数对象进行匹配。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件显示筛选数据, 以便从中间层业务对象检索数据<xref:System.Web.UI.WebControls.GridView>和显示结果的控件。 第二个代码示例提供了在第一个代码示例中使用的中间层业务对象的示例。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件显示筛选的数据, 以便从中间层业务对象检索数据<xref:System.Web.UI.WebControls.GridView>和显示结果的控件。 仅当检索数据的方法将其检索<xref:System.Data.DataSet>为对象时,控件才能筛选数据。<xref:System.Web.UI.WebControls.ObjectDataSource> 出于此原因, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性标识将数据<xref:System.Data.DataSet>作为检索的业务对象方法。  
  
 此代码<xref:System.Web.UI.WebControls.TextBox>示例包含一个、一个<xref:System.Web.UI.WebControls.GridView>控件、 <xref:System.Web.UI.WebControls.ObjectDataSource>一个控件和一个**提交**按钮。 默认情况下, <xref:System.Web.UI.WebControls.TextBox>将使用其中一个 Northwind 商贸员工的名称填充。 显示由中的名称标识的员工的相关信息。 <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.GridView> 若要检索另一个雇员的数据, <xref:System.Web.UI.WebControls.TextBox>请在中输入雇员的全名, 然后单击 "**提交**" 按钮。  
  
 属性指定一个表达式, 该表达式用于筛选由<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性指定的方法检索的数据。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 它使用计算结果为<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>集合中包含的参数的参数占位符。 在此示例中, 参数占位符由单引号界定, 因为参数的类型是可能包含空格的字符串类型。 如果参数的类型是数值或日期类型, 则不需要用到边界引号。 集合包含一个参数<xref:System.Web.UI.WebControls.FormParameter> , <xref:System.Web.UI.WebControls.TextBox>该参数绑定到控件。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象的示例。 此代码示例包含两个基本类:  
  
-   `EmployeeLogic`类, 该类是封装业务逻辑的类。  
  
-   `NorthwindEmployee`类, 该类是一个模型类, 其中只包含从数据层加载和保存数据所需的基本功能。  
  
 为简单起见, `EmployeeLogic`类创建了静态数据集, 而不是从数据层检索数据。 它在此示例中也很有帮助, 因为示例需要提供 Northwind 商贸员工的全名才能演示筛选。  
  
 对于完整的工作示例, 必须使用所提供的 Web 窗体页代码示例编译并使用这些类。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">设置了 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 属性但 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法没有返回 <see cref="T:System.Data.DataSet" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">与 <see cref="T:System.Collections.IDictionary" /> 属性一起使用以执行插入操作的参数的 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 集合。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <summary>执行插入操作，方法是使用指定的 <paramref name="values" /> 集合调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 属性标识的业务对象方法。</summary>
        <returns>插入的行数；否则，如果行数未知，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认返回值为-1, 这意味着插入的行数未知。 若要返回不同的值, 请<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>设置该<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>的对象的属性。 受影响的`Insert`行数通常由业务对象的方法返回, 而该值可<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>从<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>事件的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象的属性中获取。  
  
 方法调用方法, 并且传递`values`集合。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 属性返回 <see langword="false" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 操作完成时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以检查返回值和输出参数的值, 或确定<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>在操作完成后是否引发了异常。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> 可从与事件关联的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象中获取返回值、输出参数和异常处理属性。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 操作前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以执行其他特定于应用程序的初始化操作, 验证参数的值, 或者在<xref:System.Web.UI.WebControls.ObjectDataSource>控件执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>之前更改参数值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>运作. 参数可用作<xref:System.Collections.IDictionary>由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性所访问的集合。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 第二个代码示例提供了在第一个代码示例中使用的中间层业务对象的示例。  
  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 最初显示一个新`NorthwindEmployee`记录以及自动生成的 "插入" 按钮。  <xref:System.Web.UI.WebControls.DetailsView> 在<xref:System.Web.UI.WebControls.DetailsView>控件的字段中输入数据后, 单击 "**插入**" 按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作的方法。  
  
 在此代码示例中, `UpdateEmployeeInfo`使用方法来执行插入; 但是, 它需要一个`NorthwindEmployee`参数来插入数据。 出于此原因, <xref:System.Web.UI.WebControls.DetailsView>控件自动传递的字符串集合是不够的。 委托是处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件并使<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>你能够在操作继续之前操作输入参数的对象。<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> `NorthwindEmployeeInserting` 由于方法需要对象作为参数, 因此使用字符串集合创建一个对象, 然后使用该方法所需的参数名称<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> (`ne`) 将其添加到集合中。 `NorthwindEmployee` `UpdateEmployeeInfo` 使用现有的中间层对象作为数据源时, 可以执行如下所述的步骤, 这些类型和方法不是专门用于<xref:System.Web.UI.WebControls.ObjectDataSource>控件的。  
  
 执行操作时, 将调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性标识的方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 如果对象的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法具有包含参数的方法签名, 则集合必须包含名称与方法签名参数匹配的参数, 才能成功完成该方法。 `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象的示例。 此代码示例包含两个基本类:  
  
-   `EmployeeLogic`类, 该类是封装业务逻辑的无状态类。  
  
-   `NorthwindEmployee`类, 该类是一个模型类, 其中只包含从数据层加载和保存数据所需的基本功能。  
  
 提供一个`NorthwindDataException`额外的类作为便利。  
  
 若要获取完整的工作示例, 必须编译并使用这些类。 `UpdateEmployeeInfo`方法未完全实现, 因此当您试验此示例时, 不会将数据插入 Northwind 商贸数据库中。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象调用以插入数据的方法或函数的名称。</summary>
        <value>一个字符串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用于插入数据的方法或函数的名称。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识的方法可以是实例方法, `static`也可以是 (`Shared`在 Visual Basic) 方法。 如果它是实例方法, 则每次调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性指定的方法时都会创建并销毁业务对象。 在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>的方法之前, 您可以处理该事件以使用业务对象。 你还可以处理在<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性指定的方法之后引发的事件。 (`Dispose`仅当业务对象<xref:System.IDisposable>实现接口时, 才调用。)如果该方法是一个`static` (`Shared`在 Visual Basic) 方法中, 则永远不会创建业务对象, 也不能处理这些事件。  
  
 如果该<xref:System.Web.UI.WebControls.ObjectDataSource>对象实现了多个具有相同名称的方法或函数 (方法重载) 的业务对象, 则数据源控件会尝试根据一组条件调用正确的参数,其中包括<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合中的参数与<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性签名指定的方法的参数不匹配, 则数据源会引发异常。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性的值存储在视图状态中。  
  
 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>具有业务对象的控件和用于插入数据的<xref:System.Web.UI.WebControls.DetailsView>控件来显示筛选后的数据。 第二个代码示例提供了在第一个代码示例中使用的中间层业务对象的示例。  
  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 最初显示一个新`NorthwindEmployee`记录以及自动生成的 "插入" 按钮。  <xref:System.Web.UI.WebControls.DetailsView> 在<xref:System.Web.UI.WebControls.DetailsView>控件的字段中输入数据后, 单击 "**插入**" 按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作的方法。  
  
 在此代码示例中, `UpdateEmployeeInfo`使用方法来执行插入; 但是, 它需要一个`NorthwindEmployee`参数来插入数据。 出于此原因, <xref:System.Web.UI.WebControls.DetailsView>控件自动传递的字符串集合是不够的。 委托是处理<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>事件并使<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>你能够在操作继续之前操作输入参数的对象。<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> `NorthwindEmployeeInserting` 由于方法需要对象作为参数, 因此使用字符串集合创建一个对象, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>并使用该方法所需的参数名称 (`ne`) 将其添加到集合中。 `NorthwindEmployee` `UpdateEmployeeInfo` 使用现有的中间层对象作为数据源时, 可以执行如下所述的步骤, 这些类型和方法不是专门用于<xref:System.Web.UI.WebControls.ObjectDataSource>控件的。  
  
 执行操作时, 将调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性标识的方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 如果对象的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法具有包含参数的方法签名, 则集合必须包含名称与方法签名参数匹配的参数, 才能成功完成该方法。 `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象的示例。 此代码示例包含两个基本类和一个附加类:  
  
-   `EmployeeLogic`类是一个无状态类, 它封装业务逻辑。  
  
-   `NorthwindEmployee`类是一个模型类, 该类仅包含从数据层加载和保存数据所需的基本功能。  
  
-   提供一个`NorthwindDataException`额外的类作为便利。  
  
 若要获取完整的工作示例, 必须编译并使用这些类。 `UpdateEmployeeInfo`方法未完全实现, 因此当你尝试此代码示例时, 你将不会在 Northwind 商贸数据库中插入数据。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取参数集合，该集合包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 方法使用的参数。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" />，它包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 属性所使用的参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合中包含的参数的名称和类型必须与<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性签名所指定的方法中的参数的名称和类型相匹配。 在使用提供参数的数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) <xref:System.Web.UI.WebControls.ObjectDataSource>时, 控件会自动将集合中显式指定的所有参数与提供的参数合并在一起。数据绑定控件。 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>具有业务对象的控件和用于插入数据的<xref:System.Web.UI.WebControls.DetailsView>控件来显示筛选后的数据。 第二个代码示例提供了在第一个`Insert`代码示例中使用的方法的示例实现。  
  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 最初显示一个新`NorthwindEmployee`记录以及自动生成的 "插入" 按钮。  <xref:System.Web.UI.WebControls.DetailsView> 在<xref:System.Web.UI.WebControls.DetailsView>控件的字段中输入数据后, 单击 "**插入**" 按钮。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性标识<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>执行操作的方法。  
  
 如果单击 "**插入**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 在与主管 ID 相对<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>应的集合中指定一个参数。 这是<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>因为即使 ID 在<xref:System.Web.UI.WebControls.DetailsView>控件的集合中显示为<xref:System.Web.UI.WebControls.BoundField>对象, 它也<xref:System.Web.UI.WebControls.ObjectDataSource>将作为字符串传递到控件。 通过将其显式添加到<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> <xref:System.Web.UI.WebControls.Parameter.Type%2A>具有设置为<xref:System.TypeCode.Int32>值的属性的集合<xref:System.Web.UI.WebControls.ObjectDataSource> , 会将其作为`int`(而非`string`) 的方法正确传递给方法。  
  
 执行操作时, 将调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>由属性标识的方法。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 如果对象的<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>方法具有包含参数的方法签名, 则集合必须包含名称与方法签名参数匹配的参数, 才能成功完成。 `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例`Insert`使用的方法的示例实现。 方法将添加`EmployeeLogic`到中间层对象, 使对象能够更轻松地在 Web 方案中与<xref:System.Web.UI.WebControls.ObjectDataSource>控件一起工作, 而无需对实际的业务逻辑进行重大重写。 `InsertNewEmployeeWrapper`  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象是否保存对其视图状态的更改。</summary>
        <value>如果数据源视图被标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="objectDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 状态的对象。</param>
        <summary>还原数据源视图的以前保存的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由 .NET Framework 基础结构使用, 不应在代码中直接使用。  不过, 控件开发人员可以重写此方法, 以指定自定义服务器控件如何还原其视图状态。 有关详细信息, 请参阅[ASP.NET 状态管理概述](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 方法从方法保存的上一个页请求<xref:System.Web.UI.WebControls.ObjectDataSourceView>还原对象的视图状态信息。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据检索方法参数的名称，该参数用于指示为数据源分页支持检索的记录数。</summary>
        <value>用于指示要检索的记录数的方法参数的名称。 默认值为<c>"maximumRows"</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性用于支持数据源分页。 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象创建 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 属性标识的类型的实例后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件, 以便调用业务对象上的其他方法、设置属性或在<xref:System.Web.UI.WebControls.ObjectDataSource>控件调用业务对象的`Data`方法之前, 执行特定于业务对象的其他初始化。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 对象的引用由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象公开的属性访问。  
  
 如果标识为执行数据操作的方法`static`是 (`Shared`在 Visual Basic 中), 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>永远不会<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>引发和事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象创建 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 属性标识的类型的实例之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>控件自动调用业务对象的无参数构造函数, 以使用反射来创建和实例。 处理事件以显式调用另一个构造函数, 并将生成的对象实例设置<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>为关联<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象的属性。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 如果标识为执行数据操作的方法`static`是 (`Shared`在 Visual Basic 中), 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>永远不会<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>引发和事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象丢弃已经创建的对象的实例时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在丢弃业务对象的实例之前引发事件。<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 如果业务对象实现<xref:System.IDisposable>接口<xref:System.IDisposable.Dispose%2A> , 则在引发<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>事件后调用方法。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>处理事件, 以便调用对象上的其他方法并设置属性, 或在销毁对象之前执行特定于对象的清理。 对象的引用由<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>对象公开的属性访问。  
  
 如果标识为执行数据操作的方法是`static` (`Shared`在 Visual Basic 中), 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>永远不会引发事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个格式字符串，该字符串应用于传递给 <see langword="Delete" /> 或 <see langword="Update" /> 方法的原始值的参数名称。</summary>
        <value>一个字符串，表示应用于传递给 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 或 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 方法的任何 <paramref name="oldValues" /> 的名称的格式字符串。 默认值为 "{0}", 这意味着参数名称只是字段名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 格式字符串仅应用于主键, 如`DataKeyNames`使用数据绑定控件的属性标识的属性, 或在删除和<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>更新方案中标识的属性, 其中属性设置为<xref:System.Web.UI.ConflictOptions.CompareAllValues>值, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>传递给相应数据方法的原始值集。  
  
 下面是两种可能更改属性的<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>常见方案:  
  
-   区分更新中的旧值和新值。 如果将<xref:System.Web.UI.ConflictOptions.CompareAllValues>属性设置为值, 则会将原始<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>值和新值的参数添加到集合中。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 如果没有格式字符串, 则将为每个数据字段创建两个具有相同名称的参数。 通过更改原始值参数的名称, 可以将数据与原始数据源进行比较, 以检测冲突并比较键值。  
  
-   某些可视化设计器为原始值和键实现了特定的命名方案。  
  
 的<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> 对象完成删除操作后引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.GridView>和控件结合使用来删除数据。 最初使用由属性指定的方法从`EmployeeLogic`对象中检索数据, 从而显示一组所有雇员。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView> 由于属性设置为`true`, 因此该控件会<xref:System.Web.UI.WebControls.GridView>自动显示 "删除" 按钮。  <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 如果单击 "**删除**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 还执行了一些预处理和后处理步骤。 在`NorthwindEmployeeDeleting`执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> `NorthwindEmployeeDeleted` <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>操作之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>调用委托来处理事件, 并在操作完成后调用委托来处理事件。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>执行异常处理。 在此示例中, 如果`NorthwindDataException`引发了, 则由该委托处理。  
  
 若要检查此代码示例`EmployeeLogic`使用的中间层业务对象的实现, 请参见。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在派生类中重写时, 请确保为基类<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />调用方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> 对象尝试执行删除操作之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.GridView>和控件结合使用来删除数据。 最初使用由属性指定的方法从`EmployeeLogic`对象中检索数据, 从而显示一组所有雇员。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView> 由于属性设置为`true`, 因此该控件会<xref:System.Web.UI.WebControls.GridView>自动显示 "删除" 按钮。  <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 如果单击 "**删除**" 按钮, 则<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>将使用由<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>属性指定的方法和<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>集合中指定的任何参数执行该操作。 在此代码示例中, 还执行了一些预处理和后处理步骤。 在`NorthwindEmployeeDeleting`执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> `NorthwindEmployeeDeleted` <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>操作之前<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>调用委托来处理事件, 并在操作完成后调用委托来处理事件。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>执行异常处理。 在此示例中, 如果`NorthwindDataException`引发了, 则由该委托处理。  
  
 若要检查此代码示例`EmployeeLogic`使用的中间层业务对象的实现, 请参见。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::ObjectDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit" Usage="objectDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> 对象尝试执行筛选操作前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />类中重写方法时, 请确保为基类调用基类的<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> 对象完成插入操作后引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />在派生类中重写时, 请确保为基类<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />调用方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> 对象尝试执行插入操作之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当标识用于执行数据操作的方法不`static`是 (`Shared`在 Visual Basic 中) 时, 才调用方法。<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>  
  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreated (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreated(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> 创建 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 属性标识的对象的实例之后引发 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当标识用于执行数据操作的方法不`static`是 (`Shared`在 Visual Basic 中) 时, 才调用方法。<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>  
  
 引发事件时，将通过委托调用事件处理程序。 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreating (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreating(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> 对象创建业务对象的实例以执行数据操作之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectDisposing (e As ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectDisposing(System::Web::UI::WebControls::ObjectDataSourceDisposingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit&#xA;override this.OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectDisposing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> 对象丢弃实例化类型之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>当丢弃创建用于执行数据操作的对象的实例时, 将调用。 仅当<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性标识的类型实现<xref:System.IDisposable>接口时, 才调用方法。`Dispose`  
  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> 对象已经完成数据检索操作后引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::ObjectDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> 对象尝试执行数据检索操作之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> 对象已经完成更新操作后引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>在 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" /> 对象尝试执行更新操作之前引发 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件、 <xref:System.Web.UI.WebControls.TextBox>控件和多个<xref:System.Web.UI.WebControls.ObjectDataSource>控件来更新数据。 显示的名称`NorthwindEmployee`, 而<xref:System.Web.UI.WebControls.TextBox>控件用于输入和更新地址信息。 <xref:System.Web.UI.WebControls.DropDownList> 由于集合包含绑定到选定的值<xref:System.Web.UI.WebControls.DropDownList>的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 对象,因此仅在选择了员工之后才会启用触发操作的按钮。<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />类中重写方法时, 请确保<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />调用基类的方法, 以便注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当将字符串值转换为实际属性类型来构造由 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> 指示的对象类型时，获取或设置表示哪些区域性信息被用了的值。</summary>
        <value>区域性信息。 默认值为 <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="objectDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页回发到服务器后，<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象的视图状态更改。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 视图状态更改的对象；否则，如果没有与对象关联的视图状态，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法主要由控件开发人员使用。  
  
 视图状态是服务器控件属性的值的累计。 这些值自动置于服务器控件的<xref:System.Web.UI.Control.ViewState%2A>属性中, 该属性是<xref:System.Web.UI.StateBag>类的实例。 然后<xref:System.Web.UI.Control.ViewState%2A> , 将该值保存到服务器控件生命周期的保存状态阶段之后的字符串对象。  
  
 保存视图状态后, 视图状态内容将作为存储在 HTML `Hidden`元素中的变量返回给客户端。 创作自定义服务器控件时, 可以通过重写<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>方法并修改服务器控件的`ViewState`属性来提高效率。 有关详细信息, 请参阅[ASP.NET 状态管理概述](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" />，用于请求对数据执行基本数据检索操作以外的操作。</param>
        <summary>通过调用 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 属性标识的方法并传递 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 集合中的所有值，从 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 属性标识的对象中检索数据。</summary>
        <returns>一个数据行的 <see cref="T:System.Collections.IEnumerable" /> 列表。 有关更多信息，请参见<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法调用`arguments`传递参数。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">传递给 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 方法的 <paramref name="arguments" /> 指定数据源在检索数据时应执行一些附加操作，以便对检索到的数据启用分页或排序，但此数据源控件不支持请求的功能。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件调用以检索行数的方法或函数的名称。</summary>
        <value>表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用于检索行数的方法或函数的名称的字符串。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>标识一个业务对象方法, 该方法用于检索总行数以支持数据源分页。 仅当属性设置为`true`时, 才计算属性。<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 有关如何支持<xref:System.Web.UI.WebControls.ObjectDataSourceView>分页的信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>数据检索操作完成后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>处理事件以检查返回值和输出参数的值, 或确定在数据检索操作完成后是否引发了异常。 可从与事件关联的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象中获取返回值、输出参数和异常处理属性。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>执行数据检索操作前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以执行其他特定于应用程序的初始化操作, 验证参数的值, 或者在<xref:System.Web.UI.WebControls.ObjectDataSource>控件执行数据检索之前更改参数值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>运作. 参数可用作<xref:System.Collections.IDictionary>由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象公开的<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>属性所访问的集合。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 控件调用以检索数据的方法或函数的名称。</summary>
        <value>一个字符串，表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用于检索数据的方法或函数的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的方法可以具有任何方法签名, 但必须返回下表<xref:System.Web.UI.WebControls.ObjectDataSource>中列出的类型之一, 以便控件成功调用它  
  
|返回类型|操作|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> 由<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>方法返回。|  
|<xref:System.Data.DataTable>|使用方法创建并返回。 <xref:System.Data.DataTable> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>|  
|<xref:System.Data.DataSet>|的<xref:System.Data.DataTable> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>第一个提取, 并由方法创建并返回。 <xref:System.Data.DataSet>|  
|<xref:System.Object>|对象包装在一个元素<xref:System.Collections.IEnumerable>中, 并<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>由方法返回。|  
  
 由<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性标识的方法可以是实例方法, `static`也可以是 (`Shared`在 Visual Basic) 方法。 如果它是实例方法, 则每次调用该<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>方法时都会创建并销毁业务对象。 在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>的方法之前, 您可以处理该事件以使用业务对象。 你还可以处理在<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>由属性指定的方法之后引发的事件。 (`Dispose`仅当业务对象<xref:System.IDisposable>实现接口时才会调用。)如果该方法是一个`static` (`Shared`在 Visual Basic) 方法中, 则永远不会创建业务对象, 也不能处理这些事件。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSource>控件所使用的业务对象实现了多个具有相同名称的方法或函数 (方法重载), 数据源控件会尝试根据一组条件 (包括参数) 调用正确的方法或函数。集合中<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>的。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合中的参数与<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性指定的方法的签名不匹配, 则数据源会引发异常。  
  
 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.UI.WebControls.GridView>控件如何使用 Web 窗体页上的<xref:System.Web.UI.WebControls.ObjectDataSource>控件来显示数据。 标识部分或完全限定类名<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>及其属性和调用以检索数据及其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性的方法。 <xref:System.Web.UI.WebControls.ObjectDataSource> 在运行时, 将创建对象并使用反射调用方法。 控件枚举<xref:System.Collections.IEnumerable> 返回<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>的集合, 然后显示数据。 <xref:System.Web.UI.WebControls.GridView>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取参数集合，该集合包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 方法使用的参数。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />，包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 属性指定的方法所使用的参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>集合中包含的参数的名称和类型必须与<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性签名所指定的方法中的参数的名称和类型相匹配。 在使用提供参数的数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) <xref:System.Web.UI.WebControls.ObjectDataSource>时, 控件会自动将集合中显式指定的所有参数与提供的参数合并在一起。数据绑定控件。 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件检索单个数据记录, 然后<xref:System.Web.UI.WebControls.DetailsView>在控件中显示数据记录。 通过调用类的<xref:System.Web.UI.WebControls.ObjectDataSource> 方法来检索`GetEmployee`特定雇员记录。 `EmployeeLogic` `GetEmployee`方法需要雇员 ID 参数。 控件使用`GetEmployee`其<xref:System.Web.UI.WebControls.QueryStringParameter> 集合中的对象将ID传递到方法。<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 若要查看`EmployeeLogic`类`GetEmployee`和方法的示例实现, 请参见<xref:System.Web.UI.WebControls.ObjectDataSource>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据检索方法参数的名称，该参数用于指定数据源排序支持的排序表达式。</summary>
        <value>用于指示接受此排序表达式值的参数的方法参数的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>属性用于支持数据源排序。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>在对象<xref:System.Web.UI.DataSourceSelectArguments>上设置<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性并将其传递给方法时,属性将标识由接受排序的业务对象属性指定的方法<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>的参数名称。expression 值。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据检索方法参数的名称，该参数用于指示从数据源分页支持的结果集中检索的第一条记录的整数索引。</summary>
        <value>业务对象方法参数的名称，该参数用于指示要检索的第一条记录。 默认值为“startRowIndex”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必须<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>将属性设置为启用分页。 有关<xref:System.Web.UI.WebControls.ObjectDataSourceView>对象如何支持分页的信息, 请参阅<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>属性的值存储在视图状态中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />。</summary>
        <value>如果数据源视图被标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在<xref:System.Web.UI.WebControls.ObjectDataSourceView>实例被强制转换<xref:System.Web.UI.IStateManager>为接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 状态的对象。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IStateManager.SaveViewState" />。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 视图状态更改的对象；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IStateManager.TrackViewState" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="objectDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象跟踪其视图状态的更改，以便这些更改可以存储在控件的 <see cref="P:System.Web.UI.Control.ViewState" /> 对象中并且能够在同一页的不同请求间保持。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>方法主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 控件表示的类的名称。</summary>
        <value>标识 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 表示的对象类型的部分或完全限定类名。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要创建<xref:System.Web.UI.WebControls.ObjectDataSource>控件绑定到的对象的实例, 控件将使用反射来加载运行时由类型名称标识的类型。 因此, <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>属性的值可以是位于 Bin 或 App_Code 目录中的代码的部分限定类型, 也可以是在全局程序集缓存中注册的代码的完全限定类型名称。 如果使用全局程序集缓存, 则必须将相应的引用添加到 machine.config `assemblies`或 web.config 配置文件的节中。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.UI.WebControls.GridView>控件如何使用 Web 窗体页上的<xref:System.Web.UI.WebControls.ObjectDataSource>控件来显示数据。 标识部分或完全限定类名<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>及其属性和调用以检索数据及其<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>属性的方法。 <xref:System.Web.UI.WebControls.ObjectDataSource> 在运行时, 将创建对象并使用反射调用方法。 控件枚举返回的集合, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>并显示数据。 <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.GridView>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">用于标识要更新的项的键值的 <see cref="T:System.Collections.IDictionary" />。 这些参数与 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性指定的方法一起使用以执行更新操作。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <param name="values">应用于数据源的新值的 <see cref="T:System.Collections.IDictionary" />。 这些参数与 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性指定的方法一起使用以执行更新数据库操作。 如果没有与方法关联的参数，则传递 <see langword="null" />。</param>
        <param name="oldValues">一个 <see cref="T:System.Collections.IDictionary" />，包含用于匹配数据源中的项的其他非键值。 仅当 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 属性设置为 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 字段时，才将行值传递给删除方法。</param>
        <summary>通过调用由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性标识的方法和使用 <paramref name="keys" />、<paramref name="values" /> 或 <paramref name="oldValues" /> 集合中提供的所有参数以执行更新操作。</summary>
        <returns>更新的行数；否则，如果行数未知，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认返回值为-1, 这表示更新了未知的行数。 若要返回不同的值, 请<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>设置该<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>的对象的属性。 受影响的`Update`行数通常由业务对象的方法返回, 而该值可<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>从<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>事件的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>参数的属性中获取。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>方法`keys`调用方法, 传递、`values`和`oldValues`参数。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 操作完成时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以检查返回值和输出参数的值, 或确定<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>在操作完成后是否引发了异常。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> 可从与事件关联的<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>对象中获取返回值、输出参数和异常处理属性。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 对象调用以更新数据的方法或函数的名称。</summary>
        <value>表示 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 用于更新数据的方法或函数的名称的字符串。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView>对象假定<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>由属性标识的方法每次执行一个更新, 而不是在批处理中执行更新。  
  
 方法可以是实例方法或`static` (`Shared`在 Visual Basic) 方法。 如果它是实例方法, 则每次调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性指定的方法时都会创建并销毁业务对象。 在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性指定<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>的方法之前, 您可以处理该事件以使用业务对象。 还可以处理在调用<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>方法后引发的事件。 (`Dispose`仅当业务对象<xref:System.IDisposable>实现接口时, 才调用。)如果该方法是一个`static` (`Shared`在 Visual Basic) 方法中, 则永远不会创建业务对象, 也不能处理这些事件。  
  
 如果<xref:System.Web.UI.WebControls.ObjectDataSource>对象所使用的业务对象实现了多个具有相同名称的方法或函数 (方法重载), 数据源控件会尝试根据一组条件 (包括参数) 调用正确的方法或函数。集合中<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>的。 如果<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合中的参数与<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性指定的方法的签名不匹配, 则数据源会引发异常。  
  
 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性的值存储在视图状态中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件、 <xref:System.Web.UI.WebControls.TextBox>控件和多个<xref:System.Web.UI.WebControls.ObjectDataSource>控件来更新数据。 显示的名称`NorthwindEmployee`, 而<xref:System.Web.UI.WebControls.TextBox>控件用于输入和更新地址信息。 <xref:System.Web.UI.WebControls.DropDownList> 由于集合包含绑定到选定的值<xref:System.Web.UI.WebControls.DropDownList>的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 对象,因此仅在选择了员工之后才会启用触发操作的按钮。<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取参数集合，该集合包含由 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 方法使用的参数。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" />，它包含 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 属性所使用的参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>集合中包含的参数的名称和类型必须与<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>属性签名所指定的方法中的参数的名称和类型相匹配。 参数名称受<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>属性影响, 并区分大小写。 在使用提供参数的数据绑定控件 (如<xref:System.Web.UI.WebControls.GridView>和<xref:System.Web.UI.WebControls.DetailsView>) <xref:System.Web.UI.WebControls.ObjectDataSource>时, 控件会自动将集合中显式指定的所有参数与提供的参数合并在一起。数据绑定控件。 有关更多信息，请参见<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件、 <xref:System.Web.UI.WebControls.TextBox>控件和多个<xref:System.Web.UI.WebControls.ObjectDataSource>控件来更新数据。 显示的名称`NorthwindEmployee`, 而<xref:System.Web.UI.WebControls.TextBox>控件用于输入和更新地址信息。 <xref:System.Web.UI.WebControls.DropDownList> 由于集合包含绑定到选定的值<xref:System.Web.UI.WebControls.DropDownList>的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 对象,因此仅在选择了员工之后才会启用触发操作的按钮。<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 操作前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理事件以执行其他特定于应用程序的初始化操作, 验证参数的值, 或者在<xref:System.Web.UI.WebControls.ObjectDataSource>控件执行<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>之前更改参数值。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>运作. 参数可用作<xref:System.Collections.IDictionary>集合, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>由<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>对象公开的属性访问。  
  
 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.DropDownList>控件、 <xref:System.Web.UI.WebControls.TextBox>控件和多个<xref:System.Web.UI.WebControls.ObjectDataSource>控件来更新数据。 显示的名称`NorthwindEmployee`, 而<xref:System.Web.UI.WebControls.TextBox>控件用于输入和更新地址信息。 <xref:System.Web.UI.WebControls.DropDownList> 由于集合包含绑定到选定的值<xref:System.Web.UI.WebControls.DropDownList>的<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 对象,因此仅在选择了员工之后才会启用触发操作的按钮。<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>