<Type Name="LinqDataSourceSelectEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="041c7464c8a3c2e956ea20947b817147b7db1738" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64068404" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceSelectEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceSelectEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceSelectEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceSelectEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceSelectEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selecting" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象传递给事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件的<xref:System.Web.UI.WebControls.LinqDataSource>控件。 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>要手动指定返回什么数据，以及如何排序和分页时它返回的数据对象。 你可以以编程方式添加或删除 GroupBy、 OrderBy、 OrderGroupsBy、 Select、 参数以及在何处使用子句<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>， <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>，和<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>集合。  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性使您可以更改用于查询的数据对象。 如果将分配到的对象<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性，该对象将用于查询而不是在指定的对象<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>属性使您可以自定义如何返回的数据的排序和分页。 数据绑定控件传递排序和分页属性流过<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>属性。 如果你需要手动处理排序或分页，设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSource>控制对`false`。 然后可以对排序或分页的处理程序中执行自定义的查询<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。  
  
 如果<xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>属性设置为`true`，您必须返回的值<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性设置为使用语言集成查询 (LINQ) 进行的搜索结果。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default2.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/default2.aspx.vb#2)]  
  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>到 Web 页中定义的字符串值数组的属性。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceSelectEventArgs (System.Web.UI.DataSourceSelectArguments arguments, System.Collections.Generic.IDictionary&lt;string,object&gt; whereParameters, System.Collections.Specialized.IOrderedDictionary orderByParameters, System.Collections.Generic.IDictionary&lt;string,object&gt; groupByParameters, System.Collections.Generic.IDictionary&lt;string,object&gt; orderGroupsByParameters, System.Collections.Generic.IDictionary&lt;string,object&gt; selectParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.DataSourceSelectArguments arguments, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; whereParameters, class System.Collections.Specialized.IOrderedDictionary orderByParameters, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; groupByParameters, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; orderGroupsByParameters, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; selectParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arguments As DataSourceSelectArguments, whereParameters As IDictionary(Of String, Object), orderByParameters As IOrderedDictionary, groupByParameters As IDictionary(Of String, Object), orderGroupsByParameters As IDictionary(Of String, Object), selectParameters As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceSelectEventArgs(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ whereParameters, System::Collections::Specialized::IOrderedDictionary ^ orderByParameters, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ groupByParameters, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ orderGroupsByParameters, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ selectParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceSelectEventArgs : System.Web.UI.DataSourceSelectArguments * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Specialized.IOrderedDictionary * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceSelectEventArgs (arguments, whereParameters, orderByParameters, groupByParameters, orderGroupsByParameters, selectParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="whereParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="orderByParameters" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="groupByParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="orderGroupsByParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="selectParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments">从数据绑定控件传递过来的值，用于确定数据的分页和排序方式。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" /> 属性。</param>
        <param name="whereParameters">用于创建 Where 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" /> 属性。</param>
        <param name="orderByParameters">用于创建 Order By 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" /> 属性。</param>
        <param name="groupByParameters">用于创建 Group By 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" /> 属性。</param>
        <param name="orderGroupsByParameters">参数的集合，用来创建用于对分组数据进行排序的子句。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" /> 属性。</param>
        <param name="selectParameters">用于创建 Select 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" /> 属性。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceSelectArguments Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arguments As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataSourceSelectArguments ^ Arguments { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于确定数据返回方式的值。</summary>
        <value>包含用于确定数据返回方式的值的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件将传递到的属性<xref:System.Web.UI.WebControls.LinqDataSource>通过控制<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>属性，以便指定分页和排序应发生。 如果<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>属性或<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性设置为`true`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件自动进行排序或分页基于从数据绑定控件的属性。  
  
 你可以自定义如何将数据进行排序，并通过设置从查询分页<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>并<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>属性设置为`false`，然后创建一个处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 在事件处理程序，使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>属性来检索排序和分页的数据绑定控件属性。 然后自定义查询，根据需要根据从属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>属性。 如果<xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>的属性<xref:System.Web.UI.DataSourceSelectArguments>对象设置为`true`，您必须返回的值<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GroupByParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于创建 GroupBy 子句的参数集合。</summary>
        <value>包含 GroupBy 子句参数的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>属性设置为访问参数的处理程序中的 GroupBy 子句<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 可以通过添加或移除此集合中的参数来修改 GroupBy 子句。 默认情况下<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象包含添加到任何参数<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>属性的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OrderByParameters { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于创建 OrderBy 子句的参数集合。</summary>
        <value>包含 OrderBy 子句参数的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>OrderBy 子句的处理程序中访问参数属性<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 可以通过添加或移除此集合中的参数来修改 OrderBy 子句。 默认情况下<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象包含添加到任何参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
 当<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>属性设置为`true`中的参数<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>集合无需命名为。 数据将基于中的参数的顺序排序<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ OrderGroupsByParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取参数的集合，这些参数用于创建指定如何对分组数据进行排序的子句。</summary>
        <value>一个对象，其中包含指定如何对分组数据进行排序的子句的参数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据分组通过设置<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>属性，可以通过设置分组的数据进行排序<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>属性设成一个用于对数据进行分组的属性。  
  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>属性设置为 Order Groups By 子句中的处理程序的访问权限参数<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 可以通过添加或移除此集合中的参数来修改 Order Groups By 子句。  
  
 默认情况下<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象包含以声明方式为添加的任何参数<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在数据查询中使用的数据对象。</summary>
        <value>表示查询数据的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下<xref:System.Web.UI.WebControls.LinqDataSource>控制应用于对象中定义的其查询表达式<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性。 中的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件，您可以手动更改该对象通过设置查询<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>的对象的属性。 例如，可以使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性查询在 Web 页中，内存中集合或从 LINQ 查询表达式中获取结果。 可以设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>到任何对象的属性。 如果该对象不实现<xref:System.Collections.Generic.IEnumerable%601>接口，<xref:System.Web.UI.WebControls.LinqDataSource>控件中的对象实现包装对象<xref:System.Collections.Generic.IEnumerable%601>接口。  
  
 当<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性设置为任何值`null`，则<xref:System.Web.UI.WebControls.LinqDataSource>控件不会查询中定义的对象<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性。 相反，它将查询中的对象<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性。  
  
> [!NOTE]
>  当您将设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性设置为一个对象，不要使用`null`表示不包含任何数据的对象。 <xref:System.Web.UI.WebControls.LinqDataSource>控件将解释`null`来表示<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>未设置属性，并且它将创建和查询中的对象<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>属性。 若要表示不包含数据的对象，设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性设置为<xref:System.Collections.IList>或<xref:System.Collections.Generic.IList%601>不包含任何元素的对象。  
  
 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>， <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>，并<xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing>以编程方式设置时，不会引发事件<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性的对象，并将应用两个附加条件。 条件是，原始值不需要存储在视图状态或中的对象<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>属性实现<xref:System.Data.Linq.ITable>接口。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>属性设置为 LINQ 查询的结果。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default2.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/default2.aspx.vb#2)]  
  
 下面的示例演示如何设置<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>Web 页中定义属性设置为一个字符串值数组。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ SelectParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于创建 Select 子句的参数集合。</summary>
        <value>包含 Select 子句参数的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>属性设置为 Select 子句中的处理程序的访问权限参数<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 可以通过添加或移除此集合中的参数来修改在 Select 子句。 默认情况下<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象包含添加到任何参数<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
   
  
## Examples  
 下面的示例演示如何将参数添加到<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>集合。 添加了的参数用于计算调整后的价格基于是否产品上最高折扣的产品。 该示例的第一部分显示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default5.aspx#5)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default5.aspx#5)]  
  
 该示例的第二部分显示了定义 Select 子句的标记。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default5.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default5.aspx#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ WhereParameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于创建 Where 子句的参数集合。</summary>
        <value>包含 Where 子句参数的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>属性设置为访问参数的 Where 子句中的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件。 您可以修改 Where 子句通过添加或移除此集合中的参数。 默认情况下<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>的属性<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象包含添加到任何参数<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>的<xref:System.Web.UI.WebControls.LinqDataSource>控件。  
  
 添加通过参数时<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>的集合<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>对象，或者必须包括中的参数的占位符<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性或一组<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`。 例如，如果添加一个名为参数`ProductName`中的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>事件，您必须设置<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`，或者设置<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>属性设置为`ProductName=@ProductName`。  
  
   
  
## Examples  
 下面的示例演示如何将参数添加到<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>集合。 添加了的参数将限制返回的产品仅值为"Bike"这些产品中`Name`属性。 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>属性设置为`true`，以便该参数会自动包含在 Where 子句。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      </Docs>
    </Member>
  </Members>
</Type>