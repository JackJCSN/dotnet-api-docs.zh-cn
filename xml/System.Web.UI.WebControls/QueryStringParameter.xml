<Type Name="QueryStringParameter" FullName="System.Web.UI.WebControls.QueryStringParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70497179a0fec4ae7829bcf09557b3736d03c1c4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414322" /></Metadata><TypeSignature Language="C#" Value="public class QueryStringParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryStringParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryStringParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryStringParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryStringParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type QueryStringParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("QueryStringField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 HTTP 请求查询字符串字段的值绑定到参数对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.WebControls.QueryStringParameter>类将作为 HTTP 请求查询字符串的一部分传递的字段的值绑定到参数化的查询或命令中使用的参数。 该字段从<xref:System.Web.HttpRequest.QueryString%2A>集合中检索。  
  
 如果引用了<xref:System.Web.UI.WebControls.QueryStringParameter>对象, 但未传递相应的查询字符串名称/值对, 则将数据绑定到参数的控件可能会引发异常。 同样, 如果传递的查询字符串字段名称没有相应的值, 则它们可能不显示任何数据。 若要避免出现这种情况<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> , 请在适当的位置设置属性。  
  
 <xref:System.Web.UI.WebControls.QueryStringParameter> 类<xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>提供属性, 该属性标识要绑定到的查询字符串值的名称。 它还提供从<xref:System.Web.UI.WebControls.Parameter>类继承的属性。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.QueryStringParameter>类不会验证传递的值; 它提供原始值。 但是, 可以在数据源控件中验证<xref:System.Web.UI.WebControls.QueryStringParameter>对象的值。 为此, 请`Selecting`处理数据源控件的、 `Deleting` `Updating`、 `Inserting`或事件, 并在事件处理程序中检查参数值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
   
  
## Examples  
 下面的示例演示如何创建<xref:System.Web.UI.WebControls.QueryStringParameter>在<xref:System.Web.UI.WebControls.GridView>控件中显示数据时用作筛选器的对象。 将<xref:System.Web.UI.WebControls.QueryStringParameter>对象添加<xref:System.Web.UI.WebControls.AccessDataSource>到控件的<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>集合。 参数对象将名`country`为的查询字符串字段的值绑定到其<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>字符串。 由于没有<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>为该参数指定任何属性, 因此, 如果没有`country`与查询字符串一起传递名为的<xref:System.Web.UI.WebControls.AccessDataSource>字段, 则<xref:System.NullReferenceException>控件将引发异常。 如果传递了名`country`为的字段, 但没有值, <xref:System.Web.UI.WebControls.GridView>则控件不显示任何数据。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_4/CS/qsp4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_4/VB/qsp4vb.aspx#1)]  
  
 下面的示例演示如何通过使用参数<xref:System.Web.UI.WebControls.QueryStringParameter>化 SQL 查询创建对象以显示 Access 数据库中的数据。 对象检索随后显示<xref:System.Web.UI.WebControls.GridView>在控件中的记录。 <xref:System.Web.UI.WebControls.AccessDataSource> 该<xref:System.Web.UI.WebControls.GridView>控件也可编辑, 并允许用户更新 Northwind 商贸 orders 表中订单的状态。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">[&lt;topic://vbconASPNETDataSourceControlParameters&gt;]</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的未命名新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的对象将用其所有属性的默认值初始化。<xref:System.Web.UI.WebControls.QueryStringParameter> <xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A> 属性的初始化如下:  
  
-   <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>初始化为空字符串 ("")。  
  
-   <xref:System.Web.UI.WebControls.Parameter.Name%2A>初始化为空字符串 ("")。  
  
-   <xref:System.Web.UI.WebControls.Parameter.Type%2A> 初始化为 <xref:System.TypeCode.Object?displayProperty=nameWithType>。  
  
-   <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 初始化为 <xref:System.Data.ParameterDirection.Input>。  
  
-   <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 初始化为 `null`。  
  
   
  
## Examples  
 下面的示例演示如何<xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>使用构造函数创建新<xref:System.Web.UI.WebControls.QueryStringParameter>的参数<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>并将其添加<xref:System.Web.UI.WebControls.AccessDataSource>到控件的集合中。  
  
 [!code-csharp[System.Web.UI.WebControls.QueryStringParameter_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/CS/querystrparam1cs.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/VB/querystrparam1vb.aspx.vb#2)]  
  
 对象将添加<xref:System.Web.UI.WebControls.AccessDataSource>到控件, 并在 ASP.NET 网页中声明。 <xref:System.Web.UI.WebControls.QueryStringParameter> 每次请求页面<xref:System.Web.UI.WebControls.AccessDataSource>时, `empId` 控件都将使用查询字符串来绑定和显示数据,该查询字符串包含一个名为且具有相应<xref:System.Web.UI.WebControls.ListBox>值的字段。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/CS/querystrparam1cs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/VB/querystrparam1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueryStringParameter (System.Web.UI.WebControls.QueryStringParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.QueryStringParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As QueryStringParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; QueryStringParameter(System::Web::UI::WebControls::QueryStringParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.QueryStringParameter : System.Web.UI.WebControls.QueryStringParameter -&gt; System.Web.UI.WebControls.QueryStringParameter" Usage="new System.Web.UI.WebControls.QueryStringParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.QueryStringParameter" />
      </Parameters>
      <Docs>
        <param name="original">一个 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 实例，将从该实例初始化当前实例。</param>
        <summary>使用 <paramref name="original" /> 参数指定的实例的值初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数是一个受保护的复制构造函数, 用于<xref:System.Web.UI.WebControls.QueryStringParameter>克隆实例。 <xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> 、<xref:System.Web.UI.WebControls.Parameter.Name%2A>和属性<xref:System.Web.UI.WebControls.Parameter.Type%2A>的值会传输到新的实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.QueryStringParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringParameter (string name, string queryStringField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string queryStringField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, queryStringField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringParameter(System::String ^ name, System::String ^ queryStringField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.QueryStringParameter : string * string -&gt; System.Web.UI.WebControls.QueryStringParameter" Usage="new System.Web.UI.WebControls.QueryStringParameter (name, queryStringField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="queryStringField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="queryStringField">参数对象要绑定到的查询字符串字段的名称。 默认值为空字符串("")。</param>
        <summary>使用指定的字符串来标识要绑定到的查询字符串字段，初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的新命名实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的对象使用指定的参数名称进行初始化,该参数名称标识参数绑定到的查询字符串字段。<xref:System.Web.UI.WebControls.QueryStringParameter> <xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A> 用默认<xref:System.Web.UI.WebControls.Parameter.Direction%2A>值初始化和属性。<xref:System.Web.UI.WebControls.Parameter.Type%2A>  
  
   
  
## Examples  
 下面<xref:System.Web.UI.WebControls.QueryStringParameter>的示例演示如何<xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>使用构造函数创建两个对象<xref:System.Web.UI.WebControls.AccessDataSource> , 并将它们添加到控件的<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>集合中。 <xref:System.Web.UI.WebControls.GridView>如果和查询`country`字符串字段与请求一起传递并且它们具有有效值, 则控件将显示数据。 `employee`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_2/CS/qsp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_2/VB/qsp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.QueryStringParameter.QueryStringField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringParameter (string name, System.Data.DbType dbType, string queryStringField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string queryStringField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ queryStringField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.QueryStringParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.QueryStringParameter" Usage="new System.Web.UI.WebControls.QueryStringParameter (name, dbType, queryStringField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="queryStringField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="dbType">参数的数据类型。</param>
        <param name="queryStringField">参数对象要绑定到的查询字符串字段的名称。 默认值为空字符串("")。</param>
        <summary>使用指定的查询字符串字段和参数的数据类型，初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的新命名实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringParameter (string name, TypeCode type, string queryStringField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string queryStringField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, queryStringField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringParameter(System::String ^ name, TypeCode type, System::String ^ queryStringField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.QueryStringParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.QueryStringParameter" Usage="new System.Web.UI.WebControls.QueryStringParameter (name, type, queryStringField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="queryStringField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="type">该参数所表示的类型。 默认值为 <see cref="F:System.TypeCode.Object" />。</param>
        <param name="queryStringField">参数对象要绑定到的查询字符串字段的名称。 默认值为空字符串("")。</param>
        <summary>使用指定的字符串来标识要绑定到的查询字符串字段，初始化 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 类的新强类型命名实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的对象使用指定的参数名称、参数类型和标识参数绑定到的查询字符串字段的字符串进行初始化。<xref:System.Web.UI.WebControls.QueryStringParameter> <xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A> 用默认<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>值初始化和属性。<xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
 下面<xref:System.Web.UI.WebControls.QueryStringParameter>的示例演示如何<xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>使用构造函数创建对象<xref:System.Web.UI.WebControls.AccessDataSource>并将其添加到控件的<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>集合中。 <xref:System.Web.UI.WebControls.GridView>如果和查询`country`字符串字段与请求一起传递并且它们具有有效值, 则控件将显示数据。 `employee`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_3/CS/qsp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_3/VB/qsp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.QueryStringParameter.QueryStringField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="queryStringParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 实例的副本。</summary>
        <returns>当前实例的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法通过使用当前<xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>实例的值调用构造函数来初始化<xref:System.Web.UI.WebControls.QueryStringParameter>类的新实例。 <xref:System.Web.UI.WebControls.QueryStringParameter.Clone%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="queryStringParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">请求的当前 <see cref="T:System.Web.HttpContext" /> 实例。</param>
        <param name="control">与使用 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 对象的 ASP.NET 网页关联的 Web 服务器控件。  
  
 注意，未使用此参数。</param>
        <summary>更新并返回 <see cref="T:System.Web.UI.WebControls.QueryStringParameter" /> 对象的值。</summary>
        <returns>表示参数当前值的对象。 如果上下文或请求为 <see langword="null" />，<see cref="M:System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每<xref:System.Web.UI.WebControls.QueryStringParameter> 次<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>调用方法时, 对象都会尝试绑定到查询字符串字段。  
  
 方法使用<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>参数从查询字符串中检索指定的查询字符串字段的值。 `context` 忽略`control`参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.QueryStringParameter.QueryStringField" />
      </Docs>
    </Member>
    <Member MemberName="QueryStringField">
      <MemberSignature Language="C#" Value="public string QueryStringField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryStringField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryStringParameter.QueryStringField" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryStringField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueryStringField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryStringField : string with get, set" Usage="System.Web.UI.WebControls.QueryStringParameter.QueryStringField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数所绑定的查询字符串字段的名称。</summary>
        <value>参数所绑定的查询字符串字段的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>属性标识与查询字符串一起传递的名称/值对。 属性标识对的名称, <xref:System.Web.UI.WebControls.QueryStringParameter>而属性在运行时绑定到其对应的值。 <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> 如果所需的查询字符串名称/值对不会传递到带有查询字符串的页, 则该<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>方法会尝试将参数绑定到<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>属性的值。 如果未<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>设置该属性, 则该<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>方法无法将参数绑定到值。  
  
   
  
## Examples  
 下面的示例演示如何将<xref:System.Web.UI.WebControls.QueryStringParameter>对象<xref:System.Web.UI.WebControls.SqlDataSource>与控件一起使用<xref:System.Web.UI.WebControls.ListBox> , 以在控件中显示数据。 属性设置为所需的查询字符串字段的名称, 并且将参数添加<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>到集合中。 <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> 如果名称/值对不与查询字符串一起传递, 则提供属性。<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/CS/querystrparam1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_1/VB/querystrparam1vb.aspx#1)]  
  
 下面的示例演示如何将<xref:System.Web.UI.WebControls.QueryStringParameter>对象<xref:System.Web.UI.WebControls.SqlDataSource>与控件一起使用<xref:System.Web.UI.WebControls.GridView> , 以在控件中显示数据。 对象与用于输出参数和<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>返回值的其他参数对象一起添加到集合中。 <xref:System.Web.UI.WebControls.QueryStringParameter> 若要检索数据, 请处理从存储过程返回的值。 此代码示例是为<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>类提供的更大示例的一部分。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryStringParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.QueryStringParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否验证查询字符串参数的值。</summary>
        <value>如果查询参数的值有效，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果页属性<xref:System.Web.UI.Page.SkipFormActionValidation%2A>设置为`true`, 并且<xref:System.Web.UI.WebControls.QueryStringParameter.ValidateInput%2A>属性设置为`false`, 则不会验证查询字符串参数。 但是, <xref:System.Web.UI.Page.SkipFormActionValidation%2A>如果页属性设置为`true`, 并且<xref:System.Web.UI.WebControls.QueryStringParameter.ValidateInput%2A>属性设置为`true`, 则将验证查询字符串参数。 如果将页属性<xref:System.Web.UI.Page.SkipFormActionValidation%2A>设置为`false`, 则无论<xref:System.Web.UI.WebControls.QueryStringParameter.ValidateInput%2A>属性是否设置为`true`或`false`, 都将验证查询字符串参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
