<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67819f861e0979851576a6e4db154ea2ffe19135" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64068420" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="178a7-101">为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="178a7-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="178a7-102"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>对象传递给任何事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-103"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性包含要插入的数据。</span><span class="sxs-lookup"><span data-stu-id="178a7-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="178a7-104">可以使用<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>对象数据源中执行插入操作之前检查的数据。</span><span class="sxs-lookup"><span data-stu-id="178a7-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="178a7-105">然后可以验证数据，检查数据类中的验证错误或更改更新前的值。</span><span class="sxs-lookup"><span data-stu-id="178a7-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="178a7-106">此外可以取消插入操作。</span><span class="sxs-lookup"><span data-stu-id="178a7-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="178a7-107">如果该对象表示数据源引发验证异常之前它将数据，插入<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>属性包含的一个实例<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>类。</span><span class="sxs-lookup"><span data-stu-id="178a7-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="178a7-108">您可以检索通过所有验证异常<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="178a7-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="178a7-109">如果不验证会引发异常，<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>属性包含`null`。</span><span class="sxs-lookup"><span data-stu-id="178a7-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="178a7-110">如果处理验证异常，并且不想要重新引发的异常设置<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="178a7-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="178a7-111">下面的示例演示的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-112">中的对象<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性强制转换为一个名为类型`Product`。</span><span class="sxs-lookup"><span data-stu-id="178a7-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="178a7-113">`DateModified`属性的`Product`对象设置为当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="178a7-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="178a7-114">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-115">它通过使用显示的任何验证异常消息<xref:System.Web.UI.WebControls.Label>控件。</span><span class="sxs-lookup"><span data-stu-id="178a7-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="178a7-116">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="178a7-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs newObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject"><span data-ttu-id="178a7-117">包含要插入数据的对象。</span><span class="sxs-lookup"><span data-stu-id="178a7-117">An object that contains the data to insert.</span></span></param>
        <summary><span data-ttu-id="178a7-118">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="178a7-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="178a7-119">在验证要插入的数据时发生的异常。</span><span class="sxs-lookup"><span data-stu-id="178a7-119">The exception that occurred when the data to insert was being validated.</span></span></param>
        <summary><span data-ttu-id="178a7-120">初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 类的新实例并指定提供的异常。</span><span class="sxs-lookup"><span data-stu-id="178a7-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="178a7-121">获取在执行插入操作之前验证数据时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="178a7-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span></span></summary>
        <value><span data-ttu-id="178a7-122">如果发生错误，则为该异常；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="178a7-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="178a7-123">如果执行插入操作之前引发验证异常，该异常存储在<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="178a7-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="178a7-124">中的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件，可以检索通过异常<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="178a7-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="178a7-125">下面的示例演示的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-126">它通过使用显示的任何验证异常消息<xref:System.Web.UI.WebControls.Label>控件。</span><span class="sxs-lookup"><span data-stu-id="178a7-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="178a7-127">获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</span><span class="sxs-lookup"><span data-stu-id="178a7-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="178a7-128">如果异常已得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="178a7-128"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="178a7-129">可以创建事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件来检查在插入操作之前发生的验证异常。</span><span class="sxs-lookup"><span data-stu-id="178a7-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="178a7-130">如果处理异常，并且不希望它再次引发设置<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="178a7-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="178a7-131">如果未设置<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>属性设置为`true`，异常将传播到调用堆栈中的下一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="178a7-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="178a7-132">下面的示例演示的事件处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-133">它通过使用显示的任何验证异常消息<xref:System.Web.UI.WebControls.Label>控件。</span><span class="sxs-lookup"><span data-stu-id="178a7-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="178a7-134">获取包含要插入数据的对象。</span><span class="sxs-lookup"><span data-stu-id="178a7-134">Gets the object that contains the data to insert.</span></span></summary>
        <value><span data-ttu-id="178a7-135">包含要插入数据的对象。</span><span class="sxs-lookup"><span data-stu-id="178a7-135">An object that contains the data to insert.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="178a7-136"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性包含要插入到数据源的数据。</span><span class="sxs-lookup"><span data-stu-id="178a7-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="178a7-137">创建一个处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件并检索<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性，以便验证数据、 更改数据，或取消插入操作之前执行数据操作。</span><span class="sxs-lookup"><span data-stu-id="178a7-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="178a7-138"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性返回类型的对象<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="178a7-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="178a7-139">可以将此对象表示的数据的类的类型强制转换。</span><span class="sxs-lookup"><span data-stu-id="178a7-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="178a7-140">下面的示例演示的处理程序<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>事件。</span><span class="sxs-lookup"><span data-stu-id="178a7-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="178a7-141">中的对象<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>属性强制转换为一个名为类型`Product`。</span><span class="sxs-lookup"><span data-stu-id="178a7-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="178a7-142">`DateModified`属性的`Product`对象设置为当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="178a7-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>