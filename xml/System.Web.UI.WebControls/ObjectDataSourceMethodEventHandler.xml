<Type Name="ObjectDataSourceMethodEventHandler" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e16c5d7fad88f7c5917410d6b902cb537133527" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69412296" /></Metadata><TypeSignature Language="C#" Value="public delegate void ObjectDataSourceMethodEventHandler(object sender, ObjectDataSourceMethodEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectDataSourceMethodEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ObjectDataSourceMethodEventHandler(sender As Object, e As ObjectDataSourceMethodEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ObjectDataSourceMethodEventHandler(System::Object ^ sender, ObjectDataSourceMethodEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceMethodEventHandler = delegate of obj * ObjectDataSourceMethodEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件的源，即 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
    <summary>表示将对 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" /> 控件的以下事件进行处理的方法：<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> 或 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>控件的<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>、 、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> <xref:System.Web.UI.WebControls.ObjectDataSource>或事件使你可以操作用于确定控件调用的方法的参数。<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> <xref:System.Web.UI.WebControls.ObjectDataSource> 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>。  
  
 创建 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 委托时，需要标识将要处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关如何处理事件的详细信息, 请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 第二个代码示例提供了第一个代码示例使用的中间层业务对象示例。  
  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.ObjectDataSource>控件与业务对象<xref:System.Web.UI.WebControls.DetailsView>和控件结合使用来插入数据。 最初, <xref:System.Web.UI.WebControls.DetailsView>会显示一个新`NorthwindEmployee`记录和一个自动生成的 "**插入**" 按钮。 将<xref:System.Web.UI.WebControls.DetailsView>数据输入到控件的字段中后, 单击 "**插入**" 按钮, 该<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>属性将确定执行该操作的方法。  
  
 在此示例中, `UpdateEmployeeInfo`方法用于执行插入; 但是, 它需要一个`NorthwindEmployee`参数来插入数据。 出于此原因, <xref:System.Web.UI.WebControls.DetailsView>控件自动传递的字符串集合是不够的。 委托是处理<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>事件并使<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>你能够在操作继续之前操作输入参数的对象。<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> `NorthwindEmployeeInserting` 由于方法需要对象作为参数, 因此使用字符串集合创建一个对象, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>并将其添加到集合中。 `NorthwindEmployee` `UpdateEmployeeInfo`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 下面的代码示例提供了前面的代码示例使用的中间层业务对象示例。 此代码示例包含以下两个基本类和一个附加类:  
  
-   `EmployeeLogic`类, 该类是封装业务逻辑的无状态类。  
  
-   `NorthwindEmployee`类, 该类是一个模型类, 其中只包含从数据层加载和保存数据所需的基本功能。  
  
-   一个附加`NorthwindDataException`类, 为方便起见提供。  
  
 这组示例类适用于 Northwind 商贸数据库, 这是一个可用于 Microsoft SQL Server 和 Microsoft Access 的示例数据库。 若要获取完整的工作示例, 请使用这些类, 方法是将它们放在应用程序根目录下的 App_Code 目录中, 或者将它们编译到库中, 并将生成的 DLL 放入 Bin 目录。 `UpdateEmployeeInfo`方法未完全实现, 因此当您试验此示例时, 不会将数据插入 Northwind 商贸数据库中。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
  </Docs>
</Type>
