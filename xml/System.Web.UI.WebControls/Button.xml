<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1625f5f864f631667efa56bdb6d51182408715fc" /><Meta Name="ms.sourcegitcommit" Value="10aa513a7461eb2abbf8d1e35d2a045d4e5a9be7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/09/2019" /><Meta Name="ms.locfileid" Value="67664444" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Displays a push button control on the Web page.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#Introduction)  
  
-   [按钮的回发行为和服务器事件](#ButtonPostbackBehaviorandServerEvents)  
  
-   [客户端脚本中处理按钮事件](#HandlingButtonEventsinClientScript)  
  
-   [按钮控件和验证](#ButtonControlsAndValidation)  
  
-   [数据控件中的按钮](#ButtonsInDataControls)  
  
-   [数据绑定到控件](#BindingDataToTheControls)  
  
-   [使用 UpdatePanel 控件的按钮](#UsingButtonsWithUpdatePanelControls)  
  
-   [声明性语法](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>介绍  
 使用<xref:System.Web.UI.WebControls.Button>控件允许用户以发布到服务器的页面的网页上创建推送按钮。 该控件将触发可处理以响应回发的服务器代码中的事件。 它还可能会引发之前发布页面或可运行和后取消提交的页面可以处理的客户端脚本中的事件。  
  
> [!NOTE]
>  ASP.NET 包括多种类型的按钮控件，其中每个在网页以不同方式显示。 它们是<xref:System.Web.UI.WebControls.Button>控件，它将呈现为按下按钮;<xref:System.Web.UI.WebControls.LinkButton>控件，它将呈现为链接; 并且<xref:System.Web.UI.WebControls.ImageButton>控件，它将呈现为图像; 和<xref:System.Web.UI.WebControls.ImageMap>控件，它允许您创建具有热点的图形，用户可以单击。 默认情况下，所有按钮控件都提交时单击该页面。 此外可以使用<xref:System.Web.UI.HtmlControls.HtmlButton>和<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件在页上创建按钮才在服务器代码中可编程的。 HTML 和 Web 服务器控件之间的差异的详细信息，请参阅[ASP.NET Web 服务器控件概述](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)。  
  
 默认情况下，<xref:System.Web.UI.WebControls.Button>控件是一个提交按钮。 一个提交按钮没有命令名称 (由指定<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性) 的按钮和只是将网页回发到服务器关联。 你可以提供的事件处理程序<xref:System.Web.UI.WebControls.Button.Click>事件以编程方式控制的操作执行时单击提交按钮。  
  
 命令按钮有与该按钮，如关联的命令名称`Sort`，通过设置<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性。 这使您可以创建多个<xref:System.Web.UI.WebControls.Button>在 Web 上的控件，并以编程方式确定哪些<xref:System.Web.UI.WebControls.Button>单击控件。 此外可以使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>命令按钮，以提供其他信息的命令执行，如具有属性`Ascending`。 你可以提供的事件处理程序<xref:System.Web.UI.WebControls.Button.Command>单击命令按钮时执行的事件以编程方式控制的操作。  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>按钮的回发行为和服务器事件  
 当用户单击任何 Web 服务器控件按钮时，则将页发送到服务器。 这使得 Web 页以进行处理，在基于服务器的代码中引发任何挂起的事件。 在所有页面和控件处理已都完成，页面本身到浏览器将重新呈现。  
  
 该按钮可以引发其自己<xref:System.Web.UI.WebControls.Button.Click>事件或<xref:System.Web.UI.WebControls.Button.Command>事件，您可以通过使用基于服务器的代码处理。 这是不同于传统的 HTML 页中或在基于客户端的 Web 应用程序中，事件在按钮的`onclick`可通过在客户端中运行的 JavaScript 处理事件。 有关详细信息，请参阅[ASP.NET Web 窗体服务器控件事件模型](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)。  
  
 当用户单击按钮控件时，页面回发到服务器。 默认情况下，页面回发到自身，  
  
 你可以配置要发布到另一页的当前页的按钮。 这可用于创建多页窗体。 有关详细信息，请参阅[跨页面发送在 ASP.NET Web 窗体](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)。  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>客户端脚本中处理按钮事件  
 按钮控件可以引发服务器事件和客户端事件。 服务器事件发生回发后，以及为页面编写服务器端代码中处理。 客户端事件处理在客户端脚本中，通常 ECMAScript (JavaScript)，并提交页之前引发。 通过将客户端事件添加到 ASP.NET 按钮控件，可以执行任务，例如在提交页上之前, 显示确认对话框，并可能会取消提交。 有关详细信息，请参阅[客户端脚本在 ASP.NET Web Pages](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa)和[如何：响应客户端脚本中的按钮 Web 服务器控件事件](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)。  
  
 您可能还想<xref:System.Web.UI.WebControls.Button>控件还使用客户端脚本来执行回发 （而不是只需执行 HTTP POST 操作）。 这很有用，如果你想要以编程方式操作回发，例如将其附加到页面上其他元素。 可以设置<xref:System.Web.UI.WebControls.Button>控件的<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性设置为`true`导致<xref:System.Web.UI.WebControls.Button>要使用客户端脚本控件基于回发。  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>按钮控件和验证  
 如果页面包含 ASP.NET 验证程序控件，默认情况下，单击一个按钮控件导致执行其检查验证程序控件。 如果验证程序控件的启用了客户端验证，如果通过验证检查失败，则不提交页面。  
  
 下表介绍了使您能够更精确地控制验证过程的按钮控件支持的属性。  
  
|属性|描述|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|指定是否单击的按钮也执行验证检查。 将此属性设置为`false`以防止验证检查。|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|可以指定在单击该按钮时调用的页上的验证程序。 如果不建立了任何验证组，单击按钮会调用所有页面上的验证程序。|  
  
 有关详细信息，请参阅[在 ASP.NET 网页中验证用户输入](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)。  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>数据控件中的按钮  
 按钮 Web 服务器控件通常用于在数据控件中，例如中<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.GridView>，和<xref:System.Web.UI.WebControls.Repeater>列表控件。 在这些情况下，您通常不响应直接到按钮单击事件。 相反，数据控件中的按钮将引发一个事件，是特定于数据控件。 例如，在<xref:System.Web.UI.WebControls.DataList>控件中，一个按钮可能引发<xref:System.Web.UI.WebControls.DataList>控件的<xref:System.Web.UI.WebControls.DataList.ItemCommand>而不是引发的事件<xref:System.Web.UI.WebControls.Button>控件的<xref:System.Web.UI.WebControls.Button.Click>事件。  
  
 由于数据绑定列表控件可以包含许多按钮，可以设置按钮的<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性来指定要作为事件的一部分传递的值。 然后可以测试该参数以确定被单击的按钮。  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>数据绑定到控件  
 可以在为了控制其属性设置将按钮 Web 服务器控件绑定到数据源动态。 例如，可以设置按钮的<xref:System.Web.UI.WebControls.Button.Text%2A>通过使用数据绑定的属性。  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>使用 UpdatePanel 控件的按钮  
 在局部页面呈现使可能刷新不进行回发页面的部分。 <xref:System.Web.UI.UpdatePanel> 控件使你能够将标记参与局部页面呈现的页面部分。 默认情况下，所包含的控件的行为<xref:System.Web.UI.UpdatePanel>控制，包括<xref:System.Web.UI.WebControls.Button>控制，是执行异步回发而不是回发。 这将刷新的内容<xref:System.Web.UI.UpdatePanel>从回发所源自的控制。  
  
 除了的方案<xref:System.Web.UI.WebControls.Button>内的控件<xref:System.Web.UI.UpdatePanel>控件，可以使用<xref:System.Web.UI.WebControls.Button>控制与<xref:System.Web.UI.UpdatePanel>控件在以下方案：  
  
-   定义<xref:System.Web.UI.WebControls.Button>之外的控件<xref:System.Web.UI.UpdatePanel>控制作为<xref:System.Web.UI.AsyncPostBackTrigger>该面板的控件。 单击按钮时，它执行异步回发和刷新面板的内容。  
  
-   定义<xref:System.Web.UI.WebControls.Button>内的控件<xref:System.Web.UI.UpdatePanel>控制作为<xref:System.Web.UI.PostBackTrigger>面板。 单击按钮时，它执行回发，即使它位于<xref:System.Web.UI.UpdatePanel>控件。  
  
 有关部分页呈现和使用详细信息<xref:System.Web.UI.UpdatePanel>控件，请参阅[UpdatePanel 控件概述](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)并[部分页呈现概述](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何创建提交<xref:System.Web.UI.WebControls.Button>文章 Web 页面回发到服务器内容的控件。  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 下面的代码示例演示如何创建命令<xref:System.Web.UI.WebControls.Button>对列表进行排序的控件。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Button" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.WebControls.Button>类。  
  
   
  
## Examples  
 下面的代码示例演示如何创建和初始化的新实例<xref:System.Web.UI.WebControls.Button>类。  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
        <summary>Adds the attributes of the <see cref="T:System.Web.UI.WebControls.Button" /> control to the output stream for rendering on the client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A>中的自定义服务器控件中的方法，以便<xref:System.Web.UI.WebControls.Button>文本始终以红色显示。  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</summary>
        <value>如果在单击 <see cref="T:System.Web.UI.WebControls.Button" /> 控件后执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下执行页验证时<xref:System.Web.UI.WebControls.Button>单击控件。 页验证确定输入的控件是否与全部通过指定验证控件的验证规则页上的验证控件关联。  
  
 你可以指定或确定是否在客户端和服务器上执行验证时<xref:System.Web.UI.WebControls.Button>通过单击控件<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性。 若要禁止从正在执行的验证，请设置<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`false`。  
  
> [!NOTE]
>  应设置<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`false`使用时<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性回发到不同的页面。 在回发至其他页面时，应显式检查验证。 有关示例，请参阅备注部分的<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性。  
  
 此属性通常设置为`false`有关`reset`或`clear`按钮，以防止在单击按钮时执行验证。  
  
 时的值<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`true`，还可以使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.WebControls.Button>控件引发验证。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性以防止发生页验证。 请注意，<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>方法单独激活每个验证的控件。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click>引发事件时<xref:System.Web.UI.WebControls.Button>单击控件。 与关联没有命令名称时，通常使用此事件<xref:System.Web.UI.WebControls.Button>（例如，具有一个提交按钮） 控件。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码的事件处理程序<xref:System.Web.UI.WebControls.Button.Click>事件，以在 Web 上显示一条消息时页<xref:System.Web.UI.WebControls.Button>单击控件。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command>引发事件时<xref:System.Web.UI.WebControls.Button>单击控件。 此事件时常用的命令名称，如`Sort`，与关联<xref:System.Web.UI.WebControls.Button>控件。 这使您可以创建多个<xref:System.Web.UI.WebControls.Button>在 Web 上的控件，并以编程方式确定哪些<xref:System.Web.UI.WebControls.Button>单击控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command>的控件层次结构中的窗体通过引发事件`BubbleEvent`。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码的事件处理程序<xref:System.Web.UI.WebControls.Button.Command>事件的列表进行排序时<xref:System.Web.UI.WebControls.Button>单击控件。 此示例中指定的事件处理程序以声明方式，使用<xref:System.Web.UI.WebControls.Button.OnClick%2A>属性的<xref:System.Web.UI.WebControls.Button>控件。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 下面的代码示例演示如何指定事件处理程序，并以编程方式将其添加到中的事件`Page_Load`方法。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an optional parameter passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event along with the associated <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</summary>
        <value>一个可选参数传递给<see cref="E:System.Web.UI.WebControls.Button.Command" />以及相关的事件<see cref="P:System.Web.UI.WebControls.Button.CommandName" />。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性指定一个参数，用于补充<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性。  
  
> [!NOTE]
>  尽管您可以设置<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>本身的属性，它通常是仅使用时<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性也设置。  
  
 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性补充<xref:System.Web.UI.WebControls.Button.CommandName%2A>通过允许您提供有关要执行的命令的其他信息的属性。 例如，如果您设置<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性设置为`Sort`并<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性设置为`Ascending`，指定按升序排序的命令。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性以创建<xref:System.Web.UI.WebControls.Button>对按升序排序列表进行排序的控件。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the command name associated with the <see cref="T:System.Web.UI.WebControls.Button" /> control that is passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event.</summary>
        <value>命令名称<see cref="T:System.Web.UI.WebControls.Button" />控件。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当有多个<xref:System.Web.UI.WebControls.Button>控件在网页上，使用<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性可指定或确定的命令名与每个关联<xref:System.Web.UI.WebControls.Button>控件。 可以设置<xref:System.Web.UI.WebControls.Button.CommandName%2A>与任何字符串，标识要执行的命令的属性。 然后，可以以编程方式确定的命令名称<xref:System.Web.UI.WebControls.Button>控制并执行相应操作。  
  
 其他信息，有关该命令，如`Ascending`，可通过使用指定<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>属性。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.CommandName%2A>属性以创建<xref:System.Web.UI.WebControls.Button>对列表进行排序的控件。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <see cref="T:System.Web.UI.PostBackOptions" /> object that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</summary>
        <returns>A <see cref="T:System.Web.UI.PostBackOptions" /> that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A>方法创建<xref:System.Web.UI.PostBackOptions>对象，表示<xref:System.Web.UI.WebControls.Button>控件的回发的行为。 <xref:System.Web.UI.PostBackOptions>对象通常然后传递给<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType>方法，用于获取的客户端脚本函数的引用，调用时，会导致服务器回发到页面。  
  
 扩展时，使用此方法主要由控件开发人员<xref:System.Web.UI.WebControls.Button>类。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以重写<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />修改 button 控件的回发选项，或单击该按钮时调用客户端脚本在派生类中的方法。 请务必调用基类的<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />方法，以便回发的标准选项设置。</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">在 ASP.NET Web Pages 中的客户端脚本</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.Button.Click" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click>引发事件时<xref:System.Web.UI.WebControls.Button>单击控件。 与关联没有命令名称时，通常使用此事件<xref:System.Web.UI.WebControls.Button>（例如，具有一个提交按钮） 控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码的事件处理程序<xref:System.Web.UI.WebControls.Button.Click>事件，以在网页上显示一个简单的消息。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the client-side script that executes when a <see cref="T:System.Web.UI.WebControls.Button" /> control's <see cref="E:System.Web.UI.WebControls.Button.Click" /> event is raised.</summary>
        <value>客户端脚本时所执行<see cref="T:System.Web.UI.WebControls.Button" />控件的<see cref="E:System.Web.UI.WebControls.Button.Click" />引发事件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>属性来指定时，会执行的其他客户端侧脚本<xref:System.Web.UI.WebControls.Button>控件的<xref:System.Web.UI.WebControls.Button.Click>引发事件。 为此属性呈现在指定的脚本<xref:System.Web.UI.WebControls.Button>控件的`OnClick`属性除了控件的预定义的客户端脚本。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 包含源代码的 Visual Studio Web 站点项目是可随附于本主题：[下载](https://go.microsoft.com/fwlink/?LinkId=192871)。  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>属性来指定时，会执行的其他客户端侧脚本<xref:System.Web.UI.WebControls.Button>单击控件。  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command>引发事件时<xref:System.Web.UI.WebControls.Button>单击控件。 此事件时常用的命令名称，如`Sort`，与关联<xref:System.Web.UI.WebControls.Button>控件。 这使您可以创建多个<xref:System.Web.UI.WebControls.Button>在 Web 上的控件，并以编程方式确定哪些<xref:System.Web.UI.WebControls.Button>单击控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command>的控件层次结构中的窗体通过引发事件`BubbleEvent`。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码的事件处理程序<xref:System.Web.UI.WebControls.Button.Command>事件的列表进行排序时<xref:System.Web.UI.WebControls.Button>单击控件。 此示例中指定的事件处理程序以声明方式，使用<xref:System.Web.UI.WebControls.Button.OnClick%2A>属性的<xref:System.Web.UI.WebControls.Button>控件。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 下面的代码示例演示如何指定事件处理程序，并以编程方式将其添加到中的事件`Page_Load`方法。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Determines whether the button has been clicked prior to rendering on the client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.OnPreRender%2A>主要由控件开发人员使用方法，派生从自定义类时<xref:System.Web.UI.WebControls.Button>控件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL of the page to post to from the current page when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</summary>
        <value>Web 页面的 URL 时从当前页发送<see cref="T:System.Web.UI.WebControls.Button" />单击控件。 默认值为空字符串 ("")，这将导致页面回发到自身。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性使您能够跨页后使用<xref:System.Web.UI.WebControls.Button>控件。  
  
> [!NOTE]
>  只有正确指定的路径使用此属性。 例如，相对路径 (`Test/default.aspx`)，绝对路径 (`https://localhost/WebApp/default.aspx`) 和虚拟 (`~\Test\default.aspx`) 正常工作。 格式不正确路径如"/ Test/default.aspx"或"\Test\default.aspx"不起作用。 请参阅[ASP.NET Web 项目路径](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)有关创建正确的路径的讨论。  
  
 设置<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性设置为 Web 页的 URL 时要发送到<xref:System.Web.UI.WebControls.Button>单击控件。 例如，指定`Page2.aspx`包含的页将导致<xref:System.Web.UI.WebControls.Button>控制要发布到`Page2.aspx`。 如果未指定的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性，页面回发到自身。  
  
> [!IMPORTANT]
>  在执行与服务器端验证的控件跨页回发时，应检查的页<xref:System.Web.UI.Page.IsValid%2A>属性是`true`之前处理回发。 对于跨页回发时，要检查的页面是<xref:System.Web.UI.Page.PreviousPage%2A>。 下面的 VB 代码演示如何做到这一点：  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 有关跨页面张贴的技术的详细信息，请参阅[跨页面发送在 ASP.NET Web 窗体](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性执行跨页面发送。 当用户单击<xref:System.Web.UI.WebControls.Button>控件，页面发到指定的目标页的文本框中输入的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性。 若要运行此示例，您还必须在此代码示例所在的同一目录中创建目标页的文件。 目标页的代码在下一步的示例中提供。  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType>属性来访问已发布的值从另一个页面使用<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>属性。 此页获取前一页从发布并为用户显示的字符串。 如果尝试直接运行此代码示例，则将会出现错误，因为值`text`字段将为`null`。 相反，使用此代码创建一个目标页面并将该文件放在与上一示例的代码相同的目录。 文件的名称必须对应于指定的值<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>上一示例中的属性。 运行上一示例的代码时，此页将跨页面发送发生时自动执行。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">跨页发布在 ASP.NET 网页中</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">The argument for the event.</param>
        <summary>Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件在内部使用<xref:System.Web.UI.WebControls.Button>控件，单击时，引发<xref:System.Web.UI.WebControls.Button.Click>事件，并定义，如果<xref:System.Web.UI.WebControls.Button.Command>事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream to render HTML content on the client.</param>
        <summary>Renders the contents of the control to the specified writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Button.RenderContents%2A>方法中的自定义服务器控件，以便它将始终显示后一个自定义的文本<xref:System.Web.UI.WebControls.Button>服务器控件。  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">The argument for the event.</param>
        <summary>Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件在内部使用<xref:System.Web.UI.WebControls.Button>控件，单击时，引发<xref:System.Web.UI.WebControls.Button.Click>事件，并定义，如果<xref:System.Web.UI.WebControls.Button.Command>事件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>方法，使其始终引发<xref:System.Web.UI.WebControls.Button.OnClick%2A>在自定义事件<xref:System.Web.UI.WebControls.Button>控件。  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text caption displayed in the <see cref="T:System.Web.UI.WebControls.Button" /> control.</summary>
        <value>中显示的文本标题<see cref="T:System.Web.UI.WebControls.Button" />控件。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.Text%2A>属性可指定或确定要在显示的标题<xref:System.Web.UI.WebControls.Button>控件。  
  
 此属性的值设置时，可以自动保存到资源文件使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>并[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.Text%2A>属性来指定中显示的标题<xref:System.Web.UI.WebControls.Button>控件。  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.Button" /> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</summary>
        <value><see langword="true" /> 如果该控件使用客户端浏览器的，提交机制;否则为<see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性指定是否<xref:System.Web.UI.WebControls.Button>控件使用客户端浏览器的提交机制还是 ASP.NET 回发机制。 默认情况下此属性的值是`true`，从而导致<xref:System.Web.UI.WebControls.Button>控件以使用浏览器的提交机制。 如果指定`false`，ASP.NET 页面框架将客户端侧脚本添加到要发布到服务器窗体的页面。  
  
 当<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性是`false`，控件开发人员可以使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法以返回客户端回发事件<xref:System.Web.UI.WebControls.Button>。 返回的字符串<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法包含客户端的函数调用的文本，并可以插入到客户端事件处理程序。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性指定的提交机制的<xref:System.Web.UI.WebControls.Button>控件回发到服务器时使用。 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>属性设置为`false`，导致该按钮以使用 ASP.NET 回发机制。 如果您查看呈现的网页使用你的浏览器查看源命令的源代码，您将看到客户端脚本已由 ASP.NET 页面框架以窗体发布到服务器。  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">在 ASP.NET Web Pages 中的客户端脚本</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.WebControls.Button" /> control causes validation when it posts back to the server.</summary>
        <value>控件组<see cref="T:System.Web.UI.WebControls.Button" />控件回发到服务器时导致验证。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 验证组可以分配给特定类别的页面上的验证控件。 每个验证组可以独立于其他页上的验证组进行验证。 使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>属性指定的验证组的名称为其<xref:System.Web.UI.WebControls.Button>控件回发到服务器时导致验证。  
  
 此属性才起作用时，才的值<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`true`。 指定的值时<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>属性，只是指定组的一部分的验证控件的验证时<xref:System.Web.UI.WebControls.Button>控件回发到服务器。 如果不指定此属性的值和<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>属性设置为`true`，页面上未分配给验证组的所有验证控件时该控件回发到服务器进行都验证。  
  
 主题或样式表主题不能设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>属性来指定要验证时的控件<xref:System.Web.UI.WebControls.Button>控件回发到服务器。 页包含三个用于捕获用户数据的文本框和三个<xref:System.Web.UI.WebControls.RequiredFieldValidator>控制措施来确保用户未将一个文本框留空。 <xref:System.Web.UI.WebControls.RequiredFieldValidator>控制在前两个文本框中为`PersonalInfoGroup`验证组并<xref:System.Web.UI.WebControls.RequiredFieldValidator>控制第三个文本框处于`LocationInfoGroup`验证组。 当`Button1`单击时，仅验证组中的控件`PersonalInfoGroup`进行验证。 当`Button2`单击时，仅验证组中的控件`LocationInfoGroup`进行验证。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">按钮 Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>