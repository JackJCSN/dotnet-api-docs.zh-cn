<Type Name="MailDefinition" FullName="System.Web.UI.WebControls.MailDefinition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a04b62b123fe13c9990939ef421f6dab6349fb87" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70630949" /></Metadata><TypeSignature Language="C#" Value="public sealed class MailDefinition : System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MailDefinition extends System.Object implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MailDefinition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MailDefinition&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailDefinition sealed : System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MailDefinition = class&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许控件用文本文件或字符串创建电子邮件。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类可由控件用来从文本文件或包含<xref:System.Net.Mail.MailMessage>电子邮件正文的字符串创建对象。 <xref:System.Web.UI.WebControls.MailDefinition> <xref:System.Web.UI.WebControls.MailDefinition>使用类可简化创建由控件发送的预定义电子邮件。 如果希望不使用控件发送电子邮件，请参阅<xref:System.Net.Mail>类。  
  
 可以通过将字符串传递<xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%2A>给<xref:System.Collections.IDictionary>方法，将字符串映射到替换项，从而在电子邮件正文中进行文本替换。  
  
 使用类的<xref:System.Net.Mail.SmtpClient.Send%2A>方法发送<xref:System.Web.UI.WebControls.MailDefinition>类创建的对象。 <xref:System.Net.Mail.MailMessage>  <xref:System.Net.Mail.SmtpClient> 为了能够发送电子邮件，您必须在 web.config 文件中配置 SMTP 邮件服务器。 有关详细信息，请参阅[ &lt;smtp&gt;元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MailDefinition>类不支持数据绑定。 类的属性不能`<%#   %>`使用数据绑定表达式语法绑定到数据。 <xref:System.Web.UI.WebControls.MailDefinition>  
  
   
  
## Examples  
 下面的代码示例从 Web 窗体页创建 Internet 电子邮件。 您可以在窗体中输入消息的文本，或者输入要用作邮件正文的文本文件的名称。 此代码为消息定义了两个字符串替换：从窗体 "到" 文本框中的收件人列表将替换字符串\<"% to% >"，并且在<xref:System.Web.UI.WebControls.MailDefinition.From%2A>属性中指定的文本将替换字符串 "\<% from% >"。  
  
 在此代码生成的 Web 窗体页上，你可以单击 "**创建电子邮件"，只显示**以创建电子邮件并在网页<xref:System.Net.Mail.MailMessage>中显示对象的属性。 单击 "**创建电子邮件" 并发送**，同时在网页中显示电子邮件，并使用 Internet 电子邮件将邮件发送给收件人。  
  
> [!IMPORTANT]
>  此控件具有接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[MailDefinitionClassSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#1)]
 [!code-aspx-vb[MailDefinitionClassSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Mail.SmtpClient" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailDefinition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyFileName">
      <MemberSignature Language="C#" Value="public string BodyFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyFileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.BodyFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BodyFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyFileName : string with get, set" Usage="System.Web.UI.WebControls.MailDefinition.BodyFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.*")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含电子邮件正文文本的文件的名称。</summary>
        <value>包含邮件正文文本的文件的名称。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性指定要用于电子邮件正文的文本文件的位置。  
  
 方法使用其`owner`参数将<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性映射到服务器上的路径。 <xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%28System.String%2CSystem.Collections.IDictionary%2CSystem.Web.UI.Control%29> 如果参数指向 .aspx 页上的控件或指向该页本身，则该<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性指向 .aspx 页所在的同一目录中的文本文件。 `owner` 例如，如果 .aspx 页面位于 C:\inetpub\wwwroot\default.aspx，则该<xref:System.Web.UI.WebControls.MailDefinition>控件将在目录 c:\inetpub\wwwroot。中查找文本文件。  
  
 如果在 .ascx 文件中包含的用户控件中使用<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> 类，则该属性将指向用户控件所在的同一目录中的文本文件。 <xref:System.Web.UI.WebControls.MailDefinition> 例如，如果 .aspx 页面位于 C:\inetpub\wwwroot\default.aspx 上并且用户控件位于 C:\inetpub\wwwroot\controls\control.aspx，则<xref:System.Web.UI.WebControls.MailDefinition>对象将在目录中查找文本文件 C:\inetpub\wwwroot\controls。  
  
   
  
## Examples  
 下面的代码示例将<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性设置为在 Web 窗体页上的<xref:System.Web.UI.WebControls.TextBox>控件中输入的文本。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#3)]
 [!code-vb[MailDefinitionClassSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public string CC { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CC" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.CC" />
      <MemberSignature Language="VB.NET" Value="Public Property CC As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CC { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CC : string with get, set" Usage="System.Web.UI.WebControls.MailDefinition.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将邮件的抄送件 (CC) 发送到的电子邮件地址的逗号分隔列表。</summary>
        <value>要向其发送邮件副本（CC）的电子邮件地址的逗号分隔列表。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.CC%2A>属性包含电子邮件的其他收件人列表。  
  
 如果该<xref:System.Web.UI.WebControls.MailDefinition.CC%2A>属性包含格式不正确的电子邮件地址<xref:System.Net.Mail.SmtpClient.Send%2A> ，则该<xref:System.Web.HttpException>方法将引发异常，并且不会发送电子邮件。  
  
   
  
## Examples  
 下面的代码示例将<xref:System.Web.UI.WebControls.MailDefinition.CC%2A>属性设置为在 Web 窗体页上的<xref:System.Web.UI.WebControls.TextBox>控件中输入的文本。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#4)]
 [!code-vb[MailDefinitionClassSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMailMessage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建通过 SMTP（简单邮件传输协议）发送的电子邮件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMailMessage">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailMessage CreateMailMessage (string recipients, System.Collections.IDictionary replacements, System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Mail.MailMessage CreateMailMessage(string recipients, class System.Collections.IDictionary replacements, class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.CreateMailMessage(System.String,System.Collections.IDictionary,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMailMessage (recipients As String, replacements As IDictionary, owner As Control) As MailMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Mail::MailMessage ^ CreateMailMessage(System::String ^ recipients, System::Collections::IDictionary ^ replacements, System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateMailMessage : string * System.Collections.IDictionary * System.Web.UI.Control -&gt; System.Net.Mail.MailMessage" Usage="mailDefinition.CreateMailMessage (recipients, replacements, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="replacements" Type="System.Collections.IDictionary" />
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="recipients">用逗号分隔的邮件收件人列表。</param>
        <param name="replacements"><see cref="T:System.Collections.IDictionary" />，包含字符串及其替换字符串的列表。</param>
        <param name="owner">拥有此 <see cref="T:System.Web.UI.Control" /> 的 <see cref="T:System.Web.UI.WebControls.MailDefinition" />。</param>
        <summary>用文本文件创建通过 SMTP（简单邮件传输协议）发送的电子邮件。</summary>
        <returns>来自一个文本文件的电子邮件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法创建一个新<xref:System.Net.Mail.MailMessage>的对象，该对象<xref:System.Net.Mail.SmtpClient.Send%2A?displayProperty=nameWithType>可以使用方法发送。 <xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%2A>  
  
 必须设置<xref:System.Web.Mail.MailFormat.Text?displayProperty=nameWithType><xref:System.Web.Mail.MailFormat.Html?displayProperty=nameWithType>属性以指示是否应将邮件格式设置为纯文本（）或 HTML （）。 <xref:System.Web.Mail.MailMessage.BodyFormat%2A>  
  
 `recipients`参数包含以逗号分隔的电子邮件收件人列表。 如果参数包含格式不正确的 Internet 电子邮件地址， <xref:System.Net.Mail.SmtpClient.Send%2A>则该方法<xref:System.Web.HttpException>将引发异常，并且不会发送电子邮件。 `recipients`  
  
 参数是一个<xref:System.Collections.IDictionary>实例，其中包含要替换的字符串的列表。 `replacements` 字符串将按它们添加到<xref:System.Collections.IDictionary>集合中的顺序进行替换，并且它们可以覆盖先前的替换项。  
  
 参数指示哪个控件是<xref:System.Web.UI.WebControls.MailDefinition>控件的父级。 `owner` 它确定要在哪个目录中搜索在<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性中指定的文本文件。  
  
   
  
## Examples  
 下面的代码示例创建一个<xref:System.Collections.Specialized.ListDictionary>对象，该对象定义电子邮件\<中替换的两个字符串（\<"%% >" 和 "% From% >"）。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#7)]
 [!code-vb[MailDefinitionClassSample#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#7)]  
  
 下面的代码示例使用<xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%2A>方法从文本文件创建新的电子邮件。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#8)]
 [!code-vb[MailDefinitionClassSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="replacements" /> 不包含字符串。</exception>
        <exception cref="T:System.Web.HttpException">配置文件的 SMTP 节中的 <see langword="From" /> 值为 <see langword="null" /> 或是一个空字符串。 
或 
 <paramref name="recipients" /> 包含不正确的电子邮件地址。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="CreateMailMessage">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailMessage CreateMailMessage (string recipients, System.Collections.IDictionary replacements, string body, System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Mail.MailMessage CreateMailMessage(string recipients, class System.Collections.IDictionary replacements, string body, class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.CreateMailMessage(System.String,System.Collections.IDictionary,System.String,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMailMessage (recipients As String, replacements As IDictionary, body As String, owner As Control) As MailMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Mail::MailMessage ^ CreateMailMessage(System::String ^ recipients, System::Collections::IDictionary ^ replacements, System::String ^ body, System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateMailMessage : string * System.Collections.IDictionary * string * System.Web.UI.Control -&gt; System.Net.Mail.MailMessage" Usage="mailDefinition.CreateMailMessage (recipients, replacements, body, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="replacements" Type="System.Collections.IDictionary" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="recipients">以逗号分隔的收件人列表。</param>
        <param name="replacements"><see cref="T:System.Collections.IDictionary" />，包含字符串及其替换字符串的列表。</param>
        <param name="body">电子邮件的文本。</param>
        <param name="owner">拥有此 <see cref="T:System.Web.UI.Control" /> 的 <see cref="T:System.Web.UI.WebControls.MailDefinition" />。</param>
        <summary>用文本文件创建通过 SMTP（简单邮件传输协议）发送的带有替换内容的电子邮件。</summary>
        <returns>来自一个文本文件的带有替换内容的电子邮件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法创建一个新<xref:System.Net.Mail.MailMessage>的对象，该对象<xref:System.Net.Mail.SmtpClient.Send%2A?displayProperty=nameWithType>可与方法一起发送。 <xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%2A>  
  
 `recipients`参数包含以逗号分隔的电子邮件收件人列表。 如果参数包含格式不正确的 Internet 电子邮件地址， <xref:System.Net.Mail.SmtpClient.Send%2A>则该方法<xref:System.Web.HttpException>将引发异常，并且不会发送电子邮件。 `recipients`  
  
 参数是一个<xref:System.Collections.IDictionary>实例，其中包含要替换的字符串的列表。 `replacements` 字符串将按它们添加到<xref:System.Collections.IDictionary>集合中的顺序进行替换，并且它们可以覆盖先前的替换项。  
  
 `body`参数包含电子邮件的文本。  
  
 参数指示哪个控件是<xref:System.Web.UI.WebControls.MailDefinition>控件的父级。 `owner` 它确定要在哪个目录中搜索在<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>属性中指定的文本文件。  
  
   
  
## Examples  
 下面的代码示例创建一个<xref:System.Collections.Specialized.ListDictionary>对象，该对象定义电子邮件\<中替换的两个字符串（\<"%% >" 和 "% From% >"）。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#7)]
 [!code-vb[MailDefinitionClassSample#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#7)]  
  
 下面的代码示例使用<xref:System.Web.UI.WebControls.MailDefinition.CreateMailMessage%2A>方法通过在 Web 窗体页上的<xref:System.Web.UI.WebControls.TextBox>控件中输入的文本来创建新的电子邮件。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#8)]
 [!code-vb[MailDefinitionClassSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="replacements" /> 不包含字符串。</exception>
        <exception cref="T:System.Web.HttpException">配置文件的 SMTP 节中的 <see langword="From" /> 值为 <see langword="null" /> 或是一个空字符串 ("")。  
  
或 
 <paramref name="recipients" /> 包含不正确的电子邮件地址。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="EmbeddedObjects">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.EmbeddedMailObjectsCollection EmbeddedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.EmbeddedMailObjectsCollection EmbeddedObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmbeddedObjects As EmbeddedMailObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::EmbeddedMailObjectsCollection ^ EmbeddedObjects { System::Web::UI::WebControls::EmbeddedMailObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmbeddedObjects : System.Web.UI.WebControls.EmbeddedMailObjectsCollection" Usage="System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EmbeddedMailObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> 实例的集合，这些实例通常用于在将电子邮件发送给用户前，将图像嵌入到 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 对象中。</summary>
        <value>一个<see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />实例，用于在将电子邮件<see cref="T:System.Web.UI.WebControls.MailDefinition" />发送给用户前，将图像嵌入到对象中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>由<xref:System.Web.UI.WebControls.EmbeddedMailObject> 属性返回的集合中的项表示要嵌入电子邮件的项。 <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> 这些项可以包含图像文件，如公司徽标或其他图形。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Web.UI.WebControls.MailDefinition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置发件人的电子邮件地址。</summary>
        <value>邮件发件人的电子邮件地址。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.From%2A>属性包含电子邮件发件人的电子邮件地址。 如果该<xref:System.Web.UI.WebControls.MailDefinition.From%2A>属性保留为空，或包含格式不正确的电子邮件地址<xref:System.Net.Mail.SmtpClient.Send%2A?displayProperty=nameWithType> ，则该<xref:System.Web.HttpException>方法将引发异常，并且不会发送电子邮件。  
  
   
  
## Examples  
 下面的代码示例将<xref:System.Web.UI.WebControls.MailDefinition.From%2A>属性设置为在 Web 窗体页上的<xref:System.Web.UI.WebControls.TextBox>控件中输入的文本。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#5)]
 [!code-vb[MailDefinitionClassSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Web.UI.WebControls.MailDefinition.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示电子邮件正文是否为 HTML。</summary>
        <value><see langword="true" />如果电子邮件正文为 HTML，则为;否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A>使用属性指定电子邮件正文是否包含纯文本或 HTML 标记。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Web.UI.WebControls.MailDefinition.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置电子邮件的优先级。</summary>
        <value><see cref="T:System.Net.Mail.MailPriority" /> 值之一。 默认值为 <see cref="F:System.Net.Mail.MailPriority.Normal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.Priority%2A>属性指示电子邮件的相对优先级。  
  
   
  
## Examples  
 下面的代码示例将<xref:System.Web.UI.WebControls.MailDefinition.Priority%2A>属性设置为从 Web 窗体页上的<xref:System.Web.UI.WebControls.DropDownList>控件中选择的值。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#10)]
 [!code-vb[MailDefinitionClassSample#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选值不是 <see cref="T:System.Net.Mail.MailPriority" /> 值之一。</exception>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Web.UI.WebControls.MailDefinition.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置电子邮件的主题行。</summary>
        <value>电子邮件的主题行。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MailDefinition.Subject%2A>属性用作电子邮件的主题行。 它可以留空。  
  
   
  
## Examples  
 下面的代码示例将<xref:System.Web.UI.WebControls.MailDefinition.Subject%2A>属性设置为在 Web 窗体页上的<xref:System.Web.UI.WebControls.TextBox>控件中输入的文本。  
  
 此代码示例是为<xref:System.Web.UI.WebControls.MailDefinition>类提供的更大示例的一部分。  
  
 [!code-csharp[MailDefinitionClassSample#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MailDefinitionClassSample/CS/maildefinitionsamplecs.aspx#6)]
 [!code-vb[MailDefinitionClassSample#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MailDefinitionClassSample/VB/maildefinitionsamplevb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Mail.SmtpClient" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MailDefinition.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，用于指示服务器控件是否会将更改保存到其视图状态中。</summary>
        <value>如果控件标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.MailDefinition> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
> [!NOTE]
>  和属性不保存在<xref:System.Web.UI.Control.ViewState%2A>属性中。 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.IStateManager.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.MailDefinition> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存将页面回发到服务器之后发生的所有服务器控件视图状态更改。</summary>
        <returns>服务器控件的当前视图状态。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.MailDefinition> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MailDefinition.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>导致跟踪服务器控件的视图状态的更改，以便这些更改可以存储到服务器控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.MailDefinition> 实例被强制转换为 <xref:System.Web.UI.IStateManager> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
