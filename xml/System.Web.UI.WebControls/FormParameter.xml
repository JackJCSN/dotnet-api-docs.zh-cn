<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62c3981309708b26f5302cfabb21c33eb092fdec" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69400824" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 HTTP 请求 <see cref="P:System.Web.HttpRequest.Form" /> 字段的值绑定到参数对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Web.UI.WebControls.FormParameter>类将<xref:System.Web.HttpRequest.Form%2A>集合中的窗体变量的值绑定到参数化的查询或命令中使用的参数。 如果<xref:System.Web.UI.WebControls.FormParameter>已指定, 但未传递任何对应的窗体变量, 则将数据绑定到参数的控件可能会引发异常。 如果在没有对应值的情况传递窗体变量时, 它们也可能不显示任何数据。 在适当<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>的情况下, 将设置为避免出现这种情况。  
  
 类提供属性, 该属性标识要绑定到的窗体变量的名称, 以及从<xref:System.Web.UI.WebControls.Parameter>类继承的变量的名称。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.Web.UI.WebControls.FormParameter>  
  
> [!IMPORTANT]
>  不<xref:System.Web.UI.WebControls.FormParameter>会以任何方式验证窗体元素所传递的值; 它将使用原始值。 在大多数情况下, 你可以通过处理事件<xref:System.Web.UI.WebControls.FormParameter> (例如`Selecting`, 你所使用的数据源控件公开的、 `Updating` `Inserting`、或`Deleting`事件) 来验证数据源控件使用的值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.SqlDataSource>控件和简单的 ASP.NET 网页将数据插入到数据库中。 数据表中的当前数据显示在<xref:System.Web.UI.WebControls.DropDownList>控件中。 您可以通过在<xref:System.Web.UI.WebControls.TextBox>控件中输入值并单击 "" 按钮来添加新记录。 单击该按钮时, 会将指定的值插入到数据库中, 并且<xref:System.Web.UI.WebControls.DropDownList>会刷新。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的未命名新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的对象的所有属性的默认值都进行了初始化。<xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 将初始化为<xref:System.String.Empty?displayProperty=nameWithType>。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 此外, <xref:System.Web.UI.WebControls.Parameter.Name%2A>将属性初始化为<xref:System.TypeCode.Object?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Data.ParameterDirection.Input>将属性<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>初始化为, 将属性初始化为,并初始化属性。<xref:System.Web.UI.WebControls.Parameter.Direction%2A>为 null (`Nothing`在 Visual Basic 中)。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  不<xref:System.Web.UI.WebControls.FormParameter>会以任何方式验证窗体元素所传递的值; 它将使用原始值。 在大多数情况下, 你可以通过处理事件 ( <xref:System.Web.UI.WebControls.FormParameter>例如, 你所使用的数据源控件公开的`Selecting`、 `Updating` `Inserting`、或`Deleting`事件) 来验证数据源控件使用的值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">一个 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 实例，将从该实例初始化当前实例。</param>
        <summary>使用 <paramref name="original" /> 参数指定的实例的值初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数是用于克隆<xref:System.Web.UI.WebControls.FormParameter>实例的复制构造函数。`protected` <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 的<xref:System.Web.UI.WebControls.FormParameter>值 (包括<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>和<xref:System.Web.UI.WebControls.Parameter.Type%2A> ) 全部传输到新的实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定字符串标识要绑定到的窗体变量字段，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的一个新的已命名的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的对象将使用指定的参数名称和标识参数绑定到的窗体变量的字符串来初始化。<xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 用默认<xref:System.Web.UI.WebControls.Parameter.Direction%2A>值初始化和属性。<xref:System.Web.UI.WebControls.Parameter.Type%2A>  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  不<xref:System.Web.UI.WebControls.FormParameter>会以任何方式验证窗体元素所传递的值; 它将使用原始值。 在大多数情况下, 你可以通过处理事件 ( <xref:System.Web.UI.WebControls.FormParameter>例如, 你所使用的数据源控件公开的`Selecting`、 `Updating` `Inserting`、或`Deleting`事件) 来验证数据源控件使用的值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="dbType">参数的数据库类型。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。</param>
        <summary>通过使用指定的字符串标识要绑定到的窗体变量字段，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="type">该参数所表示的类型。 默认值为 <see cref="F:System.TypeCode.Object" />。</param>
        <param name="formField">将参数对象绑定到的窗体变量的名称。 默认值为 <see cref="F:System.String.Empty" />。</param>
        <summary>使用指定字符串标识要绑定到的窗体变量，初始化 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 类的一个新的已命名的强类型实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用构造函数创建的<xref:System.Web.UI.WebControls.Parameter.Type%2A>对象使用指定的参数名称、和字符串进行初始化,该字符串标识参数绑定到的窗体变量。<xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 仅用默认<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>值初始化和属性。<xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  不<xref:System.Web.UI.WebControls.FormParameter>会以任何方式验证窗体元素所传递的值; 它将使用原始值。 在大多数情况下, 你可以通过处理事件 ( <xref:System.Web.UI.WebControls.FormParameter>例如, 你所使用的数据源控件公开的`Selecting`、 `Updating` `Inserting`、或`Deleting`事件) 来验证数据源控件使用的值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 实例的副本。</summary>
        <returns>与当前实例完全相同的 <see cref="T:System.Web.UI.WebControls.FormParameter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法调用复制构造函数以使用当前实例的值初始化<xref:System.Web.UI.WebControls.FormParameter>类的新实例。 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">请求的当前 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">与使用 <see cref="T:System.Web.UI.Control" /> 的页面关联的 <see cref="T:System.Web.UI.WebControls.FormParameter" />。</param>
        <summary>更新并返回 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 对象的值。</summary>
        <returns>一个对象，表示参数的更新值和当前值。 如果上下文或请求为空（在 Visual Basic 中为 <see langword="Nothing" />），<see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 方法将返回 NULL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> 每<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>次调用方法时, 尝试绑定到窗体变量。  
  
 方法使用<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>参数从请求中检索指定窗体字段的值。 `context` 忽略`control`参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数绑定到的窗体变量的名称。</summary>
        <value>标识作为参数绑定目标的窗体变量的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标识传递到<xref:System.Web.HttpRequest.Form%2A>集合中的名称/值对。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 尽管属性标识对的名称, 但在运行时<xref:System.Web.UI.WebControls.FormParameter>将绑定到其对应的值。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 如果不将预期的窗体变量字符串名称/值对传递到集合中的 ASP.NET 网页, 则<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法会将参数绑定到<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>属性的值 (如果已设置)。 如果未设置, 则<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>方法无法将参数绑定到值。 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.ObjectDataSource>控件<xref:System.Web.UI.WebControls.FormParameter>和从中间<xref:System.Web.UI.WebControls.GridView>层业务对象检索数据和用于显示结果的控件来显示筛选后的数据。  
  
 此代码示例包含一个<xref:System.Web.UI.WebControls.TextBox>、一个<xref:System.Web.UI.WebControls.GridView>控件、 <xref:System.Web.UI.WebControls.ObjectDataSource>一个控件和一个提交按钮。 默认情况下, <xref:System.Web.UI.WebControls.TextBox>将使用其中一个 Northwind 商贸员工的名称填充。 显示有关中的名称标识的雇员的信息。 <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.GridView> 若要检索另一个雇员的数据, 请在中<xref:System.Web.UI.WebControls.TextBox>输入雇员的全名, 并单击按钮。  
  
 属性指定一个表达式, 该表达式用于筛选的检索<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>数据。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 此属性使用的参数占位符的计算结果为<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>集合中包含的参数。 在此示例中, 参数占位符<xref:System.Web.UI.WebControls.FormParameter>绑定到<xref:System.Web.UI.WebControls.TextBox>控件的值。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 下面的代码示例演示了之前的代码示例使用的中间层业务对象。 此示例包含两个基本类:类封装业务逻辑, `NorthwindEmployee`类是一个模型类, 只包含从数据层加载和保存数据所需的基本功能。 `EmployeeLogic` 为简单起见, `EmployeeLogic`类创建了静态数据集, 而不是从数据层检索数据。 这对于此示例也很有帮助, 因为示例依赖于用户提供 Northwind 商贸员工的全名来演示筛选。 若要获取完整的工作示例, 必须使用所提供的 ASP.NET 代码示例编译并使用这些类。  
  
> [!IMPORTANT]
>  不<xref:System.Web.UI.WebControls.FormParameter>会以任何方式验证窗体元素所传递的值; 它将使用原始值。 在大多数情况下, 你可以通过处理事件 ( <xref:System.Web.UI.WebControls.FormParameter>例如, 你所使用的数据源控件公开的`Selecting`、 `Updating` `Inserting`、或`Deleting`事件) 来验证数据源控件使用的值。 如果参数的值未通过验证测试, 则可以通过将关联<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.ComponentModel.CancelEventArgs>类的属性设置为来`true`取消数据操作。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">对数据源控件使用参数</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否验证参数中的客户端输入的值。</summary>
        <value>如果验证客户输入，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
