<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc09f60fbf0fe6715499ba8dd477b132576c0391" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399241" /></Metadata><TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实现 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中一个步骤所需的基本功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能直接创建<xref:System.Web.UI.WebControls.WizardStepBase>类的实例。 相反, 此类由<xref:System.Web.UI.WebControls.WizardStep>类<xref:System.Web.UI.WebControls.TemplatedWizardStep>和类继承, 以提供用作向导的控件中某个步骤的基本功能。  
  
 可以从<xref:System.Web.UI.WebControls.WizardStepBase>类派生, 以创建一个自定义类, 该类表示向导控件中的唯一步骤。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否允许用户从 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 集合中后面的步骤返回当前步骤。</summary>
        <value>如果允许用户返回当前步骤，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性可用于<xref:System.Web.UI.WebControls.Wizard>在控件中强制执行线性导航。 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 如果每个步骤都<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>将其属性`false`设置为, 则在访问某个步骤后, 用户将无法返回到该步骤。 您可以使用此功能的一种情况是, 禁止用户在步骤完成后返回到某个步骤, 因为在每个步骤完成时, 您将数据保存到数据库中。 如果在每个步骤之后保存数据, 并允许用户在保存后返回到步骤并更改信息, 则保存的数据可能会损坏。 通过将<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性设置为`false`, 一旦用户离开某个步骤, 他或她将无法返回到该步骤并更改任何值。  
  
 属性确定如何以及何时不呈现 "**上一步**" 按钮。 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 下表描述了**上一个**按钮的呈现行为。  
  
|方案|行为|  
|--------------|--------------|  
|英寸步骤1设置为`false` , 用户操作转到步骤2。 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>|步骤2不显示 "**上一**步" 按钮。|  
|非线性:步骤1设置为`false` , 用户操作转到步骤3。 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>|步骤3不显示 "**上一**步" 按钮。|  
|侧栏按钮:步骤 2 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>设置为`false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>设置为`true`, 用户单击侧栏按钮。|当设置为<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> `false`时, 不会在边栏上自动禁用任何按钮。 如果用户单击该按钮, 则将忽略该操作。|  
|带有自定义模板的线性 & 非线性:步骤具有自定义导航模板。|如果<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>使用模板进行导航时设置为, `false`则不会发生自动隐藏或显示。 "**上一步**" 按钮在模板上应是可选的。|  
|使用 Visual Studio 设计器和<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> :该控件有5个步骤, 你在步骤4中执行操作, 并且运行该页面。|如果步骤4为<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, 则呈现 "**上一**步" 按钮。 "**上一**步" 按钮仅<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>在历史<xref:System.Web.UI.WebControls.WizardStepType.Step>记录中<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>的上一步设置为`false`时隐藏, 并设置为。 由于首先呈现步骤 4, 并且历史记录中没有任何步骤, 所以 "**上一**步" 按钮不会隐藏。|  
|开始步骤和非线性导航:用户访问步骤3和步骤 4, 然后访问<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Start>的步骤1。|当设置为<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> <xref:System.Web.UI.WebControls.WizardStepType.Start>时, 向导不会添加 "**上一**步" 按钮, 而不管用户如何导航到该步骤。|  
|历史记录中的相同步骤:用户访问步骤 3, 其中<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>设置为<xref:System.Web.UI.WebControls.WizardStepType.Step> , 用户不提交其操作。 然后, 在步骤3中单击 "上一步" 按钮。|向导控件会检查历史记录中的**上一个**步骤是否为用户当前所处的 "相同" 步骤。 如果步骤相同, 向导控件会返回历史记录以确定前面的 "不同" 步骤, 并基于历史记录中的 "不同步骤" 来确定**上一个**按钮和目标的显示结果。|  
  
> [!NOTE]
>  `false` <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> <xref:System.Web.UI.WebControls.WizardStepBase>当属性设置为时, 但的父控件的属性设置为`true`时, 单击侧栏区域中的按钮不起作用。 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 通常会显示侧栏区域来提供非线性导航, 因此, 如果未使用非线性导航功能, 则可能需要将<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>属性设置为。 `false`  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息, 请<xref:System.Web.UI.ThemeableAttribute>参阅和[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性在访问<xref:System.Web.UI.WebControls.Wizard>控件后阻止用户返回到控件中的某个步骤。 在此示例中, `Step1`该步骤的<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>属性已设置`false`为。 用户离开该`Step1`步骤后, 步骤中将不显示 " `Step2`上一步" 按钮。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示主题是否应用于该控件。</summary>
        <value>如果使用主题，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性指示是否<xref:System.Web.UI.WebControls.WizardStepBase>为控件启用主题。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>属性还会影响是否为其 controls 集合中包含的控件启用主题。 当属性为`true`时, 将在应用程序的主题目录中搜索要应用的控件外观。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 如果主题目录中不存在特定控件的外观, 则不会应用外观。 当属性为`false`时, 不会搜索主题目录, <xref:System.Web.UI.Control.SkinID%2A>也不会使用属性的值。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>  
  
 控件可以重写其<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>父控件或由包含页设置的值。 例如, <xref:System.Web.UI.WebControls.WizardStepBase>如果控件已`false` <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A>设置为, 则可以通过在各个子控件上将<xref:System.Web.UI.Control.EnableTheming%2A>属性设置为`true` , 来有选择地将主题应用到向导步骤中包含的子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置分配给服务器控件的编程标识符。</summary>
        <value>分配给控件的编程标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>使用属性可在 Web 窗体页中标识和引用特定的向导步骤控件。 此<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>值将成为页面中控件实例的名称; 这使你可以轻松访问该页面的代码中的特定步骤。 例如, 如果将<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> <xref:System.Web.UI.WebControls.WizardStepBase>控件的属性设置为 "步骤 1", 则可以将该页面的代码中的子控件引用为`Step1.Controls`。  
  
 当在设计时添加或修改步骤<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>时,控件可确保控件中的每个步骤都具有有效的唯一标识符。<xref:System.Web.UI.WebControls.WizardStepBase> 例如, 当你在设计时<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>设置一个步骤时, 它不能与<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件中包含的另一步骤的标识符匹配, <xref:System.Web.UI.Control.ID%2A>并且它无法与包含<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>控件的匹配。  
  
   
  
## Examples  
 下面的代码示例为 Web 窗体页中<xref:System.Web.UI.WebControls.Wizard>的控件定义了三个向导步骤。 在该页的代码中, 向导步骤实例按其 ID 值命名, 并且可以在代码`WizardStep1`中引用、 `WizardStep2`和`WizardStep3`。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">此属性在设计时设置为无效的标识符字符串。  
  
或 
此属性在设计时设置为与包含 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 控件相同的标识符。  
  
- 或 - 
此属性在设计时设置为与包含 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 控件中的另一个步骤相同的标识符。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Web 窗体控件标识</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与用作向导的控件中的某个步骤关联的名称。</summary>
        <value>与用作向导的控件中的某个步骤关联的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性返回一个字符串, 该字符串标识向导控件中的步骤。 如果为<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性指定了值, 则属性将<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>返回该值。 如果没有为<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性指定任何值, 则<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>属性将<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>返回属性的值。 如果<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>没有为<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>或属性指定值, 则属性将<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A>返回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">处理和引发事件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 控件的子控件的内容输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，此对象编写将在客户端呈现的内容。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤显示的导航用户界面 (UI) 的类型。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepType" /> 枚举值之一。 默认值为 <see langword="WizardStepType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用属性指定为<xref:System.Web.UI.WebControls.Wizard>控件中的步骤显示的导航按钮的类型。 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 如果为此属性指定一个值, 则任何标记为<xref:System.Web.UI.WebControls.WizardStepType.Complete>的步骤会在侧栏的禁用状态下显示。  
  
 如果未指定此属性的值, 则默认值为`WizardStepType.Auto`。  
  
 下表列出了<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>属性的可用设置和该步骤生成的行为:  
  
 `WizardStepType.Auto`  
 为步骤呈现的导航 UI 由声明该步骤的顺序确定。  
  
 `WizardStepType.Complete`  
 该步骤是要显示的最后一个步骤。 不呈现任何导航按钮。  
  
 `WizardStepType.Finish`  
 该步骤是最终数据收集步骤。 呈现 "完成" 和 "上一个" 按钮以便导航。  
  
 `WizardStepType.Start`  
 该步骤是要显示的第一个步骤。 不呈现 "上一步" 按钮。  
  
 `WizardStepType.Step`  
 步骤是开始和完成步骤之间的任何步骤。 为导航呈现 "上一步" 和 "下一步" 按钮。 此步骤类型对于重写 <xref:System.Web.UI.WebControls.WizardStepType.Auto> 步骤类型非常有用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所选的值不是 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 枚举值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在启用侧栏功能时，要用于 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤的标题。</summary>
        <value>在启用侧栏功能时，要用于 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中某个步骤的标题。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当启用侧栏功能时, 可以使用<xref:System.Web.UI.WebControls.Wizard> 属性来显示控件中某个步骤的用户友好标题。<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 如果未<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>设置该属性, 并且启用了边栏功能, 则将显示侧栏<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>按钮的属性值。  
  
 设置此属性后, 可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息, 请<xref:System.ComponentModel.LocalizableAttribute>参阅和[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性为<xref:System.Web.UI.WebControls.Wizard>控件中的步骤显示用户友好的标题。 在此示例中`Step1` , 没有设置其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性, <xref:System.Web.UI.WebControls.Wizard>因此它在控件中显示为 "WizardStep1"。 `Step2`已设置其<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>属性, 因此它显示为 "步骤 2"。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件，此控件是派生自 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的对象的父级。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Wizard" /> 控件，此控件是派生自 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 的对象的父级。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">向导 Web 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
