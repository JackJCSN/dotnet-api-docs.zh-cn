<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76736da9c98f04b43f1b5898f3f8d83939cceafd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69410927" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 控件中 <see cref="T:System.Web.UI.WebControls.TreeView" /> 对象的集合。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类用于存储和管理<xref:System.Web.UI.WebControls.TreeView>控件中对象的<xref:System.Web.UI.WebControls.TreeNode>集合。 <xref:System.Web.UI.WebControls.TreeNodeCollection> 控件在其两<xref:System.Web.UI.WebControls.TreeNodeCollection>个属性中使用类。 <xref:System.Web.UI.WebControls.TreeView> 它将其根节点存储在<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>属性中, 并将其所<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>选节点存储在属性中。 集合还用于存储子节点<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>的属性 (如果有)。 <xref:System.Web.UI.WebControls.TreeNodeCollection>  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection>类支持多种方法来访问集合中的项:  
  
-   使用索引器在特定的<xref:System.Web.UI.WebControls.TreeNode>从零开始的索引处直接检索对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>  
  
-   <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>使用方法可创建一个可用于循环访问集合的枚举器。  
  
-   使用`foreach` (C#) 或`For Each` (Visual Basic) 来循环访问集合。  
  
-   使用方法可将集合的内容复制<xref:System.Array>到对象中。 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>  
  
 可以<xref:System.Web.UI.WebControls.TreeNodeCollection>通过添加和删除<xref:System.Web.UI.WebControls.TreeNode>对象以编程方式管理。 若要向集合添加节点, 请使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>或<xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>方法。 若要从集合中删除节点, 请<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>使用<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>、或<xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>方法。  
  
> [!NOTE]
>  将控件绑定到数据源后, 每次发生<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>绑定<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>时, 将自动填充和集合。 <xref:System.Web.UI.WebControls.TreeView> 绑定之间对集合所做的任何更改都将丢失。 若要保留这些更改, 请更新数据源, 或者在每次绑定时手动重新生成集合。  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection>包含的属性和方法可用于检索有关集合本身的信息。 若要确定集合中有多少项, 请使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>属性。 如果要确定集合是否包含<xref:System.Web.UI.WebControls.TreeNode>某个对象, 请<xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>使用方法。 若要获取集合中<xref:System.Web.UI.WebControls.TreeNode>对象的索引, 请<xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>使用方法。  
  
   
  
## Examples  
 下面的示例演示如何以编程方式将节点添加到中, 并<xref:System.Web.UI.WebControls.TreeNodeCollection>将其从中移除。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性返回对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>用默认值初始化 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可以使用默认值初始化<xref:System.Web.UI.WebControls.TreeNodeCollection>类的新实例。 此构造函数通常在创建不需要父节点的根节点的集合时使用。  
  
> [!NOTE]
>  创建非根节点的集合时, 应使用采用`owner`参数的重载构造函数 (而不是此构造函数) 来指定父节点。  
  
 此构造函数主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">表示集合的父节点的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>使用指定的父节点（或所有者）初始化 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可以使用指定的父节点<xref:System.Web.UI.WebControls.TreeNodeCollection> (或所有者) 初始化类的新实例。 在创建需要指定父节点的非根节点的集合时, 通常使用此构造函数。  
  
> [!NOTE]
>  创建根节点的集合时, 请考虑使用无参数构造函数, 因为根节点没有父节点。  
  
 此构造函数主要由控件开发人员使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">要追加的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象追加到 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象的结尾。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法将指定<xref:System.Web.UI.WebControls.TreeNode>的对象追加<xref:System.Web.UI.WebControls.TreeNodeCollection>到的末尾。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>  
  
> [!NOTE]
>  允许您添加空引用 (在 Visual Basic 中为 Nothing) 以及重复<xref:System.Web.UI.WebControls.TreeNode>的对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection>  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>方法, 您可以通过使用<xref:System.Web.UI.WebControls.TreeNode>方法将对象<xref:System.Web.UI.WebControls.TreeNodeCollection>插入到特定索引处的中。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>方法以编程方式将节点添加<xref:System.Web.UI.WebControls.TreeNodeCollection>到。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性各自返回一个对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">要插入 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的从零开始的索引位置。</param>
        <param name="child">要添加的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象插入到 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象中的指定索引位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法可将指定<xref:System.Web.UI.WebControls.TreeNode>的对象插入到<xref:System.Web.UI.WebControls.TreeNodeCollection>中的指定的从零开始的索引处。 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>  
  
> [!NOTE]
>  允许您插入空引用 (在 Visual Basic 中为 Nothing) 以及重复<xref:System.Web.UI.WebControls.TreeNode>的对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection>  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>方法, 可以使用方法将<xref:System.Web.UI.WebControls.TreeNode>对象追加到的<xref:System.Web.UI.WebControls.TreeNodeCollection>末尾。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>方法以编程方式将节点添加<xref:System.Web.UI.WebControls.TreeNodeCollection>到。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性各自返回一个对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清空 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法从<xref:System.Web.UI.WebControls.TreeNode> 中<xref:System.Web.UI.WebControls.TreeNodeCollection>删除每个对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>  
  
> [!NOTE]
>  若要从集合中移除单个节点, 请使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>或<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>方法。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>方法以编程方式<xref:System.Web.UI.WebControls.TreeNodeCollection>为空。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性返回对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">要查找的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>确定指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象是否在集合中。</summary>
        <returns>如果指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法可确定中<xref:System.Web.UI.WebControls.TreeNode>是否包含<xref:System.Web.UI.WebControls.TreeNodeCollection>对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> 此方法通常用于在执行任务之前测试<xref:System.Web.UI.WebControls.TreeNode>对象是否存在, 例如, 在集合中添加或删除节点。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>方法来确定所选节点是否<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>在集合中。 请注意, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>该属性返回<xref:System.Web.UI.WebControls.TreeNodeCollection>一个对象。  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray"><see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的从零开始的数组，它接收从 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 复制的项。</param>
        <param name="index">目标数组中开始接收复制内容的位置。</param>
        <summary>从目标数组的指定索引开始，将 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象中的所有项复制到 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的一维兼容数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法可将的<xref:System.Web.UI.WebControls.TreeNodeCollection>内容复制到指定的从零开始<xref:System.Array?displayProperty=nameWithType>的对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 从目标数组的指定索引处开始复制项。 使用对象, 您可以使用数组语法来访问<xref:System.Web.UI.WebControls.TreeNodeCollection>中的项。 <xref:System.Array?displayProperty=nameWithType>  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>方法, 还可以使用方法来创建可用于访问集合中的项的枚举器。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>方法将的值<xref:System.Web.UI.WebControls.TreeNodeCollection>复制到数组中。 请注意, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>该属性返回<xref:System.Web.UI.WebControls.TreeNodeCollection>一个对象。  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象中的项数。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 中的项数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用属性确定中的项数<xref:System.Web.UI.WebControls.TreeNodeCollection>。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 此属性通常在循环访问集合时使用, 以确定集合的上限。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>属性通常还用于确定集合是否为空。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>属性来确定<xref:System.Web.UI.WebControls.TreeNodeCollection>中的项数。 然后, 它对<xref:System.Web.UI.WebControls.TreeView>控件执行前序遍历, 以显示每个节点的文本。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个可用于循环访问 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象的枚举数。</summary>
        <returns>一个可用于循环访问 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 的枚举数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法创建一个可轻松循环访问的枚举器, 以获取中的<xref:System.Web.UI.WebControls.TreeNodeCollection>每一项。 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 若要获取枚举器中当前指向的项, 请使用<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>属性。 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>使用方法移动到下一项。 如果需要将枚举数移回集合的开始位置, 请使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>方法。  
  
> [!NOTE]
>  创建枚举器或使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>方法后, 必须<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>调用方法。 否则, 由<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>属性表示的项是不确定的。  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>方法, 还可以使用方法来<xref:System.Array?displayProperty=nameWithType>创建可用于访问集合中的项的对象。 另一种替代方法是`foreach`使用`For Each`或结构来循环访问集合。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>方法创建包含<xref:System.Web.UI.WebControls.TreeView>控件的根节点的枚举数。  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">要定位的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>确定指定的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的索引。</summary>
        <returns>如果找到 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 中 <paramref name="value" /> 的第一个匹配项的从零开始的索引，则为该索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法可确定<xref:System.Web.UI.WebControls.TreeNodeCollection>对象中指定<xref:System.Web.UI.WebControls.TreeNode>对象的从零开始的索引。 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> 如果该节点不在集合中, 则该方法将返回-1。  
  
> [!NOTE]
>  如果指定的节点多次出现在集合中, 则返回第一个匹配项的索引。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>方法来确定根节点的索引。 请注意, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>该属性返回<xref:System.Web.UI.WebControls.TreeNodeCollection>一个对象。  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否同步对 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 的访问（线程安全）。</summary>
        <value><see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性用于指示是否同步对的<xref:System.Web.UI.WebControls.TreeNodeCollection>访问 (线程安全)。 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> 此属性是从<xref:System.Collections.ICollection?displayProperty=nameWithType>类派生的, 并被重写以始终返回。 `false`  
  
 有关<xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>属性的详细信息, <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType>请参阅<xref:System.Collections.ICollection?displayProperty=nameWithType>接口的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要检索的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的从零开始的索引。</param>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象中指定索引处的 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNode" /> 中指定索引处的 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用数组表示法, 使用<xref:System.Web.UI.WebControls.TreeNode>此索引器<xref:System.Web.UI.WebControls.TreeNodeCollection>访问位于指定索引处的对象。 使用索引器可以直接修改或替换<xref:System.Web.UI.WebControls.TreeNode>集合中的对象。 集合从零开始。  
  
   
  
## Examples  
 下面的示例演示如何使用索引器访问中的<xref:System.Web.UI.WebControls.TreeNodeCollection>元素。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性返回对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">要移除的 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象。</param>
        <summary>从 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象中移除指定的 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>使用方法可从集合中删除指定的节点。 然后, 在该节点之后的所有项上移以填充空白位置。 已移动项的索引也会更新。  
  
> [!NOTE]
>  可以<xref:System.Web.UI.WebControls.TreeNodeCollection>包含空引用 (在 Visual Basic 中为 Nothing) 以及重复<xref:System.Web.UI.WebControls.TreeNode>的对象。  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>方法, 可以使用方法移除特定索引处的节点。 你还可以使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>方法移除集合中的每个节点。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>方法以编程方式<xref:System.Web.UI.WebControls.TreeNodeCollection>从中移除节点。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性各自返回一个对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的节点的从零开始的索引位置。</param>
        <summary>从 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象中移除指定索引位置的 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法从<xref:System.Web.UI.WebControls.TreeNode> 中<xref:System.Web.UI.WebControls.TreeNodeCollection>指定的从零开始的索引位置移除对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 然后, 在该节点之后的所有项上移以填充空白位置。 已移动项的索引也会更新。  
  
> [!NOTE]
>  可以<xref:System.Web.UI.WebControls.TreeNodeCollection>包含空引用 (在 Visual Basic 中为 Nothing) 以及重复<xref:System.Web.UI.WebControls.TreeNode>的对象。  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>方法, 您可以通过使用方法<xref:System.Web.UI.WebControls.TreeNode>删除特定的对象。 你还可以使用<xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>方法移除集合中的每个节点。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>方法以编程方式<xref:System.Web.UI.WebControls.TreeNodeCollection>从中移除节点。 请注意, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>和属性各自返回一个对象。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象的访问。</summary>
        <value>可用于同步对 <see cref="T:System.Object" /> 的访问的 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性提供可与同步 (线程) <xref:System.Web.UI.WebControls.TreeNodeCollection>代码一起使用的的同步版本。 <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A>  
  
> [!CAUTION]
>  此<xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>类的属性始终返回`false` <xref:System.Web.UI.WebControls.TreeNodeCollection> , 这指示类不同步 (不是线程安全的)。  
  
 同步代码必须对的<xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection>对象执行操作, 而不是<xref:System.Web.UI.WebControls.TreeNodeCollection>直接对其执行操作。 这样可确保对从其他对象派生的集合正确地执行操作。 具体而言, 它与可能同时修改<xref:System.Web.UI.WebControls.TreeNodeCollection>对象的其他线程保持正确的同步。  
  
> [!NOTE]
>  此实现中返回的对象是<xref:System.Collections.ArrayList?displayProperty=nameWithType>用于存储集合中的<xref:System.Web.UI.WebControls.TreeNode>对象的对象。  
  
 枚举整个集合本质上不是一个线程安全的过程。 即使集合是同步的, 其他线程仍可以修改集合, 这会导致枚举器引发异常。 若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。  
  
 有关<xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>属性的详细信息, <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType>请参阅<xref:System.Collections.ICollection?displayProperty=nameWithType>接口的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">从零开始的一个 <see cref="T:System.Array" /> 对象，它接收从 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 复制的项。</param>
        <param name="index">目标数组中开始接收复制内容的位置。</param>
        <summary>从目标数组的指定索引开始，将 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象中的所有项复制到兼容的一维 <see cref="T:System.Array" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法可将的<xref:System.Web.UI.WebControls.TreeNodeCollection>内容复制到指定的从零开始<xref:System.Array?displayProperty=nameWithType>的对象。 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 从目标数组的指定索引处开始复制项。 使用对象, 您可以使用数组语法来访问<xref:System.Web.UI.WebControls.TreeNodeCollection>中的项。 <xref:System.Array?displayProperty=nameWithType>  
  
 作为替代<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>方法, 还可以使用方法来创建可用于访问集合中的项的枚举器。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>方法将的值<xref:System.Web.UI.WebControls.TreeNodeCollection>复制到数组中。 请注意, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>该属性返回<xref:System.Web.UI.WebControls.TreeNodeCollection>一个对象。  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> 不是 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 对象的数组。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象是否保存对其视图状态的更改。</summary>
        <value>如果控件标记为保存其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含保存的视图状态值的 <see cref="T:System.Object" />。</param>
        <summary>加载 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象先前保存的视图状态。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将视图状态的更改保存到 <see cref="T:System.Object" />。</summary>
        <returns>包含视图状态更改的 <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 跟踪其视图状态的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在服务器控件上调用了此方法之后, 该<xref:System.Web.UI.Control.IsTrackingViewState%2A>属性将返回。 `true`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状态管理概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
