<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd150054d7a10f5814f41e2c54febd907dc51b43" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69246830" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <TypeSignature Language="F#" Value="type ContextUtil = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5be84-101">获取有关 COM+ 对象上下文的信息。</span><span class="sxs-lookup"><span data-stu-id="5be84-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="5be84-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="5be84-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-103"><xref:System.EnterpriseServices.ContextUtil>是首选的用于获取 COM + 上下文信息的类。</span><span class="sxs-lookup"><span data-stu-id="5be84-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="5be84-104">由于此类的成员都是`static` (`shared`在 Visual Basic 中), 因此, 不需要在使用之前对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="5be84-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-105">下面的代码示例演示如何使用<xref:System.EnterpriseServices.ContextUtil>创建事务性。 <xref:System.EnterpriseServices.ServicedComponent></span><span class="sxs-lookup"><span data-stu-id="5be84-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid" Usage="System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-106">获取一个 GUID，它表示包含组件的活动。</span><span class="sxs-lookup"><span data-stu-id="5be84-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="5be84-107">如果当前上下文是某个活动的一部分，则为该活动的 GUID；否则为 <see langword="GUID_NULL" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-108">下面的代码示例获取<xref:System.EnterpriseServices.ContextUtil.ActivityId%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="5be84-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-109">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-109">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-110">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-110">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-111">获取当前应用程序的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-111">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="5be84-112">当前应用程序的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-112">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-113">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="5be84-113">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-114">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-114">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-115">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-115">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstanceId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-116">获取当前应用程序实例的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-116">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="5be84-117">当前应用程序实例的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-117">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-118">下面的代码示例获取<xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="5be84-118">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-119">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-119">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-120">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-120">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : Guid" Usage="System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-121">获取当前上下文的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-121">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="5be84-122">当前上下文的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-122">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-123">下面的示例代码演示如何使用此特性。</span><span class="sxs-lookup"><span data-stu-id="5be84-123">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-124">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-124">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-125">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-125">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeactivateOnReturn : bool with get, set" Usage="System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-126">获取或设置 COM+ 上下文中的 <see langword="done" /> 位。</span><span class="sxs-lookup"><span data-stu-id="5be84-126">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="5be84-127">如果该方法返回时将停用此对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-127"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5be84-128">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-129">Com + `done`位确定对象在完成其工作后保持活动状态的时间, 并且可能会影响事务的持续时间。</span><span class="sxs-lookup"><span data-stu-id="5be84-129">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="5be84-130">当方法调用返回时, com + 将`done`检查位。</span><span class="sxs-lookup"><span data-stu-id="5be84-130">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="5be84-131">如果位为, `true`com + 将停用该对象。 `done`</span><span class="sxs-lookup"><span data-stu-id="5be84-131">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="5be84-132">如果位为`false`, 则不停用对象。 `done`</span><span class="sxs-lookup"><span data-stu-id="5be84-132">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-133">下面的代码示例演示如何使用<xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A>属性来确保<xref:System.EnterpriseServices.ServicedComponent>在方法调用后停用。</span><span class="sxs-lookup"><span data-stu-id="5be84-133">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-134">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-134">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-135">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-135">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberSignature Language="F#" Value="static member DisableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.DisableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5be84-136">在 COM+ 上下文中将 <see langword="consistent" /> 位和 <see langword="done" /> 位设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-136">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-137">如果系统询问, COM + 上下文会投票中止当前事务, 但不会在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-137">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-138">下面的代码示例调用<xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5be84-138">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-139">没有 COM+ 上下文可用。</span><span class="sxs-lookup"><span data-stu-id="5be84-139">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberSignature Language="F#" Value="static member EnableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.EnableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5be84-140">在 COM+ 上下文中将 <see langword="consistent" /> 位设置为 <see langword="true" />，并将 <see langword="done" /> 位设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-140">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-141">如果系统提示, COM + 上下文将提交当前事务, 但不会在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-141">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-142">下面的代码示例调用<xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5be84-142">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-143">没有 COM+ 上下文可用。</span><span class="sxs-lookup"><span data-stu-id="5be84-143">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedProperty : string -&gt; obj" Usage="System.EnterpriseServices.ContextUtil.GetNamedProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5be84-144">请求的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5be84-144">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="5be84-145">从 COM+ 上下文返回命名的属性。</span><span class="sxs-lookup"><span data-stu-id="5be84-145">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="5be84-146">上下文的命名的属性。</span><span class="sxs-lookup"><span data-stu-id="5be84-146">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-147">这对于获取 Active Server Pages (ASP) 提供的 Internet Information Services (IIS) 内部对象非常有用。</span><span class="sxs-lookup"><span data-stu-id="5be84-147">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-148">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-148">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-149">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-149">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="static member IsCallerInRole : string -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsCallerInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="5be84-150">要检查的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="5be84-150">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="5be84-151">确定调用方是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="5be84-151">Determines whether the caller is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="5be84-152">如果调用方属于指定角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-152"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-153">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-153">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberSignature Language="F#" Value="static member IsDefaultContext : unit -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsDefaultContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5be84-154">确定已维护的组件在默认上下文中是否激活。</span><span class="sxs-lookup"><span data-stu-id="5be84-154">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="5be84-155">在默认上下文中激活那些没有 COM+ 目录信息的已维护组件。</span><span class="sxs-lookup"><span data-stu-id="5be84-155">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="5be84-156">如果在默认上下文中激活已维护组件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-156"><see langword="true" /> if the serviced component is activated in the default context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInTransaction : bool" Usage="System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-157">获取一个值，该值指示当前上下文是否为事务性上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-157">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value><span data-ttu-id="5be84-158">如果当前上下文是事务性的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-158"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-159">下面的代码示例获取<xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="5be84-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-160">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityEnabled : bool" Usage="System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-161">获取一个值，该值指示基于角色的安全性在当前上下文中是否处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="5be84-161">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value><span data-ttu-id="5be84-162">如果当前上下文启用了安全性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-162"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-163">下面的代码示例获取<xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="5be84-163">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-164">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-164">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberSignature Language="F#" Value="member this.MyTransactionVote : System.EnterpriseServices.TransactionVote with get, set" Usage="System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-165">获取或设置 COM+ 上下文中的 <see langword="consistent" /> 位。</span><span class="sxs-lookup"><span data-stu-id="5be84-165">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="5be84-166"><see cref="T:System.EnterpriseServices.TransactionVote" /> 值之一，可以是 <see langword="Commit" /> 或 <see langword="Abort" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-166">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-167">当<xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A>设置为`Commit`时, com + `consistent`位设置为`true` , com + 上下文投票以提交事务。</span><span class="sxs-lookup"><span data-stu-id="5be84-167">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="5be84-168">如果<xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A>将设置为`Abort`, 则`consistent`将该位设置`false`为, com + 上下文将投票以中止该事务。</span><span class="sxs-lookup"><span data-stu-id="5be84-168">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="5be84-169">该`consistent`位的默认值为`true`。</span><span class="sxs-lookup"><span data-stu-id="5be84-169">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="5be84-170">位将投票转换为提交或中止执行它的事务, 而位则`done`会完成投票。 `consistent`</span><span class="sxs-lookup"><span data-stu-id="5be84-170">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="5be84-171">`consistent`当方法调用返回或对象停用时,com+将检查位。`done` `true`</span><span class="sxs-lookup"><span data-stu-id="5be84-171">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="5be84-172">尽管对象的`consistent`位可以在每个方法调用中重复更改, 但只有最后的更改计数。</span><span class="sxs-lookup"><span data-stu-id="5be84-172">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-173">下面的代码示例演示如何使用<xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A>属性创建事务性。 <xref:System.EnterpriseServices.ServicedComponent></span><span class="sxs-lookup"><span data-stu-id="5be84-173">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-174">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-174">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-175">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-175">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.PartitionId : Guid" Usage="System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-176">获取当前分区的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-176">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="5be84-177">当前分区的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-177">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-178">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-178">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-179">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-179">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberSignature Language="F#" Value="static member SetAbort : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5be84-180">在 COM+ 上下文中将 <see langword="consistent" /> 位设置为 <see langword="false" />，并将 <see langword="done" /> 位设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-180">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-181">如果系统询问, 上下文会投票中止当前事务, 并在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-181">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-182">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5be84-182">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-183">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-183">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberSignature Language="F#" Value="static member SetComplete : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5be84-184">在 COM+ 上下文中设置 <see langword="consistent" /> 位，并将 <see langword="done" /> 位设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-184">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-185">如果系统询问, COM + 上下文将提交当前事务, 并在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-185">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be84-186">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5be84-186">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-187">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-187">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNamedProperty : string * obj -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetNamedProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5be84-188">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5be84-188">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="5be84-189">表示要设置的属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-189">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="5be84-190">设置 COM+ 上下文的命名属性。</span><span class="sxs-lookup"><span data-stu-id="5be84-190">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-191">这对于获取 Active Server Pages (ASP) 提供的 Internet Information Services (IIS) 内部对象非常有用。</span><span class="sxs-lookup"><span data-stu-id="5be84-191">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-192">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-192">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-193">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-193">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemTransaction : System.Transactions.Transaction" Usage="System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-194">获取当前事务上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-194">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="5be84-195">表示当前事务上下文的 <see cref="T:System.Transactions.Transaction" />。</span><span class="sxs-lookup"><span data-stu-id="5be84-195">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-196">如果访问此属性时不存在任何事务上下文, 则将创建并返回一个新的事务上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-196">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-197">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-197">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-198">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-198">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : obj" Usage="System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-199">获取描述当前 COM+ DTC 事务的对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-199">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="5be84-200">表示当前事务的对象。</span><span class="sxs-lookup"><span data-stu-id="5be84-200">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be84-201">如果事务是 com + <xref:System.EnterpriseServices.ITransaction> DTC 事务, 则返回的对象支持接口。</span><span class="sxs-lookup"><span data-stu-id="5be84-201">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-202">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-202">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-203">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-203">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : Guid" Usage="System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5be84-204">获取当前 COM+ DTC 事务的 GUID。</span><span class="sxs-lookup"><span data-stu-id="5be84-204">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="5be84-205">一个 GUID，表示当前 COM+ DTC 事务（如果存在该事务）。</span><span class="sxs-lookup"><span data-stu-id="5be84-205">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5be84-206">下面的代码示例获取<xref:System.EnterpriseServices.ContextUtil.TransactionId%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="5be84-206">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="5be84-207">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="5be84-207">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5be84-208">该平台不是 Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="5be84-208">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
