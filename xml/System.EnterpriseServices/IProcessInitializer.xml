<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f02b0dca103a2278f68dfe7522f65b914e4d15" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358565" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>支持 COM 组件启动或关闭时可调用的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要在服务器进程 (dllhost.exe) 分别启动或关闭时运行初始化或关闭代码, 请在服务组件上实现接口方法。<xref:System.EnterpriseServices.IProcessInitializer>  
  
 当 dllhost.exe `Startup`开始`Shutdown`和结束时, com + 将提供和事件。 此功能启用 COM + 服务器应用程序中安装的任何 COM + 组件 (此处为服务器组件), 以运行自定义初始化并清理代码。 在进程的持续时间内, 将<xref:System.EnterpriseServices.IProcessInitializer>创建并存储实现接口的每个组件的实例, 并在启动和关闭过程中对接口方法调用。 在上<xref:System.EnterpriseServices.ServicedComponent>实现时, 在组件注册过程中`InitializesServerApplication` , 在组件集合中`COMAdminCatalogObject`的参数设置为。 `true`  
  
 `Startup`使用和`Shutdown`事件, 可以初始化资源、创建连接、初始化共享数据以及运行清理代码。 但是, 您不能访问特定于 COM + 的状态, 因为尚未创建服务器组件的实例。 此外, `Startup`和`Shutdown`事件中的代码应尽可能快地返回, 因为系统仅等待90秒, dllhost.exe 将在系统启动进程之后等待激活。 如果 Dllhost.exe 在90秒内未发出信号, 则系统将结束进程;因此, 所有初始化处理都需要在此时间范围内完成。 参与初始化的每个服务器组件都必须支持<xref:System.EnterpriseServices.IProcessInitializer>接口。 在 dllhost.exe 启动时, com + 会创建请求该服务的所有服务器组件, `QueryInterface`调用<xref:System.EnterpriseServices.IProcessInitializer> <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>接口, 并调用函数。 同样, 当 dllhost.exe 进程关闭时, 它将在以前存储的接口<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>指针上调用函数。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行关闭操作。 关闭 Dllhost.exe 时被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>在 failfast 或其他灾难性关机事件期间, 不会调用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">在 Microsoft Windows XP 中，一个指向 <see langword="IUnknown" /> COM 组件启动接口的指针。 在 Microsoft Windows 2000 中，该参数始终为 <see langword="null" />。</param>
        <summary>在启动时执行初始化。 启动 Dllhost.exe 时被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由`punkProcessControl`引用的对象<xref:System.EnterpriseServices.IProcessInitControl>实现接口。 <xref:System.EnterpriseServices.IProcessInitControl>支持单个方法<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>。  
  
 中<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>的初始化代码可<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>调用, 超时设置等于在组件启动超时之前剩余的秒数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
