<Type Name="FederationConfiguration" FullName="System.IdentityModel.Services.Configuration.FederationConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a76019fbe931cfdbf5b367854729a195da83e46e" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63999352" /></Metadata><TypeSignature Language="C#" Value="public class FederationConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FederationConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.Configuration.FederationConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationConfiguration" />
  <TypeSignature Language="F#" Value="type FederationConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>公开包含控制 WS-Federation 身份验证模块的联合设置的属性（<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />）和在 Web 应用程序的“会话身份验证模块”（<see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下 web 应用程序具有单个<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>对象，它通过访问<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration?displayProperty=nameWithType>属性。 第一次新访问的属性<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>实例初始化从配置文件中的设置和<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType>引发事件。 可以使用的属性和方法公开的<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>类来修改或替换为事件处理程序中配置初始化的对象。 此对象是可通过<xref:System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs.FederationConfiguration%2A?displayProperty=nameWithType>在事件处理程序的属性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Services.Configuration.FederationConfiguration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  之前的新<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>实例使用的任何已配置的 HTTP 模块，请调用<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>方法，以确保该实例已正确初始化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FederationConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.Configuration.FederationConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FederationConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>通过加载设置初始化 <see cref="T:System.IdentityModel.Services.Configuration.FederationConfiguration" /> 选件类的新实例从配置文件的 <see langword="system.identityModel.services" /> 部分。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过加载设置初始化新实例中的属性`<system.identityModel.services>`配置节。 此构造函数调用<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.%23ctor%28System.Boolean%29?displayProperty=nameWithType>构造函数与`loadConfig`参数`true`。  
  
> [!WARNING]
>  之前的新<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>实例使用的任何已配置的 HTTP 模块，请调用<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>方法，以确保该实例已正确初始化。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.Configuration.FederationConfiguration.#ctor(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FederationConfiguration (bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.Configuration.FederationConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FederationConfiguration(bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.Configuration.FederationConfiguration : bool -&gt; System.IdentityModel.Services.Configuration.FederationConfiguration" Usage="new System.IdentityModel.Services.Configuration.FederationConfiguration loadConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="loadConfig">初始化的<see langword="true" /> 与配置文件加载的设置；初始化的 <see langword="false" /> 设置为默认值。</param>
        <summary>通过有选择地加载来自配置文件的 <see langword="system.identityModel.services" /> 部分的设置来初始化 <see cref="T:System.IdentityModel.Services.Configuration.FederationConfiguration" /> 类的新的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  之前的新<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>实例使用的任何已配置的 HTTP 模块，请调用<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>方法，以确保该实例已正确初始化。  
  
 `system.identityModel`中，必须指定部分`<section>`元素下的`<configSections>`元素在配置文件或异常引发。  
  
```  
<configSections>  
  <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />  
</configSections>  
```  
  
 如果`loadConfig`是`true`并只有一个`<federationConfiguration>`指定元素，使用该元素加载设置。 如果多个`<federationConfiguration>`指定了元素，则方法将尝试加载设置的元素的未命名的从具有<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.DefaultFederationConfigurationName>。 如果此类元素不存在，该方法将返回而不加载设置。 这会导致出现异常时<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>调用方法。  
  
> [!WARNING]
>  Microsoft 建议，如果指定多个`<federationConfiguration>`中的元素`system.identityModel.services`配置至少一个其中的部分是未命名或的其名称设置为空字符串。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">此 <see langword="system.identityModel" /> 配置节未在配置文件中定义。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FederationConfiguration (string federationConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string federationConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.Configuration.FederationConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (federationConfigurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FederationConfiguration(System::String ^ federationConfigurationName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.Configuration.FederationConfiguration : string -&gt; System.IdentityModel.Services.Configuration.FederationConfiguration" Usage="new System.IdentityModel.Services.Configuration.FederationConfiguration federationConfigurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="federationConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="federationConfigurationName">从中加载配置的 <see langword="&lt;federationConfiguration&gt;" /> 元素的名称。</param>
        <summary>从指定的名称 [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) 元素初始化 <see cref="T:System.IdentityModel.Services.Configuration.FederationConfiguration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  之前的新<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>实例使用的任何已配置的 HTTP 模块，请调用<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>方法，以确保该实例已正确初始化。  
  
 如果调用此构造函数，然后`<system.identityModel.services>`配置节`<federationConfiguration>`配置文件中必须存在具有指定的名称的元素。  
  
 这两个`system.identityModel`部分并`system.identityModel.services`中，必须指定`<section>`下的元素`<configSections>`元素在配置文件或异常引发。  
  
```  
<configSections>  
  <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />  
  <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />  
</configSections>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在配置文件中没有 <see langword="system.identityModel.services" /> 节定义。  
  
或 
在配置文件中没有 <see langword="system.identityModel" /> 节定义。  
  
或 
该名称与 <see langword="&lt;federationConfiguration&gt;" /> 类中的 <see langword="system.identityModel.services" /> 没有指定元素名称。</exception>
      </Docs>
    </Member>
    <Member MemberName="CookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.CookieHandler CookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieHandler As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandler ^ CookieHandler { System::IdentityModel::Services::CookieHandler ^ get(); void set(System::IdentityModel::Services::CookieHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieHandler : System.IdentityModel.Services.CookieHandler with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将由会话身份验证模块 (<see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />) 使用的 Cookie 处理程序。</summary>
        <value>由会话身份验证模块（SAM）使用的 Cookie 处理程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定用于读取和写入会话 cookie 由 SAM 的 cookie 处理程序。  
  
 初始化从配置文件，设置此属性[ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将该属性设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CustomElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement CustomElement" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.CustomElement" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ CustomElement { System::Xml::XmlElement ^ get(); void set(System::Xml::XmlElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomElement : System.Xml.XmlElement with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.CustomElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此配置中存在的自定义 XML 元素（如有）。</summary>
        <value>自定义 XML 元素。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFederationConfigurationName">
      <MemberSignature Language="C#" Value="public static readonly string DefaultFederationConfigurationName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultFederationConfigurationName" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Services.Configuration.FederationConfiguration.DefaultFederationConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultFederationConfigurationName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultFederationConfigurationName;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFederationConfigurationName : string" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.DefaultFederationConfigurationName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定义应加载设置的 [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) 元素的默认名称。 因为默认元素是未命名的，这是一个空字符串。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.IdentityConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentityConfiguration As IdentityConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::IdentityConfiguration ^ IdentityConfiguration { System::IdentityModel::Configuration::IdentityConfiguration ^ get(); void set(System::IdentityModel::Configuration::IdentityConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IdentityConfiguration : System.IdentityModel.Configuration.IdentityConfiguration with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.IdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.IdentityConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此实例关联的 <see cref="T:System.IdentityModel.Configuration.IdentityConfiguration" /> 对象。</summary>
        <value>此标识配置对象与该实例相关联。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化从配置文件，设置此属性[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将该属性设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="federationConfiguration.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化当前实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可确保正确初始化当前实例然后 HTTP 模块使用它来处理传入的请求。 它应只调用一次。 检查<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.IsInitialized%2A>调用方法之前的属性。 此方法设置<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.IsInitialized%2A>属性设置`true`。  
  
 默认实现将创建默认 cookie 处理程序，如果没有一个已配置通过<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler%2A>属性并调用<xref:System.IdentityModel.Configuration.IdentityConfiguration.Initialize%2A?displayProperty=nameWithType>通过配置上的标识配置对象方法<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.IdentityConfiguration%2A>属性。 您可以重写此方法可以修改此行为，或者提供派生类中附加的初始化。  
  
 在 HTTP 模块使用类来处理传入的请求之前，应调用此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前实例已初始化（<see cref="P:System.IdentityModel.Services.Configuration.FederationConfiguration.IsInitialized" /> 属性是 <see langword="true" />。）</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public virtual bool IsInitialized { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property bool IsInitialized {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已调用 <see cref="M:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize" /> 方法。</summary>
        <value>如果配置对象已配置，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以检查是否<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>对象已初始化。 <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.Initialize%2A>应调用方法，仅一次。  
  
 `set`操作是`protected`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadConfiguration">
      <MemberSignature Language="C#" Value="protected void LoadConfiguration (System.IdentityModel.Services.Configuration.FederationConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadConfiguration(class System.IdentityModel.Services.Configuration.FederationConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.Configuration.FederationConfiguration.LoadConfiguration(System.IdentityModel.Services.Configuration.FederationConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadConfiguration (element As FederationConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadConfiguration(System::IdentityModel::Services::Configuration::FederationConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.LoadConfiguration : System.IdentityModel.Services.Configuration.FederationConfigurationElement -&gt; unit" Usage="federationConfiguration.LoadConfiguration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.IdentityModel.Services.Configuration.FederationConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">要从中加载设置的 <see langword="&lt;federationConfiguration&gt;" /> 元素。 可以为 <see langword="null" /> 加载默认值。</param>
        <summary>为来自配置文件的当前实例加载属性。 此方法由从配置设置中初始化新创建的 <see cref="T:System.IdentityModel.Services.Configuration.FederationConfiguration" /> 构造函数调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.LoadConfiguration%2A>构造函数来设置新创建的属性调用方法<xref:System.IdentityModel.Services.Configuration.FederationConfiguration>对象从指定`<federationConfiguration>`元素。  
  
 如果`element`是`null`，加载实例时使用默认值。  
  
 如果没有任何配置文件，或者，如果命名的节不存在，则不引发异常，请改为使用默认值加载该实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此实例关联的名称。</summary>
        <value>与此联合配置实例关联的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于`name`的属性[ &lt;federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 ServiceCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 ServiceCertificate" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.ServiceCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ ServiceCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.ServiceCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于对 WS-Federation 协议消息进行签名的 X.509 证书。</summary>
        <value>用于签名 WS-Federation 协议消息的 X.509 证书。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化从配置文件，设置此属性[ &lt;serviceCertificate&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/servicecertificate.md)元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsFederationConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.Configuration.WsFederationConfiguration WsFederationConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.Configuration.WsFederationConfiguration WsFederationConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property WsFederationConfiguration As WsFederationConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::Configuration::WsFederationConfiguration ^ WsFederationConfiguration { System::IdentityModel::Services::Configuration::WsFederationConfiguration ^ get(); void set(System::IdentityModel::Services::Configuration::WsFederationConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WsFederationConfiguration : System.IdentityModel.Services.Configuration.WsFederationConfiguration with get, set" Usage="System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.Configuration.WsFederationConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WS-Federation 身份验证模块 (<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />) 的配置设置。</summary>
        <value>设置 WS-Federation 身份验证模块的配置设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化从配置文件，设置此属性[ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将该属性设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>