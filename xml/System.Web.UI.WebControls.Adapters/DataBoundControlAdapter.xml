<Type Name="DataBoundControlAdapter" FullName="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f6aba9507b7c85c0f63ca4d4ca44771dcea199" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402375" /></Metadata><TypeSignature Language="C#" Value="public class DataBoundControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataBoundControlAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataBoundControlAdapter&#xA;Inherits WebControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBoundControlAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter" />
  <TypeSignature Language="F#" Value="type DataBoundControlAdapter = class&#xA;    inherit WebControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>根据特定浏览器请求自定义与适配器关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从<xref:System.Web.UI.WebControls.DataBoundControl>类派生的控件绑定到数据源, 并通过枚举它所绑定到的数据源中的项来生成其用户界面或子控件层次结构。 <xref:System.Web.UI.WebControls.DataBoundControl>是一个抽象基类, 用于定义可绑定到数据源的所有控件 (如<xref:System.Web.UI.WebControls.DataGrid>和<xref:System.Web.UI.WebControls.ListBox>控件) 的公共特性。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.DataBoundControl>。  
  
 <xref:System.Web.UI.WebControls.DataBoundControl>用于修改特定浏览器或浏览器类的的行为, 或充当某些功能的筛选器。 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> 呈现行为中的大部分适应性都可以封装在派生自<xref:System.Web.UI.HtmlTextWriter>类的专用类中。 因此, 可以将单个适配器用于许多浏览器类行为, 或在<xref:System.Web.UI.HtmlTextWriter>类中包含适应性, 使控件适配器不必要地使用。  
  
 如果这些文件中有`<controlAdapter>`条目, 则每个控件都通过 .browser 定义文件显式映射到适配器。 因此, 对的<xref:System.Web.UI.Control.Adapter%2A> <xref:System.Web.UI.WebControls.DataBoundControl>属性的任何访问都使用<xref:System.Web.HttpBrowserCapabilities>从浏览器定义文件中提取的对象来执行要控制的适配器映射。  
  
 在处理过程中, .NET Framework 会截获对某个控件的方法的调用, 该控件可能是特定于浏览器的。 如果附加了控件适配器, .NET Framework 将调用关联的适配器方法。 有关详细信息，请参阅 <xref:System.Web.UI.Adapters.ControlAdapter>。  
  
 M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding (System.object) 方法将可枚举集合绑定到关联<xref:System.Web.UI.WebControls.DataBoundControl>的。 属性返回对的<xref:System.Web.UI.WebControls.DataBoundControl>强类型引用。 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A>  
  
   
  
## Examples  
 下面的代码示例创建并使用两个派生控件:  
  
-   派生自<xref:System.Web.UI.WebControls.DataBoundControl>的类是一个简单的只读网格控件。 `MyDataBound`  
  
-   派生自<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>的类将网格数据呈现为包含行分隔符的一维列表, 适用于小型屏幕浏览器。 `MyDataBoundAdapter`  
  
 第一个代码示例使用网页声明一个`MyDataBound`控件和一个<xref:System.Web.UI.WebControls.ObjectDataSource>实例, 该实例<xref:System.Data.DataView>以对象的形式提供数据。  
  
  
  
 第二个代码示例包含派生`MyDataBound`的`MyDataBoundAdapter`和类:  
  
-   `<table>` <xref:System.Collections.IEnumerator> <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>类将重写方法以保存数据源的集合, 并重写方法以 HTML 格式呈现数据源。 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> `MyDataBound`  
  
-   类将重<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>写, 以将数据源保存到一维<xref:System.Collections.ArrayList>并添加行分隔符。 `MyDataBoundAdapter` 它重<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>写以将<xref:System.Collections.ArrayList>呈现为按`<br />`标记分隔的字段列表。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#1)]  
  
 第三个代码示例使用配置文件指定不将任何控件适配器与`MyDataBound` Microsoft Internet Explorer 浏览器的控件一起使用, 并`MyDataBoundAdapter`将与`MyDataBound`用于 Openwave 的控件的控件一起使用。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBoundControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBoundControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 在创建相应<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>的对象时, 在内部构造类的新实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.DataBoundControl Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataBoundControl Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As DataBoundControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::DataBoundControl ^ Control { System::Web::UI::WebControls::DataBoundControl ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.DataBoundControl" Usage="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索对与此控件适配器关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的强类型引用。</summary>
        <value>附加此 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 的 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当对象附加<xref:System.Web.UI.WebControls.DataBoundControl>到控件时, .NET Framework 将调用某些适配器成员而不是控件成员。 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A> <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>从类派生的适配器中的属性。 它返回对`MyDataBound`控件的强类型引用。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>从<see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />类继承时, 至少应<see langword="Control" />实现属性以返回控件的强类型实例, 如 "示例" 部分所示。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : System.Collections.IEnumerable -&gt; unit&#xA;override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="dataBoundControlAdapter.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">要绑定到派生的 <see cref="T:System.Collections.IEnumerable" /> 的 <see cref="T:System.Object" /> 的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" />。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的数据源中的数据绑定到控件适配器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当控件适配器附加到从<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DataBoundControl>类派生的控件时<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A> <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter> , 将调用方法来替代方法。  
  
 通常, 重写遍历<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType>数据, 并在必要时创建不同的名称和值, 并将其保存到内部集合。 通常, <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>或的类似方法<xref:System.Web.UI.WebControls.DataBoundControl>会从该内部集合填充用户界面或子控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>集合, 以将数据源保存到一维<xref:System.Collections.ArrayList>对象并添加行分隔符。 它还演示如何重写<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>方法, 以将<xref:System.Collections.ArrayList>呈现为按`<br />`标记分隔的字段列表。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果目标浏览器需要专用绑定逻辑, 则重写方法,例如,当项名称的构造方式与控件的常规用法不同。<see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />  
  
基方法调用<see cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />。 <see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" /> 仅当需要的<see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />数据绑定功能<see cref="T:System.Web.UI.WebControls.DataBoundControl" />时, 才应调用基方法。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />
        <altmember cref="M:System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
  </Members>
</Type>
