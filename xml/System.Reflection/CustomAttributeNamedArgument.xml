<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e909b5565d107fb681080c2cc3dd491882d2f28" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67249000" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeNamedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d241-101">表示仅反射上下文中的自定义属性的命名自变量。</span><span class="sxs-lookup"><span data-stu-id="8d241-101">Represents a named argument of a custom attribute in the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d241-102">正在检查仅反射上下文中的代码无法执行，因此并不总是可以通过创建实例它们，然后检查其属性、 使用等方法检查自定义特性<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>， <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>，等等.</span><span class="sxs-lookup"><span data-stu-id="8d241-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="8d241-103">如果该属性类型本身的代码加载到仅反射上下文，无法执行。</span><span class="sxs-lookup"><span data-stu-id="8d241-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="8d241-104"><xref:System.Reflection.CustomAttributeNamedArgument>结构由<xref:System.Reflection.CustomAttributeData>类，以提供对为实例指定的自定义属性，而无需执行的自定义特性类型的相应属性的代码的命名参数的访问。</span><span class="sxs-lookup"><span data-stu-id="8d241-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="8d241-105"><xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A>属性返回<xref:System.Reflection.CustomAttributeTypedArgument>结构，其中包含的类型和命名自变量的值。</span><span class="sxs-lookup"><span data-stu-id="8d241-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8d241-106">命名参数还是位置，您必须访问其类型和值使用<xref:System.Reflection.CustomAttributeTypedArgument>结构。</span><span class="sxs-lookup"><span data-stu-id="8d241-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="8d241-107">若要创建的实例<xref:System.Reflection.CustomAttributeData>类中，使用`static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>工厂方法。</span><span class="sxs-lookup"><span data-stu-id="8d241-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d241-108">下面的示例定义具有四个构造函数和四个属性的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8d241-109">两个属性是只读的并使用位置参数的构造函数的设置。</span><span class="sxs-lookup"><span data-stu-id="8d241-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8d241-110">其他两个属性是读/写，并可以仅通过使用命名参数进行设置。</span><span class="sxs-lookup"><span data-stu-id="8d241-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8d241-111">一个位置属性是一个字符串、 数组和一个命名的属性是一个整数数组。</span><span class="sxs-lookup"><span data-stu-id="8d241-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8d241-112">该特性可应用于程序集、在该程序集中声明的类型、该类型的方法以及该方法的参数。</span><span class="sxs-lookup"><span data-stu-id="8d241-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8d241-113">这种情况下使用不同的构造函数。</span><span class="sxs-lookup"><span data-stu-id="8d241-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="8d241-114">执行时，该程序集本身加载到仅反射上下文，并显示有关已应用到它及类型和它包含的成员的自定义特性的信息。</span><span class="sxs-lookup"><span data-stu-id="8d241-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="8d241-115">应用于类型的属性说明数组属性，使用位置和命名参数。</span><span class="sxs-lookup"><span data-stu-id="8d241-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d241-116">初始化 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d241-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * obj -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="8d241-117">自定义属性的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-117">A field or property of the custom attribute.</span></span> <span data-ttu-id="8d241-118">新的 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 对象表示此成员及其值。</span><span class="sxs-lookup"><span data-stu-id="8d241-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="value"><span data-ttu-id="8d241-119">自定义属性的字段或属性的值。</span><span class="sxs-lookup"><span data-stu-id="8d241-119">The value of the field or property of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="8d241-120">初始化 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 类（它表示自定义属性的指定字段或属性）的新实例，并指定字段或属性的值。</span><span class="sxs-lookup"><span data-stu-id="8d241-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d241-121">此构造函数仅供使用的继承者<xref:System.Reflection.CustomAttributeNamedArgument>类。</span><span class="sxs-lookup"><span data-stu-id="8d241-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="8d241-122">它不是在应用程序代码中使用。</span><span class="sxs-lookup"><span data-stu-id="8d241-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d241-123"><paramref name="memberInfo" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-123"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d241-124"><paramref name="memberInfo" /> 不是自定义属性的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-124"><paramref name="memberInfo" /> is not a field or property of the custom attribute.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeNamedArgument : System.Reflection.MemberInfo * System.Reflection.CustomAttributeTypedArgument -&gt; System.Reflection.CustomAttributeNamedArgument" Usage="new System.Reflection.CustomAttributeNamedArgument (memberInfo, typedArgument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="memberInfo"><span data-ttu-id="8d241-125">自定义属性的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-125">A field or property of the custom attribute.</span></span> <span data-ttu-id="8d241-126">新的 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 对象表示此成员及其值。</span><span class="sxs-lookup"><span data-stu-id="8d241-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span></span></param>
        <param name="typedArgument"><span data-ttu-id="8d241-127">一个描述字段或属性的类型和值的对象。</span><span class="sxs-lookup"><span data-stu-id="8d241-127">An object that describes the type and value of the field or property.</span></span></param>
        <summary><span data-ttu-id="8d241-128">初始化 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 类（它表示自定义属性的指定字段或属性）的新实例，并指定描述字段或属性的类型和值的 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8d241-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d241-129">此构造函数仅供使用的继承者<xref:System.Reflection.CustomAttributeNamedArgument>类。</span><span class="sxs-lookup"><span data-stu-id="8d241-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="8d241-130">它不是在应用程序代码中使用。</span><span class="sxs-lookup"><span data-stu-id="8d241-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d241-131"><paramref name="memberInfo" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-131"><paramref name="memberInfo" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeNamedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8d241-132">与此实例进行比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-132">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d241-133">返回一个值，该值指示此实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="8d241-133">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8d241-134">如果 <see langword="true" /> 等于此实例的类型和值，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-134"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeNamedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d241-135">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8d241-135">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8d241-136">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8d241-136">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsField : bool" Usage="System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d241-137">获取一个值，该值指示指定参数是否是一个字段。</span><span class="sxs-lookup"><span data-stu-id="8d241-137">Gets a value that indicates whether the named argument is a field.</span></span></summary>
        <value><span data-ttu-id="8d241-138">如果命名参数为字段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-138"><see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberInfo : System.Reflection.MemberInfo" Usage="System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d241-139">获取将用于设置指定参数的特性成员。</span><span class="sxs-lookup"><span data-stu-id="8d241-139">Gets the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="8d241-140">将用于设置命名参数的特性成员。</span><span class="sxs-lookup"><span data-stu-id="8d241-140">The attribute member that would be used to set the named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d241-141">在大多数情况下，该成员是属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d241-142">获取将用于设置指定参数的特性成员名称。</span><span class="sxs-lookup"><span data-stu-id="8d241-142">Gets the name of the attribute member that would be used to set the named argument.</span></span></summary>
        <value><span data-ttu-id="8d241-143">用于设置命名参数的特性成员的名称。</span><span class="sxs-lookup"><span data-stu-id="8d241-143">The name of the attribute member that would be used to set the named argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8d241-144">相等运算符左侧的结构。</span><span class="sxs-lookup"><span data-stu-id="8d241-144">The structure to the left of the equality operator.</span></span></param>
        <param name="right"><span data-ttu-id="8d241-145">相等运算符右侧的结构。</span><span class="sxs-lookup"><span data-stu-id="8d241-145">The structure to the right of the equality operator.</span></span></param>
        <summary><span data-ttu-id="8d241-146">测试两个 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="8d241-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span></span></summary>
        <returns><span data-ttu-id="8d241-147">如果两个 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 结构相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-147"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8d241-148">此运算符的等效方法是<xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d241-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeNamedArgument * System.Reflection.CustomAttributeNamedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeNamedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8d241-149">不等运算符左侧的结构。</span><span class="sxs-lookup"><span data-stu-id="8d241-149">The structure to the left of the inequality operator.</span></span></param>
        <param name="right"><span data-ttu-id="8d241-150">不等运算符右侧的结构。</span><span class="sxs-lookup"><span data-stu-id="8d241-150">The structure to the right of the inequality operator.</span></span></param>
        <summary><span data-ttu-id="8d241-151">测试两个 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 结构是否不同。</span><span class="sxs-lookup"><span data-stu-id="8d241-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span></span></summary>
        <returns><span data-ttu-id="8d241-152">如果两个 <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> 结构不同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d241-152"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8d241-153">此运算符的等效方法是<xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d241-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeNamedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d241-154">返回由参数名称、等号和的字符串表示的参数值组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d241-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></summary>
        <returns><span data-ttu-id="8d241-155">由参数名称、等号和的字符串表示的参数值组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="8d241-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : System.Reflection.CustomAttributeTypedArgument" Usage="System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d241-156">获取一个 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 结构，该结构可用于获取当前指定参数的类型和值。</span><span class="sxs-lookup"><span data-stu-id="8d241-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span></span></summary>
        <value><span data-ttu-id="8d241-157">一个结构，可用于获取当前命名参数的类型和值。</span><span class="sxs-lookup"><span data-stu-id="8d241-157">A structure that can be used to obtain the type and value of the current named argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d241-158"><xref:System.Reflection.CustomAttributeNamedArgument>结构仅包含有关如何设置参数值的信息。</span><span class="sxs-lookup"><span data-stu-id="8d241-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="8d241-159">此属性用于获取<xref:System.Reflection.CustomAttributeTypedArgument>结构，其中包含的类型和值。</span><span class="sxs-lookup"><span data-stu-id="8d241-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d241-160">下面的代码示例定义了四个构造函数和四个属性的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8d241-161">两个属性是只读的并使用位置参数的构造函数的设置。</span><span class="sxs-lookup"><span data-stu-id="8d241-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8d241-162">其他两个属性是读/写，并可以仅通过使用命名参数进行设置。</span><span class="sxs-lookup"><span data-stu-id="8d241-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8d241-163">一个位置属性是一个字符串、 数组和一个命名的属性是一个整数数组。</span><span class="sxs-lookup"><span data-stu-id="8d241-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8d241-164">该特性可应用于程序集、在该程序集中声明的类型、该类型的方法以及该方法的参数。</span><span class="sxs-lookup"><span data-stu-id="8d241-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8d241-165">这种情况下使用不同的构造函数。</span><span class="sxs-lookup"><span data-stu-id="8d241-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="8d241-166">执行时，该程序集本身加载到仅反射上下文，并显示自定义属性。</span><span class="sxs-lookup"><span data-stu-id="8d241-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8d241-167">应用于类型的属性说明数组属性，使用位置和命名参数。</span><span class="sxs-lookup"><span data-stu-id="8d241-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8d241-168"><xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A>中使用属性`ShowAttributeData`显示自定义属性数据时，若要获取的类型和值的方法指定的特性。</span><span class="sxs-lookup"><span data-stu-id="8d241-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>