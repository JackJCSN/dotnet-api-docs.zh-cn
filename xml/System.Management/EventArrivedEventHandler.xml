<Type Name="EventArrivedEventHandler" FullName="System.Management.EventArrivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="083b2406f29c5b94b2827933735378b373d3e80d" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64013219" /></Metadata><TypeSignature Language="C#" Value="public delegate void EventArrivedEventHandler(object sender, EventArrivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventArrivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventArrivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventArrivedEventHandler(sender As Object, e As EventArrivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventArrivedEventHandler(System::Object ^ sender, EventArrivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventArrivedEventHandler = delegate of obj * EventArrivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Management.EventArrivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">要为其调用此方法的对象的实例。</param>
    <param name="e"><see cref="T:System.Management.EventArrivedEventArgs" />，指定调用事件的原因。</param>
    <summary>表示用来处理 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下异步示例设置一个 WMI 计时器以每秒引发一个事件，并将其不再需要时删除。 <xref:System.Management.ManagementEventWatcher>定义了多个[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]提交 WMI 事件时引发的事件。 委托被附加到这些事件，以处理传入的数据。  
  
 [!code-csharp[wminet_EventArrivedEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/cs/EventArrivedEventHandler.cs#1)]
 [!code-vb[wminet_EventArrivedEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/vb/EventArrivedEventHandler.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>