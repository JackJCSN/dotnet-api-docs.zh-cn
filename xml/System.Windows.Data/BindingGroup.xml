<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="620aae8c2d7ce9f1a1ba9c6bdc442323dfc2e618" /><Meta Name="ms.sourcegitcommit" Value="bfce49b3a0c0685f994313d2e44a7c70def1694a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/05/2019" /><Meta Name="ms.locfileid" Value="66690864" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c8073-101">包含绑定集合和用于验证对象的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-102">一个<xref:System.Windows.Data.BindingGroup>创建多个绑定，其中可以验证和一起更新之间的关系。</span><span class="sxs-lookup"><span data-stu-id="c8073-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="c8073-103">例如，假设应用程序会提示用户输入的地址。</span><span class="sxs-lookup"><span data-stu-id="c8073-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="c8073-104">然后，应用程序填充类型的对象`Address`，其中包含属性， `Street`， `City`， `ZipCode`，和`Country`，用户提供的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="c8073-105">应用程序必须包含四个面板<xref:System.Windows.Controls.TextBox>控件，其中每个被数据绑定到对象的属性之一。</span><span class="sxs-lookup"><span data-stu-id="c8073-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object's properties.</span></span> <span data-ttu-id="c8073-106">可以使用<xref:System.Windows.Controls.ValidationRule>中<xref:System.Windows.Data.BindingGroup>验证`Address`对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="c8073-107">如果绑定参与相同<xref:System.Windows.Data.BindingGroup>，你可以确保 zip 代码是有效的国家/地区/区域的地址。</span><span class="sxs-lookup"><span data-stu-id="c8073-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country/region of the address.</span></span>  
  
 <span data-ttu-id="c8073-108">您设置<xref:System.Windows.FrameworkElement.BindingGroup%2A>上的属性<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>。</span><span class="sxs-lookup"><span data-stu-id="c8073-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="c8073-109">子元素继承<xref:System.Windows.Data.BindingGroup>从其父元素，就像使用任何其他可继承属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="c8073-110">上一个子代元素的绑定添加到<xref:System.Windows.Data.BindingGroup>如果发生以下情况之一：</span><span class="sxs-lookup"><span data-stu-id="c8073-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="c8073-111">绑定的源和<xref:System.Windows.FrameworkElement.DataContext%2A>具有的元素的<xref:System.Windows.Data.BindingGroup>是相同的对象和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="c8073-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>绑定的属性是否等于<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>，它们不显式设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="c8073-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="c8073-113">在地址的示例中，假设<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Controls.Panel>设置为类型的对象`Address`。</span><span class="sxs-lookup"><span data-stu-id="c8073-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="c8073-114">每个绑定<xref:System.Windows.Controls.TextBox>添加到<xref:System.Windows.Data.BindingGroup>的面板。</span><span class="sxs-lookup"><span data-stu-id="c8073-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="c8073-115">您将添加<xref:System.Windows.Controls.ValidationRule>对象添加到<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c8073-116"><xref:System.Windows.Data.BindingGroup>作为第一个参数传递<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法时<xref:System.Windows.Controls.ValidationRule>运行。</span><span class="sxs-lookup"><span data-stu-id="c8073-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="c8073-117">可以使用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>上的方法<xref:System.Windows.Data.BindingGroup>若要获取该对象的建议的值和<xref:System.Windows.Data.BindingGroup.Items%2A>属性获取绑定的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="c8073-118">一个<xref:System.Windows.Data.BindingGroup>更新而不是单独更新每个绑定同时绑定的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="c8073-119">当您调用一种方法来验证数据 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>， <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>，或<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)，每个绑定<xref:System.Windows.Controls.TextBox>中验证并可能会更新该示例。</span><span class="sxs-lookup"><span data-stu-id="c8073-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="c8073-120">当一个绑定是的一部分<xref:System.Windows.Data.BindingGroup>，直到您调用不会更新绑定的源<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>或<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>上<xref:System.Windows.Data.BindingGroup>，除非显式设置<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-121">下面的示例创建的应用程序会提示用户输入的说明和商品的价格和优惠截止日期的日期。</span><span class="sxs-lookup"><span data-stu-id="c8073-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="c8073-122">应用程序显示窗体下的项的当前的信息。</span><span class="sxs-lookup"><span data-stu-id="c8073-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="c8073-123">用户可以提交或取消所做的更改。</span><span class="sxs-lookup"><span data-stu-id="c8073-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="c8073-124">应用程序执行以下操作来实现此行为。</span><span class="sxs-lookup"><span data-stu-id="c8073-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="c8073-125">创建<xref:System.Windows.Data.BindingGroup>并将其添加根<xref:System.Windows.Controls.StackPanel>在创建时[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c8073-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="c8073-126">调用<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>， <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>，和<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>中应用程序的逻辑，以便回滚更改。</span><span class="sxs-lookup"><span data-stu-id="c8073-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="c8073-127">调用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>在<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法以获取用户的输入，然后检查超过 100 美元的项是否可用时间至少为七天。</span><span class="sxs-lookup"><span data-stu-id="c8073-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="c8073-128">下面的示例创建[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c8073-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="c8073-129">根<xref:System.Windows.Controls.StackPanel>已<xref:System.Windows.Data.BindingGroup>，其中包含<xref:System.Windows.Controls.ValidationRule>来验证该项目，如前面所述。</span><span class="sxs-lookup"><span data-stu-id="c8073-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="c8073-130">上的绑定对象`Price`属性和`OfferExpires`的属性会变得一部分<xref:System.Windows.Data.BindingGroup>和每个绑定都具有<xref:System.Windows.Controls.ValidationRule>以确保价格和日期，分别是有效的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="c8073-131">各个属性的验证规则之前运行<xref:System.Windows.Controls.ValidationRule>上<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="c8073-132">下面的示例显示了应用程序的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c8073-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="c8073-133">当用户单击提交按钮时，在应用程序调用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>若要运行每个<xref:System.Windows.Controls.ValidationRule>相关联<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c8073-134">如果每个<xref:System.Windows.Controls.ValidationRule>成功，<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>将值保存到该对象并结束编辑事务。</span><span class="sxs-lookup"><span data-stu-id="c8073-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="c8073-135">如果<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>是成功，应用程序开始另一个编辑事务。</span><span class="sxs-lookup"><span data-stu-id="c8073-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="c8073-136">当<xref:System.Windows.Controls.ValidationRule>失败，请<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件的原因的应用程序设置<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>到`true`上<xref:System.Windows.Data.BindingGroup>（在前面的示例）。</span><span class="sxs-lookup"><span data-stu-id="c8073-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="c8073-137">`ItemError` 句柄<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件，并显示有关用户的验证错误的信息。</span><span class="sxs-lookup"><span data-stu-id="c8073-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="c8073-138">该示例还处理<xref:System.Windows.FrameworkElement.Loaded>事件<xref:System.Windows.Controls.StackPanel>并<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件**取消**按钮。</span><span class="sxs-lookup"><span data-stu-id="c8073-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="c8073-139">下面的示例演示了自定义<xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`，它被添加到<xref:System.Windows.Data.BindingGroup>中第一个示例。</span><span class="sxs-lookup"><span data-stu-id="c8073-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="c8073-140"><xref:System.Windows.Controls.ValidationRule>使用<xref:System.Windows.Data.BindingGroup>在其<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法来获取用户输入到窗体，并检查某个项是否超过 100 美元，是否将时间至少为七天的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-141">初始化 <see cref="T:System.Windows.Data.BindingGroup" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8073-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-142">开始 <see cref="T:System.Windows.Data.BindingGroup" /> 中源上的编辑事务。</span><span class="sxs-lookup"><span data-stu-id="c8073-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-143">如果在源<xref:System.Windows.Data.BindingGroup>支持放弃挂起的更改，您可以调用<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>若要开始编辑事务，请调用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>若要保存挂起的更改，请调用<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>放弃挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="c8073-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="c8073-144">中每个对象<xref:System.Windows.Data.BindingGroup.Items%2A>，它实现<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>调用 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c8073-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-145">下面的示例调用<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>窗口加载时若要开始编辑事务。</span><span class="sxs-lookup"><span data-stu-id="c8073-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-146">获取 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合，其中包含有关 <see cref="T:System.Windows.Data.BindingGroup" /> 中每个绑定的信息。</span><span class="sxs-lookup"><span data-stu-id="c8073-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="c8073-147">一个 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合，其中包含有关 <see cref="T:System.Windows.Data.BindingGroup" /> 中每个绑定的信息。</span><span class="sxs-lookup"><span data-stu-id="c8073-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-148">一个<xref:System.Windows.Data.BindingExpression>属于<xref:System.Windows.Data.BindingGroup>如果发生以下情况之一：</span><span class="sxs-lookup"><span data-stu-id="c8073-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="c8073-149">绑定的源和<xref:System.Windows.FrameworkElement.DataContext%2A>具有的元素的<xref:System.Windows.Data.BindingGroup>是相同的对象和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未设置。</span><span class="sxs-lookup"><span data-stu-id="c8073-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="c8073-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>绑定的属性和<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>设置为相同的非 null 值和<xref:System.Windows.Data.BindingGroup>所属的父元素的绑定的目标元素。</span><span class="sxs-lookup"><span data-stu-id="c8073-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="c8073-151">您将添加<xref:System.Windows.Data.BindingExpression>到<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>。</span><span class="sxs-lookup"><span data-stu-id="c8073-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-152">结束编辑事务并放弃挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="c8073-152">Ends the edit transaction and discards the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-153">此方法会导致放弃挂起的更改，如果源对象是能够执行此操作并结束编辑事务的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="c8073-154">然后该方法使用已保存的源值更新目标属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="c8073-155">中每个对象<xref:System.Windows.Data.BindingGroup.Items%2A>，它实现<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>调用 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c8073-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-156">下面的示例调用<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>放弃挂起的更改，然后调用<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>来准备要重新编辑的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-157">获取绑定中的每个源是否都可以放弃挂起的更改并还原原始值。</span><span class="sxs-lookup"><span data-stu-id="c8073-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span></span></summary>
        <value><span data-ttu-id="c8073-158">如果绑定中的每个源都可以放弃挂起的更改并还原原始值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-158"><see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-159">源可以放弃挂起的更改，如果它实现了<xref:System.ComponentModel.IEditableObject>。</span><span class="sxs-lookup"><span data-stu-id="c8073-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-160">运行所有 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，并且在所有验证规则都成功时，更新绑定源。</span><span class="sxs-lookup"><span data-stu-id="c8073-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="c8073-161">如果每个 <see cref="T:System.Windows.Controls.ValidationRule" /> 都成功且将值提交到了源，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-161"><see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-162">如果每个<xref:System.Windows.Controls.ValidationRule>成功，此方法将导致源提交挂起的更改并结束编辑事务，如果源对象是能够执行此操作。</span><span class="sxs-lookup"><span data-stu-id="c8073-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="c8073-163">中每个对象<xref:System.Windows.Data.BindingGroup.Items%2A>，它实现<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>调用 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c8073-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-164">下面的示例调用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>以保存挂起的更改，然后调用<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>来准备要重新编辑的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c8073-165">包含指定属性的对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-165">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c8073-166">要获取其建议值的属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-166">The property whose proposed value to get.</span></span></param>
        <summary><span data-ttu-id="c8073-167">返回指定的属性和项的建议值。</span><span class="sxs-lookup"><span data-stu-id="c8073-167">Returns the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="c8073-168">建议的属性值。</span><span class="sxs-lookup"><span data-stu-id="c8073-168">The proposed property value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-169">使用此方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>方法以获取要提交到源的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="c8073-170">返回值的类型取决于在该阶段<xref:System.Windows.Controls.ValidationRule>时发生。</span><span class="sxs-lookup"><span data-stu-id="c8073-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="c8073-171">例如，如果<xref:System.Windows.Controls.TextBox>数据绑定到整数类型的属性和<xref:System.Windows.Controls.ValidationRule>的调用<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>设置为<xref:System.Windows.Controls.ValidationStep.RawProposedValue>，该方法返回一个字符串。</span><span class="sxs-lookup"><span data-stu-id="c8073-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="c8073-172">如果<xref:System.Windows.Controls.ValidationRule>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>设置为<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>，该方法返回绑定的转换器返回任何类型。</span><span class="sxs-lookup"><span data-stu-id="c8073-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="c8073-173">在此示例中，<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>通常返回一个整数。</span><span class="sxs-lookup"><span data-stu-id="c8073-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-174">下面的示例是提示用户输入多个客户，并将销售代表分配给每个客户的应用程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="c8073-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="c8073-175">应用程序将检查销售代表和客户属于同一区域。</span><span class="sxs-lookup"><span data-stu-id="c8073-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="c8073-176">示例所示<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，它使用<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法以获取客户输入的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8073-177">指定项和属性之间没有绑定。</span><span class="sxs-lookup"><span data-stu-id="c8073-177">There is not a binding for the specified item and property.</span></span></exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException"><span data-ttu-id="c8073-178">由于转换错误或早期验证规则失败，指定的属性值不可用。</span><span class="sxs-lookup"><span data-stu-id="c8073-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-179">获取一个值，该值指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否具有一个失败的验证规则。</span><span class="sxs-lookup"><span data-stu-id="c8073-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span></span></summary>
        <value><span data-ttu-id="c8073-180">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 具有一个失败的验证规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-180"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-181">获取或设置指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否包含尚未写入到源中的建议值的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span></span></summary>
        <value><span data-ttu-id="c8073-182">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 包含尚未写入到源的建议值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-182"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-183">获取 <see cref="T:System.Windows.Data.BindingGroup" /> 中的绑定对象所使用的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="c8073-184"><see cref="T:System.Windows.Data.BindingGroup" /> 中的绑定对象所使用的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-185">用作源添加到每个对象<xref:System.Windows.Data.BindingGroup.Items%2A>属性一次，即使该对象用作多个绑定源。</span><span class="sxs-lookup"><span data-stu-id="c8073-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="c8073-186">通常情况下，没有中的只有一项<xref:System.Windows.Data.BindingGroup.Items%2A>，这是对象，并且<xref:System.Windows.FrameworkElement.DataContext%2A>使用的元素的<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="c8073-187">很可能<xref:System.Windows.Data.BindingGroup>但是具有多个源。</span><span class="sxs-lookup"><span data-stu-id="c8073-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="c8073-188">例如，如果绑定对象共用同一个<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>但使用不同的源对象，作为源使用每个对象都在<xref:System.Windows.Data.BindingGroup.Items%2A>。</span><span class="sxs-lookup"><span data-stu-id="c8073-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="c8073-189">也可以在多个对象<xref:System.Windows.Data.BindingGroup.Items%2A>的绑定路径解析为的嵌套属性的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="c8073-190">例如，假设<xref:System.Windows.Controls.TextBox>控件的绑定是一部分<xref:System.Windows.Data.BindingGroup>并将其<xref:System.Windows.FrameworkElement.DataContext%2A>是`Customer`对象，该类型的属性对象`Address`。</span><span class="sxs-lookup"><span data-stu-id="c8073-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="c8073-191">如果<xref:System.Windows.Data.Binding.Path%2A>的<xref:System.Windows.Data.Binding>是`Address.ZipCode`属性，`Address`添加到<xref:System.Windows.Data.BindingGroup.Items%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-192">下面的示例是检查用户是否已设置为相等的值的两个对象的属性的应用程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="c8073-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="c8073-193">第一个示例创建两个<xref:System.Windows.Controls.TextBox>控件，其中每个都是数据绑定到不同的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="c8073-194">第一个绑定<xref:System.Windows.Controls.TextBox>获取其源`object1`，从<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Controls.TextBox>控件的父元素 ( <xref:System.Windows.Controls.StackPanel>)。</span><span class="sxs-lookup"><span data-stu-id="c8073-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="c8073-195">在第二个<xref:System.Windows.Controls.TextBox>，绑定的源设置为`object2`。</span><span class="sxs-lookup"><span data-stu-id="c8073-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="c8073-196">此示例还创建<xref:System.Windows.Controls.Label>显示验证错误。</span><span class="sxs-lookup"><span data-stu-id="c8073-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="c8073-197">下面的示例演示<xref:System.Windows.Controls.ValidationRule>的上一个示例使用。</span><span class="sxs-lookup"><span data-stu-id="c8073-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="c8073-198">在中<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此示例获取的每个源对象<xref:System.Windows.Data.BindingGroup>，并检查是否相等的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-199">获取或设置标识 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称，该名称可用于在 <see cref="T:System.Windows.Data.BindingGroup" /> 中包括和排除绑定对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="c8073-200">标识 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="c8073-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-201">如果<xref:System.Windows.Data.BindingGroup.Name%2A>是`null`，这些绑定具有与相同的对象的源<xref:System.Windows.FrameworkElement.DataContext%2A>具有的元素的<xref:System.Windows.Data.BindingGroup>参与<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="c8073-202">可以包含具有不同的源的绑定<xref:System.Windows.FrameworkElement.DataContext%2A>具有的父元素的<xref:System.Windows.Data.BindingGroup>通过设置<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>属性绑定到相同的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="c8073-203">您可以排除具有相同的源的绑定<xref:System.Windows.FrameworkElement.DataContext%2A>具有的父元素的<xref:System.Windows.Data.BindingGroup>通过设置<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>属性绑定到不同的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-204">下面的示例是检查用户是否已设置为相等的值的两个对象的属性的应用程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="c8073-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="c8073-205">第一个示例创建两个<xref:System.Windows.Controls.TextBox>控件，其中每个都是数据绑定到不同的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="c8073-206">第一个绑定<xref:System.Windows.Controls.TextBox>属于<xref:System.Windows.Data.BindingGroup>因为<xref:System.Windows.Controls.TextBox>继承<xref:System.Windows.FrameworkElement.DataContext%2A>并<xref:System.Windows.Data.BindingGroup>从其父<xref:System.Windows.Controls.StackPanel>。</span><span class="sxs-lookup"><span data-stu-id="c8073-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="c8073-207">在第二个绑定<xref:System.Windows.Controls.TextBox>属于<xref:System.Windows.Data.BindingGroup>因为<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>并<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>的<xref:System.Windows.Data.Binding>均设置为`bindingGroup`。</span><span class="sxs-lookup"><span data-stu-id="c8073-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="c8073-208">下面的示例演示<xref:System.Windows.Controls.ValidationRule>的上一个示例使用。</span><span class="sxs-lookup"><span data-stu-id="c8073-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="c8073-209">在中<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此示例获取的每个源对象<xref:System.Windows.Data.BindingGroup>，并检查是否相等的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-210">获取或设置在 <see cref="E:System.Windows.Controls.Validation.Error" /> 的状态更改时是否发生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="c8073-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span></span></summary>
        <value><span data-ttu-id="c8073-211">如果在 <see cref="E:System.Windows.Controls.Validation.Error" /> 的状态更改时发生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-211"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8073-212">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-212">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加的事件具有的元素上发生<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-214">下面的示例创建<xref:System.Windows.Data.BindingGroup>，并设置<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>到`true`，以便应用程序可以处理<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件时<xref:System.Windows.Controls.ValidationRule>失败。</span><span class="sxs-lookup"><span data-stu-id="c8073-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="c8073-215">下面的示例处理<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="c8073-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-216">获取 <see cref="T:System.Windows.Data.BindingGroup" /> 分配到的对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></summary>
        <value><span data-ttu-id="c8073-217"><see cref="T:System.Windows.Data.BindingGroup" /> 分配给的对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-218">获取或设置一个值，该值指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否重新使用尚未提交到源的目标值。</span><span class="sxs-lookup"><span data-stu-id="c8073-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span></span></summary>
        <value><span data-ttu-id="c8073-219">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 重新使用尚未提交到源的目标值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-219"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8073-220">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-220">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-221">建议的值是一个值，一个绑定，在目标上已更改但尚未提交到源。</span><span class="sxs-lookup"><span data-stu-id="c8073-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="c8073-222">例如，假设上是一个双向绑定<xref:System.Windows.Controls.TextBox>并<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>属性设置为<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>。</span><span class="sxs-lookup"><span data-stu-id="c8073-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="c8073-223">如果用户更改的值<xref:System.Windows.Controls.TextBox>，建议的值是设置为在<xref:System.Windows.Controls.TextBox>才会提交到源。</span><span class="sxs-lookup"><span data-stu-id="c8073-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="c8073-224">当<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>是`true`，则<xref:System.Windows.Data.BindingGroup>绑定会使 BindingGroup，并使用同一个源的另一个绑定加入 BindingGroup 时使用的建议的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="c8073-225">例如，假设应用程序使用户能够编辑多个字段，并通过单击一个按钮更新的源对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="c8073-226">如果未正在编辑字段，应用程序将显示在<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="c8073-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c8073-227">当用户开始编辑字段时，应用程序将替换<xref:System.Windows.Controls.TextBlock>与<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c8073-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="c8073-228">应用程序在用户完成字段编辑时，将替换<xref:System.Windows.Controls.TextBox>与<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="c8073-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c8073-229">用户单击按钮前，不会更新源，因为必须有一种方法<xref:System.Windows.Controls.TextBlock>显示建议的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="c8073-230">通过设置<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>到`true`，则应用程序将对字段显示用户的更改，即使尚未更新源。</span><span class="sxs-lookup"><span data-stu-id="c8073-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c8073-231">包含指定属性的对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-231">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c8073-232">要获取其建议值的属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-232">The property whose proposed value to get.</span></span></param>
        <param name="value"><span data-ttu-id="c8073-233">此方法在返回时包含一个表示建议的属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-233">When this method returns, contains an object that represents the proposed property value.</span></span> <span data-ttu-id="c8073-234">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="c8073-234">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c8073-235">尝试获取指定属性和项的建议值。</span><span class="sxs-lookup"><span data-stu-id="c8073-235">Attempts to get the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="c8073-236">如果值为指定属性的建议值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-236"><see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 返回`false`如果不存在指定的项和属性的绑定或如果指定属性的值不可用，因为转换错误或由于早期验证规则失败。</span><span class="sxs-lookup"><span data-stu-id="c8073-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="c8073-238">使用此方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>方法以获取要提交到源的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="c8073-239">类型`value`取决于在该阶段<xref:System.Windows.Controls.ValidationRule>时发生。</span><span class="sxs-lookup"><span data-stu-id="c8073-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="c8073-240">例如，如果<xref:System.Windows.Controls.TextBox>被数据绑定到整数类型，属性`value`是一个字符串，如果<xref:System.Windows.Controls.ValidationRule>的调用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>设置为<xref:System.Windows.Controls.ValidationStep.RawProposedValue>。</span><span class="sxs-lookup"><span data-stu-id="c8073-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="c8073-241">如果<xref:System.Windows.Controls.ValidationRule>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>设置为<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>的类型`value`是任何返回的绑定的转换器的类型。</span><span class="sxs-lookup"><span data-stu-id="c8073-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="c8073-242">在此示例中，`value`通常是一个整数。</span><span class="sxs-lookup"><span data-stu-id="c8073-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-243">下面的示例创建一个自定义<xref:System.Windows.Controls.ValidationRule>名为`ValidateDateAndPrice`。</span><span class="sxs-lookup"><span data-stu-id="c8073-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="c8073-244">在中<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，该示例使用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>方法和<xref:System.Windows.Data.BindingGroup.Items%2A>属性来获取用户在窗体中输入的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="c8073-245">然后该示例检查某个项是否超过 100 美元，是否将时间至少为七天。</span><span class="sxs-lookup"><span data-stu-id="c8073-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="c8073-246">此示例摘自一个更大示例上<xref:System.Windows.Data.BindingGroup>类</span><span class="sxs-lookup"><span data-stu-id="c8073-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-247">如果所有验证规则都成功，则对绑定和将 <see cref="T:System.Windows.Controls.ValidationRule" /> 属性设置为 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 对象运行转换器，并将目标值保存到源对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="c8073-248">如果所有验证规则都成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-248"><see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-249">此方法更新源，如果每个<xref:System.Windows.Controls.ValidationRule>成功，但它不会导致挂起的更改提交并结束编辑事务的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="c8073-250">也就是说，如果源对象实现<xref:System.ComponentModel.IEditableObject>。</span><span class="sxs-lookup"><span data-stu-id="c8073-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="c8073-251">调用此方法不会导致<xref:System.ComponentModel.IEditableObject.EndEdit%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="c8073-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="c8073-252">使用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>方法，以使提交挂起的更改的源。</span><span class="sxs-lookup"><span data-stu-id="c8073-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-253">下面的示例是提示用户输入多个客户，并将销售代表分配给每个客户的应用程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="c8073-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="c8073-254">应用程序将检查销售代表和客户属于同一区域。</span><span class="sxs-lookup"><span data-stu-id="c8073-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="c8073-255">此示例调用<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>验证绑定并将值保存到源，如果所有验证规则都成功。</span><span class="sxs-lookup"><span data-stu-id="c8073-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-256">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="c8073-257">如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-257"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8073-258">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-259">当<xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A>是`true`，该绑定检查并报告的实现的数据源引发的错误<xref:System.ComponentModel.INotifyDataErrorInfo>。</span><span class="sxs-lookup"><span data-stu-id="c8073-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8073-260">对绑定和将 <see cref="T:System.Windows.Controls.ValidationRule" /> 属性设置为 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 对象运行转换器。</span><span class="sxs-lookup"><span data-stu-id="c8073-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span></span></summary>
        <returns><span data-ttu-id="c8073-261">如果验证规则成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-261"><see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-262">调用此方法时，不会更新源。</span><span class="sxs-lookup"><span data-stu-id="c8073-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-263">获取促使 <see cref="T:System.Windows.Controls.ValidationError" /> 有效的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c8073-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span></summary>
        <value><span data-ttu-id="c8073-264">导致 <see cref="T:System.Windows.Controls.ValidationError" /> 无效的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c8073-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span>  <span data-ttu-id="c8073-265">如果没有错误，此值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8073-265">The value is <see langword="null" /> if there are no errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8073-266">获取 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合，这些对象验证 <see cref="T:System.Windows.Data.BindingGroup" /> 中的源对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="c8073-267"><see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合，这些对象验证 <see cref="T:System.Windows.Data.BindingGroup" /> 中的源对象。</span><span class="sxs-lookup"><span data-stu-id="c8073-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8073-268">当<xref:System.Windows.Controls.ValidationRule>添加到<xref:System.Windows.Data.BindingGroup>，则<xref:System.Windows.Data.BindingGroup>作为第一个参数传入<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c8073-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="c8073-269">可以通过获取该对象的建议的值<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c8073-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="c8073-270">可以获取来自绑定的源的对象<xref:System.Windows.Data.BindingGroup.Items%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c8073-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8073-271">下面的示例添加自定义<xref:System.Windows.Controls.ValidationRule>，`ValidateDateAndPrice`到<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="c8073-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="c8073-272">下面的示例展示了 `ValidateDateAndPrice` 类。</span><span class="sxs-lookup"><span data-stu-id="c8073-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="c8073-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A>方法使用<xref:System.Windows.Data.BindingGroup>获取用户输入到窗体，并检查某个项是否超过 100 美元，是否将时间至少为七天的值。</span><span class="sxs-lookup"><span data-stu-id="c8073-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>