<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a521fc9204f864cbb3318ee7f337418190d31deb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69085528" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsIdentity : System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClaimsIdentity = class&#xA;    interface IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ab0fe-101">表示基于声明的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-101">Represents a claims-based identity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-102"><xref:System.Security.Claims.ClaimsIdentity>类是基于声明的标识的具体实现; 即, 声明集合描述的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-102">The <xref:System.Security.Claims.ClaimsIdentity> class is a concrete implementation of a claims-based identity; that is, an identity described by a collection of claims.</span></span> <span data-ttu-id="ab0fe-103">声明是有关由颁发者创建的实体的声明, 该实体描述了该实体的属性、权限或其他质量。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-103">A claim is a statement about an entity made by an issuer that describes a property, right, or some other quality of that entity.</span></span> <span data-ttu-id="ab0fe-104">此类实体称为声明的使用者。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-104">Such an entity is said to be the subject of the claim.</span></span> <span data-ttu-id="ab0fe-105">声明由<xref:System.Security.Claims.Claim>类表示。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-105">A claim is represented by the <xref:System.Security.Claims.Claim> class.</span></span> <span data-ttu-id="ab0fe-106">中包含的声明<xref:System.Security.Claims.ClaimsIdentity>描述对应标识表示的实体, 并可用于做出授权和身份验证决定。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-106">The claims contained in a <xref:System.Security.Claims.ClaimsIdentity> describe the entity that the corresponding identity represents, and can be used to make authorization and authentication decisions.</span></span> <span data-ttu-id="ab0fe-107">基于声明的访问模型具有比专用于角色的更传统访问模型更多的优势。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-107">A claims-based access model has many advantages over more traditional access models that rely exclusively on roles.</span></span> <span data-ttu-id="ab0fe-108">例如, 声明可以提供有关其所表示的标识的更丰富的信息, 并且可以通过更具体的方式评估授权或身份验证。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-108">For example, claims can provide much richer information about the identity they represent and can be evaluated for authorization or authentication in a far more specific manner.</span></span>  
  
 <span data-ttu-id="ab0fe-109">从 .NET Framework 4.5 开始, Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到 .NET Framework 中。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-109">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="ab0fe-110">这意味着, 在 .NET Framework 中表示标识的许多类现在派生自<xref:System.Security.Claims.ClaimsIdentity> , 并通过声明的集合描述其属性。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-110">This means that many classes that represent an identity in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsIdentity> and describe their properties through a collection of claims.</span></span> <span data-ttu-id="ab0fe-111">这不同于以前版本的 .NET Framework, 在这种情况下, 这些类直接<xref:System.Security.Principal.IIdentity>实现接口。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-111">This is different from previous versions of the .NET Framework, in which, these classes implemented the <xref:System.Security.Principal.IIdentity> interface directly.</span></span> <span data-ttu-id="ab0fe-112">描述标识的声明集合可通过<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>属性进行访问。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-112">The collection of claims that describe the identity can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> property.</span></span> <span data-ttu-id="ab0fe-113"><xref:System.Security.Claims.ClaimsIdentity>类提供多种方法用于查找和修改声明, 并完全支持语言集成查询 (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-113">The <xref:System.Security.Claims.ClaimsIdentity> class provides several methods for finding and modifying claims and fully supports language integrated queries (LINQ).</span></span> <span data-ttu-id="ab0fe-114">在应用程序代码<xref:System.Security.Claims.ClaimsIdentity>中, 通常通过<xref:System.Security.Claims.ClaimsPrincipal>对象 (例如返回的主体<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>) 访问对象。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-114">In application code, <xref:System.Security.Claims.ClaimsIdentity> objects are typically accessed through <xref:System.Security.Claims.ClaimsPrincipal> objects; for example, the principal returned by <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab0fe-115"><xref:System.Security.Claims.ClaimsPrincipal>类还<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>具有属性。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-115">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="ab0fe-116">在大多数情况下, 你应该通过<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不是<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>通过集合来访问用户的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-116">In the majority of cases you should access the user's claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="ab0fe-117">仅当主体包含多<xref:System.Security.Claims.ClaimsIdentity> <xref:System.Security.Claims.ClaimsIdentity>个, 并且需要评估或修改特定标识时, 才需要访问单个的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-117">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ab0fe-118">若要在<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中添加或删除声明, 调用方必须具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-118">To add or remove claims from the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="ab0fe-119">在基于声明的模型中, <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>通过计算标识中包含的声明来实现属性<xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>和方法。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-119">In the claims-based model, the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method are implemented by evaluating the claims contained by an identity.</span></span> <span data-ttu-id="ab0fe-120">基于声明的模型中的基本实现由<xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType>属性<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType>和方法提供。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-120">The base implementations in the claims-based model are provided by the <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> property and the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ab0fe-121">使用<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> 和<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>属性可以指定在执行这些操作时应该用于评估标识所包含的声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-121">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> properties enable you to specify a claim type that should be used to evaluate the claims contained by the identity when performing these operations.</span></span>  
  
 <span data-ttu-id="ab0fe-122">委托方案通过<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>和<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性进行支持。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-122">Delegation scenarios are supported through the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> and <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> properties.</span></span>

          ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsPrincipal" />
    <altmember cref="T:System.Security.Principal.GenericIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Web.Security.FormsIdentity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab0fe-123">初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-123">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab0fe-124">用空声称集合初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-124">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-125">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-125">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-126">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-126">Property</span></span>|<span data-ttu-id="ab0fe-127">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-128">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-128">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-129">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-129">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-130">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-130">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-131">空集合。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-131">A empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-132">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-132">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-133">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-133">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-134">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-134">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-135"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-136"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity claims" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="ab0fe-137">传播声明标识的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-137">The claims with which to populate the claims identity.</span></span></param>
        <summary><span data-ttu-id="ab0fe-138">使用枚举集合 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 对象的初始化 <see cref="T:System.Security.Claims.Claim" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-138">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using an enumerated collection of <see cref="T:System.Security.Claims.Claim" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-139">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-139">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-140">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-140">Property</span></span>|<span data-ttu-id="ab0fe-141">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-141">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-142">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-142">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-143">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-143">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-144">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-144">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-145">从`claims`参数初始化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-145">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-146">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-146">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-147">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-147">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-148">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-148">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-149"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-150"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ab0fe-151">指向 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的 <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-151">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="ab0fe-152">用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-152">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsIdentity" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-153">通常, 读取器将从从返回<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>的字节构造。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-153">Normally, the reader is constructed from the bytes returned from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-154"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-154"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity info" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ab0fe-155">序列化的数据。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-155">The serialized data.</span></span></param>
        <summary><span data-ttu-id="ab0fe-156">初始化从使用 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span><span class="sxs-lookup"><span data-stu-id="ab0fe-156">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-157">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-157">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-158">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-159"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-159"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Security::Claims::ClaimsIdentity ^ other);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Claims.ClaimsIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ab0fe-160">要复制的 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-160">The <see cref="T:System.Security.Claims.ClaimsIdentity" /> to copy.</span></span></param>
        <summary><span data-ttu-id="ab0fe-161">从现有 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 实例初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-161">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from an existing <see cref="T:System.Security.Claims.ClaimsIdentity" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-162">下表显示了<xref:System.Security.Claims.ClaimsIdentity>类的实例<xref:System.Security.Claims.ClaimsIdentity>从提供给构造函数的属性值赋值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-162">The following table shows the property value assignments for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class from the <xref:System.Security.Claims.ClaimsIdentity> provided to the constructor.</span></span>  
  
| <span data-ttu-id="ab0fe-163">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-163">Property</span></span> | <span data-ttu-id="ab0fe-164">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-164">Value</span></span> |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-165">如果`other.Actor`属性的值不`null`为, `other.Actor` <xref:System.Security.Claims.ClaimsIdentity>则克隆并分配, 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-165">If the value of the `other.Actor` property isn't `null`, the `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> is cloned and assigned; otherwise, `null`.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-166">`other.AuthenticationType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-166">The value of the `other.AuthenticationType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-167">`other.BootstrapContext` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-167">The value of the `other.BootstrapContext` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-168">属性中`other.Claims`声明的 ( `List<Claim>`如果有)。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-168">The `List<Claim>` of claims, if any, in the `other.Claims` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-169">`other.Label` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-169">The value of the `other.Label` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-170">`other.NameClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-170">The value of the `other.NameClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-171">`other.RoleClaimType` 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-171">The value of the `other.RoleClaimType` property.</span></span>|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|<span data-ttu-id="ab0fe-172">如果`other.CustomSerializationData`不`null`是,`other.CustomSerializationData`则克隆并分配; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-172">If `other.CustomSerializationData` isn't `null`, `other.CustomSerializationData` is cloned and assigned; otherwise, `null`.</span></span>|

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-173"><paramref name="other" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-173"><paramref name="other" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="ab0fe-174">新声明标识所基于的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-174">The identity from which to base the new claims identity.</span></span></param>
        <summary><span data-ttu-id="ab0fe-175">初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例，该类表示具有指定的 <see cref="T:System.Security.Principal.IIdentity" /> 用户。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-175">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the name and authentication type from the specified <see cref="T:System.Security.Principal.IIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-176">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-176">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-177">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-177">Property</span></span>|<span data-ttu-id="ab0fe-178">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-178">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-179">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Actor` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-179">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-180">使用`identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-180">The value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-181">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.BootStrapContext` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-181">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-182">如果`identity`是从中<xref:System.Security.Claims.ClaimsIdentity>分配的, 则`identity`中的声明将添加到新实例; 否则为空集合。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-182">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance; otherwise, an empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-183">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-183">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-184">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Label` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-184">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-185">如果`identity`不是从<xref:System.Security.Claims.ClaimsIdentity>中赋值, 则`null` <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>不是, 并且具有不`null`为的属性; 名称声明将使用<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性的值添加到新实例中。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-185">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ab0fe-186">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-186">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-187">如果`identity`可从中<xref:System.Security.Claims.ClaimsIdentity>赋值`identity.NameClaimType` , 则使用属性的值; 否则<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-187">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-188">如果`identity`可从中<xref:System.Security.Claims.ClaimsIdentity>赋值`identity.RoleClaimType` , 则使用属性的值; 否则<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-188">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity authenticationType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType"><span data-ttu-id="ab0fe-189">所使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-189">The type of authentication used.</span></span></param>
        <summary><span data-ttu-id="ab0fe-190">用空的声明集合和指定的身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-190">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with an empty claims collection and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-191">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-191">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-192">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-192">Property</span></span>|<span data-ttu-id="ab0fe-193">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-193">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-194">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-194">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-195">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-195">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-196">如果参数为`null`或空字符串, 则将属性设置为`null`。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-196">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-197">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-197">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-198">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-198">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-199">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-199">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-200">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-200">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-201">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-201">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-202"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-203"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-203"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="ab0fe-204">传播声明标识的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-204">The claims with which to populate the claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="ab0fe-205">所使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-205">The type of authentication used.</span></span></param>
        <summary><span data-ttu-id="ab0fe-206">用指定的声称和身份验证类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-206">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims and authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-207">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-207">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-208">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-208">Property</span></span>|<span data-ttu-id="ab0fe-209">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-209">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-210">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-210">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-211">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-211">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-212">如果参数为`null`或空字符串, 则将属性设置为`null`。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-212">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-213">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-213">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-214">从`claims`参数初始化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-214">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-215">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-215">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-216">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-216">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-217">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-217">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-218"><xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-219"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-219"><xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ab0fe-220">序列化的数据。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-220">The serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="ab0fe-221">序列化的上下文。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-221">The context for serialization.</span></span></param>
        <summary><span data-ttu-id="ab0fe-222">初始化从使用 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span><span class="sxs-lookup"><span data-stu-id="ab0fe-222">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-223"><paramref name="info" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-223"><paramref name="info" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-224">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-224">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-225">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-225">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="ab0fe-226">新声明标识所基于的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-226">The identity from which to base the new claims identity.</span></span></param>
        <param name="claims"><span data-ttu-id="ab0fe-227">传播声明标识的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-227">The claims with which to populate the claims identity.</span></span></param>
        <summary><span data-ttu-id="ab0fe-228">使用指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 和类型提供程序初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-228">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class using the specified claims and the specified <see cref="T:System.Security.Principal.IIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-229">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-229">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-230">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-230">Property</span></span>|<span data-ttu-id="ab0fe-231">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-231">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-232">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Actor` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-232">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-233">`authenticationType` 参数。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-233">The `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-234">如果参数为`null`或空字符串`identity.AuthenticationType` , 则使用 (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性的值。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-234">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-235">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.BootStrapContext` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-235">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-236">从`claims`参数初始化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-236">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="ab0fe-237">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>分配, 则中`identity`的声明将添加到新的实例中, 然后再`claims`由参数指定的实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-237">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-238">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-238">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-239">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Label` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-239">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-240">如果`identity`不是从<xref:System.Security.Claims.ClaimsIdentity>中赋值, 则`null` <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>不是, 并且具有不`null`为的属性; 名称声明将使用<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性的值添加到新实例中。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-240">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ab0fe-241">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-241">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-242">如果`identity`可从中<xref:System.Security.Claims.ClaimsIdentity>赋值`identity.NameClaimType` , 则使用属性的值; 否则<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-242">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-243">如果`identity`可从中<xref:System.Security.Claims.ClaimsIdentity>赋值`identity.RoleClaimType` , 则使用属性的值; 否则<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-243">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType"><span data-ttu-id="ab0fe-244">所使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-244">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="ab0fe-245">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-245">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="ab0fe-246">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-246">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="ab0fe-247">用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-247">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-248">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-248">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-249">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-249">Property</span></span>|<span data-ttu-id="ab0fe-250">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-250">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-251">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-251">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-252">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-252">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-253">如果参数为`null`或空字符串, 则将属性设置为`null`。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-253">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-254">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-254">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-255">一个空集合。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-255">An empty collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-256">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-256">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-257">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-257">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-258">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-258">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-259">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-259">The value of the `nameType` parameter.</span></span> <span data-ttu-id="ab0fe-260">如果参数为 null 或空字符串, 则将属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。 `nameType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-260">If the `nameType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-261">`roleType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-261">The value of the `roleType` parameter.</span></span> <span data-ttu-id="ab0fe-262">如果参数为 null 或空字符串, 则将属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。 `roleType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-262">If the `roleType` parameter is null or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="ab0fe-263">传播声明标识的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-263">The claims with which to populate the claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="ab0fe-264">所使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-264">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="ab0fe-265">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-265">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="ab0fe-266">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-266">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="ab0fe-267">用指定的声明、身份验证类型、名称声明类型、角色声明类型初始化 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-267">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class with the specified claims, authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-268">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-268">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-269">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-269">Property</span></span>|<span data-ttu-id="ab0fe-270">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-270">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-271">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-271">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-272">`authenticationType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-272">The value of the `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-273">如果参数为`null`或空字符串, 则将属性设置为`null`。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-273">If the `authenticationType` parameter is `null` or an empty string, the property is set to `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-274">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-274">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-275">从`claims`参数初始化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-275">Initialized from the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-276">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-276">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-277">`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-277">`null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-278">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-278">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-279">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-279">The value of the `nameType` parameter.</span></span> <span data-ttu-id="ab0fe-280">但是, 如果`nameType`参数为`null`或空字符串, 则将属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-280">However, if the `nameType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-281">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-281">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="ab0fe-282">但是, 如果`roleClaimType`参数为`null`或空字符串, 则将属性设置为<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-282">However, if the `roleClaimType` parameter is `null` or an empty string, the property is set to <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.</span></span>|

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsIdentity : System.Security.Principal.IIdentity * seq&lt;System.Security.Claims.Claim&gt; * string * string * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="new System.Security.Claims.ClaimsIdentity (identity, claims, authenticationType, nameType, roleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="ab0fe-283">新声明标识所基于的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-283">The identity from which to base the new claims identity.</span></span></param>
        <param name="claims"><span data-ttu-id="ab0fe-284">传播新声明标识的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-284">The claims with which to populate the new claims identity.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="ab0fe-285">所使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-285">The type of authentication used.</span></span></param>
        <param name="nameType"><span data-ttu-id="ab0fe-286">要用于名称声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-286">The claim type to use for name claims.</span></span></param>
        <param name="roleType"><span data-ttu-id="ab0fe-287">要用于角色声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-287">The claim type to use for role claims.</span></span></param>
        <summary><span data-ttu-id="ab0fe-288">从指定的 <see cref="T:System.Security.Claims.ClaimsIdentity" /> 用指定的声明、身份验证的类型、名称声明类型、角色声明类型来初始化 <see cref="T:System.Security.Principal.IIdentity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-288">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsIdentity" /> class from the specified <see cref="T:System.Security.Principal.IIdentity" /> using the specified claims, authentication type, name claim type, and role claim type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-289">下表显示了 <xref:System.Security.Claims.ClaimsIdentity> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-289">The following table shows initial property values for an instance of the <xref:System.Security.Claims.ClaimsIdentity> class.</span></span>  
  
|<span data-ttu-id="ab0fe-290">Property</span><span class="sxs-lookup"><span data-stu-id="ab0fe-290">Property</span></span>|<span data-ttu-id="ab0fe-291">值</span><span class="sxs-lookup"><span data-stu-id="ab0fe-291">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|<span data-ttu-id="ab0fe-292">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Actor` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-292">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Actor` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|<span data-ttu-id="ab0fe-293">`authenticationType` 参数。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-293">The `authenticationType` parameter.</span></span> <span data-ttu-id="ab0fe-294">如果参数为`null`或空字符串`identity.AuthenticationType` , 则使用 (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) 属性的值。 `authenticationType`</span><span class="sxs-lookup"><span data-stu-id="ab0fe-294">If the `authenticationType` parameter is `null` or an empty string, the value of the `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) property is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|<span data-ttu-id="ab0fe-295">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.BootStrapContext` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-295">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.BootStrapContext` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|<span data-ttu-id="ab0fe-296">从`claims`参数初始化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-296">Initialized from the `claims` parameter.</span></span> <span data-ttu-id="ab0fe-297">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>分配, 则中`identity`的声明将添加到新的实例中, 然后再`claims`由参数指定的实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-297">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the claims from `identity` are added to the new instance before those specified by the `claims` parameter.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|<span data-ttu-id="ab0fe-298">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>属性的值返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-298">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> property is returned based on the value of the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|<span data-ttu-id="ab0fe-299">如果`identity`可从<xref:System.Security.Claims.ClaimsIdentity>中赋值`identity.Label` , 则为属性的值; 否则`null`为。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-299">If `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.Label` property; otherwise, `null`.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|<span data-ttu-id="ab0fe-300">如果`identity`不是从<xref:System.Security.Claims.ClaimsIdentity>中赋值, 则`null` <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>不是, 并且具有不`null`为的属性; 名称声明将使用<xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType>属性的值添加到新实例中。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-300">If `identity` is not assignable from <xref:System.Security.Claims.ClaimsIdentity>, is not `null`, and has an <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property that is not `null`; a name claim is added to the new instance using the value of the <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ab0fe-301">**注意：** 在访问时, 将基于<xref:System.Security.Claims.ClaimsIdentity.Name%2A> <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>和<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-301">**Note:**  When accessed, the value of the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property is returned based on the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> and the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<span data-ttu-id="ab0fe-302">`nameType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-302">The value of the `nameType` parameter.</span></span> <span data-ttu-id="ab0fe-303">`nameType`但是, 如果参数的值为`null`或空字符串, 并且`identity`可从中<xref:System.Security.Claims.ClaimsIdentity>赋值<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> , 则使用`identity.NameClaimType`属性的值; 否则使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-303">However, if the value of the `nameType` parameter is `null` or an empty string and `identity` is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.NameClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> is used.</span></span>|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<span data-ttu-id="ab0fe-304">`roleClaimType` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-304">The value of the `roleClaimType` parameter.</span></span> <span data-ttu-id="ab0fe-305">但是`roleClaimType` , 如果参数的值为<xref:System.Security.Claims.ClaimsIdentity> `null`或空字符串, 并且标识可从赋值, 则使用`identity.RoleClaimType`属性的值; 否则<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>使用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-305">However, if the value of the `roleClaimType` parameter is `null` or an empty string and identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, the value of the `identity.RoleClaimType` property is used; otherwise, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> is used.</span></span>|

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab0fe-306"><paramref name="identity" /> 为 <see cref="T:System.Security.Claims.ClaimsIdentity" />，<see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /> 导致返回 <see langword="this" /> 的循环引用。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-306"><paramref name="identity" /> is a <see cref="T:System.Security.Claims.ClaimsIdentity" /> and <see cref="P:System.Security.Claims.ClaimsIdentity.Actor" /> results in a circular reference back to <see langword="this" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsIdentity ^ Actor { System::Security::Claims::ClaimsIdentity ^ get(); void set(System::Security::Claims::ClaimsIdentity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : System.Security.Claims.ClaimsIdentity with get, set" Usage="System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-307">获取或设置被授予委派权利的调用方的标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-307">Gets or sets the identity of the calling party that was granted delegation rights.</span></span></summary>
        <value><span data-ttu-id="ab0fe-308">授予委托权利的调用方。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-308">The calling party that was granted delegation rights.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-309">应用程序可以通过递归检查<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>属性来访问导致当前调用的委托链。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-309">An application can access the delegation chain that led to the current call, by recursively examining the <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> property.</span></span> <span data-ttu-id="ab0fe-310">委托给其调用的标记可以通过<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性进行访问。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-310">The token on whose behalf the call is being delegated can be accessed through the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab0fe-311">尝试设置当前实例的属性。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-311">An attempt to set the property to the current instance occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member AddClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.AddClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.AddClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="ab0fe-312">要添加的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-312">The claim to add.</span></span></param>
        <summary><span data-ttu-id="ab0fe-313">添加单个声明到此声明标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-313">Adds a single claim to this claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-314">检查声明, 如果使用者与此声明标识不同, 则使用此声明<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>标识作为参数来调用方法, 以使用正确的主题创建新声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-314">The claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="ab0fe-315">此方法已`SecurityCritical`应用特性来控制哪些实体可以将声明添加到标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-315">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="ab0fe-316">在管道中, 根据<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中存在的声明做出授权决定。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-316">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-317"><paramref name="claim" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-317"><paramref name="claim" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-318">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-318">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-319">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-319">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddClaims (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaims(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberSignature Language="F#" Value="abstract member AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit&#xA;override this.AddClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; unit" Usage="claimsIdentity.AddClaims claims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims"><span data-ttu-id="ab0fe-320">要添加的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-320">The claims to add.</span></span></param>
        <summary><span data-ttu-id="ab0fe-321">添加声明列表到此声明标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-321">Adds a list of claims to this claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-322">检查每个声明, 如果使用者与此声明标识不同, 则使用<xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType>此声明标识作为参数来调用方法, 以使用正确的主题创建新声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-322">Each claim is examined and if the subject is different than this claims identity, the <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> method is invoked with this claims identity as the parameter to create a new claim with the correct subject.</span></span>  
  
 <span data-ttu-id="ab0fe-323">此方法已`SecurityCritical`应用特性来控制哪些实体可以将声明添加到标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-323">This method has the `SecurityCritical` attribute applied to control which entities can add claims to the identity.</span></span> <span data-ttu-id="ab0fe-324">在管道中, 根据<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中存在的声明做出授权决定。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-324">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-325"><paramref name="claims" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-325"><paramref name="claims" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-326">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-326">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-327">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-327">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-328">获取身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-328">Gets the authentication type.</span></span></summary>
        <value><span data-ttu-id="ab0fe-329">身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-329">The authentication type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-330">通常为<xref:System.Security.Claims.AuthenticationTypes>类定义的值之一。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-330">Typically one of the values defined by the <xref:System.Security.Claims.AuthenticationTypes> class.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberSignature Language="VB.NET" Value="Public Property BootstrapContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BootstrapContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BootstrapContext : obj with get, set" Usage="System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-331">获取或设置用于创建此声明标识的令牌。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-331">Gets or sets the token that was used to create this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-332">启动上下文。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-332">The bootstrap context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-333">基础对象是<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类的实例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-333">The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="ab0fe-334">在配置文件中的[ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)或[securityTokenHandlerConfiguration元素&gt;上设置属性, 以指定是否&lt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) `saveBootstrapContext`用于生成的<xref:System.Security.Claims.ClaimsIdentity>令牌应保留<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>在属性中。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-334">Set the `saveBootstrapContext` attribute on either the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) or the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property.</span></span>  
  
 <span data-ttu-id="ab0fe-335">如果该<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>属性不`null`为, 则应用程序可以访问通过<xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType>类的属性和方法生成的原始令牌和声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-335">If the <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> class.</span></span>

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-336">设置操作需要直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-336">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-337">此成员不能由部分受信任的或透明的代码设置。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-337">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Actor" />
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsIdentity/&lt;get_Claims&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-338">获取与此声明标识关联的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-338">Gets the claims associated with this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-339">与此声明标识相关联的声明的集合。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-339">The collection of claims associated with this claims identity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-340">集合可以包含的`null`项。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-340">The collection may contain entries that are `null`.</span></span>  
  
 <span data-ttu-id="ab0fe-341"><xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中包含的声明实质上描述<xref:System.Security.Claims.ClaimsIdentity>由表示的实体。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-341">The claims contained in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection essentially describe the entity that is represented by the <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="ab0fe-342">声明描述了实体所拥有的属性和权限, 应用程序可以对其进行检查以做出身份验证和授权的决策。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-342">The claims describe the properties and rights possessed by the entity and can be examined by applications to make decisions about authentication and authorization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab0fe-343"><xref:System.Security.Claims.ClaimsPrincipal>类还<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>具有属性。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-343">The <xref:System.Security.Claims.ClaimsPrincipal> class has a <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property as well.</span></span> <span data-ttu-id="ab0fe-344">在大多数情况下, 你应该通过<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType>集合而不是<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>通过集合来访问用户的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-344">In the majority of cases you should access the user's claims through the <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection rather than through the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span> <span data-ttu-id="ab0fe-345">仅当主体包含多<xref:System.Security.Claims.ClaimsIdentity> <xref:System.Security.Claims.ClaimsIdentity>个, 并且需要评估或修改特定标识时, 才需要访问单个的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-345">You will need to access the claims of an individual <xref:System.Security.Claims.ClaimsIdentity> only in the cases where the principal contains more than one <xref:System.Security.Claims.ClaimsIdentity> and you need to evaluate or modify a specific identity.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab0fe-346">返回从此声明标识中复制的新 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-346">Returns a new <see cref="T:System.Security.Claims.ClaimsIdentity" /> copied from this claims identity.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-347">当前实例的副本。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-347">A copy of the current instance.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaim (reader As BinaryReader) As Claim" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::Claim ^ CreateClaim(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim&#xA;override this.CreateClaim : System.IO.BinaryReader -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.CreateClaim reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ab0fe-348">指向声明的 <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-348">The <see cref="T:System.IO.BinaryReader" /> that points to the claim.</span></span></param>
        <summary><span data-ttu-id="ab0fe-349">为派生类型提供扩展点以创建自定义 <see cref="T:System.Security.Claims.Claim" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-349">Provides an extensibility point for derived types to create a custom <see cref="T:System.Security.Claims.Claim" />.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-350">一个新的 <see cref="T:System.Security.Claims.Claim" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-350">A new <see cref="T:System.Security.Claims.Claim" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-351"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-351"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-352">包含派生类型提供的任何其他数据。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-352">Contains any additional data provided by a derived type.</span></span> <span data-ttu-id="ab0fe-353">通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-353">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span></span></summary>
        <value><span data-ttu-id="ab0fe-354">表示其他序列化数据的数组。<see cref="T:System.Byte" /></span><span class="sxs-lookup"><span data-stu-id="ab0fe-354">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-355">默认颁发者，“地方当局”。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-355">The default issuer; "LOCAL AUTHORITY".</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNameClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNameClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultNameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-356">默认名称声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Name" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-356">The default name claim type; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultRoleClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultRoleClaimType;" />
      <MemberSignature Language="F#" Value="val mutable DefaultRoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-357">默认角色声明类型；<see cref="F:System.Security.Claims.ClaimTypes.Role" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-357">The default role claim type; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab0fe-358">检索与指定条件匹配的所有声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-358">Retrieves all of the claims that match a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="ab0fe-359">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-359">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="ab0fe-360">检索所有与指定谓词相匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-360">Retrieves all of the claims that are matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-361">匹配声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-361">The matching claims.</span></span> <span data-ttu-id="ab0fe-362">列表为只读。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-362">The list is read-only.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-363"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-363"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsIdentity.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ab0fe-364">要对其匹配声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-364">The claim type against which to match claims.</span></span></param>
        <summary><span data-ttu-id="ab0fe-365">检索所有有指定声明类型的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-365">Retrieves all of the claims that have the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-366">匹配声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-366">The matching claims.</span></span> <span data-ttu-id="ab0fe-367">列表为只读。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-367">The list is read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-368">使用中`type`的顺序区分大小写进行比较。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-368">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-369"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-369"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab0fe-370">检索与指定条件匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-370">Retrieves the first claim that matches a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="ab0fe-371">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-371">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="ab0fe-372">检所由指定谓词匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-372">Retrieves the first claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-373">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-373">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-374"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-374"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsIdentity.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ab0fe-375">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-375">The claim type to match.</span></span></param>
        <summary><span data-ttu-id="ab0fe-376">检索有指定声明类型的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-376">Retrieves the first claim with the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-377">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-377">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="ab0fe-378">比较是在<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>模式下完成的。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-378">The comparison is done in <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> mode.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-379"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-379"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsIdentity.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ab0fe-380">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-380">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="ab0fe-381">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-381">The destination for this serialization.</span></span> <span data-ttu-id="ab0fe-382">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-382">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ab0fe-383">用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-383">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsIdentity" /> object.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-384"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-384"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-385">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-385">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-386">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-386">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab0fe-387">确定该声明标识是否拥有与指定条件相匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-387">Determines whether the claims identity possesses a claim that matches specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsIdentity.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="ab0fe-388">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-388">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="ab0fe-389">确定该声明标识是否拥有与指定条件相匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-389">Determines whether this claims identity has a claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-390">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-390"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-391"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-391"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsIdentity.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ab0fe-392">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-392">The type of the claim to match.</span></span></param>
        <param name="value"><span data-ttu-id="ab0fe-393">要匹配的声明的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-393">The value of the claim to match.</span></span></param>
        <summary><span data-ttu-id="ab0fe-394">确定该声明标识是否具备指定声明类型和值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-394">Determines whether this claims identity has a claim with the specified claim type and value.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-395">如果找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-395"><see langword="true" /> if a match is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-396">不检查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-396">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="ab0fe-397">使用序号、对值区分大小写进行比较;类型上区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-397">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-398"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-398"><paramref name="type" /> is **null**.</span></span>  
  
<span data-ttu-id="ab0fe-399">或</span><span class="sxs-lookup"><span data-stu-id="ab0fe-399">-or-</span></span> 
 <span data-ttu-id="ab0fe-400"><paramref name="value" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-400"><paramref name="value" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-401">获取一个值，该值指示是否验证了标识。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-401">Gets a value that indicates whether the identity has been authenticated.</span></span></summary>
        <value><span data-ttu-id="ab0fe-402"><see langword="true" />如果标识已经过身份验证, 则为;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-402"><see langword="true" /> if the identity has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-403">`true`如果属性不`null`为或为空字符串, 则为。 <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></span><span class="sxs-lookup"><span data-stu-id="ab0fe-403">`true` if the <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> property is not `null` or an empty string.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Security.Claims.ClaimsIdentity.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-404">获取或设置此声明标识的标签。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-404">Gets or sets the label for this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-405">标签。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-405">The label.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Claims.ClaimsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-406">获取此声明标识的名称。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-406">Gets the name of this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-407">姓名或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-407">The name or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-408">返回其类型与<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>属性中设置的名称声明类型匹配的第一个声明的值。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-408">Returns the value of the first claim with a type that matches the name claim type set in the <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property.</span></span> <span data-ttu-id="ab0fe-409">如果未找到与名称声明类型匹配的声明, 则返回`null`。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-409">If no claim is found that matches the name claim type, returns `null`.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-410">获取用于确定为此声明标识的 <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> 属性提供值的声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-410">Gets the claim type that is used to determine which claims provide the value for the <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> property of this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-411">名称声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-411">The name claim type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-412">属性指定用于为此标识提供<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>名称的声明类型 ()。 <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></span><span class="sxs-lookup"><span data-stu-id="ab0fe-412">The <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> property specifies the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used to provide the name for this identity.</span></span> <span data-ttu-id="ab0fe-413">该名称通过<xref:System.Security.Claims.ClaimsIdentity.Name%2A>属性访问。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-413">The name is accessed through the <xref:System.Security.Claims.ClaimsIdentity.Name%2A> property.</span></span>  
  
 <span data-ttu-id="ab0fe-414">此属性由构造函数设置。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-414">This property is set by the constructor.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Name" />
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member RemoveClaim : System.Security.Claims.Claim -&gt; unit&#xA;override this.RemoveClaim : System.Security.Claims.Claim -&gt; unit" Usage="claimsIdentity.RemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="ab0fe-415">要移除的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-415">The claim to remove.</span></span></param>
        <summary><span data-ttu-id="ab0fe-416">尝试从声明标识中移除一个声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-416">Attempts to remove a claim from the claims identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-417">不能删除该声明, 因为它不是由标识所有。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-417">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="ab0fe-418">例如, 这是主体拥有的角色声明的事例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-418">For example, this would be the case for role claims that are owned by the principal.</span></span> <span data-ttu-id="ab0fe-419">与方法不同, 该方法返回一个布尔值, 该值指示是否已删除声明, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A>如果声明无法移除, 则会引发异常。 <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A></span><span class="sxs-lookup"><span data-stu-id="ab0fe-419">Unlike the <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> method, which returns a Boolean value that indicates whether the claim has been removed, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> throws an exception if the claim could not be removed</span></span>  
  
 <span data-ttu-id="ab0fe-420">指定的声明按对象引用 (<xref:System.Object.ReferenceEquals%2A>) 进行匹配。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-420">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="ab0fe-421">此方法已`SecurityCritical`应用特性来控制哪些实体可以从标识中删除声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-421">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="ab0fe-422">在管道中, 根据<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中存在的声明做出授权决定。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-422">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab0fe-423">无法移除声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-423">The claim cannot be removed.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-424">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-424">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-425">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-425">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RoleClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleClaimType : string" Usage="System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab0fe-426">获取将解释为此声明标识中声明的 .NET Framework 角色的声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-426">Gets the claim type that will be interpreted as a .NET Framework role among the claims in this claims identity.</span></span></summary>
        <value><span data-ttu-id="ab0fe-427">角色声明类型。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-427">The role claim type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-428">角色声明类型是计算<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法的此标识时使用的声明类型 ()。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-428">The role claim type is the claim type (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) that is used when evaluating this identity for the <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ab0fe-429">调用<xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType>方法来确定当前主体是否属于指定的角色。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-429">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method is called to determine whether the current principal is in a specified role.</span></span> <span data-ttu-id="ab0fe-430">基于声明的模型扩展了此检查以使用主体提供的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-430">The claims-based model extends this check to use claims presented by the principal.</span></span> <span data-ttu-id="ab0fe-431">一个<xref:System.Security.Claims.ClaimsPrincipal>对象可以包含一个或多<xref:System.Security.Claims.ClaimsIdentity>个对象, 并且每个标识对象<xref:System.Security.Claims.Claim>可以包含多个对象。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-431">A <xref:System.Security.Claims.ClaimsPrincipal> object can contain one or more <xref:System.Security.Claims.ClaimsIdentity> objects and each identity object can contain multiple <xref:System.Security.Claims.Claim> objects.</span></span> <span data-ttu-id="ab0fe-432">属性指定在评估此<xref:System.Security.Claims.ClaimsIdentity>对象时, 应用于为角色提供值的声明的声明类型。 <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></span><span class="sxs-lookup"><span data-stu-id="ab0fe-432">The <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> property specifies the claim type of the claim that should be used to provide the value for the role when evaluating this <xref:System.Security.Claims.ClaimsIdentity> object.</span></span> <span data-ttu-id="ab0fe-433">属性由构造函数设置。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-433">The property is set by the constructor.</span></span> <span data-ttu-id="ab0fe-434">公用值为<xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-434">A common value is <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member TryRemoveClaim : System.Security.Claims.Claim -&gt; bool&#xA;override this.TryRemoveClaim : System.Security.Claims.Claim -&gt; bool" Usage="claimsIdentity.TryRemoveClaim claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><span data-ttu-id="ab0fe-435">要移除的声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-435">The claim to remove.</span></span></param>
        <summary><span data-ttu-id="ab0fe-436">尝试从声明标识中移除一个声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-436">Attempts to remove a claim from the claims identity.</span></span></summary>
        <returns><span data-ttu-id="ab0fe-437">如果已成功移除了声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-437"><see langword="true" /> if the claim was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="ab0fe-438">不能删除该声明, 因为它不是由标识所有。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-438">It is possible that the claim cannot be removed because it is not owned by the identity.</span></span> <span data-ttu-id="ab0fe-439">例如, 这是主体拥有的角色声明的事例。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-439">For example, this would be the case for role claims that are owned by the principal.</span></span>  
  
 <span data-ttu-id="ab0fe-440">指定的声明按对象引用 (<xref:System.Object.ReferenceEquals%2A>) 进行匹配。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-440">The specified claim is matched by object reference (<xref:System.Object.ReferenceEquals%2A>).</span></span>  
  
 <span data-ttu-id="ab0fe-441">此方法已`SecurityCritical`应用特性来控制哪些实体可以从标识中删除声明。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-441">This method has the `SecurityCritical` attribute applied to control which entities can remove claims from the identity.</span></span> <span data-ttu-id="ab0fe-442">在管道中, 根据<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>集合中存在的声明做出授权决定。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-442">Further down the pipe, authorization decisions are made based on the claims that are present in the <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ab0fe-443">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-443">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ab0fe-444">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-444">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsIdentity.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ab0fe-445">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-445">The writer to use for data storage.</span></span></param>
        <summary><span data-ttu-id="ab0fe-446">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-446">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-447"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-447"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsIdentity.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ab0fe-448">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-448">The writer to use for data storage.</span></span></param>
        <param name="userData"><span data-ttu-id="ab0fe-449">派生类型提供的其他数据。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-449">Additional data provided by the derived type.</span></span></param>
        <summary><span data-ttu-id="ab0fe-450">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-450">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab0fe-451"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab0fe-451"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
