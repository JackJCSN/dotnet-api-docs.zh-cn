<Type Name="AuthorizationContext" FullName="System.Security.Claims.AuthorizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcf0738a32daa5591bb98ed80c3da74624d404ad" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64049085" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.AuthorizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationContext" />
  <TypeSignature Language="F#" Value="type AuthorizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供授权事件的上下文信息。 这包括表示该调用方的主体，请求的资源和执行的操作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.AuthorizationContext>类表示的声明授权管理器的实现使用的上下文<xref:System.Security.Claims.ClaimsAuthorizationManager>类中，以确定是否应授权主体 （主题） 上给定的资源执行指定的操作。 声明授权管理器的计算结果中的授权上下文<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>方法并拒绝或授予的访问，声明的基础提供的主体。  
  
 <xref:System.Security.Claims.AuthorizationContext.Principal%2A>属性包含为其授权正在被请求，该主体<xref:System.Security.Claims.AuthorizationContext.Resource%2A>属性包含在其授权主体，该资源和<xref:System.Security.Claims.AuthorizationContext.Action%2A>属性包含的操作，主体想要在资源上执行。 资源和操作表示为一系列声明;但是，在大多数情况下，每个集合包含单个声明。  
  
   
  
## Examples  
 在中使用的代码示例<xref:System.Security.Claims.AuthorizationContext>主题中获取`Claims Based Authorization`示例。 此示例提供的自定义声明授权管理器，可授权主体根据在配置中指定的策略。 此自定义管理器包含三个基本组件： 一个类派生自<xref:System.Security.Claims.ClaimsAuthorizationManager>实现管理器中，`ResourceAction`类对资源和操作，并读取和编译中指定的策略的策略读取器配置文件。 此编译的策略可能，然后通过声明授权管理器用于评估一个主体，以便授予对资源的访问权限。 为了简洁起见，并显示不是所有元素。 有关此示例，并提供其他示例的 WIF 和有关在何处下载它们，请参阅[WIF 代码示例索引](~/docs/framework/security/wif-code-sample-index.md)。  
  
 下面的代码演示<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>自定义声明授权管理器的方法。 根据资源和操作中指定的一个函数的计算结果为该主体<xref:System.Security.Claims.AuthorizationContext>调用。 此函数返回`true`或`false`，其中授予或拒绝访问权限的主体。  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  
  
 以下 XML 显示了在配置中指定的授权策略的示例。 在第一个策略中，主体必须拥有一个指定的声明，以便在指定资源上执行指定的操作。 在第二个策略中，主体必须拥有两个声明，以便能够指定资源执行指定的操作。 在所有其他主体会自动授予访问权限，而不考虑它拥有的声明。  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Claims.AuthorizationContext" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; resource, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; resource, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As Collection(Of Claim), action As Collection(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ resource, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="action" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="principal">其授权要被核对的主体。</param>
        <param name="resource">表示为主体授权的资源的声明的集合。 该集合通常包括单一元素。</param>
        <param name="action">表示对资源要执行的操作的声明的集合。 该集合通常包括单一元素。</param>
        <summary>用指定的主体、资源声称和操作声称初始化 <see cref="T:System.Security.Claims.AuthorizationContext" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" /> 为 <see langword="null" />。  
  
或 
 <paramref name="resource" /> 为 <see langword="null" />。  
  
或 
 <paramref name="action" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * string * string -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">其授权要被核对的主体。</param>
        <param name="resource">授权其主题的资源。 该资源被指定作为名称声明的值。</param>
        <param name="action">要对资源执行的操作。 该操作指定为名称声明的值。</param>
        <summary>初始化指定的主体、资源名称和操作名称的 <see cref="T:System.Security.Claims.AuthorizationContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.AuthorizationContext.Action%2A>属性初始化为包含名称声明 (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=nameWithType>)，其指定的值`action`参数。 <xref:System.Security.Claims.AuthorizationContext.Resource%2A>属性初始化为包含具有指定的值的名称声明`resource`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" /> 为 <see langword="null" />。  
  
或 
 <paramref name="resource" /> 为 <see langword="null" />。  
  
或 
 <paramref name="action" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Action { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取将授权主体的操作。</summary>
        <value>表示与请求相关的操作的声明的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该集合通常包括单一元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.AuthorizationContext.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取授权正在被请求的主体。</summary>
        <value>其授权正在被请求的主体。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Resource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Resource" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Resource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resource As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Resource { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resource : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取授权其主题的资源。</summary>
        <value>表示资源的声明的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该集合通常包括单一元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>