<Type Name="ClaimsPrincipal" FullName="System.Security.Claims.ClaimsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5387875031e6996396b10b161729b940e940164c" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247212" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="686a6-101">支持多个基于声明的标识的 <see cref="T:System.Security.Principal.IPrincipal" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="686a6-101">An <see cref="T:System.Security.Principal.IPrincipal" /> implementation that supports multiple claims-based identities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-102">从.NET Framework 4.5 开始，Windows Identity Foundation (WIF) 和基于声明的标识已完全集成到.NET Framework。</span><span class="sxs-lookup"><span data-stu-id="686a6-102">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="686a6-103">这意味着现在表示.NET Framework 中的主体的许多类派生自<xref:System.Security.Claims.ClaimsPrincipal>而不是只需实现<xref:System.Security.Principal.IPrincipal>接口。</span><span class="sxs-lookup"><span data-stu-id="686a6-103">This means that many classes that represent a principal in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsPrincipal> rather than simply implementing the <xref:System.Security.Principal.IPrincipal> interface.</span></span> <span data-ttu-id="686a6-104">除了实现<xref:System.Security.Principal.IPrincipal>接口，<xref:System.Security.Claims.ClaimsPrincipal>公开属性和方法，可用于使用的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-104">In addition to implementing the <xref:System.Security.Principal.IPrincipal> interface, <xref:System.Security.Claims.ClaimsPrincipal> exposes properties and methods that are useful for working with claims.</span></span>  
  
 <span data-ttu-id="686a6-105"><xref:System.Security.Claims.ClaimsPrincipal> 公开的标识，其中每个集合<xref:System.Security.Claims.ClaimsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="686a6-105"><xref:System.Security.Claims.ClaimsPrincipal> exposes a collection of identities, each of which is a <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="686a6-106">通常情况下，此集合，通过访问<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>属性，将仅具有单个元素。</span><span class="sxs-lookup"><span data-stu-id="686a6-106">In the common case, this collection, which is accessed through the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property, will only have a single element.</span></span>  
  
 <span data-ttu-id="686a6-107">引入<xref:System.Security.Claims.ClaimsPrincipal>最主体类从中派生的主体作为.NET 4.5 中不会强制您需在您处理使用标识的方式进行任何更改。</span><span class="sxs-lookup"><span data-stu-id="686a6-107">The introduction of <xref:System.Security.Claims.ClaimsPrincipal> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</span></span> <span data-ttu-id="686a6-108">但是它 does 打开更多可能性并提供更多的机会，以实现更精细的访问控制。</span><span class="sxs-lookup"><span data-stu-id="686a6-108">It does, however open up more possibilities and offer more chances to exercise finer access control.</span></span> <span data-ttu-id="686a6-109">例如:</span><span class="sxs-lookup"><span data-stu-id="686a6-109">For example:</span></span>  
  
-   <span data-ttu-id="686a6-110">应用程序代码本身可以直接使用当前的主体中包含的声明来驱动附加身份验证、 授权和个性化设置任务。</span><span class="sxs-lookup"><span data-stu-id="686a6-110">The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</span></span>  
  
-   <span data-ttu-id="686a6-111">您可以使用声明处理管道，甚至在执行到达您的代码之前可以处理的身份验证请求和授权策略前端资源。</span><span class="sxs-lookup"><span data-stu-id="686a6-111">You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</span></span> <span data-ttu-id="686a6-112">例如，可以使用自定义声明身份验证管理器，从派生类的实例配置的基于 web 的应用程序或服务<xref:System.Security.Claims.ClaimsAuthenticationManager>类。</span><span class="sxs-lookup"><span data-stu-id="686a6-112">For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthenticationManager> class.</span></span> <span data-ttu-id="686a6-113">当这样配置后，请求处理管道会调用<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>方法并向其传递你声明身份验证管理器<xref:System.Security.Claims.ClaimsPrincipal>表示传入请求的上下文。</span><span class="sxs-lookup"><span data-stu-id="686a6-113">When so configured, the request processing pipeline invokes the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method on your claims authentication manager passing it a <xref:System.Security.Claims.ClaimsPrincipal> that represents the context of the incoming request.</span></span> <span data-ttu-id="686a6-114">声明身份验证管理器然后可以执行身份验证根据传入声明的值。</span><span class="sxs-lookup"><span data-stu-id="686a6-114">Your claims authentication manager can then perform authentication based on the values of the incoming claims.</span></span> <span data-ttu-id="686a6-115">它还可以筛选、 转换或将声明添加到传入声明集。</span><span class="sxs-lookup"><span data-stu-id="686a6-115">It can also filter, transform, or add claims to the incoming claim set.</span></span> <span data-ttu-id="686a6-116">例如，它可用来扩充传入声明集从本地数据源，如本地用户配置文件创建新的声明</span><span class="sxs-lookup"><span data-stu-id="686a6-116">For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</span></span>  
  
-   <span data-ttu-id="686a6-117">您可以使用自定义声明授权管理器，从派生类的实例配置的基于 web 的应用程序<xref:System.Security.Claims.ClaimsAuthorizationManager>类。</span><span class="sxs-lookup"><span data-stu-id="686a6-117">You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthorizationManager> class.</span></span> <span data-ttu-id="686a6-118">在请求处理管道时这样配置，包传入<xref:System.Security.Claims.ClaimsPrincipal>中<xref:System.Security.Claims.AuthorizationContext>，并调用<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>声明授权管理器上的方法。</span><span class="sxs-lookup"><span data-stu-id="686a6-118">When so configured, the request processing pipeline packages the incoming <xref:System.Security.Claims.ClaimsPrincipal> in an <xref:System.Security.Claims.AuthorizationContext> and invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method on your claims authorization manager.</span></span> <span data-ttu-id="686a6-119">声明授权管理器随后可强制执行基于传入声明的授权。</span><span class="sxs-lookup"><span data-stu-id="686a6-119">Your claims authorization manager can then enforce authorization based on the incoming claims.</span></span>  
  
-   <span data-ttu-id="686a6-120">可以通过使用自定义声明授权管理器配置应用程序并使用执行内联基于声明的代码访问检查<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>类来执行命令性访问检查或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>执行声明性访问检查。</span><span class="sxs-lookup"><span data-stu-id="686a6-120">Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class to perform imperative access checks or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> to perform declarative access checks.</span></span> <span data-ttu-id="686a6-121">基于声明的代码访问检查是内联执行，处理管道之外，这样就可供所有应用程序，只要声明授权管理器配置。</span><span class="sxs-lookup"><span data-stu-id="686a6-121">Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</span></span>  
  
 <span data-ttu-id="686a6-122">你可以获取<xref:System.Security.Claims.ClaimsPrincipal>与 RP 应用程序 （或正在执行某线程的主体） 中的请求关联的强制转换的主体的实例<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>属性设置为<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="686a6-122">You can obtain a <xref:System.Security.Claims.ClaimsPrincipal> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="686a6-123">与关联的声明<xref:System.Security.Claims.ClaimsPrincipal>对象都是可通过其<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-123">The claims associated with an <xref:System.Security.Claims.ClaimsPrincipal> object are available through its <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property.</span></span> <span data-ttu-id="686a6-124"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性返回的所有包含的与主体关联的标识声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-124">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims contained by the identities associated with the principal.</span></span> <span data-ttu-id="686a6-125">在最不常见的情况下，在其中<xref:System.Security.Claims.ClaimsPrincipal>包含多个<xref:System.Security.Claims.ClaimsIdentity>实例，可以使用<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>属性，或通过使用可以访问的主要标识<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-125">In the uncommon case in which the <xref:System.Security.Claims.ClaimsPrincipal> contains multiple <xref:System.Security.Claims.ClaimsIdentity> instances, you can use the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property or you can access the primary identity by using the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="686a6-126"><xref:System.Security.Claims.ClaimsPrincipal> 提供几种方法可能会通过该搜索这些声明，并完全支持语言集成查询 (LINQ)。</span><span class="sxs-lookup"><span data-stu-id="686a6-126"><xref:System.Security.Claims.ClaimsPrincipal> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</span></span> <span data-ttu-id="686a6-127">标识可以通过使用添加到主体<xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A>或<xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="686a6-127">Identities can be added to the principal by using the <xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> or <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="686a6-128">若要添加到标识<xref:System.Security.Claims.ClaimsPrincipal>，调用方必须具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-128">To add identities to the <xref:System.Security.Claims.ClaimsPrincipal>, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="686a6-129">默认情况下，WIF 设置优先级<xref:System.Security.Principal.WindowsIdentity>对象时选择要通过返回的主标识<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-129">By default, WIF prioritizes <xref:System.Security.Principal.WindowsIdentity> objects when selecting the primary identity to return through the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="686a6-130">可以通过提供的委托，通过修改此行为<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>属性执行所选内容。</span><span class="sxs-lookup"><span data-stu-id="686a6-130">You can modify this behavior by supplying a delegate through the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to perform the selection.</span></span> <span data-ttu-id="686a6-131"><xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>属性提供了类似功能<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-131">The <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property provides similar functionality for the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 <span data-ttu-id="686a6-132">在基于声明的模型中，通过按其基础的标识提供的声明确定某一主体是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="686a6-132">In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</span></span> <span data-ttu-id="686a6-133"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法实质上是检查以确定它是否拥有具有指定的角色值的声明的主体与关联的每个标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-133">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</span></span> <span data-ttu-id="686a6-134">声明的类型 (由其<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>属性) 用于确定应检查哪些声明在角色期间检查指定获得通过一个身份标识其<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-134">The type of the claim (represented by its <xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> property) used to determine which claims should be examined during role checks is specified on an identity through its <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="686a6-135">因此，在角色检查期间检查的声明可以是不同的标识与主体关联的不同类型。</span><span class="sxs-lookup"><span data-stu-id="686a6-135">Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="686a6-136">下面的示例提取由 HTTP 请求中的用户提供的声明，并将其写入到 HTTP 响应。</span><span class="sxs-lookup"><span data-stu-id="686a6-136">The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</span></span> <span data-ttu-id="686a6-137">当前用户读取<xref:System.Web.HttpContext>作为<xref:System.Security.Claims.ClaimsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="686a6-137">The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="686a6-138">声明然后从中读取，然后写入响应。</span><span class="sxs-lookup"><span data-stu-id="686a6-138">The claims are then read from it and then are written to the response.</span></span>  
  
```csharp
ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
if (null != principal)  
{  
   foreach (Claim claim in principal.Claims)  
   {  
      Response.Write("CLAIM TYPE: " + claim.Type + "; CLAIM VALUE: " + claim.Value + "</br>");  
   }  
}  
```

      ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsIdentity" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthenticationManager" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="686a6-139">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-139">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="686a6-140">初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-140">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-141">没有标识相关联的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-141">No identities are associated with the new instance.</span></span> <span data-ttu-id="686a6-142">(<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合为空)。</span><span class="sxs-lookup"><span data-stu-id="686a6-142">(The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identities" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="686a6-143">从其初始化新声明主体的标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-143">The identities from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="686a6-144">使用指定的声明标识，初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-144">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class using the specified claims identities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-145"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合初始化具有指定的标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-145">The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is initialized with the specified identities.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-146"><paramref name="identities" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-146"><paramref name="identities" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686a6-147">指向 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的 <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-147">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="686a6-148">用指定的 <see cref="T:System.IO.BinaryReader" /> 初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-148">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsPrincipal" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-149">通常情况下，<xref:System.IO.BinaryReader>使用从字节构造<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>并为相同的方式来初始化<xref:System.IO.BinaryWriter>。</span><span class="sxs-lookup"><span data-stu-id="686a6-149">Normally, the <xref:System.IO.BinaryReader> is constructed using the bytes from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> and initialized in the same way as the <xref:System.IO.BinaryWriter>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-150"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-150"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="686a6-151">从其初始化新的声明主体的标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-151">The identity from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="686a6-152">从指定的标识初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-152">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-153">如果指定的标识是否能从<xref:System.Security.Claims.ClaimsIdentity>，它用来初始化<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-153">If the specified identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, it is used to initialize the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="686a6-154">否则为<xref:System.Security.Claims.ClaimsIdentity>创建使用指定的标识，用于初始化集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-154">Otherwise, a <xref:System.Security.Claims.ClaimsIdentity> is created using the specified identity and is used to initialize the collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-155"><paramref name="identity" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-155"><paramref name="identity" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal principal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="686a6-156">从其初始化新的声明主体的主体。</span><span class="sxs-lookup"><span data-stu-id="686a6-156">The principal from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="686a6-157">从指定的主体初始化 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="686a6-157">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-158">如果指定的主体是可从<xref:System.Security.Claims.ClaimsPrincipal>，所有其标识添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-158">If the specified principal is assignable from <xref:System.Security.Claims.ClaimsPrincipal>, all of its identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="686a6-159">如果指定的主体不能从<xref:System.Security.Claims.ClaimsPrincipal>，一个新<xref:System.Security.Claims.ClaimsIdentity>从创建<xref:System.Security.Principal.IIdentity>中其<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType>属性并添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-159">If the specified principal is not assignable from <xref:System.Security.Claims.ClaimsPrincipal>, a new <xref:System.Security.Claims.ClaimsIdentity> is created from the <xref:System.Security.Principal.IIdentity> in its <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property and added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-160"><paramref name="principal" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-160"><paramref name="principal" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsPrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="686a6-161">序列化的数据。</span><span class="sxs-lookup"><span data-stu-id="686a6-161">The serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="686a6-162">序列化的上下文。</span><span class="sxs-lookup"><span data-stu-id="686a6-162">The context for serialization.</span></span></param>
        <summary><span data-ttu-id="686a6-163">初始化从使用 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 创建的序列化流创建中的 <see cref="T:System.Runtime.Serialization.ISerializable" /> 类的新实例</span><span class="sxs-lookup"><span data-stu-id="686a6-163">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-164"><paramref name="info" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-164"><paramref name="info" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-165">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-166">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="686a6-166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentities">
      <MemberSignature Language="C#" Value="public virtual void AddIdentities (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentities(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentities (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentities(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit&#xA;override this.AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit" Usage="claimsPrincipal.AddIdentities identities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="686a6-167">要添加的声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-167">The claims identities to add.</span></span></param>
        <summary><span data-ttu-id="686a6-168">将指定的声明标识添加到此声明主体。</span><span class="sxs-lookup"><span data-stu-id="686a6-168">Adds the specified claims identities to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-169">标识添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-169">The identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-170"><paramref name="identities" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-170"><paramref name="identities" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-171">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-171">requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-172">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="686a6-172">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentity">
      <MemberSignature Language="C#" Value="public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentity(class System.Security.Claims.ClaimsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentity (identity As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentity(System::Security::Claims::ClaimsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit&#xA;override this.AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit" Usage="claimsPrincipal.AddIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="686a6-173">要添加的声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-173">The claims identity to add.</span></span></param>
        <summary><span data-ttu-id="686a6-174">将指定的声明标识添加到此声明主体。</span><span class="sxs-lookup"><span data-stu-id="686a6-174">Adds the specified claims identity to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-175">将标识添加到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-175">The identity is added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-176"><paramref name="identity" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-176"><paramref name="identity" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-177">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-177">requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-178">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="686a6-178">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-179">获取包含所有声明的集合，这些声明都来自于此声明主体关联的声明标识符。</span><span class="sxs-lookup"><span data-stu-id="686a6-179">Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="686a6-180">与此主体关联的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-180">The claims associated with this principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-181">声明主体所拥有的集合<xref:System.Security.Claims.ClaimsIdentity>是可以通过标识属性访问的对象。</span><span class="sxs-lookup"><span data-stu-id="686a6-181">A claims principal has a collection of <xref:System.Security.Claims.ClaimsIdentity> objects that is accessible through the Identities property.</span></span> <span data-ttu-id="686a6-182">每个<xref:System.Security.Claims.ClaimsIdentity>集合中包含一个或多个声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-182">Each <xref:System.Security.Claims.ClaimsIdentity> in the collection contains one or more claims.</span></span> <span data-ttu-id="686a6-183"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性返回的所有声明从所有在此集合中的声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-183">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims from all of the claims identities in this collection.</span></span>  
  
 <span data-ttu-id="686a6-184"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>属性可以由的自定义实现检查<xref:System.Security.Claims.ClaimsAuthenticationManager>类进行身份验证决策或筛选、 转换或扩充传入声明集; 的自定义实现通过<xref:System.Security.Claims.ClaimsAuthorizationManager>类，以强制实施授权策略;或由应用程序代码才能做出授权决定，或自定义用户体验根据集合中存在的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-184">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property can be examined by custom implementations of the <xref:System.Security.Claims.ClaimsAuthenticationManager> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <xref:System.Security.Claims.ClaimsAuthorizationManager> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipalSelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`1&lt;class System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ ClaimsPrincipalSelector { Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ get(); void set(Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipalSelector : Func&lt;System.Security.Claims.ClaimsPrincipal&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Claims.ClaimsPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-185">获取或设置用于选择 <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> 属性返回的声明主体的委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-185">Gets or sets the delegate used to select the claims principal returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> property.</span></span></summary>
        <value><span data-ttu-id="686a6-186">委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-186">The delegate.</span></span> <span data-ttu-id="686a6-187">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-187">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-188">可以设置此属性来重写的默认行为<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-188">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-189">设置操作的直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-189">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-190">此成员不能由部分受信任的或透明代码设置。</span><span class="sxs-lookup"><span data-stu-id="686a6-190">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Current" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsPrincipal.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="686a6-191">返回此实例的副本。</span><span class="sxs-lookup"><span data-stu-id="686a6-191">Returns a copy of this instance.</span></span></summary>
        <returns><span data-ttu-id="686a6-192"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> 对象的新副本。</span><span class="sxs-lookup"><span data-stu-id="686a6-192">A new copy of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaimsIdentity (reader As BinaryReader) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsPrincipal.CreateClaimsIdentity reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686a6-193">二进制读取器。</span><span class="sxs-lookup"><span data-stu-id="686a6-193">The binary reader.</span></span></param>
        <summary><span data-ttu-id="686a6-194">创建新的声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-194">Creates a new claims identity.</span></span></summary>
        <returns><span data-ttu-id="686a6-195">创建的声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-195">The created claims identity.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-196"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-196"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Claims.ClaimsPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Claims::ClaimsPrincipal ^ Current { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-197">获取当前声明主体。</span><span class="sxs-lookup"><span data-stu-id="686a6-197">Gets the current claims principal.</span></span></summary>
        <value><span data-ttu-id="686a6-198">当前声明主体。</span><span class="sxs-lookup"><span data-stu-id="686a6-198">The current claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-199">默认情况下，<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>返回。</span><span class="sxs-lookup"><span data-stu-id="686a6-199">By default, <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> is returned.</span></span> <span data-ttu-id="686a6-200">您可以通过设置更改此行为<xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>属性来指定要调用以确定当前主体的委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-200">You can change this behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property to specify a delegate to be called to determine the current principal.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-201">包含派生类型提供的任何其他数据。</span><span class="sxs-lookup"><span data-stu-id="686a6-201">Contains any additional data provided by a derived type.</span></span> <span data-ttu-id="686a6-202">通常在调用 <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> 时设置。</span><span class="sxs-lookup"><span data-stu-id="686a6-202">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span></span></summary>
        <value><span data-ttu-id="686a6-203">一个<see cref="T:System.Byte" />表示其他数组序列化数据。</span><span class="sxs-lookup"><span data-stu-id="686a6-203">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="686a6-204">检索与指定条件匹配的所有声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-204">Retrieves all of the claims that match a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="686a6-205">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="686a6-205">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="686a6-206">检索所有与指定谓词相匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-206">Retrieves all of the claims that are matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="686a6-207">匹配声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-207">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-208">返回与声明主体相关联的所有标识声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-208">Returns claims from all identities associated with the claims principal.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-209"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-209"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="686a6-210">要对其匹配声明的声明类型。</span><span class="sxs-lookup"><span data-stu-id="686a6-210">The claim type against which to match claims.</span></span></param>
        <summary><span data-ttu-id="686a6-211">检索所有声明或有指定声明类型的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-211">Retrieves all or the claims that have the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="686a6-212">匹配声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-212">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-213">返回与声明主体相关联的所有标识声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-213">Returns claims from all identities associated with the claims principal.</span></span> <span data-ttu-id="686a6-214">使用序号的大小写区分上进行比较`type`。</span><span class="sxs-lookup"><span data-stu-id="686a6-214">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-215"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-215"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="686a6-216">检索与指定条件匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-216">Retrieves the first claim that matches a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="686a6-217">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="686a6-217">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="686a6-218">检所由指定谓词匹配的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-218">Retrieves the first claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="686a6-219">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-219">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="686a6-220">每个<xref:System.Security.Claims.ClaimsIdentity>调用。</span><span class="sxs-lookup"><span data-stu-id="686a6-220">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span> 

## <a name="see-also"></a><span data-ttu-id="686a6-221">请参阅</span><span class="sxs-lookup"><span data-stu-id="686a6-221">See also</span></span>
<xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)?displayProperty=nameWithType>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-222"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-222"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="686a6-223">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="686a6-223">The claim type to match.</span></span></param>
        <summary><span data-ttu-id="686a6-224">检索有指定声明类型的第一个声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-224">Retrieves the first claim with the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="686a6-225">如果未找到匹配，则为第一个匹配声明或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-225">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="686a6-226">每个<xref:System.Security.Claims.ClaimsIdentity>调用。</span><span class="sxs-lookup"><span data-stu-id="686a6-226">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span>

 ## <a name="see-also"></a><span data-ttu-id="686a6-227">请参阅</span><span class="sxs-lookup"><span data-stu-id="686a6-227">See also</span></span>
 
  <span data-ttu-id="686a6-228"><xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="686a6-228"><xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-229"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-229"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsPrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="686a6-230">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="686a6-230">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="686a6-231">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="686a6-231">The destination for this serialization.</span></span> <span data-ttu-id="686a6-232">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-232">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="686a6-233">用序列化当前<see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-233">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-234"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-234"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-235">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-235">requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-236">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="686a6-236">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="686a6-237">确定与此声明主体相关联的任何声明标识是否包含与指定条件匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-237">Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsPrincipal.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="686a6-238">执行匹配逻辑的函数。</span><span class="sxs-lookup"><span data-stu-id="686a6-238">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="686a6-239">确定与此声明主体相关联的任何声明标识是否包含由指定的谓词匹配的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-239">Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="686a6-240">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-240"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="686a6-241">每个<xref:System.Security.Claims.ClaimsIdentity>调用。</span><span class="sxs-lookup"><span data-stu-id="686a6-241">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span> 

## <a name="see-also"></a><span data-ttu-id="686a6-242">请参阅</span><span class="sxs-lookup"><span data-stu-id="686a6-242">See also</span></span>

<span data-ttu-id="686a6-243"><xref:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="686a6-243"><xref:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-244"><paramref name="match" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-244"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsPrincipal.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="686a6-245">要匹配的声明类型。</span><span class="sxs-lookup"><span data-stu-id="686a6-245">The type of the claim to match.</span></span></param>
        <param name="value"><span data-ttu-id="686a6-246">要匹配的声明的值。</span><span class="sxs-lookup"><span data-stu-id="686a6-246">The value of the claim to match.</span></span></param>
        <summary><span data-ttu-id="686a6-247">确定与此声明主体相关联的任何声明标识是否包含具有指定声明类型和值的声明。</span><span class="sxs-lookup"><span data-stu-id="686a6-247">Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</span></span></summary>
        <returns><span data-ttu-id="686a6-248">如果存在匹配的声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-248"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-249">不会检查<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-249">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="686a6-250">使用序号，区分大小写值; 在进行比较大小写区分类型上。</span><span class="sxs-lookup"><span data-stu-id="686a6-250">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-251"><paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-251"><paramref name="type" /> is **null**.</span></span>  
  
<span data-ttu-id="686a6-252">- 或 -</span><span class="sxs-lookup"><span data-stu-id="686a6-252">-or-</span></span> 
 <span data-ttu-id="686a6-253"><paramref name="value" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="686a6-253"><paramref name="value" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Identities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; Identities" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ Identities { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identities : seq&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-254">获取包含与此声明主体关联的所有声明标识符的集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-254">Gets a collection that contains all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="686a6-255">声明标识的集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-255">The collection of claims identities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-256">通常情况下，该集合包含单个元素。</span><span class="sxs-lookup"><span data-stu-id="686a6-256">In the common case, the collection contains only a single element.</span></span>  
  
 <span data-ttu-id="686a6-257">将包含的某些元素的集合可能`null`。</span><span class="sxs-lookup"><span data-stu-id="686a6-257">It is possible for the collection to contain some elements which are `null`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-258">获取与此声明主体相关联的主要声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-258">Gets the primary claims identity associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="686a6-259">与此声明主体相关联的主要声明标识。</span><span class="sxs-lookup"><span data-stu-id="686a6-259">The primary claims identity associated with this claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-260">默认情况下，该框架设置优先级的类型标识<xref:System.Security.Principal.WindowsIdentity>返回标识时。</span><span class="sxs-lookup"><span data-stu-id="686a6-260">By default, the framework prioritizes identities of type <xref:System.Security.Principal.WindowsIdentity> when returning the identity.</span></span> <span data-ttu-id="686a6-261">第一个<xref:System.Security.Principal.WindowsIdentity>中找到<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>返回集合。</span><span class="sxs-lookup"><span data-stu-id="686a6-261">The first <xref:System.Security.Principal.WindowsIdentity> found in the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is returned.</span></span> <span data-ttu-id="686a6-262">如果没有任何<xref:System.Security.Principal.WindowsIdentity>在集合中，可从第一个标识<xref:System.Security.Claims.ClaimsIdentity>返回。</span><span class="sxs-lookup"><span data-stu-id="686a6-262">If there is no <xref:System.Security.Principal.WindowsIdentity> in the collection, the first identity assignable from <xref:System.Security.Claims.ClaimsIdentity> is returned.</span></span> <span data-ttu-id="686a6-263">如果没有任何<xref:System.Security.Claims.ClaimsIdentity>，`null`返回。</span><span class="sxs-lookup"><span data-stu-id="686a6-263">If there is no <xref:System.Security.Claims.ClaimsIdentity>, `null` is returned.</span></span> <span data-ttu-id="686a6-264">如果<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>集合为空，<xref:System.ArgumentNullException>引发。</span><span class="sxs-lookup"><span data-stu-id="686a6-264">If the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="686a6-265">您可以通过设置更改默认行为<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>属性来指定要调用以确定标识的委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-265">You can change the default behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to specify a delegate to be called to determine the identity.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="claimsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="686a6-266">要检查的角色。</span><span class="sxs-lookup"><span data-stu-id="686a6-266">The role for which to check.</span></span></param>
        <summary><span data-ttu-id="686a6-267">返回指定的由声明主体表示的实体(用户)是否在指定的角色的值。</span><span class="sxs-lookup"><span data-stu-id="686a6-267">Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="686a6-268">如果声明主体属于指定角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-268"><see langword="true" /> if claims principal is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-269"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>方法检查此声明主体所拥有的标识是否包含一个声明的类型<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>声明的值等于指定的值`role`参数。</span><span class="sxs-lookup"><span data-stu-id="686a6-269">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method checks whether an identity that this claims principal possesses contains a claim of type <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> where the value of the claim is equal to the value specified by the `role` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="686a6-270">每个<xref:System.Security.Claims.ClaimsIdentity>具有其自己定义表示角色的声明类型。</span><span class="sxs-lookup"><span data-stu-id="686a6-270">Each <xref:System.Security.Claims.ClaimsIdentity> has its own definition of the claim type that represents a role.</span></span> <span data-ttu-id="686a6-271">此声明类型可以访问和通过设置<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-271">This claim type can be accessed and set through the <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentitySelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt;, class System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property PrimaryIdentitySelector As Func(Of IEnumerable(Of ClaimsIdentity), ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ PrimaryIdentitySelector { Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); void set(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentitySelector : Func&lt;seq&lt;System.Security.Claims.ClaimsIdentity&gt;, System.Security.Claims.ClaimsIdentity&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686a6-272">获取或设置用于选择 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> 属性返回的声明标识的委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-272">Gets or sets the delegate used to select the claims identity returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> property.</span></span></summary>
        <value><span data-ttu-id="686a6-273">委托。</span><span class="sxs-lookup"><span data-stu-id="686a6-273">The delegate.</span></span> <span data-ttu-id="686a6-274">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-274">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="686a6-275">可以设置此属性来重写的默认行为<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="686a6-275">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span>

          ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="686a6-276">设置操作的直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="686a6-276">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="686a6-277">此成员不能由部分受信任的或透明代码设置。</span><span class="sxs-lookup"><span data-stu-id="686a6-277">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsPrincipal.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="686a6-278">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="686a6-278">The writer to use for data storage.</span></span></param>
        <summary><span data-ttu-id="686a6-279">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="686a6-279">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-280"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-280"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsPrincipal.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="686a6-281">数据存储使用的编写器。</span><span class="sxs-lookup"><span data-stu-id="686a6-281">The writer to use for data storage.</span></span></param>
        <param name="userData"><span data-ttu-id="686a6-282">派生类型提供的其他数据。</span><span class="sxs-lookup"><span data-stu-id="686a6-282">Additional data provided by the derived type.</span></span></param>
        <summary><span data-ttu-id="686a6-283">使用 <see cref="T:System.IO.BinaryWriter" /> 序列化。</span><span class="sxs-lookup"><span data-stu-id="686a6-283">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686a6-284"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686a6-284"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>