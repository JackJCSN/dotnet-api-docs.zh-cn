<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="546f0e06ccae6926dd7dfb936ed18c39b9c7c613" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70680929" /></Metadata><TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <TypeSignature Language="F#" Value="type SignedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="127e3-101">在核心 XML 签名对象上提供包装器，以便创建 XML 签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-101">Provides a wrapper on a core XML signature object to facilitate creating XML signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-102">类是万维网联合会（W3C） [XML 签名语法和处理规范](https://www.w3.org/TR/xmldsig-core/)（也称为 XMLDSIG （XML 数字签名））的 .net 实现。 <xref:System.Security.Cryptography.Xml.SignedXml></span><span class="sxs-lookup"><span data-stu-id="127e3-102">The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](https://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature).</span></span> <span data-ttu-id="127e3-103">XMLDSIG 是一种基于标准的、可互操作的方式，用于对 XML 文档的全部或部分或其他可从统一资源标识符（URI）寻址的数据进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-103">XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).</span></span>
  
 <span data-ttu-id="127e3-104">需要在<xref:System.Security.Cryptography.Xml.SignedXml>应用程序或组织之间以标准方式共享已签名的 XML 数据时，请使用类。</span><span class="sxs-lookup"><span data-stu-id="127e3-104">Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="127e3-105">使用此类签名的任何数据都可以通过适用于 XMLDSIG 的 W3C 规范的任何一致实现进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-105">Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.</span></span>
  
 <span data-ttu-id="127e3-106"><xref:System.Security.Cryptography.Xml.SignedXml>类允许创建以下三种 XML 数字签名：</span><span class="sxs-lookup"><span data-stu-id="127e3-106">The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:</span></span>  
  
|<span data-ttu-id="127e3-107">签名类型</span><span class="sxs-lookup"><span data-stu-id="127e3-107">Signature Type</span></span>|<span data-ttu-id="127e3-108">说明</span><span class="sxs-lookup"><span data-stu-id="127e3-108">Description</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="127e3-109">已封装签名</span><span class="sxs-lookup"><span data-stu-id="127e3-109">Enveloped signature</span></span>|<span data-ttu-id="127e3-110">签名包含在要签名的 XML 元素中。</span><span class="sxs-lookup"><span data-stu-id="127e3-110">The signature is contained within the XML element being signed.</span></span>|  
|<span data-ttu-id="127e3-111">封装签名</span><span class="sxs-lookup"><span data-stu-id="127e3-111">Enveloping signature</span></span>|<span data-ttu-id="127e3-112">已签名的 XML 包含在`<Signature>`元素中。</span><span class="sxs-lookup"><span data-stu-id="127e3-112">The signed XML is contained within the `<Signature>` element.</span></span>|  
|<span data-ttu-id="127e3-113">内部分离的签名</span><span class="sxs-lookup"><span data-stu-id="127e3-113">Internal detached signature</span></span>|<span data-ttu-id="127e3-114">签名和签名的 XML 位于同一个文档中，但两个元素都不包含另一个。</span><span class="sxs-lookup"><span data-stu-id="127e3-114">The signature and signed XML are in the same document, but neither element contains the other.</span></span>|  
  
 <span data-ttu-id="127e3-115">还有第四种签名称为外部分离签名，即当数据和签名位于单独的 XML 文档中时。</span><span class="sxs-lookup"><span data-stu-id="127e3-115">There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents.</span></span> <span data-ttu-id="127e3-116"><xref:System.Security.Cryptography.Xml.SignedXml>类不支持外部分离签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-116">External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.</span></span>  
  
## <a name="the-structure-of-an-xml-signature"></a><span data-ttu-id="127e3-117">XML 签名的结构</span><span class="sxs-lookup"><span data-stu-id="127e3-117">The structure of an XML Signature</span></span>  

<span data-ttu-id="127e3-118">XMLDSIG 创建一个`<Signature>`元素，该元素包含 XML 文档的数字签名或可从 URI 寻址的其他数据。</span><span class="sxs-lookup"><span data-stu-id="127e3-118">XMLDSIG creates a `<Signature>` element, which contains a digital signature of an XML document or other data that is addressable from a URI.</span></span> <span data-ttu-id="127e3-119">`<Signature>`元素可以选择包含有关在何处查找将验证签名的密钥的信息，以及使用哪种加密算法进行签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-119">The `<Signature>` element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing.</span></span> <span data-ttu-id="127e3-120">基本结构如下所示：</span><span class="sxs-lookup"><span data-stu-id="127e3-120">The basic structure is as follows:</span></span>  
  
```xml
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
</Signature>
```  
  
<span data-ttu-id="127e3-121">此结构的主要部分是：</span><span class="sxs-lookup"><span data-stu-id="127e3-121">The main parts of this structure are:</span></span>  
  
- <span data-ttu-id="127e3-122">`<CanonicalizationMethod>` 元素</span><span class="sxs-lookup"><span data-stu-id="127e3-122">The `<CanonicalizationMethod>` element</span></span>

    <span data-ttu-id="127e3-123">指定将`Signature`元素从 XML/文本重新编写为字节以进行签名验证的规则。</span><span class="sxs-lookup"><span data-stu-id="127e3-123">Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation.</span></span> <span data-ttu-id="127e3-124">.Net 中的默认值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315>，它标识可信算法。</span><span class="sxs-lookup"><span data-stu-id="127e3-124">The default value in .NET is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>, which identifies a trustworthy algorithm.</span></span> <span data-ttu-id="127e3-125">此元素由<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType>属性表示。</span><span class="sxs-lookup"><span data-stu-id="127e3-125">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> property.</span></span>  
  
- <span data-ttu-id="127e3-126">`<SignatureMethod>` 元素</span><span class="sxs-lookup"><span data-stu-id="127e3-126">The `<SignatureMethod>` element</span></span>

   <span data-ttu-id="127e3-127">指定用于签名生成和验证的算法，该算法应用`<Signature>`于要在`<SignatureValue>`其中生成值的元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-127">Specifies the algorithm used for signature generation and validation, which was applied to the `<Signature>` element to produce the value in `<SignatureValue>`.</span></span> <span data-ttu-id="127e3-128">在上面的示例中，值<http://www.w3.org/2000/09/xmldsig#rsa-sha1>标识 RSA PKCS1 sha-1 签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-128">In the previous example, the value <http://www.w3.org/2000/09/xmldsig#rsa-sha1> identifies an RSA PKCS1 SHA-1 signature.</span></span> <span data-ttu-id="127e3-129">由于 SHA-1 出现冲突，Microsoft 建议使用基于 SHA-256 或更高安全性的安全模式。</span><span class="sxs-lookup"><span data-stu-id="127e3-129">Due to collision problems with SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span> <span data-ttu-id="127e3-130">此元素由<xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>属性表示。</span><span class="sxs-lookup"><span data-stu-id="127e3-130">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.</span></span>  
  
- <span data-ttu-id="127e3-131">`<SignatureValue>` 元素</span><span class="sxs-lookup"><span data-stu-id="127e3-131">The `<SignatureValue>` element</span></span>

   <span data-ttu-id="127e3-132">指定`<Signature>`元素的加密签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-132">Specifies the cryptographic signature for the `<Signature>` element.</span></span> <span data-ttu-id="127e3-133">如果此签名未进行验证，则`<Signature>`块的某些部分已被篡改，并且文档被视为无效。</span><span class="sxs-lookup"><span data-stu-id="127e3-133">If this signature does not verify, then some portion of the `<Signature>` block was tampered with, and the document is considered invalid.</span></span> <span data-ttu-id="127e3-134">`<CanonicalizationMethod>`只要该值可信，此值就可以很好地篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-134">As long as the `<CanonicalizationMethod>` value is trustworthy, this value is highly resistant to tampering.</span></span> <span data-ttu-id="127e3-135">此元素由<xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>属性表示。</span><span class="sxs-lookup"><span data-stu-id="127e3-135">This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.</span></span>  
  
- <span data-ttu-id="127e3-136">`<Reference>`元素的`URI`特性</span><span class="sxs-lookup"><span data-stu-id="127e3-136">The `URI` attribute of the `<Reference>` element</span></span>  

   <span data-ttu-id="127e3-137">使用 URI 引用指定数据对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-137">Specifies a data object using a URI reference.</span></span> <span data-ttu-id="127e3-138">此属性由<xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType>属性表示。</span><span class="sxs-lookup"><span data-stu-id="127e3-138">This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> property.</span></span>  
  
   - <span data-ttu-id="127e3-139">如果未指定`URI`属性，即将<xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType>属性设置为`null`，则表示接收应用程序应知道对象的标识。</span><span class="sxs-lookup"><span data-stu-id="127e3-139">Not specifying the `URI` attribute, that is, setting the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> property to `null`, means that the receiving application is expected to know the identity of the object.</span></span> <span data-ttu-id="127e3-140">在大多数情况下， `null` URI 将导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="127e3-140">In most cases, a `null` URI will result in an exception being thrown.</span></span> <span data-ttu-id="127e3-141">不要使用`null` URI，除非应用程序与需要它的协议进行互操作。</span><span class="sxs-lookup"><span data-stu-id="127e3-141">Do not use a `null` URI, unless your application is interoperating with a protocol which requires it.</span></span>  
  
   - <span data-ttu-id="127e3-142">如果将`URI`属性设置为空字符串，则表明正在对文档的根元素进行签名，这是一种封装签名形式。</span><span class="sxs-lookup"><span data-stu-id="127e3-142">Setting the `URI` attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.</span></span>  
  
   - <span data-ttu-id="127e3-143">如果`URI`特性的值以 # 开头，则该值必须解析为当前文档中的元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-143">If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document.</span></span> <span data-ttu-id="127e3-144">此窗体可用于任何受支持的签名类型（已封装签名、封装签名或内部分离签名）。</span><span class="sxs-lookup"><span data-stu-id="127e3-144">This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).</span></span>  
  
   - <span data-ttu-id="127e3-145">其他任何内容都被视为外部资源分离的签名，并且不受<xref:System.Security.Cryptography.Xml.SignedXml>类支持。</span><span class="sxs-lookup"><span data-stu-id="127e3-145">Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.</span></span>  
  
- <span data-ttu-id="127e3-146">`<Transforms>` 元素</span><span class="sxs-lookup"><span data-stu-id="127e3-146">The `<Transforms>` element</span></span>  

   <span data-ttu-id="127e3-147">包含一个按顺序排列`<Transform>`的元素列表，这些元素描述签名者如何获取已摘要的数据对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-147">Contains an ordered list of `<Transform>` elements that describe how the signer obtained the data object that was digested.</span></span> <span data-ttu-id="127e3-148">转换算法类似于规范化方法，但不重写`<Signature>`元素，它会重写`URI`由`<Reference>`元素的属性标识的内容。</span><span class="sxs-lookup"><span data-stu-id="127e3-148">A transform algorithm is similar to the canonicalization method, but instead of rewriting the `<Signature>` element, it rewrites the content identified by the `URI` attribute of the `<Reference>` element.</span></span> <span data-ttu-id="127e3-149">元素由<xref:System.Security.Cryptography.Xml.TransformChain>类表示。 `<Transforms>`</span><span class="sxs-lookup"><span data-stu-id="127e3-149">The `<Transforms>` element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.</span></span>  
  
   - <span data-ttu-id="127e3-150">每个转换算法定义为采用 XML （XPath 节点集）或字节作为输入。</span><span class="sxs-lookup"><span data-stu-id="127e3-150">Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input.</span></span> <span data-ttu-id="127e3-151">如果当前数据的格式与转换输入要求不同，则应用转换规则。</span><span class="sxs-lookup"><span data-stu-id="127e3-151">If the format of the current data differs from the transform input requirements, conversion rules are applied.</span></span>  
  
   - <span data-ttu-id="127e3-152">每个转换算法定义为作为输出产生 XML 或字节。</span><span class="sxs-lookup"><span data-stu-id="127e3-152">Each transform algorithm is defined as producing either XML or bytes as the output.</span></span>  
  
   - <span data-ttu-id="127e3-153">如果未定义最后一个转换算法的输出（或未指定转换），则[规范化方法](https://www.w3.org/TR/2001/REC-xml-c14n-20010315)将用作隐式转换（即使`<CanonicalizationMethod>`元素中指定了不同的算法）。</span><span class="sxs-lookup"><span data-stu-id="127e3-153">If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the [canonicalization method](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) is used as an implicit transform (even if a different algorithm was specified in the `<CanonicalizationMethod>` element).</span></span>  
  
   - <span data-ttu-id="127e3-154">转换算法的<http://www.w3.org/2000/09/xmldsig#enveloped-signature>值用于对规则进行编码，并将其解释为从`<Signature>`文档中删除元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-154">A value of <http://www.w3.org/2000/09/xmldsig#enveloped-signature> for the transform algorithm encodes a rule which is interpreted as remove the `<Signature>` element from the document.</span></span> <span data-ttu-id="127e3-155">否则，被封包的签名的验证程序将简要说明文档，包括签名，但签名者在应用签名之前会摘要文档，这会导致不同的答案。</span><span class="sxs-lookup"><span data-stu-id="127e3-155">Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.</span></span>  

- <span data-ttu-id="127e3-156">`<DigestMethod>` 元素</span><span class="sxs-lookup"><span data-stu-id="127e3-156">The `<DigestMethod>` element</span></span>
 
   <span data-ttu-id="127e3-157">标识要应用于由`URI` `<Reference>`元素的属性标识的已转换内容的摘要（加密哈希）方法。</span><span class="sxs-lookup"><span data-stu-id="127e3-157">Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the `<Reference>` element.</span></span> <span data-ttu-id="127e3-158">这由<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType>属性表示。</span><span class="sxs-lookup"><span data-stu-id="127e3-158">This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> property.</span></span>  
  
## <a name="choosing-a-canonicalization-method"></a><span data-ttu-id="127e3-159">选择规范化方法</span><span class="sxs-lookup"><span data-stu-id="127e3-159">Choosing a canonicalization method</span></span>  
 <span data-ttu-id="127e3-160">除非与要求使用不同值的规范进行互操作，否则建议使用默认的 .NET 规范化方法，即 C14N 1.0 算法，其值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315>。</span><span class="sxs-lookup"><span data-stu-id="127e3-160">Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default .NET canonicalization method, which is the XML-C14N 1.0 algorithm, whose value is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.</span></span> <span data-ttu-id="127e3-161">XMLDSIG 的所有实现都需要支持 C14N 1.0 算法，特别是在它是要应用的隐式最终转换时。</span><span class="sxs-lookup"><span data-stu-id="127e3-161">The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.</span></span>  
  
 <span data-ttu-id="127e3-162">有一些规范算法支持保留注释。</span><span class="sxs-lookup"><span data-stu-id="127e3-162">There are versions of canonicalization algorithms which support preserving comments.</span></span> <span data-ttu-id="127e3-163">建议不要使用注释保留的规范化方法，因为它们违反了 "已发现的签名" 原则。</span><span class="sxs-lookup"><span data-stu-id="127e3-163">Comment-preserving canonicalization methods are not recommended because they violate the "sign what is seen" principle.</span></span> <span data-ttu-id="127e3-164">也就是说， `<Signature>`元素中的注释不会更改签名的执行方式的处理逻辑，只是签名值是什么。</span><span class="sxs-lookup"><span data-stu-id="127e3-164">That is, the comments in a `<Signature>` element will not alter the processing logic for how the signature is performed, merely what the signature value is.</span></span> <span data-ttu-id="127e3-165">与弱签名算法结合使用时，允许包含注释会使攻击者不必要地强制进行哈希冲突，使得篡改的文档显得非常合法。</span><span class="sxs-lookup"><span data-stu-id="127e3-165">When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.</span></span>  <span data-ttu-id="127e3-166">在 .NET Framework 中，默认情况下仅支持内置 canonicalizers。</span><span class="sxs-lookup"><span data-stu-id="127e3-166">In the .NET Framework, only built-in canonicalizers are supported by default.</span></span> <span data-ttu-id="127e3-167">若要支持其他或自定义 canonicalizers， <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>请参见属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-167">To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property.</span></span> <span data-ttu-id="127e3-168">如果文档使用的规范化方法不在由<xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>属性表示的集合中，则该<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="127e3-168">If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="127e3-169">极其防御性的应用程序可以从集合中删除不希望签署者使用的<xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>任何值。</span><span class="sxs-lookup"><span data-stu-id="127e3-169">An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection.</span></span>  
  
## <a name="are-the-reference-values-safe-from-tampering"></a><span data-ttu-id="127e3-170">引用值是否安全不受篡改？</span><span class="sxs-lookup"><span data-stu-id="127e3-170">Are the Reference values safe from tampering?</span></span>  
 <span data-ttu-id="127e3-171">是的， `<Reference>`值是安全的，无法进行篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-171">Yes, the `<Reference>` values are safe from tampering.</span></span> <span data-ttu-id="127e3-172">.Net 在处理`<SignatureValue>`任何`<Reference>`值及其关联转换之前验证计算，并将及早中止以避免潜在的恶意处理指令。</span><span class="sxs-lookup"><span data-stu-id="127e3-172">.NET verifies the `<SignatureValue>` computation before processing any of the `<Reference>` values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.</span></span>  
  
## <a name="choosing-the-elements-to-sign"></a><span data-ttu-id="127e3-173">选择要签名的元素</span><span class="sxs-lookup"><span data-stu-id="127e3-173">Choosing the elements to sign</span></span>  
 <span data-ttu-id="127e3-174">如果可能，建议使用`URI`属性的值 "" （或<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>将属性设置为空字符串）。</span><span class="sxs-lookup"><span data-stu-id="127e3-174">We recommend that you use the value of "" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible.</span></span> <span data-ttu-id="127e3-175">这意味着将整个文档视为摘要计算，这意味着整个文档受到保护，无法进行篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-175">This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.</span></span>  
  
 <span data-ttu-id="127e3-176">通常，以锚点（ `URI`如 #foo）形式查看值非常常见，引用 ID 属性为 "foo" 的元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-176">It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is "foo".</span></span> <span data-ttu-id="127e3-177">遗憾的是，这很容易被篡改，因为这只包括目标元素的内容，而不包含上下文。</span><span class="sxs-lookup"><span data-stu-id="127e3-177">Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context.</span></span> <span data-ttu-id="127e3-178">滥用这种区别称为 XML 签名包装（XSW）。</span><span class="sxs-lookup"><span data-stu-id="127e3-178">Abusing this distinction is known as XML Signature Wrapping (XSW).</span></span>  
  
 <span data-ttu-id="127e3-179">如果你的应用程序将注释视为语义（这在处理 XML 时不常见），则应使用 "#xpointer （/）" 而不是 "" #xpointer，而不是 "#foo"。</span><span class="sxs-lookup"><span data-stu-id="127e3-179">If your application considers comments to be semantic (which is not common when dealing with XML), then you should use "#xpointer(/)" instead of "", and "#xpointer(id('foo'))" instead of "#foo".</span></span> <span data-ttu-id="127e3-180">#Xpointer 版本被解释为包含注释，而短名称窗体则不包括注释。</span><span class="sxs-lookup"><span data-stu-id="127e3-180">The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.</span></span>  
  
 <span data-ttu-id="127e3-181">如果需要接受仅部分保护的文档，并且想要确保读取签名保护的相同内容，请使用<xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="127e3-181">If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method.</span></span>  
  
## <a name="security-considerations-about-the-keyinfo-element"></a><span data-ttu-id="127e3-182">有关 KeyInfo 元素的安全注意事项</span><span class="sxs-lookup"><span data-stu-id="127e3-182">Security considerations about the KeyInfo element</span></span>  
 <span data-ttu-id="127e3-183">可选`<KeyInfo>`元素（即<xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>属性）中的数据（其中包含用于验证签名的密钥）不应受信任。</span><span class="sxs-lookup"><span data-stu-id="127e3-183">The data in the optional `<KeyInfo>` element (that is, the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property), which contains a key to validate the signature,  should not be trusted.</span></span>  
  
 <span data-ttu-id="127e3-184">特别是，当<xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>值表示一个 "合法的 RSA"、"DSA" 或 "ECDSA 公钥" 时，尽管该<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>文档的签名有效，但该文档可能已被篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-184">In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.</span></span>  <span data-ttu-id="127e3-185">发生这种情况是因为执行篡改的实体只需生成新的密钥，并使用该新密钥对被篡改的文档进行重新签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-185">This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key.</span></span> <span data-ttu-id="127e3-186">因此，除非应用程序验证公钥是预期值，否则应将文档视为已被篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-186">So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with.</span></span> <span data-ttu-id="127e3-187">这要求你的应用程序检查文档中嵌入的公钥，并根据文档上下文的已知值列表对其进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-187">This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context.</span></span> <span data-ttu-id="127e3-188">例如，如果可以理解文档由已知用户颁发，则可根据该用户使用的已知密钥列表检查该密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-188">For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.</span></span>  
  
 <span data-ttu-id="127e3-189">你还可以使用<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>方法（而不是<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>使用方法）在处理文档后验证密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-189">You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method.</span></span> <span data-ttu-id="127e3-190">但为了获得最佳安全性，应事先验证密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-190">But, for the optimal security, you should verify the key beforehand.</span></span>  
  
 <span data-ttu-id="127e3-191">另外，请考虑尝试用户注册的公钥，而不是读取`<KeyInfo>`元素中的内容。</span><span class="sxs-lookup"><span data-stu-id="127e3-191">Alternately, consider trying the user's registered public keys, rather than reading what's in the `<KeyInfo>` element.</span></span>  
  
## <a name="security-considerations-about-the-x509data-element"></a><span data-ttu-id="127e3-192">有关 X509Data 元素的安全注意事项</span><span class="sxs-lookup"><span data-stu-id="127e3-192">Security considerations about the X509Data element</span></span>  
 <span data-ttu-id="127e3-193">可选`<X509Data>`元素是`<KeyInfo>`元素的子元素，其中包含一个或多个 x509 证书或 x509 证书的标识符。</span><span class="sxs-lookup"><span data-stu-id="127e3-193">The optional `<X509Data>` element is a child of the `<KeyInfo>` element and contains one or more X509 certificates or identifiers for X509 certificates.</span></span> <span data-ttu-id="127e3-194">`<X509Data>`元素中的数据本身也不受信任。</span><span class="sxs-lookup"><span data-stu-id="127e3-194">The data in the `<X509Data>` element should also not be inherently trusted.</span></span>  
  
 <span data-ttu-id="127e3-195">使用嵌入`<X509Data>`元素验证文档时，.net 只验证数据是否解析为 X509 证书，该证书的公钥可以成功用于验证文档签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-195">When verifying a document with the embedded `<X509Data>` element, .NET verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature.</span></span> <span data-ttu-id="127e3-196">不同于调用<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>方法`verifySignatureOnly`并将参数设置为`false`时，不会执行任何吊销检查，也不会检查链信任，也不会验证过期。</span><span class="sxs-lookup"><span data-stu-id="127e3-196">Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified.</span></span> <span data-ttu-id="127e3-197">即使你的应用程序提取证书本身，并将其传递<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>给方法`verifySignatureOnly` ，并将参数`false`设置为，此验证仍不足以防止文档篡改。</span><span class="sxs-lookup"><span data-stu-id="127e3-197">Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering.</span></span> <span data-ttu-id="127e3-198">仍需验证证书是否适用于所签名的文档。</span><span class="sxs-lookup"><span data-stu-id="127e3-198">The certificate still needs to be verified as being appropriate for the document being signed.</span></span>  
  
 <span data-ttu-id="127e3-199">使用嵌入签名证书可以提供有用的`<X509Data>`密钥轮换策略，无论是在节中还是在文档内容中。</span><span class="sxs-lookup"><span data-stu-id="127e3-199">Using an embedded signing certificate can provide useful key rotation strategies, whether in the `<X509Data>` section or in the document content.</span></span> <span data-ttu-id="127e3-200">使用此方法时，应用程序应手动提取证书，并执行类似于以下内容的验证：</span><span class="sxs-lookup"><span data-stu-id="127e3-200">When using this approach an application should extract the certificate manually and perform validation similar to:</span></span>  
  
-   <span data-ttu-id="127e3-201">证书是由证书颁发机构（CA）直接或通过证书颁发机构（CA）颁发的，证书颁发机构（CA）在应用程序中嵌入公共证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-201">The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.</span></span>  
  
     <span data-ttu-id="127e3-202">使用不带额外检查的操作系统提供的信任列表（如已知使用者名称）不足以防止篡改<xref:System.Security.Cryptography.Xml.SignedXml>。</span><span class="sxs-lookup"><span data-stu-id="127e3-202">Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>.</span></span>  
  
-   <span data-ttu-id="127e3-203">验证证书时，证书尚未过期（或 "立即" 进行近乎实时的文档处理）。</span><span class="sxs-lookup"><span data-stu-id="127e3-203">The certificate is verified to have not been expired at the time of document signing (or "now" for near real-time document processing).</span></span>  
  
-   <span data-ttu-id="127e3-204">对于支持吊销的 CA 颁发的长期证书，请验证是否未吊销证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-204">For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.</span></span>  
  
-   <span data-ttu-id="127e3-205">验证证书使用者是否适用于当前文档。</span><span class="sxs-lookup"><span data-stu-id="127e3-205">The certificate subject is verified as being appropriate to the current document.</span></span>  
  
## <a name="choosing-the-transform-algorithm"></a><span data-ttu-id="127e3-206">选择转换算法</span><span class="sxs-lookup"><span data-stu-id="127e3-206">Choosing the transform algorithm</span></span>  
 <span data-ttu-id="127e3-207">如果要使用已指示特定值（如 XrML）的规范进行互操作，则需要遵循规范。</span><span class="sxs-lookup"><span data-stu-id="127e3-207">If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.</span></span> <span data-ttu-id="127e3-208">如果你有一个已封装的签名（例如，在对整个文档进行签名时），则<http://www.w3.org/2000/09/xmldsig#enveloped-signature>需要使用（ <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>由类表示）。</span><span class="sxs-lookup"><span data-stu-id="127e3-208">If you have an enveloped signature (such as when signing the whole document), then you need to use <http://www.w3.org/2000/09/xmldsig#enveloped-signature> (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class).</span></span> <span data-ttu-id="127e3-209">还可以指定隐式 XML C14N 转换，但这不是必需的。</span><span class="sxs-lookup"><span data-stu-id="127e3-209">You can specify the implicit XML-C14N transform as well, but it's not necessary.</span></span>  <span data-ttu-id="127e3-210">对于封装或分离的签名，不需要进行转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-210">For an enveloping or detached signature, no transforms are required.</span></span> <span data-ttu-id="127e3-211">隐式 XML C14N 转换负责处理所有内容。</span><span class="sxs-lookup"><span data-stu-id="127e3-211">The implicit XML-C14N transform takes care of everything.</span></span>  
  
 <span data-ttu-id="127e3-212">使用[Microsoft 安全公告 MS16-035](https://docs.microsoft.com/security-updates/securitybulletins/2016/ms16-035)引入的安全性更新后，.net 限制了默认情况下可以在文档验证中使用的转换，导致不受信任<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>的转换导致`false`总是返回。</span><span class="sxs-lookup"><span data-stu-id="127e3-212">With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://docs.microsoft.com/security-updates/securitybulletins/2016/ms16-035), .NET has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`.</span></span> <span data-ttu-id="127e3-213">特别是，不再允许使用需要额外输入的转换（指定为 XML 中的子元素），因为它们被恶意用户滥用。</span><span class="sxs-lookup"><span data-stu-id="127e3-213">In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users.</span></span> <span data-ttu-id="127e3-214">W3C 建议避免使用 XPath 和 XSLT 转换，这是受这些限制影响的两个主要转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-214">The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.</span></span>  
  
## <a name="the-problem-with-external-references"></a><span data-ttu-id="127e3-215">外部引用的问题</span><span class="sxs-lookup"><span data-stu-id="127e3-215">The problem with external references</span></span>  
 <span data-ttu-id="127e3-216">如果应用程序不验证外部引用是否适用于当前上下文，它们可能会以提供许多安全漏洞的方式被滥用（包括拒绝服务、分布式反射拒绝服务、信息泄露、跳过签名和远程代码执行）。</span><span class="sxs-lookup"><span data-stu-id="127e3-216">If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution).</span></span> <span data-ttu-id="127e3-217">即使应用程序要验证外部引用 URI，也会在加载两次资源时出现问题：一次是在你的应用程序读取它时， <xref:System.Security.Cryptography.Xml.SignedXml>一次是在读取时。</span><span class="sxs-lookup"><span data-stu-id="127e3-217">Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it.</span></span> <span data-ttu-id="127e3-218">由于不能保证应用程序的 "读取" 和 "文档验证" 步骤具有相同的内容，因此签名不会提供可信度。</span><span class="sxs-lookup"><span data-stu-id="127e3-218">Since there's no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.</span></span>  
  
 <span data-ttu-id="127e3-219">由于外部引用的风险， <xref:System.Security.Cryptography.Xml.SignedXml>在遇到外部引用时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="127e3-219">Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered.</span></span>  <span data-ttu-id="127e3-220">有关此问题的详细信息，请参阅[知识库文章 3148821](https://support.microsoft.com/kb/3148821)。</span><span class="sxs-lookup"><span data-stu-id="127e3-220">For more information about this issue, see [KB article 3148821](https://support.microsoft.com/kb/3148821).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-221">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-221">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="127e3-222">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-222">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.w3.org/TR/xmldsig-bestpractices"><span data-ttu-id="127e3-223">XML 签名最佳做法</span><span class="sxs-lookup"><span data-stu-id="127e3-223">XML Signature Best Practices</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="127e3-224">初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="127e3-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="127e3-225">初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="127e3-225">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-226">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-226">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-227">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-227">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-228">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-228">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.SignedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.SignedXml" Usage="new System.Security.Cryptography.Xml.SignedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="127e3-229">用于初始化 <see cref="T:System.Xml.XmlDocument" /> 的新实例的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-229">The <see cref="T:System.Xml.XmlDocument" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</span></span></param>
        <summary><span data-ttu-id="127e3-230">从指定的 XML 文档初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="127e3-230">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-231">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-231">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-232">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-232">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-233">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-233">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-234"><paramref name="document" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-234">The <paramref name="document" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="127e3-235">或</span><span class="sxs-lookup"><span data-stu-id="127e3-235">-or-</span></span> 
<span data-ttu-id="127e3-236"><paramref name="document" /> 参数含有 null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-236">The <paramref name="document" /> parameter contains a null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.SignedXml : System.Xml.XmlElement -&gt; System.Security.Cryptography.Xml.SignedXml" Usage="new System.Security.Cryptography.Xml.SignedXml elem" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="127e3-237">用于初始化 <see cref="T:System.Xml.XmlElement" /> 的新实例的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-237">The <see cref="T:System.Xml.XmlElement" /> object to use to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</span></span></param>
        <summary><span data-ttu-id="127e3-238">从指定的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象初始化 <see cref="T:System.Xml.XmlElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="127e3-238">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified <see cref="T:System.Xml.XmlElement" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-239"><paramref name="elem" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-239">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberSignature Language="F#" Value="member this.AddObject : System.Security.Cryptography.Xml.DataObject -&gt; unit" Usage="signedXml.AddObject dataObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject"><span data-ttu-id="127e3-240">要添加到要签名对象列表中的 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-240">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to add to the list of objects to be signed.</span></span></param>
        <summary><span data-ttu-id="127e3-241">将 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象添加到要签名的对象的列表中。</span><span class="sxs-lookup"><span data-stu-id="127e3-241">Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> object to the list of objects to be signed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-242">方法添加一个`<Object>`元素，该元素表示要签名到 XML 数字签名`<Signature>`的元素的对象。 <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-242">The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method adds an `<Object>` element that represents an object to be signed to the `<Signature>` element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="127e3-243">方法在内部<xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> <xref:System.Security.Cryptography.Xml.Signature>调用对象 <xref:System.Security.Cryptography.Xml.SignedXml> 封装的对象的方法。 <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-243">The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  <span data-ttu-id="127e3-244">还可以通过从<xref:System.Security.Cryptography.Xml.DataObject> <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>属性中直接<xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>调用方法来添加对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-244">You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.</span></span>  
  
 <span data-ttu-id="127e3-245">有关 XML 数字签名的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-245">For more information about XML digital signatures, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-246">下面的代码示例计算和 XML 签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-246">The following code example computes and XML signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.Reference -&gt; unit" Usage="signedXml.AddReference reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="127e3-247">描述用于创建 XML 数字签名的摘要方法、摘要值和转换的 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-247">The  <see cref="T:System.Security.Cryptography.Xml.Reference" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span></span></param>
        <summary><span data-ttu-id="127e3-248">将 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象添加到描述用于创建 XML 数字签名的摘要方法、摘要值和转换的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象中。</span><span class="sxs-lookup"><span data-stu-id="127e3-248">Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> object to the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-249">方法将一个`<Reference>`元素添加到<xref:System.Security.Cryptography.Xml.SignedXml>对象，该对象描述用于创建 XML 数字签名的摘要方法、摘要值和转换。 <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-249">The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a `<Reference>` element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.</span></span>  <span data-ttu-id="127e3-250">元素是`<SignedInfo>`元素的子元素。 `<Reference>`</span><span class="sxs-lookup"><span data-stu-id="127e3-250">The `<Reference>` element is a subelement of the `<SignedInfo>` element.</span></span>  
  
 <span data-ttu-id="127e3-251">方法在内部<xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> <xref:System.Security.Cryptography.Xml.SignedInfo>调用对象 <xref:System.Security.Cryptography.Xml.SignedXml> 封装的对象的方法。 <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-251">The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  <span data-ttu-id="127e3-252">还可以通过从<xref:System.Security.Cryptography.Xml.Reference> <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>属性中直接<xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>调用方法来添加对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-252">You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span>  
  
 <span data-ttu-id="127e3-253">有关 XML 数字签名的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-253">For more information about XML digital signatures, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-254">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-254">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-255">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-255">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-256">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-256">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="127e3-257">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-257">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : unit -&gt; bool" Usage="signedXml.CheckSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="127e3-258">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否使用签名中的公钥进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-258">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</span></span></summary>
        <returns><span data-ttu-id="127e3-259">如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-259"><see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-260">此方法还计算引用的摘要和签名的值。</span><span class="sxs-lookup"><span data-stu-id="127e3-260">This method also computes the digest of the references and the value of the signature.</span></span>  
  
 <span data-ttu-id="127e3-261">如果使用 x.509 签名对 XML 文档进行签名，则该<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>方法将在 "通讯簿" 存储中搜索适用于验证的证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-261">If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the "AddressBook" store for certificates suitable for the verification.</span></span> <span data-ttu-id="127e3-262">例如，如果证书是由使用者密钥标识符（SKI）引用的，则该<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>方法将选择具有此 SKI 的证书，然后再尝试一次，直到可以验证证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-262">For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-263">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-263">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="127e3-264">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-264">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="127e3-265">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-265">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-266">签名中的公钥的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。</span><span class="sxs-lookup"><span data-stu-id="127e3-266">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span></span>  
  
<span data-ttu-id="127e3-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-267">-or-</span></span> 
<span data-ttu-id="127e3-268">未能创建签名说明。</span><span class="sxs-lookup"><span data-stu-id="127e3-268">The signature description could not be created.</span></span>  
  
<span data-ttu-id="127e3-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-269">-or</span></span> 
<span data-ttu-id="127e3-270">未能创建哈希算法。</span><span class="sxs-lookup"><span data-stu-id="127e3-270">The hash algorithm could not be created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.AsymmetricAlgorithm -&gt; bool" Usage="signedXml.CheckSignature key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="127e3-271">保存有将用于验证 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 属性的密钥的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性实现。</span><span class="sxs-lookup"><span data-stu-id="127e3-271">The implementation of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> property that holds the key to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span></span></param>
        <summary><span data-ttu-id="127e3-272">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否对指定密钥进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-272">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key.</span></span></summary>
        <returns><span data-ttu-id="127e3-273">如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性对指定密钥进行验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-273"><see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-274">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-274">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="127e3-275">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-275">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-276"><paramref name="key" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-276">The <paramref name="key" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-277"><paramref name="key" /> 参数的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。</span><span class="sxs-lookup"><span data-stu-id="127e3-277">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the <paramref name="key" /> parameter does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span></span>  
  
<span data-ttu-id="127e3-278">或</span><span class="sxs-lookup"><span data-stu-id="127e3-278">-or-</span></span> 
<span data-ttu-id="127e3-279">未能创建签名说明。</span><span class="sxs-lookup"><span data-stu-id="127e3-279">The signature description could not be created.</span></span>  
  
<span data-ttu-id="127e3-280">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-280">-or</span></span> 
<span data-ttu-id="127e3-281">未能创建哈希算法。</span><span class="sxs-lookup"><span data-stu-id="127e3-281">The hash algorithm could not be created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.KeyedHashAlgorithm -&gt; bool" Usage="signedXml.CheckSignature macAlg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg"><span data-ttu-id="127e3-282">保存将用于验证 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 属性的 MAC 的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="127e3-282">The implementation of <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that holds the MAC to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span></span></param>
        <summary><span data-ttu-id="127e3-283">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否对指定的消息身份验证代码 (MAC) 算法进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-283">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified message authentication code (MAC) algorithm.</span></span></summary>
        <returns><span data-ttu-id="127e3-284">如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性对指定的 MAC 进行验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-284"><see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified MAC; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-285">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-285">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 <span data-ttu-id="127e3-286">下面的代码示例演示如何使用封装签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-286">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-287"><paramref name="macAlg" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-287">The <paramref name="macAlg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-288">指定的 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 对象的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 属性无效。</span><span class="sxs-lookup"><span data-stu-id="127e3-288">The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.</span></span>  
  
<span data-ttu-id="127e3-289">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-289">-or-</span></span> 
<span data-ttu-id="127e3-290"><see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-290">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="127e3-291">或</span><span class="sxs-lookup"><span data-stu-id="127e3-291">-or-</span></span> 
<span data-ttu-id="127e3-292">未能创建用于检查签名的加密转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-292">The cryptographic transform used to check the signature could not be created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.X509Certificates.X509Certificate2 * bool -&gt; bool" Usage="signedXml.CheckSignature (certificate, verifySignatureOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="127e3-293">用于验证 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 属性的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-293">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to use to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span></span></param>
        <param name="verifySignatureOnly"><span data-ttu-id="127e3-294"><see langword="true" /> 表示仅验证签名；<see langword="false" /> 表示同时验证签名和证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-294"><see langword="true" /> to verify the signature only; <see langword="false" /> to verify both the signature and certificate.</span></span></param>
        <summary><span data-ttu-id="127e3-295">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否验证指定的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象，并确定该证书是否有效（可选）。</span><span class="sxs-lookup"><span data-stu-id="127e3-295">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies for the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object and, optionally, whether the certificate is valid.</span></span></summary>
        <returns><span data-ttu-id="127e3-296">如果签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-296"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="127e3-297">或</span><span class="sxs-lookup"><span data-stu-id="127e3-297">-or-</span></span> 
 <span data-ttu-id="127e3-298">如果签名和证书都有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-298"><see langword="true" /> if the signature and certificate are valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-299">在 .NET Framework 版本1.1 中，不验证 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-299">In version 1.1 of the .NET Framework, the X.509 certificate is not verified.</span></span>  <span data-ttu-id="127e3-300">在版本2.0 和更高版本中，将验证 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-300">In version 2.0 and later, the X.509 certificate is verified.</span></span>  
  
 <span data-ttu-id="127e3-301">在 .NET Framework 版本2.0 及更高版本中， <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>此方法将在 "通讯簿" 存储中搜索适用于验证的证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-301">In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the "AddressBook" store for certificates suitable for the verification.</span></span> <span data-ttu-id="127e3-302">例如，如果证书是由使用者密钥标识符（SKI）引用的，则该<xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>方法将选择具有此 SKI 的证书，然后再尝试一次，直到可以验证证书。</span><span class="sxs-lookup"><span data-stu-id="127e3-302">For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-303">下面的代码示例使用证书存储中的 x.509 证书对 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-303">The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.</span></span>  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-304"><paramref name="certificate" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-304">The <paramref name="certificate" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-305">未能为 <paramref name="certificate" /> 参数创建签名说明。</span><span class="sxs-lookup"><span data-stu-id="127e3-305">A signature description could not be created for the <paramref name="certificate" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberSignature Language="F#" Value="member this.CheckSignatureReturningKey :  -&gt; bool" Usage="signedXml.CheckSignatureReturningKey signingKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey"><span data-ttu-id="127e3-306">当此方法返回时，将包含保存签名中的公钥的 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="127e3-306">When this method returns, contains the implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key in the signature.</span></span> <span data-ttu-id="127e3-307">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="127e3-307">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="127e3-308">确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否使用签名中的公钥进行验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-308">Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature.</span></span></summary>
        <returns><span data-ttu-id="127e3-309">如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性使用签名中的公钥进行验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-309"><see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property verifies using the public key in the signature; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-310">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-310">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="127e3-311">下面的代码示例演示如何使用封装签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-311">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-312"><paramref name="signingKey" /> 参数为 null。</span><span class="sxs-lookup"><span data-stu-id="127e3-312">The <paramref name="signingKey" /> parameter is null.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-313">签名中的公钥的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。</span><span class="sxs-lookup"><span data-stu-id="127e3-313">The <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> property of the public key in the signature does not match the <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> property.</span></span>  
  
<span data-ttu-id="127e3-314">或</span><span class="sxs-lookup"><span data-stu-id="127e3-314">-or-</span></span> 
<span data-ttu-id="127e3-315">未能创建签名说明。</span><span class="sxs-lookup"><span data-stu-id="127e3-315">The signature description could not be created.</span></span>  
  
<span data-ttu-id="127e3-316">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-316">-or</span></span> 
<span data-ttu-id="127e3-317">未能创建哈希算法。</span><span class="sxs-lookup"><span data-stu-id="127e3-317">The hash algorithm could not be created.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="127e3-318">计算 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-318">Computes an XML digital signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberSignature Language="F#" Value="member this.ComputeSignature : unit -&gt; unit" Usage="signedXml.ComputeSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="127e3-319">计算 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-319">Computes an XML digital signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-320"><xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>方法创建 XML 数字签名，并构造所需的多个 xml 元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-320">The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed.</span></span>  
  
 <span data-ttu-id="127e3-321">在调用此方法之前，必须设置要签名<xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>的数据和属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-321">You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-322">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-322">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 <span data-ttu-id="127e3-323">下面的代码示例演示如何使用封装签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-323">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-324"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-324">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="127e3-325">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-325">-or-</span></span> 
<span data-ttu-id="127e3-326"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 属性既不是 <see cref="T:System.Security.Cryptography.DSA" /> 对象，也不是 <see cref="T:System.Security.Cryptography.RSA" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-326">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> property is not a <see cref="T:System.Security.Cryptography.DSA" /> object or <see cref="T:System.Security.Cryptography.RSA" /> object.</span></span>  
  
<span data-ttu-id="127e3-327">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-327">-or-</span></span> 
<span data-ttu-id="127e3-328">未能加载密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-328">The key could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberSignature Language="F#" Value="member this.ComputeSignature : System.Security.Cryptography.KeyedHashAlgorithm -&gt; unit" Usage="signedXml.ComputeSignature macAlg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg"><span data-ttu-id="127e3-329"><see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象，它保存将用于计算 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性值的 MAC。</span><span class="sxs-lookup"><span data-stu-id="127e3-329">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object that holds the MAC to be used to compute the value of the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> property.</span></span></param>
        <summary><span data-ttu-id="127e3-330">使用指定的消息身份验证代码 (MAC) 算法计算 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-330">Computes an XML digital signature using the specified message authentication code (MAC) algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-331"><xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>方法使用指定的 MAC 算法创建 XML 数字签名，并构造所需的多个 xml 元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-331">The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.</span></span>  
  
 <span data-ttu-id="127e3-332">在调用此方法之前，必须设置要签名的数据。</span><span class="sxs-lookup"><span data-stu-id="127e3-332">You must set the data to be signed before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-333">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-333">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 <span data-ttu-id="127e3-334">下面的代码示例演示如何使用封装签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-334">The following code example shows how to sign and verify an entire XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-335"><paramref name="macAlg" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-335">The <paramref name="macAlg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-336">由 <paramref name="macAlg" /> 参数指定的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象不是 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="127e3-336">The <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object specified by the <paramref name="macAlg" /> parameter is not an instance of <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span></span>  
  
<span data-ttu-id="127e3-337">或</span><span class="sxs-lookup"><span data-stu-id="127e3-337">-or-</span></span> 
<span data-ttu-id="127e3-338">指定的 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 对象的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 属性无效。</span><span class="sxs-lookup"><span data-stu-id="127e3-338">The <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> property of the specified <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> object is not valid.</span></span>  
  
<span data-ttu-id="127e3-339">或</span><span class="sxs-lookup"><span data-stu-id="127e3-339">-or-</span></span> 
<span data-ttu-id="127e3-340">未能创建用于检查签名的加密转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-340">The cryptographic transform used to check the signature could not be created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptedXml : System.Security.Cryptography.Xml.EncryptedXml with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-341">获取或设置定义 XML 加密处理规则的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-341">Gets or sets an <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</span></span></summary>
        <value><span data-ttu-id="127e3-342">定义 XML 加密处理规则的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-342">An <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object that defines the XML encryption processing rules.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="signedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="127e3-343">要从中检索 <see cref="T:System.Xml.XmlDocument" /> 对象的 <see cref="T:System.Xml.XmlElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-343">The <see cref="T:System.Xml.XmlDocument" /> object to retrieve the <see cref="T:System.Xml.XmlElement" /> object from.</span></span></param>
        <param name="idValue"><span data-ttu-id="127e3-344">要从 <see cref="T:System.Xml.XmlElement" /> 对象中检索的 <see cref="T:System.Xml.XmlDocument" /> 对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="127e3-344">The ID of the <see cref="T:System.Xml.XmlElement" /> object to retrieve from the <see cref="T:System.Xml.XmlDocument" /> object.</span></span></param>
        <summary><span data-ttu-id="127e3-345">从指定的 <see cref="T:System.Xml.XmlElement" /> 对象返回具有指定 ID 的 <see cref="T:System.Xml.XmlDocument" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-345">Returns the <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object.</span></span></summary>
        <returns><span data-ttu-id="127e3-346">指定的 <see cref="T:System.Xml.XmlElement" /> 对象中具有指定 ID 的 <see cref="T:System.Xml.XmlDocument" /> 对象；或者，如果未能找到它，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-346">The <see cref="T:System.Xml.XmlElement" /> object with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" /> object, or <see langword="null" /> if it could not be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberSignature Language="F#" Value="abstract member GetPublicKey : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm&#xA;override this.GetPublicKey : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="signedXml.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="127e3-347">返回签名的公钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-347">Returns the public key of a signature.</span></span></summary>
        <returns><span data-ttu-id="127e3-348">包含签名公钥的 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象；如果未能找到该公钥，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-348">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that contains the public key of the signature, or <see langword="null" /> if the key cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-349">方法返回一个<xref:System.Security.Cryptography.AsymmetricAlgorithm>对象，该对象包含可用于验证 XML 数字签名的公钥。 <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-349">The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature.</span></span>  
  
 <span data-ttu-id="127e3-350">密钥必须<xref:System.Security.Cryptography.DSA>是<xref:System.Security.Cryptography.RSA>或密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-350">The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-351"><see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-351">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="signedXml.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="127e3-352">返回 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="127e3-352">Returns the XML representation of a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <returns><span data-ttu-id="127e3-353"><see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="127e3-353">The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-354"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-354">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="127e3-355">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-355">-or-</span></span> 
<span data-ttu-id="127e3-356"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-356">The <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-357">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-357">Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-358">当前 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-358">The <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-359">属性使用属性中`<KeyInfo>`包含的<xref:System.Security.Cryptography.Xml.KeyInfo>对象来表示 XML 数字签名的元素。 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-359">The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the `<KeyInfo>` element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property.</span></span>  <span data-ttu-id="127e3-360">元素是`<Signature>`元素的子元素。 `<KeyInfo>`</span><span class="sxs-lookup"><span data-stu-id="127e3-360">The `<KeyInfo>` element is a subelement of the `<Signature>` element.</span></span>  
  
 <span data-ttu-id="127e3-361"><xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>使用属性来嵌入密钥相关信息，这些信息旨在帮助确定验证 XML 文档所必需的密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-361">Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document.</span></span>  
  
 <span data-ttu-id="127e3-362">有关`<KeyInfo>`元素的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-362">For more information about the `<KeyInfo>` element, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-363">下面的代码示例在对<xref:System.Security.Cryptography.Xml.KeyInfo>由通用资源标识符（URI）表示的资源进行签名时使用对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-363">The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).</span></span>  <span data-ttu-id="127e3-364">此示例将签名保存在新文件中。</span><span class="sxs-lookup"><span data-stu-id="127e3-364">This example saves the signature in a new file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 <span data-ttu-id="127e3-365">下面的代码示例在对<xref:System.Security.Cryptography.Xml.KeyInfo> XML 文档进行签名时使用对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-365">The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.</span></span>  <span data-ttu-id="127e3-366">此示例将签名保存在新文件中。</span><span class="sxs-lookup"><span data-stu-id="127e3-366">This example saves the signature in a new file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="signedXml.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="127e3-367">要从其加载 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 状态的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-367">The XML element to load the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from.</span></span></param>
        <summary><span data-ttu-id="127e3-368">从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="127e3-368">Loads a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="127e3-369">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A>方法来验证 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="127e3-369">The following code example shows how to use the <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> method to verify an XML document.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="127e3-370"><paramref name="value" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-370">The <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="127e3-371"><paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-371">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> property.</span></span>  
  
<span data-ttu-id="127e3-372">- 或 -</span><span class="sxs-lookup"><span data-stu-id="127e3-372">-or-</span></span> 
<span data-ttu-id="127e3-373"><paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-373">The <paramref name="value" /> parameter does not contain a valid <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberSignature Language="F#" Value="val mutable m_signature : System.Security.Cryptography.Xml.Signature" Usage="System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-374">表示当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-374">Represents the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberSignature Language="F#" Value="val mutable m_strSigningKeyName : string" Usage="System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-375">表示将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</span><span class="sxs-lookup"><span data-stu-id="127e3-375">Represents the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver" Usage="System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-376">设置当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-376">Sets the current <see cref="T:System.Xml.XmlResolver" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-377">当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-377">The current <see cref="T:System.Xml.XmlResolver" /> object.</span></span> <span data-ttu-id="127e3-378">默认为 <see cref="T:System.Xml.XmlSecureResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-378">The defaults is a <see cref="T:System.Xml.XmlSecureResolver" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-379"><xref:System.Xml.XmlResolver>类解析由统一资源标识符（URI）命名的外部 XML 资源。</span><span class="sxs-lookup"><span data-stu-id="127e3-379">The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="127e3-380">如果你不信任 XML 文件的源，你可能不希望允许 XML 文件访问由 URI 命名的计算机资源。</span><span class="sxs-lookup"><span data-stu-id="127e3-380">If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI.</span></span> <span data-ttu-id="127e3-381">通过指定不同<xref:System.Xml.XmlResolver>的<xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A>对象，可以使用属性控制 XML 文件对计算机资源的访问级别。</span><span class="sxs-lookup"><span data-stu-id="127e3-381">You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects.</span></span> <span data-ttu-id="127e3-382">如果你不希望允许任何访问权限，则可以将此属性设置为`null` （`Nothing`在 Visual Basic 中）。</span><span class="sxs-lookup"><span data-stu-id="127e3-382">If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeCanonicalizationMethods : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-383">获取已显式允许其规范化算法的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="127e3-383">Gets the names of methods whose canonicalization algorithms are explicitly allowed.</span></span></summary>
        <value><span data-ttu-id="127e3-384">一个安全生成规范 XML 的方法的名称集合。</span><span class="sxs-lookup"><span data-stu-id="127e3-384">A collection of the names of methods that safely produce canonical XML.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-385">规范化方法将 XML 文档转换为其规范格式。</span><span class="sxs-lookup"><span data-stu-id="127e3-385">Canonicalization methods convert an XML document to its canonical form.</span></span> <span data-ttu-id="127e3-386">有关规范 XML 的详细信息，请参阅 W3C 网站上的[规范 xml](https://www.w3.org/TR/xml-c14n) 。</span><span class="sxs-lookup"><span data-stu-id="127e3-386">For more information about canonical XML, see [Canonical XML](https://www.w3.org/TR/xml-c14n) on the W3C website.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signature : System.Security.Cryptography.Xml.Signature" Usage="System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-387">获取当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-387">Gets the <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-388">当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-388">The <see cref="T:System.Security.Cryptography.Xml.Signature" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-389">属性使用属性中`<Signature>`包含的<xref:System.Security.Cryptography.Xml.Signature>对象来表示 XML 数字签名的元素。 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-389">The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the `<Signature>` element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property.</span></span>  <span data-ttu-id="127e3-390">`<Signature>`元素是用于创建和验证 XML 数字签名的根元素。</span><span class="sxs-lookup"><span data-stu-id="127e3-390">The `<Signature>` element is the root element used for XML digital signature creation and verification.</span></span>  
  
 <span data-ttu-id="127e3-391">使用属性可<xref:System.Security.Cryptography.Xml.Signature>检索<xref:System.Security.Cryptography.Xml.SignedXml>对象使用的对象。 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-391">Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  
  
 <span data-ttu-id="127e3-392">有关`<Signature>`元素的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-392">For more information about the `<Signature>` element, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="127e3-393">下面的代码示例使用<xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>属性，通过封装的签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-393">The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 <span data-ttu-id="127e3-394">下面的代码示例使用<xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>属性对使用分离签名的统一资源标识符（URI）可寻址对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-394">The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignatureFormatValidator : Func&lt;System.Security.Cryptography.Xml.SignedXml, bool&gt; with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-395">获取一个委托，将调用此委托以验证 XML 签名的格式（而非加密安全性）。</span><span class="sxs-lookup"><span data-stu-id="127e3-395">Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.</span></span></summary>
        <value><span data-ttu-id="127e3-396">如果此格式是可接受的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="127e3-396"><see langword="true" /> if the format is acceptable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-397">此方法可用于确保只使用某些转换，或者签名使用特定哈希算法等。</span><span class="sxs-lookup"><span data-stu-id="127e3-397">This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.</span></span>  
  
 <span data-ttu-id="127e3-398">将属性设置为`null`可<xref:System.Security.Cryptography.Xml.SignedXml>从对象中删除所有签名格式验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-398">Setting the property to `null` removes all signature format validation from the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span>  
  
 <span data-ttu-id="127e3-399">如果需要，还可以读取对象的当前委托并将其链接到该委托。</span><span class="sxs-lookup"><span data-stu-id="127e3-399">You can also read the object's current delegate and chain to it if you want.</span></span>  
  
 <span data-ttu-id="127e3-400">如果要设置格式验证程序，则您提供的委托将作为输入参数接收到要验证<xref:System.Security.Cryptography.Xml.SignedXml>的对象，并返回一个布尔`true`值（如果该格式为可接受`false` ）。</span><span class="sxs-lookup"><span data-stu-id="127e3-400">If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value - `true` if the format is acceptable, `false` if it is not.</span></span> <span data-ttu-id="127e3-401">如果委托出于任何`false`原因返回，则<xref:System.Security.Cryptography.Xml.SignedXml>对象将报告 XML 签名无效。</span><span class="sxs-lookup"><span data-stu-id="127e3-401">If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureLength : string" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-402">获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名长度。</span><span class="sxs-lookup"><span data-stu-id="127e3-402">Gets the length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-403">当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名长度。</span><span class="sxs-lookup"><span data-stu-id="127e3-403">The length of the signature for the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureMethod : string" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-404">获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名方法。</span><span class="sxs-lookup"><span data-stu-id="127e3-404">Gets the signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-405">当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名方法。</span><span class="sxs-lookup"><span data-stu-id="127e3-405">The signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-406">属性使用属性中`<SignatureMethod>`包含的统一资源标识符（URI）字符串表示 XML 数字签名的元素。 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-406">The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the `<SignatureMethod>` element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property.</span></span> <span data-ttu-id="127e3-407">元素是`<SignedInfo>`元素的子元素。 `<SignatureMethod>`</span><span class="sxs-lookup"><span data-stu-id="127e3-407">The `<SignatureMethod>` element is a subelement of the `<SignedInfo>` element.</span></span>  
  
 <span data-ttu-id="127e3-408">使用属性可`<SignatureMethod>`检索<xref:System.Security.Cryptography.Xml.SignedXml>对象使用的 URI。 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-408">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the `<SignatureMethod>` URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.</span></span> <span data-ttu-id="127e3-409">此属性为只读属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-409">This property is read only.</span></span> <span data-ttu-id="127e3-410">有关以编程方式为`<SignatureMethod>`元素指定 URI 的详细信息， <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>请参阅属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-410">For more information about programmatically specifying a URI for the `<SignatureMethod>` element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property.</span></span>  
  
 <span data-ttu-id="127e3-411">有关`<SignatureMethod>`元素的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-411">For more information about the `<SignatureMethod>` element, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureValue : byte[]" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-412">获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名值。</span><span class="sxs-lookup"><span data-stu-id="127e3-412">Gets the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-413">一个字节数组，其中包含当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名值。</span><span class="sxs-lookup"><span data-stu-id="127e3-413">A byte array that contains the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-414">属性表示 XML 数字`<SignatureValue>`签名的元素，该元素使用属性中包含的字节数组。 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-414">The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the `<SignatureValue>` element of an XML digital signature using an array of bytes contained within the property.</span></span>  <span data-ttu-id="127e3-415">元素是`<Signature>`元素的子元素。 `<SignatureValue>`</span><span class="sxs-lookup"><span data-stu-id="127e3-415">The `<SignatureValue>` element is a subelement of the `<Signature>` element.</span></span>  
  
 <span data-ttu-id="127e3-416"><xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>使用属性可检索 XML 数字签名的值。</span><span class="sxs-lookup"><span data-stu-id="127e3-416">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.</span></span>  <span data-ttu-id="127e3-417">成功调用<xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>方法后，将自动填充此属性。</span><span class="sxs-lookup"><span data-stu-id="127e3-417">This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.</span></span>  
  
 <span data-ttu-id="127e3-418">有关`<SignatureValue>`元素的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-418">For more information about the `<SignatureValue>` element, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignedInfo : System.Security.Cryptography.Xml.SignedInfo" Usage="System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-419">获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-419">Gets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-420">当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="127e3-420">The <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> object of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-421">属性表示 XML 数字`<SignedInfo>`签名的元素，该元素使用属性中包含的字节数组。 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-421">The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the `<SignedInfo>` element of an XML digital signature using an array of bytes contained within the property.</span></span>  <span data-ttu-id="127e3-422">元素是`<Signature>`元素的子元素。 `<SignedInfo>`</span><span class="sxs-lookup"><span data-stu-id="127e3-422">The `<SignedInfo>` element is a subelement of the `<Signature>` element.</span></span>  
  
 <span data-ttu-id="127e3-423">使用属性可<xref:System.Security.Cryptography.Xml.SignedInfo>检索<xref:System.Security.Cryptography.Xml.SignedXml>对象用来创建 XML 数字签名的对象。 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A></span><span class="sxs-lookup"><span data-stu-id="127e3-423">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature.</span></span>  
  
 <span data-ttu-id="127e3-424">有关`<SignedInfo>`元素的详细信息，请参阅[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="127e3-424">For more information about the `<SignedInfo>` element, see the [XMLDSIG specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-425">获取或设置用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的不对称算法密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-425">Gets or sets the asymmetric algorithm key used for signing a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-426">用于对  <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的不对称算法密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-426">The asymmetric algorithm key used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-427"><xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>使用属性来指定要用于创建 XML 数字签名的非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="127e3-427">Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-428">下面的代码示例演示如何使用封套签名对整个 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-428">The following code example shows how to sign and verify an entire XML document using an enveloped signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 <span data-ttu-id="127e3-429">下面的代码示例演示如何使用分离的签名对可寻址的统一资源标识符（URI）的对象进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-429">The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 <span data-ttu-id="127e3-430">下面的代码示例演示如何使用封装签名对 XML 文档的单个元素进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-430">The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-431">获取或设置将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</span><span class="sxs-lookup"><span data-stu-id="127e3-431">Gets or sets the name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></summary>
        <value><span data-ttu-id="127e3-432">将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</span><span class="sxs-lookup"><span data-stu-id="127e3-432">The name of the installed key to be used for signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDecryptionTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-433">表示与 XML 模式解密转换对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-433">Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation.</span></span> <span data-ttu-id="127e3-434">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-434">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-435">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl>字段的值为<http://www.w3.org/2002/07/decrypt#XML>。</span><span class="sxs-lookup"><span data-stu-id="127e3-435">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is <http://www.w3.org/2002/07/decrypt#XML>.</span></span>  
  
 <span data-ttu-id="127e3-436">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-436">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-437">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2002/07/decrypt#XML)。</span><span class="sxs-lookup"><span data-stu-id="127e3-437">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2002/07/decrypt#XML).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigBase64TransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-438">表示与 base 64 转换对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-438">Represents the Uniform Resource Identifier (URI) for the base 64 transformation.</span></span> <span data-ttu-id="127e3-439">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-439">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-440">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl>字段的值为<http://www.w3.org/2000/09/xmldsig#base64>。</span><span class="sxs-lookup"><span data-stu-id="127e3-440">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is <http://www.w3.org/2000/09/xmldsig#base64>.</span></span>  
  
 <span data-ttu-id="127e3-441">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-441">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-442"><xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-442">The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-443">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig#base64)。</span><span class="sxs-lookup"><span data-stu-id="127e3-443">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig#base64).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-444">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>类的成员。</span><span class="sxs-lookup"><span data-stu-id="127e3-444">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigC14NTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-445">表示与规范化 XML 转换对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-445">Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation.</span></span> <span data-ttu-id="127e3-446">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-446">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-447">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>字段的值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315>。</span><span class="sxs-lookup"><span data-stu-id="127e3-447">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.</span></span>  
  
 <span data-ttu-id="127e3-448">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-448">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-449"><xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-449">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-450">有关详细信息，请参阅万维网联合会（W3C）[规范 XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315)规范。</span><span class="sxs-lookup"><span data-stu-id="127e3-450">For more information, see the World Wide Web Consortium (W3C) [Canonical XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) specification.</span></span>  
  
 <span data-ttu-id="127e3-451">此字段的值与<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>字段的值相同。</span><span class="sxs-lookup"><span data-stu-id="127e3-451">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-452">下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>类的成员。</span><span class="sxs-lookup"><span data-stu-id="127e3-452">The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigC14NWithCommentsTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-453">表示与规范化 XML 转换对应的统一资源标识符 (URI)（包含注释）。</span><span class="sxs-lookup"><span data-stu-id="127e3-453">Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments.</span></span> <span data-ttu-id="127e3-454">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-454">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-455">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>字段的值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>。</span><span class="sxs-lookup"><span data-stu-id="127e3-455">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>.</span></span>  
  
 <span data-ttu-id="127e3-456">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-456">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-457"><xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-457">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-458">有关详细信息，请参阅万维网联合会（W3C）[规范 XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments)规范。</span><span class="sxs-lookup"><span data-stu-id="127e3-458">For more information, see the World Wide Web Consortium (W3C) [Canonical XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments) specification.</span></span>  
  
 <span data-ttu-id="127e3-459">此字段的值与<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>字段的值相同。</span><span class="sxs-lookup"><span data-stu-id="127e3-459">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigCanonicalizationUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-460">表示与 XML 数字签名的标准规范化算法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-460">Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures.</span></span> <span data-ttu-id="127e3-461">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-461">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-462">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>字段的值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315>。</span><span class="sxs-lookup"><span data-stu-id="127e3-462">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.</span></span>  
  
 <span data-ttu-id="127e3-463">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-463">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-464"><xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-464">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-465">有关详细信息，请参阅万维网联合会（W3C）[规范 XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315)规范。</span><span class="sxs-lookup"><span data-stu-id="127e3-465">For more information, see the World Wide Web Consortium (W3C) [Canonical XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) specification.</span></span>  
  
 <span data-ttu-id="127e3-466">此字段的值与<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>字段的值相同。</span><span class="sxs-lookup"><span data-stu-id="127e3-466">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigCanonicalizationWithCommentsUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-467">表示与 XML 数字签名的标准规范化算法对应的统一资源标识符 (URI) 并且包括注释。</span><span class="sxs-lookup"><span data-stu-id="127e3-467">Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments.</span></span> <span data-ttu-id="127e3-468">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-468">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-469">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>字段的值为<http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>。</span><span class="sxs-lookup"><span data-stu-id="127e3-469">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is <http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>.</span></span>  
  
 <span data-ttu-id="127e3-470">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-470">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-471"><xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-471">The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-472">有关详细信息，请参阅万维网联合会（W3C）[规范 XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments)规范。</span><span class="sxs-lookup"><span data-stu-id="127e3-472">For more information, see the World Wide Web Consortium (W3C) [Canonical XML](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments) specification.</span></span>  
  
 <span data-ttu-id="127e3-473">此字段的值与<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>字段的值相同。</span><span class="sxs-lookup"><span data-stu-id="127e3-473">This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigDSAUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-474">表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.DSA" /> 算法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-474">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.DSA" /> algorithm for XML digital signatures.</span></span> <span data-ttu-id="127e3-475">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-475">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-476">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>字段的值为<http://www.w3.org/2000/09/xmldsig#dsa-sha1>。</span><span class="sxs-lookup"><span data-stu-id="127e3-476">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is <http://www.w3.org/2000/09/xmldsig#dsa-sha1>.</span></span>  
  
 <span data-ttu-id="127e3-477">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-477">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-478">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig#dsa-sha1)。</span><span class="sxs-lookup"><span data-stu-id="127e3-478">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig#dsa-sha1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigEnvelopedSignatureTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-479">表示与被包封签名转换对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-479">Represents the Uniform Resource Identifier (URI) for enveloped signature transformation.</span></span> <span data-ttu-id="127e3-480">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-480">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-481">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl>字段的值为<http://www.w3.org/2000/09/xmldsig#enveloped-signature>。</span><span class="sxs-lookup"><span data-stu-id="127e3-481">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is <http://www.w3.org/2000/09/xmldsig#enveloped-signature>.</span></span>  
  
 <span data-ttu-id="127e3-482">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-482">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-483"><xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-483">The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-484">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig#enveloped-signature)。</span><span class="sxs-lookup"><span data-stu-id="127e3-484">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig#enveloped-signature).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-485">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类的成员。</span><span class="sxs-lookup"><span data-stu-id="127e3-485">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigExcC14NTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-486">表示与专用 XML 规范化对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-486">Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization.</span></span> <span data-ttu-id="127e3-487">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-487">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-488">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>字段的值为<http://www.w3.org/2001/10/xml-exc-c14n#>。</span><span class="sxs-lookup"><span data-stu-id="127e3-488">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is <http://www.w3.org/2001/10/xml-exc-c14n#>.</span></span>  
  
 <span data-ttu-id="127e3-489">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-489">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-490"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-490">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-491">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/10/xml-exc-c14n)。</span><span class="sxs-lookup"><span data-stu-id="127e3-491">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/10/xml-exc-c14n).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-492">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类对 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-492">The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.</span></span>  <span data-ttu-id="127e3-493">此示例将创建一个信封签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-493">This sample creates an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigExcC14NWithCommentsTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-494">表示与专用 XML 规范化对应的统一资源标识符 (URI)（包含注释）。</span><span class="sxs-lookup"><span data-stu-id="127e3-494">Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments.</span></span> <span data-ttu-id="127e3-495">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-495">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-496">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>字段的值为<http://www.w3.org/2001/10/xml-exc-c14n#WithComments>。</span><span class="sxs-lookup"><span data-stu-id="127e3-496">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is <http://www.w3.org/2001/10/xml-exc-c14n#WithComments>.</span></span>  
  
 <span data-ttu-id="127e3-497">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-497">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-498"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-498">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-499">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/10/xml-exc-c14n#WithComments)。</span><span class="sxs-lookup"><span data-stu-id="127e3-499">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/10/xml-exc-c14n#WithComments).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-500">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>类对 XML 文档进行签名和验证。</span><span class="sxs-lookup"><span data-stu-id="127e3-500">The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.</span></span>  <span data-ttu-id="127e3-501">此示例将创建一个信封签名。</span><span class="sxs-lookup"><span data-stu-id="127e3-501">This sample creates an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigHMACSHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-502">表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 算法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-502">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.HMACSHA1" /> algorithm for XML digital signatures.</span></span> <span data-ttu-id="127e3-503">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-503">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-504">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url>字段的值为<http://www.w3.org/2000/09/xmldsig#hmac-sha1>。</span><span class="sxs-lookup"><span data-stu-id="127e3-504">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is <http://www.w3.org/2000/09/xmldsig#hmac-sha1>.</span></span>  
  
 <span data-ttu-id="127e3-505">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-505">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-506">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2000/09/xmldsig#hmac-sha1)。</span><span class="sxs-lookup"><span data-stu-id="127e3-506">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2000/09/xmldsig#hmac-sha1).</span></span>  

 <span data-ttu-id="127e3-507">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="127e3-507">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigMinimalCanonicalizationUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-508">表示与 XML 数字签名的标准最低规范化算法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-508">Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures.</span></span> <span data-ttu-id="127e3-509">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-509">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-510">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl>字段的值为<http://www.w3.org/2000/09/xmldsig#minimal>。</span><span class="sxs-lookup"><span data-stu-id="127e3-510">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is <http://www.w3.org/2000/09/xmldsig#minimal>.</span></span>  
  
 <span data-ttu-id="127e3-511">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-511">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-512">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2000/09/xmldsig#minimal)。</span><span class="sxs-lookup"><span data-stu-id="127e3-512">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2000/09/xmldsig#minimal).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-513">表示与 XML 数字签名的标准命名空间对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-513">Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures.</span></span> <span data-ttu-id="127e3-514">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-514">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-515">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl>字段的值为<http://www.w3.org/2000/09/xmldsig#>。</span><span class="sxs-lookup"><span data-stu-id="127e3-515">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is <http://www.w3.org/2000/09/xmldsig#>.</span></span>  
  
 <span data-ttu-id="127e3-516">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-516">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-517">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig)。</span><span class="sxs-lookup"><span data-stu-id="127e3-517">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-518">表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.RSA" /> 签名方法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-518">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.RSA" /> signature method for XML digital signatures.</span></span> <span data-ttu-id="127e3-519">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-519">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-520">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>字段的值为<http://www.w3.org/2000/09/xmldsig#rsa-sha1>。</span><span class="sxs-lookup"><span data-stu-id="127e3-520">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is <http://www.w3.org/2000/09/xmldsig#rsa-sha1>.</span></span>  
  
 <span data-ttu-id="127e3-521">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-521">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-522">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig#rsa-sha1)。</span><span class="sxs-lookup"><span data-stu-id="127e3-522">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig#rsa-sha1).</span></span>  

 <span data-ttu-id="127e3-523">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="127e3-523">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA256Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-524">代表 XML 数字签名的 <see cref="T:System.Security.Cryptography.RSA" /> SHA-256 签名方法变量的统一资源标识符。</span><span class="sxs-lookup"><span data-stu-id="127e3-524">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-256 signature method variation for XML digital signatures.</span></span> <span data-ttu-id="127e3-525">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-525">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-526">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url>字段的值为<http://www.w3.org/2001/04/xmldsig-more#rsa-sha256>。</span><span class="sxs-lookup"><span data-stu-id="127e3-526">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is <http://www.w3.org/2001/04/xmldsig-more#rsa-sha256>.</span></span>  
  
 <span data-ttu-id="127e3-527">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-527">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-528">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256)。</span><span class="sxs-lookup"><span data-stu-id="127e3-528">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA384Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-529">表示 XML 数字签名的 <see cref="T:System.Security.Cryptography.RSA" /> SHA-384 签名方法变量的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-529">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-384 signature method variation for XML digital signatures.</span></span> <span data-ttu-id="127e3-530">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-530">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-531">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url>字段的值为<http://www.w3.org/2001/04/xmldsig-more#rsa-sha384>。</span><span class="sxs-lookup"><span data-stu-id="127e3-531">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is <http://www.w3.org/2001/04/xmldsig-more#rsa-sha384>.</span></span>  
  
 <span data-ttu-id="127e3-532">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-532">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-533">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384)。</span><span class="sxs-lookup"><span data-stu-id="127e3-533">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA512Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-534">代表 XML 数字签名的 <see cref="T:System.Security.Cryptography.RSA" /> SHA-512 签名方法变量的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-534">Represents the Uniform Resource Identifier (URI) for the  <see cref="T:System.Security.Cryptography.RSA" /> SHA-512 signature method variation for XML digital signatures.</span></span> <span data-ttu-id="127e3-535">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-535">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-536">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url>字段的值为<http://www.w3.org/2001/04/xmldsig-more#rsa-sha512>。</span><span class="sxs-lookup"><span data-stu-id="127e3-536">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is <http://www.w3.org/2001/04/xmldsig-more#rsa-sha512>.</span></span>  
  
 <span data-ttu-id="127e3-537">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-537">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-538">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512)。</span><span class="sxs-lookup"><span data-stu-id="127e3-538">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-539">代表 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.SHA1" /> 摘要方法的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-539">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA1" /> digest method for XML digital signatures.</span></span> <span data-ttu-id="127e3-540">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-540">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-541">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>字段的值为<http://www.w3.org/2000/09/xmldsig#sha1>。</span><span class="sxs-lookup"><span data-stu-id="127e3-541">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is <http://www.w3.org/2000/09/xmldsig#sha1>.</span></span>  
  
 <span data-ttu-id="127e3-542">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-542">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-543">有关详细信息，请参阅[万维网联合会（W3C）架构](https://www.w3.org/2000/09/xmldsig#sha1)。</span><span class="sxs-lookup"><span data-stu-id="127e3-543">For more information, see the [World Wide Web Consortium (W3C) schema](https://www.w3.org/2000/09/xmldsig#sha1).</span></span>  

 <span data-ttu-id="127e3-544">由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。</span><span class="sxs-lookup"><span data-stu-id="127e3-544">Due to collision problems with SHA1, Microsoft recommends a security model based on SHA256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA256Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-545">代表 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.SHA256" /> 摘要方法的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-545">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA256" /> digest method for XML digital signatures.</span></span> <span data-ttu-id="127e3-546">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-546">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-547">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url>字段的值为<http://www.w3.org/2001/04/xmlenc#sha256>。</span><span class="sxs-lookup"><span data-stu-id="127e3-547">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is <http://www.w3.org/2001/04/xmlenc#sha256>.</span></span>  
  
 <span data-ttu-id="127e3-548">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-548">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-549">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmlenc#sha256)。</span><span class="sxs-lookup"><span data-stu-id="127e3-549">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmlenc#sha256).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA384Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-550">代表 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.SHA384" /> 摘要方法的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-550">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA384" /> digest method for XML digital signatures.</span></span> <span data-ttu-id="127e3-551">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-551">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-552">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url>字段的值为<http://www.w3.org/2001/04/xmldsig-more#sha384>。</span><span class="sxs-lookup"><span data-stu-id="127e3-552">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is <http://www.w3.org/2001/04/xmldsig-more#sha384>.</span></span>  
  
 <span data-ttu-id="127e3-553">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-553">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-554">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmldsig-more#sha384)。</span><span class="sxs-lookup"><span data-stu-id="127e3-554">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmldsig-more#sha384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA512Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-555">代表 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.SHA512" /> 摘要方法的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-555">Represents the Uniform Resource Identifier (URI) for the standard <see cref="T:System.Security.Cryptography.SHA512" /> digest method for XML digital signatures.</span></span> <span data-ttu-id="127e3-556">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-556">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-557">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url>字段的值为<http://www.w3.org/2001/04/xmlenc#sha512>。</span><span class="sxs-lookup"><span data-stu-id="127e3-557">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is <http://www.w3.org/2001/04/xmlenc#sha512>.</span></span>  
  
 <span data-ttu-id="127e3-558">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-558">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-559">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/2001/04/xmlenc#sha512)。</span><span class="sxs-lookup"><span data-stu-id="127e3-559">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/2001/04/xmlenc#sha512).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigXPathTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-560">表示与 XML 路径语言 (XPath) 对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-560">Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath).</span></span> <span data-ttu-id="127e3-561">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-561">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-562">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl>字段的值为<http://www.w3.org/TR/1999/REC-xpath-19991116>。</span><span class="sxs-lookup"><span data-stu-id="127e3-562">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is <http://www.w3.org/TR/1999/REC-xpath-19991116>.</span></span>  
  
 <span data-ttu-id="127e3-563">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-563">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-564"><xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-564">The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-565">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/TR/1999/REC-xpath-19991116)。</span><span class="sxs-lookup"><span data-stu-id="127e3-565">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/TR/1999/REC-xpath-19991116).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-566">下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>类的成员。</span><span class="sxs-lookup"><span data-stu-id="127e3-566">The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigXsltTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-567">表示与 XSLT 转换对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-567">Represents the Uniform Resource Identifier (URI) for XSLT transformations.</span></span> <span data-ttu-id="127e3-568">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="127e3-568">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-569">该<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl>字段的值为<http://www.w3.org/TR/1999/REC-xslt-19991116>。</span><span class="sxs-lookup"><span data-stu-id="127e3-569">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is <http://www.w3.org/TR/1999/REC-xslt-19991116>.</span></span>  
  
 <span data-ttu-id="127e3-570">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-570">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-571"><xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-571">The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field.</span></span>  
  
 <span data-ttu-id="127e3-572">有关详细信息，请参阅[万维网联合会（W3C）规范](https://www.w3.org/TR/1999/REC-xslt-19991116)。</span><span class="sxs-lookup"><span data-stu-id="127e3-572">For more information, see the [World Wide Web Consortium (W3C) specification](https://www.w3.org/TR/1999/REC-xslt-19991116).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="127e3-573">下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>类的成员。</span><span class="sxs-lookup"><span data-stu-id="127e3-573">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlLicenseTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="127e3-574">表示与用于对签名的 XrML 许可证进行标准化的许可证转换算法对应的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="127e3-574">Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="127e3-575">此<xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl>字段的值为 "urn： mpeg： mpeg21：2003： 01-licenseTransform：</span><span class="sxs-lookup"><span data-stu-id="127e3-575">The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is "urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform"</span></span>  
  
 <span data-ttu-id="127e3-576">使用此字段可方便地将值提供给用于 XMLDSIG 的元素的 URI 属性之一。</span><span class="sxs-lookup"><span data-stu-id="127e3-576">Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.</span></span>  
  
 <span data-ttu-id="127e3-577"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform>类实现 <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> 由字段描述的转换。</span><span class="sxs-lookup"><span data-stu-id="127e3-577">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
