<Type Name="Reference" FullName="System.Security.Cryptography.Xml.Reference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b29a87d7cf44e7e7716bfd6bb47ff873d6d6358" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66819030" /></Metadata><TypeSignature Language="C#" Value="public class Reference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Reference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Reference" />
  <TypeSignature Language="VB.NET" Value="Public Class Reference" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reference" />
  <TypeSignature Language="F#" Value="type Reference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6678-101">表示 XML 签名的 <see langword="&lt;reference&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-101">Represents the <see langword="&lt;reference&gt;" /> element of an XML signature.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-102"><xref:System.Security.Cryptography.Xml.Reference>对象表示`<reference>`XML 数字签名规范所定义的 XML 数字签名的元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-102">The <xref:System.Security.Cryptography.Xml.Reference> object represents the `<reference>` element of an XML digital signature defined by the XML digital signature specification.</span></span>  
  
 <span data-ttu-id="c6678-103">使用<xref:System.Security.Cryptography.Xml.Reference>对象来指定以下信息：</span><span class="sxs-lookup"><span data-stu-id="c6678-103">Use the <xref:System.Security.Cryptography.Xml.Reference> object to specify the following information:</span></span>  
  
-   <span data-ttu-id="c6678-104">用于数据对象的签名摘要算法。</span><span class="sxs-lookup"><span data-stu-id="c6678-104">The digest algorithm used to sign of the data object.</span></span>  <span data-ttu-id="c6678-105">此值是必需的。</span><span class="sxs-lookup"><span data-stu-id="c6678-105">This value is required.</span></span>  
  
-   <span data-ttu-id="c6678-106">统一资源标识符 (URI) 的数据对象进行签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-106">The Uniform Resource Identifier (URI) of the data object to sign.</span></span> <span data-ttu-id="c6678-107">URI 可以指定文件路径或 XML 文档内的特定元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-107">The URI can specify a file path or specific elements within an XML document.</span></span>  <span data-ttu-id="c6678-108">此值是必需的。</span><span class="sxs-lookup"><span data-stu-id="c6678-108">This value is required.</span></span>  
  
-   <span data-ttu-id="c6678-109">要在生成摘要之前应用的转换链。</span><span class="sxs-lookup"><span data-stu-id="c6678-109">A chain of transforms to apply before generating the digest.</span></span> <span data-ttu-id="c6678-110">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="c6678-110">This value is optional.</span></span>  
  
-   <span data-ttu-id="c6678-111">要签名的对象类型。</span><span class="sxs-lookup"><span data-stu-id="c6678-111">The type of object to sign.</span></span>  <span data-ttu-id="c6678-112">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="c6678-112">This value is optional.</span></span>  
  
-   <span data-ttu-id="c6678-113">用于引用当前的唯一标识符`<reference>`元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-113">A unique identifier used to reference the current `<reference>` element.</span></span>  <span data-ttu-id="c6678-114">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="c6678-114">This value is optional.</span></span>  
  
 <span data-ttu-id="c6678-115">有关详细信息`<reference>`元素，请参阅[W3C 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-115">For more information about the `<reference>` element, see the [W3C specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6678-116">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-116">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6678-117">初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c6678-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6678-118">使用默认属性初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c6678-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with default properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c6678-119">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-119">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 <span data-ttu-id="c6678-120">下面的代码示例演示如何生成并验证是否已分离的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-120">The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.Reference : System.IO.Stream -&gt; System.Security.Cryptography.Xml.Reference" Usage="new System.Security.Cryptography.Xml.Reference stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="c6678-121">用于初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的新实例的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-121">The <see cref="T:System.IO.Stream" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></param>
        <summary><span data-ttu-id="c6678-122">用指定 <see cref="T:System.IO.Stream" /> 的哈希值初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c6678-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with a hash value of the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-123">此构造函数初始化<xref:System.Security.Cryptography.Xml.Reference>对象到对应的哈希值`stream`参数。</span><span class="sxs-lookup"><span data-stu-id="c6678-123">This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the hash value that corresponds to the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.Reference : string -&gt; System.Security.Cryptography.Xml.Reference" Usage="new System.Security.Cryptography.Xml.Reference uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="c6678-124">用于初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的新实例的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-124">The <see cref="T:System.Uri" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></param>
        <summary><span data-ttu-id="c6678-125">使用指定的 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c6678-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-126">此构造函数初始化<xref:System.Security.Cryptography.Xml.Reference>对象对数据进行特殊处理的 URI 处`""`， `#xpointer(/)`，和`#xxxx`。</span><span class="sxs-lookup"><span data-stu-id="c6678-126">This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the data at the URI with special processing for `""`, `#xpointer(/)`, and `#xxxx`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6678-127">下面的代码示例使用<xref:System.Security.Cryptography.Xml.Reference>类进行签名和验证使用封装签名的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c6678-127">The following code example uses the <xref:System.Security.Cryptography.Xml.Reference> class to sign and verify an XML document using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransform">
      <MemberSignature Language="C#" Value="public void AddTransform (System.Security.Cryptography.Xml.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTransform(class System.Security.Cryptography.Xml.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTransform(System::Security::Cryptography::Xml::Transform ^ transform);" />
      <MemberSignature Language="F#" Value="member this.AddTransform : System.Security.Cryptography.Xml.Transform -&gt; unit" Usage="reference.AddTransform transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Security.Cryptography.Xml.Transform" />
      </Parameters>
      <Docs>
        <param name="transform"><span data-ttu-id="c6678-128">要添加到转换列表的转换。</span><span class="sxs-lookup"><span data-stu-id="c6678-128">The transform to be added to the list of transforms.</span></span></param>
        <summary><span data-ttu-id="c6678-129">将 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象添加到要在传递给摘要算法之前对数据执行的转换的列表中。</span><span class="sxs-lookup"><span data-stu-id="c6678-129">Adds a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to the list of transforms to be performed on the data before passing it to the digest algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-130"><xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A>方法修改`<Transform>`元素和关联的子元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-130">The <xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A> method modifies the `<Transform>` element and associated subelements of an XML digital signature.</span></span>  
  
 <span data-ttu-id="c6678-131">在已添加的顺序应用转换。</span><span class="sxs-lookup"><span data-stu-id="c6678-131">Transforms are applied in the order in which they were added.</span></span> <span data-ttu-id="c6678-132">如果没有指定任何转换，转换会自动添加所需的最低。</span><span class="sxs-lookup"><span data-stu-id="c6678-132">If no transforms are specified, the minimum required transforms are added automatically.</span></span>  
  
 <span data-ttu-id="c6678-133">有关 XML 数字签名的详细信息，请参阅[W3C 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-133">For more information about XML digital signatures, see the [W3C specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6678-134">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-134">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 <span data-ttu-id="c6678-135">下面的代码示例演示如何生成并验证是否已分离的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-135">The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6678-136"><paramref name="transform" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-136">The <paramref name="transform" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DigestMethod">
      <MemberSignature Language="C#" Value="public string DigestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigestMethod : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-137">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要方法统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="c6678-137">Gets or sets the digest method Uniform Resource Identifier (URI) of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <value><span data-ttu-id="c6678-138">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要方法 URI。</span><span class="sxs-lookup"><span data-stu-id="c6678-138">The digest method URI of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span> <span data-ttu-id="c6678-139">默认值是<c>http://www.w3.org/2000/09/xmldsig#sha1</c>。</span><span class="sxs-lookup"><span data-stu-id="c6678-139">The default value is <c>http://www.w3.org/2000/09/xmldsig#sha1</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-140"><xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>属性使用一个 URI 字符串来表示`<DigestMethod>`元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-140">The <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property uses a URI string to represent the `<DigestMethod>` element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="c6678-141">摘要方法是使用对哈希的算法<xref:System.Security.Cryptography.Xml.Reference>。</span><span class="sxs-lookup"><span data-stu-id="c6678-141">The digest method is the algorithm used to hash the <xref:System.Security.Cryptography.Xml.Reference>.</span></span> <span data-ttu-id="c6678-142">默认的算法是<xref:System.Security.Cryptography.SHA1>。</span><span class="sxs-lookup"><span data-stu-id="c6678-142">The default algorithm is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 <span data-ttu-id="c6678-143">有关 XML 数字签名的详细信息，请参阅[W3C 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-143">For more information about XML digital signatures, see the [W3C specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestValue">
      <MemberSignature Language="C#" Value="public byte[] DigestValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigestValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigestValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigestValue : byte[] with get, set" Usage="System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-144">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要值。</span><span class="sxs-lookup"><span data-stu-id="c6678-144">Gets or sets the digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <value><span data-ttu-id="c6678-145">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要值。</span><span class="sxs-lookup"><span data-stu-id="c6678-145">The digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-146"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性使用一个字节数组来表示`<DigestValue>`元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-146">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property uses an array of bytes to represent the `<DigestValue>` element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="c6678-147"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性包含所描述的对象的摘要的 Base 64 编码值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6678-147">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property contains the Base 64 encoded value of the digest of the object described by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span>  
  
 <span data-ttu-id="c6678-148"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性自动填充合适的值，无论何时调用<xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>。</span><span class="sxs-lookup"><span data-stu-id="c6678-148">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property is automatically populated with the appropriate value whenever you make a call to <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.</span></span>  
  
 <span data-ttu-id="c6678-149">有关 XML 数字签名的详细信息，请参阅[W3C 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-149">For more information about XML digital signatures, see the [W3C specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="reference.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6678-150">返回 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="c6678-150">Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <returns><span data-ttu-id="c6678-151"><see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="c6678-151">The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c6678-152"><see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-152">The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c6678-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c6678-153">-or-</span></span> 
<span data-ttu-id="c6678-154"><see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-154">The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-155">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 ID。</span><span class="sxs-lookup"><span data-stu-id="c6678-155">Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <value><span data-ttu-id="c6678-156">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 ID。</span><span class="sxs-lookup"><span data-stu-id="c6678-156">The ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span> <span data-ttu-id="c6678-157">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-157">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-158">使用<xref:System.Security.Cryptography.Xml.Reference.Id%2A>属性将字符串 ID 添加到当前的 XML 表示形式<xref:System.Security.Cryptography.Xml.Reference>元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-158">Use the <xref:System.Security.Cryptography.Xml.Reference.Id%2A> property to add a string ID to the XML representation of the current <xref:System.Security.Cryptography.Xml.Reference> element.</span></span> <span data-ttu-id="c6678-159">在使用该 ID 引用<xref:System.Security.Cryptography.Xml.Reference>另一个位置中的元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-159">The ID is used to reference the <xref:System.Security.Cryptography.Xml.Reference> element from another location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="reference.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6678-160">要从中加载 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 状态的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-160">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Reference" /> state.</span></span></param>
        <summary><span data-ttu-id="c6678-161">从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="c6678-161">Loads a <see cref="T:System.Security.Cryptography.Xml.Reference" /> state from an XML element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6678-162"><paramref name="value" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-162">The <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c6678-163"><paramref name="value" /> 参数不包含任何转换。</span><span class="sxs-lookup"><span data-stu-id="c6678-163">The <paramref name="value" /> parameter does not contain any transforms.</span></span>  
  
<span data-ttu-id="c6678-164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c6678-164">-or-</span></span> 
<span data-ttu-id="c6678-165"><paramref name="value" /> 参数包含未知转换。</span><span class="sxs-lookup"><span data-stu-id="c6678-165">The <paramref name="value" /> parameter contains an unknown transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformChain">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.TransformChain TransformChain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformChain As TransformChain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::TransformChain ^ TransformChain { System::Security::Cryptography::Xml::TransformChain ^ get(); void set(System::Security::Cryptography::Xml::TransformChain ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformChain : System.Security.Cryptography.Xml.TransformChain with get, set" Usage="System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.TransformChain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-166">获取当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的转换链。</span><span class="sxs-lookup"><span data-stu-id="c6678-166">Gets the transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <value><span data-ttu-id="c6678-167">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的转换链。</span><span class="sxs-lookup"><span data-stu-id="c6678-167">The transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-168"><xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A>属性表示`<Transform>`元素和关联的子元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-168">The <xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A> property represents the `<Transform>` element and associated subelements of an XML digital signature.</span></span>  
  
 <span data-ttu-id="c6678-169">转换链是转换的排序的列表。</span><span class="sxs-lookup"><span data-stu-id="c6678-169">The transform chain is an ordered list of transforms.</span></span> <span data-ttu-id="c6678-170">这些转换的输出构成中指定的哈希算法的输入<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6678-170">The output of these transforms constitutes the input to the hash algorithm specified in the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property.</span></span>  
  
 <span data-ttu-id="c6678-171">有关 XML 数字签名的详细信息，请参阅[W3C 规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-171">For more information about XML digital signatures, see the [W3C specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-172">获取或设置被签名的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="c6678-172">Gets or sets the type of the object being signed.</span></span></summary>
        <value><span data-ttu-id="c6678-173">被签名的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="c6678-173">The type of the object being signed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6678-174">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-174">Gets or sets the <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></summary>
        <value><span data-ttu-id="c6678-175">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="c6678-175">The <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6678-176"><xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性使用统一资源标识符 (URI) 的字符串来表示`<URI>`元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="c6678-176">The <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property uses a string Uniform Resource Identifier (URI) to represent the `<URI>` element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="c6678-177">使用<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性来指定文档进行签名，并指定当前的 XML 文档进行签名，或以指示整个文档应进行签名的元素的位置。</span><span class="sxs-lookup"><span data-stu-id="c6678-177">Use the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to specify the location of a document to sign, and to specify which element of the current XML document to sign or to indicate that the entire document should be signed.</span></span>  
  
 <span data-ttu-id="c6678-178">若要成功创建 XML 数字签名，必须设置<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6678-178">To successfully create an XML digital signature, you must set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span> <span data-ttu-id="c6678-179">下表描述了可以将传递到值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6678-179">The following table describes the values that you can pass to the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span>  
  
|<span data-ttu-id="c6678-180">要签名的对象</span><span class="sxs-lookup"><span data-stu-id="c6678-180">Object to sign</span></span>|<span data-ttu-id="c6678-181">传递给值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性</span><span class="sxs-lookup"><span data-stu-id="c6678-181">Value passed to the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property</span></span>|  
|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="c6678-182">使用被包封的签名的整个 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c6678-182">An entire XML document using an enveloped signature.</span></span>|<span data-ttu-id="c6678-183">空字符串:""</span><span class="sxs-lookup"><span data-stu-id="c6678-183">An empty string: ""</span></span>|  
|<span data-ttu-id="c6678-184">使用被包封的签名的 XML 文档中的特定元素。</span><span class="sxs-lookup"><span data-stu-id="c6678-184">A specific element within an XML document using an enveloped signature.</span></span>|<span data-ttu-id="c6678-185">由属性名称 ID 标识的 XML 元素的名称</span><span class="sxs-lookup"><span data-stu-id="c6678-185">The name of an XML element identified by an attribute name ID.</span></span> <span data-ttu-id="c6678-186">此字符串应采用以下形式其中`IDname`是有效的特性名称 ID 的名称：</span><span class="sxs-lookup"><span data-stu-id="c6678-186">The string should take the following form where `IDname` is the name of a valid attribute name ID:</span></span><br /><br /> <span data-ttu-id="c6678-187">"#Idname"</span><span class="sxs-lookup"><span data-stu-id="c6678-187">"#Idname"</span></span>|  
|<span data-ttu-id="c6678-188">使用分离的签名的文件。</span><span class="sxs-lookup"><span data-stu-id="c6678-188">A file using a detached signature.</span></span>|<span data-ttu-id="c6678-189">文件的 URI:"c:\data.jpg"或"c:\data.xml"。</span><span class="sxs-lookup"><span data-stu-id="c6678-189">The URI of a file: "c:\data.jpg" or "c:\data.xml".</span></span>|  
  
 <span data-ttu-id="c6678-190">有关 XML 数字签名的详细信息，请参阅 World Wide Web 联合会 (W3C) [XML 签名语法和处理规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="c6678-190">For more information about XML digital signatures, see the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6678-191">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="c6678-191">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>