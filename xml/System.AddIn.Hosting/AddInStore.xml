<Type Name="AddInStore" FullName="System.AddIn.Hosting.AddInStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="befcf725df80f85b655c63d1b538c48e0e283bb9" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63914283" /></Metadata><TypeSignature Language="C#" Value="public static class AddInStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AddInStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInStore" />
  <TypeSignature Language="VB.NET" Value="Public Class AddInStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInStore abstract sealed" />
  <TypeSignature Language="F#" Value="type AddInStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供方法以存储和查找有关可用外接程序及管线段的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此类以生成、 重新生成，并更新两个缓存文件，如下表中所述。  
  
|缓存文件|创建文件的方法|  
|----------------|----------------------------------|  
|PipelineSegments.store<br /><br /> 此文件位于管线目录结构的根目录中。|<xref:System.AddIn.Hosting.AddInStore.Update%2A><br /><br /> 新的管线段的更新文件。 如果不安装了任何新段，此方法只是验证缓存。<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Rebuild%2A><br /><br /> 重新生成该文件，并包括新的管道段。|  
|AddIns.store<br /><br /> 此文件位于包含一个或多个外接程序子目录的目录中。 如果此目录位于管线目录结构，它必须命名为外接程序。|<xref:System.AddIn.Hosting.AddInStore.UpdateAddIns%2A><br /><br /> 使用新的加载项中指定的位置更新文件。 如果加载项不在管线目录结构，请调用此方法。<br /><br /> 如果不安装了任何新的加载项，则此方法只是验证缓存。<br /><br /> <xref:System.AddIn.Hosting.AddInStore.RebuildAddIns%2A><br /><br /> 重新生成该文件，并包括加载项中指定的位置。 如果加载项不在管线目录结构，请调用此方法。<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Update%2A><br /><br /> 如果外接程序位于管线目录结构，此方法使用新的外接程序更新文件。<br /><br /> <xref:System.AddIn.Hosting.AddInStore.Rebuild%2A><br /><br /> 如果外接程序位于管线目录结构，此方法重新生成该文件，并包括新的外接程序。|  
  
 如果它们以前不存在，则这些方法创建的缓存文件。  
  
 创建缓存文件后，使用<xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A>方法来检查文件，以查找匹配的外接程序的指定的宿主视图的所有加载项。 此外可以使用<xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A>方法来查找特定的加载项。  
  
> [!IMPORTANT]
>  不支持允许不受信任的用户或实体访问 PipelineSegments.store 和 Addins.store。 这样做可能会导致应用程序出现数据损坏问题。  
  
   
  
## Examples  
 下面的示例演示如何更新缓存文件。  
  
 [!code-csharp[AddInP3Host#2](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#2)]
 [!code-vb[AddInP3Host#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">外接程序和扩展性</related>
  </Docs>
  <Members>
    <Member MemberName="FindAddIn">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIn (Type hostViewOfAddIn, string pipelineRootFolderPath, string addInFilePath, string addInTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIn(class System.Type hostViewOfAddIn, string pipelineRootFolderPath, string addInFilePath, string addInTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIn(System.Type,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIn (hostViewOfAddIn As Type, pipelineRootFolderPath As String, addInFilePath As String, addInTypeName As String) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIn(Type ^ hostViewOfAddIn, System::String ^ pipelineRootFolderPath, System::String ^ addInFilePath, System::String ^ addInTypeName);" />
      <MemberSignature Language="F#" Value="static member FindAddIn : Type * string * string * string -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIn (hostViewOfAddIn, pipelineRootFolderPath, addInFilePath, addInTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
        <Parameter Name="addInFilePath" Type="System.String" />
        <Parameter Name="addInTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">用于定义外接程序宿主视图的类型。</param>
        <param name="pipelineRootFolderPath">管线目录结构的根目录的路径。</param>
        <param name="addInFilePath">要查找的外接程序的路径和文件名。</param>
        <param name="addInTypeName">外接程序的类型名称。</param>
        <summary>查找特定的外接程序。</summary>
        <returns>标记的集合，仅包含表示已找到的外接程序的标记。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找到用于外接程序的单一管道，则它将是中的唯一项目<xref:System.AddIn.Hosting.AddInToken>集合。 如果找到多个管道来指定外接程序，您可以通过检查来区分它们<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>属性。  
  
   
  
## Examples  
 下面的示例查找特定的加载项。  
  
 [!code-csharp[AddInP3Host#6](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#6)]
 [!code-vb[AddInP3Host#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pipelineRootFolderPath" />、<paramref name="addInFilePath" /> 或 <paramref name="addInTypeName" /> 的长度为 0。  
  
- 或 - 
外接程序不在 <paramref name="addInfilePath" /> 中。</exception>
        <exception cref="T:System.ArgumentNullException">一个或多个参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有 <paramref name="pipelineRootFolderPath" /> 的读取访问权限。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">它能够读取外接程序文件夹。 关联枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</permission>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.String,System.String[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAddIns">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>查找外接程序的指定宿主视图的所有外接程序。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, location As PipelineStoreLocation) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * System.AddIn.Hosting.PipelineStoreLocation -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">用于定义外接程序宿主视图的类型。</param>
        <param name="location">宿主应用程序的基目录。</param>
        <summary>在由 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 枚举值指定的位置查找外接程序的指定宿主视图的所有外接程序。</summary>
        <returns>表示已找到的外接程序的标记的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Hosting.PipelineStoreLocation>枚举当前仅包含<xref:System.AddIn.Hosting.PipelineStoreLocation.ApplicationBase>值，用于指向主机的应用程序基目录。  
  
   
  
## Examples  
 下面的示例查找加载项中指定的位置在<xref:System.AddIn.Hosting.PipelineStoreLocation>枚举。  
  
 [!code-csharp[AddInP3Host#4](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#4)]
 [!code-vb[AddInP3Host#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="location" /> 不是有效的 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, System.AddIn.Hosting.PipelineStoreLocation location, params string[] addInFolderPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, valuetype System.AddIn.Hosting.PipelineStoreLocation location, string[] addInFolderPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.AddIn.Hosting.PipelineStoreLocation,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, location As PipelineStoreLocation, ParamArray addInFolderPaths As String()) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::AddIn::Hosting::PipelineStoreLocation location, ... cli::array &lt;System::String ^&gt; ^ addInFolderPaths);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * System.AddIn.Hosting.PipelineStoreLocation * string[] -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, location, addInFolderPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
        <Parameter Name="addInFolderPaths" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">用于定义外接程序宿主视图的类型。</param>
        <param name="location">枚举值之一。  
  
目前，此枚举中仅有的值是由用于设置主机应用程序域的 <see cref="P:System.AppDomainSetup.ApplicationBase" /> 属性所指定的目录。</param>
        <param name="addInFolderPaths">（可选）。 包含一个或多个外接程序子目录的目录的路径。因为此参数接受字符串数组，所以可以指定多个路径。  
  
 如果外接程序位于管线目录结构中 AddIns 文件夹内，则不需要此参数。</param>
        <summary>在由 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值指定的位置和可选外接程序文件夹中查找外接程序的指定宿主视图的所有外接程序。</summary>
        <returns>表示已找到的外接程序的标记的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法的重载以启用部分受信任的主机，不能具有路径发现权限来发现其自己的位置，若要在其自己的目录中查找外接程序。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="location" /> 不是有效的 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAddIns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt; FindAddIns (Type hostViewOfAddIn, string pipelineRootFolderPath, params string[] addInFolderPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.AddIn.Hosting.AddInToken&gt; FindAddIns(class System.Type hostViewOfAddIn, string pipelineRootFolderPath, string[] addInFolderPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.FindAddIns(System.Type,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAddIns (hostViewOfAddIn As Type, pipelineRootFolderPath As String, ParamArray addInFolderPaths As String()) As Collection(Of AddInToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::Collection&lt;System::AddIn::Hosting::AddInToken ^&gt; ^ FindAddIns(Type ^ hostViewOfAddIn, System::String ^ pipelineRootFolderPath, ... cli::array &lt;System::String ^&gt; ^ addInFolderPaths);" />
      <MemberSignature Language="F#" Value="static member FindAddIns : Type * string * string[] -&gt; System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;" Usage="System.AddIn.Hosting.AddInStore.FindAddIns (hostViewOfAddIn, pipelineRootFolderPath, addInFolderPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.AddIn.Hosting.AddInToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostViewOfAddIn" Type="System.Type" />
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
        <Parameter Name="addInFolderPaths" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hostViewOfAddIn">用于定义外接程序宿主视图的类型。</param>
        <param name="pipelineRootFolderPath">管线目录结构的根目录的路径。</param>
        <param name="addInFolderPaths">（可选）。 包含一个或多个外接程序子目录的目录的路径。因为此参数接受字符串数组，所以可以指定多个路径。  
  
 如果外接程序位于管线目录结构中 AddIns 文件夹内，则不需要此参数。</param>
        <summary>从指定根目录中查找外接程序的指定宿主视图的所有外接程序。</summary>
        <returns>表示已找到的外接程序的标记的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将检查缓存的外接程序和管道段信息以查找所有加载项的匹配指定的存储区文件`hostAddInView`类型。 然后可以在返回使用某个标记<xref:System.AddIn.Hosting.AddInToken>集合来激活特定的加载项通过调用<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法的<xref:System.AddIn.Hosting.AddInToken>类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.FindAddIn(System.Type,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rebuild">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>重新生成管线段缓存并包括新段。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rebuild">
      <MemberSignature Language="C#" Value="public static string[] Rebuild (System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Rebuild(valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Rebuild(System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rebuild (location As PipelineStoreLocation) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Rebuild(System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member Rebuild : System.AddIn.Hosting.PipelineStoreLocation -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Rebuild location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="location">枚举值之一。  
  
目前，此枚举中仅有的值是由用于设置主机应用程序域的 <see cref="P:System.AppDomainSetup.ApplicationBase" /> 属性所指定的目录。</param>
        <summary>重新生成管线段缓存并包括由 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值指定的位置上的新段。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法的重载以启用部分受信任的主机，不能具有发现其自己的位置的权限，以发现加载项在其自己的目录中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="location" /> 不是有效的 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Rebuild">
      <MemberSignature Language="C#" Value="public static string[] Rebuild (string pipelineRootFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Rebuild(string pipelineRootFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Rebuild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rebuild (pipelineRootFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Rebuild(System::String ^ pipelineRootFolderPath);" />
      <MemberSignature Language="F#" Value="static member Rebuild : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Rebuild pipelineRootFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipelineRootFolderPath">管线目录结构的根目录的路径。</param>
        <summary>重新生成管线段缓存并包括指定根目录中的新段。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果外接程序管线目录结构中，此方法还重新生成外接程序缓存。  
  
 仅当可能与缓存问题，必须重新生成时，才使用此方法。 为了提高性能，使用<xref:System.AddIn.Hosting.AddInStore.Update%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.Update(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RebuildAddIns">
      <MemberSignature Language="C#" Value="public static string[] RebuildAddIns (string addInsFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] RebuildAddIns(string addInsFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.RebuildAddIns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RebuildAddIns (addInsFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ RebuildAddIns(System::String ^ addInsFolderPath);" />
      <MemberSignature Language="F#" Value="static member RebuildAddIns : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.RebuildAddIns addInsFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addInsFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addInsFolderPath">包含一个或多个外接程序子目录的目录的路径。</param>
        <summary>重新生成外接程序缓存并包括指定根目录中的新外接程序。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果加载项不在管线目录结构，请调用此方法。  
  
 仅当可能与缓存问题，必须重新生成时，才使用此方法。 为了提高性能，使用<xref:System.AddIn.Hosting.AddInStore.UpdateAddIns%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="addInsFolderPath" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有 <paramref name="addInsFolderPath" /> 所指定地点的读写访问权限。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">它能够读取和更新外接程序文件夹。 关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</permission>
        <altmember cref="M:System.AddIn.Hosting.AddInStore.UpdateAddIns(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用新段更新管线段缓存。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static string[] Update (System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Update(valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Update(System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update (location As PipelineStoreLocation) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Update(System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member Update : System.AddIn.Hosting.PipelineStoreLocation -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Update location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <param name="location">枚举值之一。  
  
目前，此枚举中仅有的值是由用于设置主机应用程序域的 <see cref="P:System.AppDomainSetup.ApplicationBase" /> 属性所指定的目录。</param>
        <summary>用 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值指定的位置上的新段来更新管线段缓存。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法的重载以启用部分受信任的主机，不能具有发现其自己的位置的权限，以发现加载项在其自己的目录中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="location" /> 不是有效的 <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static string[] Update (string pipelineRootFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Update(string pipelineRootFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.Update(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update (pipelineRootFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ Update(System::String ^ pipelineRootFolderPath);" />
      <MemberSignature Language="F#" Value="static member Update : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.Update pipelineRootFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineRootFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipelineRootFolderPath">管线目录结构的根目录的路径。</param>
        <summary>用指定根目录中的新段更新管线段缓存。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果外接程序位于管线目录结构，此方法还会更新外接程序缓存。  
  
 如果没有任何新的管线段或外接程序，此方法只是验证缓存。  
  
   
  
## Examples  
 下面的示例演示如何更新缓存文件。 此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInStore>类。  
  
 [!code-csharp[AddInP3Host#3](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#3)]
 [!code-vb[AddInP3Host#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAddIns">
      <MemberSignature Language="C#" Value="public static string[] UpdateAddIns (string addInsFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] UpdateAddIns(string addInsFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInStore.UpdateAddIns(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateAddIns (addInsFolderPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ UpdateAddIns(System::String ^ addInsFolderPath);" />
      <MemberSignature Language="F#" Value="static member UpdateAddIns : string -&gt; string[]" Usage="System.AddIn.Hosting.AddInStore.UpdateAddIns addInsFolderPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addInsFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addInsFolderPath">包含一个或多个外接程序子目录的目录的路径。</param>
        <summary>更新外接程序缓存并包括指定位置处的新外接程序。</summary>
        <returns>一个由在计算管线段时描述警告的字符串组成的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果加载项不在管线目录结构，请调用此方法。  
  
 如果不安装了任何新的加载项，则此方法只是验证缓存。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AddIn.Hosting.AddInSegmentDirectoryNotFoundException">管线目录结构中缺少段目录。</exception>
        <exception cref="T:System.AddIn.Hosting.InvalidPipelineStoreException">存在管线目录结构访问冲突。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="addInsFolderPath" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有 <paramref name="addInsFolderPath" /> 所指定地点的读写访问权限。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">它能够读取和更新外接程序文件夹。 关联枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />， <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</permission>
      </Docs>
    </Member>
  </Members>
</Type>