<Type Name="AddInController" FullName="System.AddIn.Hosting.AddInController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9cffa69b4b43207c9987fe0353df7536ce24261" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63914719" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInController" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInController sealed" />
  <TypeSignature Language="F#" Value="type AddInController = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d15b-101">提供用于执行各种任务的外接程序的访问权限。</span><span class="sxs-lookup"><span data-stu-id="5d15b-101">Provides access to an add-in for a variety of tasks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-102">此类用于执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="5d15b-102">Use this class to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="5d15b-103">使用<xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>属性来获取<xref:System.AddIn.Hosting.AddInEnvironment>外接程序对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-103">Use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property to obtain an <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="5d15b-104">然后使用该对象激活其他加载项中的相同应用程序域和与原始外接程序的进程。</span><span class="sxs-lookup"><span data-stu-id="5d15b-104">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
-   <span data-ttu-id="5d15b-105">使用<xref:System.AddIn.Hosting.AddInController.AppDomain%2A>属性来获取<xref:System.AppDomain>外接程序对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-105">Use the <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> property to obtain an <xref:System.AppDomain> object for an add-in.</span></span> <span data-ttu-id="5d15b-106">然后使用该对象激活其他加载项与原始外接程序相同的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="5d15b-106">Then use that object to activate other add-ins in the same application domain as the original add-in.</span></span> <span data-ttu-id="5d15b-107">请注意，由于在跨进程远程处理中的限制，这种情况下不会使用单独的进程中激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-107">Note that because of limitations in cross-process remoting, this scenario will not work with add-ins that are activated in a separate process.</span></span>  
  
-   <span data-ttu-id="5d15b-108">使用<xref:System.AddIn.Hosting.AddInController.Token%2A>属性来获取<xref:System.AddIn.Hosting.AddInToken>对象，表示外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-108">Use the <xref:System.AddIn.Hosting.AddInController.Token%2A> property to obtain an <xref:System.AddIn.Hosting.AddInToken> object that represents an add-in.</span></span>  
  
-   <span data-ttu-id="5d15b-109">关闭外接程序与<xref:System.AddIn.Hosting.AddInController.Shutdown%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5d15b-109">Shut down an add-in with the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method.</span></span>  
  
 <span data-ttu-id="5d15b-110">若要获取外接程序的控制器，请调用<xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>方法并传入实例的外接程序作为其参数。</span><span class="sxs-lookup"><span data-stu-id="5d15b-110">To obtain the controller for an add-in, call the <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> method and pass an instance of the add-in as its parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d15b-111">下面的示例通过使用外接程序与以前已激活外接程序相同的环境中激活<xref:System.AddIn.Hosting.AddInController>对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-111">The following example activates an add-in within the same environment as a previously activated add-in by using an <xref:System.AddIn.Hosting.AddInController> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInEnvironment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInEnvironment AddInEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInEnvironment As AddInEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInEnvironment ^ AddInEnvironment { System::AddIn::Hosting::AddInEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInEnvironment : System.AddIn.Hosting.AddInEnvironment" Usage="System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d15b-112">获取一个 <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-112">Gets an <see cref="T:System.AddIn.Hosting.AddInEnvironment" /> object.</span></span></summary>
        <value><span data-ttu-id="5d15b-113">一个对象，可用于激活与原始外接程序在同一环境中的其他外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-113">An object that can be used to activate other add-ins in the same environment as the original add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-114">使用此属性来获取<xref:System.AddIn.Hosting.AddInEnvironment>外接程序对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-114">Use this property to get the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in.</span></span> <span data-ttu-id="5d15b-115">然后使用该对象激活其他加载项中的相同应用程序域和与原始外接程序的进程。</span><span class="sxs-lookup"><span data-stu-id="5d15b-115">Then use that object to activate other add-ins in the same application domain and process as the original add-in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d15b-116">下面的示例的第二个外接程序与第一个外接程序相同的环境中激活。</span><span class="sxs-lookup"><span data-stu-id="5d15b-116">The following example activates a second add-in within the same environment as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomain">
      <MemberSignature Language="C#" Value="public AppDomain AppDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomain AppDomain" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomain ^ AppDomain { AppDomain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppDomain : AppDomain" Usage="System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d15b-117">获取包含外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="5d15b-117">Gets the application domain that contains an add-in.</span></span></summary>
        <value><span data-ttu-id="5d15b-118">外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="5d15b-118">The application domain of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-119">此属性用于获取外接程序的<xref:System.AppDomain>对象并激活同一应用程序域中其他外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-119">Use this property to obtain an add-in's <xref:System.AppDomain> object and to activate other add-ins in the same application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d15b-120">下面的示例将第二个外接程序作为第一个外接程序相同的应用程序域中激活。</span><span class="sxs-lookup"><span data-stu-id="5d15b-120">The following example activates a second add-in in the same application domain as the first add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddInController">
      <MemberSignature Language="C#" Value="public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Hosting.AddInController GetAddInController(object addIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAddInController (addIn As Object) As AddInController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Hosting::AddInController ^ GetAddInController(System::Object ^ addIn);" />
      <MemberSignature Language="F#" Value="static member GetAddInController : obj -&gt; System.AddIn.Hosting.AddInController" Usage="System.AddIn.Hosting.AddInController.GetAddInController addIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addIn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addIn"><span data-ttu-id="5d15b-121">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="5d15b-121">The host view of the add-in.</span></span></param>
        <summary><span data-ttu-id="5d15b-122">获取外接程序的控制器。</span><span class="sxs-lookup"><span data-stu-id="5d15b-122">Obtains the controller for an add-in.</span></span></summary>
        <returns><span data-ttu-id="5d15b-123">外接程序的控制器。</span><span class="sxs-lookup"><span data-stu-id="5d15b-123">The controller for the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-124"><xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法返回一个对象，表示外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="5d15b-124">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> methods return an object that represents the host's view of the add-in.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; unit" Usage="addInController.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d15b-125">禁用外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-125">Disables an add-in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-126">此方法将外接程序与其主机之间的通信管道。</span><span class="sxs-lookup"><span data-stu-id="5d15b-126">This method breaks the communication pipeline between an add-in and its host.</span></span> <span data-ttu-id="5d15b-127">如果外接程序已激活，会自动生成的应用程序域中使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>或<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29>方法，<xref:System.AddIn.Hosting.AddInController.Shutdown%2A>方法也将卸载应用程序域。</span><span class="sxs-lookup"><span data-stu-id="5d15b-127">If the add-in was activated in an automatically generated application domain by using the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> or <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> methods, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="5d15b-128">如果外接程序加载到它自己的应用程序域、<xref:System.AddIn.Hosting.AddInController.Shutdown%2A>方法也将卸载应用程序域。</span><span class="sxs-lookup"><span data-stu-id="5d15b-128">If the add-in was loaded into its own application domain, the <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> method also unloads the application domain.</span></span>  
  
 <span data-ttu-id="5d15b-129">如果外接程序加载到现有应用程序域，主机和管道段将不再具有对该外接程序的任何引用。</span><span class="sxs-lookup"><span data-stu-id="5d15b-129">If the add-in was loaded into an existing application domain, the host and pipeline segments will no longer have any references to that add-in.</span></span> <span data-ttu-id="5d15b-130">在这种情况下外, 接程序将有资格通过垃圾回收来回收。</span><span class="sxs-lookup"><span data-stu-id="5d15b-130">In this case, the add-in will be eligible to be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="5d15b-131">此类还可用于关闭的情况下在外部进程中激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-131">You can also use this class to shut down an add-in that is activated in an external process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d15b-132">以下示例获取<xref:System.AddIn.Hosting.AddInController>名为的宿主视图的对象`manager`，然后关闭外接程序。</span><span class="sxs-lookup"><span data-stu-id="5d15b-132">The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]
 [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInToken Token" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As AddInToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInToken ^ Token { System::AddIn::Hosting::AddInToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.AddIn.Hosting.AddInToken" Usage="System.AddIn.Hosting.AddInController.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d15b-133">获取表示外接程序的标记。</span><span class="sxs-lookup"><span data-stu-id="5d15b-133">Gets the token that represents the add-in.</span></span></summary>
        <value><span data-ttu-id="5d15b-134">一个表示外接程序的对象。</span><span class="sxs-lookup"><span data-stu-id="5d15b-134">An object that represents the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d15b-135">通常情况下，使用此属性获取的令牌激活外接程序在更高版本时。</span><span class="sxs-lookup"><span data-stu-id="5d15b-135">Typically, you use this property to obtain a token to activate an add-in at a later time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>