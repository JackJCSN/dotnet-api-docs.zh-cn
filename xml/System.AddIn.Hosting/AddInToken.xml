<Type Name="AddInToken" FullName="System.AddIn.Hosting.AddInToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d182568f293ed04fac4f3f8017d6ea60fc1bbd1f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63914181" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AddInToken extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInToken" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInToken&#xA;Implements IEnumerable(Of QualificationDataItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInToken sealed : System::Collections::Generic::IEnumerable&lt;System::AddIn::Hosting::QualificationDataItem&gt;" />
  <TypeSignature Language="F#" Value="type AddInToken = class&#xA;    interface seq&lt;QualificationDataItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67c47-101">表示可激活的外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-101">Represents an add-in that can be activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-102"><xref:System.AddIn.Hosting.AddInToken>对象都表示外接程序和其关联的管线段，可激活。</span><span class="sxs-lookup"><span data-stu-id="67c47-102">An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated.</span></span> <span data-ttu-id="67c47-103">令牌包含名称、 程序集名称、 说明、 发布服务器上和它所代表的外接程序版本。</span><span class="sxs-lookup"><span data-stu-id="67c47-103">The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.</span></span>  
  
 <span data-ttu-id="67c47-104">使用<xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType>方法以获取标记，表示其管道与匹配的指定的宿主视图的外接程序的集合。</span><span class="sxs-lookup"><span data-stu-id="67c47-104">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view.</span></span> <span data-ttu-id="67c47-105">使用<xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType>方法以获取标记，表示为一个指定外接程序相匹配的指定的宿主视图的所有管道的集合。</span><span class="sxs-lookup"><span data-stu-id="67c47-105">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.</span></span>  
  
 <span data-ttu-id="67c47-106">若要激活外接程序，请将传递表示所需外接程序的标记<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="67c47-106">To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method.</span></span> <span data-ttu-id="67c47-107">此方法返回表示外接程序的宿主视图的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="67c47-107">This method returns an instance of the type that represents the host view of the add-in.</span></span>  
  
 <span data-ttu-id="67c47-108"><xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法有若干重载。</span><span class="sxs-lookup"><span data-stu-id="67c47-108">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads.</span></span> <span data-ttu-id="67c47-109">当使用不需要的应用程序域的名称作为其参数之一的重载时，将自动创建新的应用程序域外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-109">When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.</span></span>  
  
 <span data-ttu-id="67c47-110">可以使用语言集成查询 (LINQ) 的扩展方法来执行查询<xref:System.AddIn.Hosting.AddInToken>，将该令牌视为一系列<xref:System.AddIn.Hosting.QualificationDataItem>结构。</span><span class="sxs-lookup"><span data-stu-id="67c47-110">You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-111">本部分包含两个示例。</span><span class="sxs-lookup"><span data-stu-id="67c47-111">This section contains two examples.</span></span> <span data-ttu-id="67c47-112">第一个示例选择了使用的外接程序激活`ChooseAddIn`方法，并第二个示例显示`ChooseAddIn`方法。</span><span class="sxs-lookup"><span data-stu-id="67c47-112">The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.</span></span>  
  
 <span data-ttu-id="67c47-113">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="67c47-113">**Example 1**</span></span>  
  
 <span data-ttu-id="67c47-114">下面的示例演示如何激活外接程序使用令牌。</span><span class="sxs-lookup"><span data-stu-id="67c47-114">The following example shows how to activate an add-in with a token.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 <span data-ttu-id="67c47-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="67c47-115">**Example 2**</span></span>  
  
 <span data-ttu-id="67c47-116">下面的示例演示了自定义`ChooseAddIn`方法，该枚举方法<xref:System.AddIn.Hosting.AddInToken>集合。</span><span class="sxs-lookup"><span data-stu-id="67c47-116">The following example shows the custom `ChooseAddIn` method, which enumerates an <xref:System.AddIn.Hosting.AddInToken> collection.</span></span> <span data-ttu-id="67c47-117">用户选择从该集合的相应外接程序激活令牌。</span><span class="sxs-lookup"><span data-stu-id="67c47-117">The user selects a token from this collection to activate the corresponding add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]
 [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="67c47-118">外接程序和扩展性</span><span class="sxs-lookup"><span data-stu-id="67c47-118">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Activate&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67c47-119">激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-119">Activates an add-in.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInEnvironment environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (environment As AddInEnvironment) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInEnvironment ^ environment);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInEnvironment -&gt; 'T" Usage="addInToken.Activate environment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="environment" Type="System.AddIn.Hosting.AddInEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-120">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-120">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="environment"><span data-ttu-id="67c47-121">包含原始外接程序的应用程序域和进程。</span><span class="sxs-lookup"><span data-stu-id="67c47-121">The application domain and process that contains the original add-in.</span></span></param>
        <summary><span data-ttu-id="67c47-122">在另一个外接程序的环境中激活一个外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-122">Activates an add-in in the environment of another add-in.</span></span></summary>
        <returns><span data-ttu-id="67c47-123">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-123">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-124">此方法的重载将激活外接程序相同的应用程序域和进程中为外接程序从其`environment`获取。</span><span class="sxs-lookup"><span data-stu-id="67c47-124">This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-125">下面的示例将激活一个外接程序中具有指定的安全级别的自动生成的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="67c47-125">The following example activates one add-in in an automatically generated application domain with a specified security level.</span></span> <span data-ttu-id="67c47-126">它然后第二个外接程序相同的应用程序域和与第一次使用的第一个外接程序的进程中激活<xref:System.AddIn.Hosting.AddInEnvironment>对象。</span><span class="sxs-lookup"><span data-stu-id="67c47-126">It then activates a second add-in in the same application domain and process as the first by using the first add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="67c47-127">外接程序和扩展性</span><span class="sxs-lookup"><span data-stu-id="67c47-127">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate trustLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-128">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-128">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="67c47-129">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="67c47-129">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="67c47-130">在新应用程序域中激活具有指定信任级别的外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-130">Activates an add-in with a specified trust level in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="67c47-131">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-131">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-132">此方法的重载到自动生成的应用程序域加载外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-132">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="67c47-133">如果你想要指定新的应用程序域的名称，使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29>重载。</span><span class="sxs-lookup"><span data-stu-id="67c47-133">If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.</span></span>  
  
 <span data-ttu-id="67c47-134">此方法设置应用程序域的外接程序程序集的位置的基的目录。</span><span class="sxs-lookup"><span data-stu-id="67c47-134">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="67c47-135">它还查找有关的配置文件 [addinassemblyname].dll.config 以及是否找到，把它设置为新的应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="67c47-135">It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-136">下面的示例演示如何激活外接程序中具有指定的安全级别的自动生成的应用程序域的所选令牌由标识。</span><span class="sxs-lookup"><span data-stu-id="67c47-136">The following example shows how to activate an add-in, identified by the chosen token, in an automatically generated application domain with a specified security level.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="67c47-137">外接程序和扩展性</span><span class="sxs-lookup"><span data-stu-id="67c47-137">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (AppDomain target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AppDomain target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (target As AppDomain) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(AppDomain ^ target);" />
      <MemberSignature Language="F#" Value="member this.Activate : AppDomain -&gt; 'T" Usage="addInToken.Activate target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-138">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-138">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="target"><span data-ttu-id="67c47-139">应在其中激活外接程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="67c47-139">The application domain that the add-in should be activated in.</span></span></param>
        <summary><span data-ttu-id="67c47-140">在现有应用程序域中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-140">Activates an add-in in an existing application domain.</span></span></summary>
        <returns><span data-ttu-id="67c47-141">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-141">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-142">若要激活外接程序自动生成的应用程序域中，使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>重载以生成具有指定的安全级别的新应用程序域或<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29>重载来包括应用程序域的友好名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-142">To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-143">下面的示例外接程序的应用程序域中的正由另一个外接程序激活。</span><span class="sxs-lookup"><span data-stu-id="67c47-143">The following example activates an add-in in an application domain that is being used by another add-in.</span></span> <span data-ttu-id="67c47-144">中提供的第一个外接程序的代码<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-144">The code for the first add-in is provided in the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="67c47-145">需要完全信任权限。</span><span class="sxs-lookup"><span data-stu-id="67c47-145">Full-trust permission is demanded.</span></span> <span data-ttu-id="67c47-146">调用链中的调用方没有足够权限。</span><span class="sxs-lookup"><span data-stu-id="67c47-146">A caller in the call chain does not have sufficient permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.Security.PermissionSet permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (permissions As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::Security::PermissionSet ^ permissions);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate permissions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="permissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-147">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-147">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="permissions"><span data-ttu-id="67c47-148">授予外接程序的权限。</span><span class="sxs-lookup"><span data-stu-id="67c47-148">The permissions granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="67c47-149">在新应用程序域中激活具有指定权限集的外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-149">Activates an add-in with a specified permission set in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="67c47-150">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-150">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-151">此方法的重载到自动生成的应用程序域加载外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-151">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="67c47-152">它设置应用程序域的外接程序程序集的位置的基的目录。</span><span class="sxs-lookup"><span data-stu-id="67c47-152">It sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="67c47-153">它还会查找配置文件`[addinassemblyname].dll.config`并且如果找到，集，它是新的应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="67c47-153">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="67c47-154"><paramref name="permissions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-154"><paramref name="permissions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, valuetype System.AddIn.Hosting.AddInSecurityLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, level As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::AddIn::Hosting::AddInSecurityLevel level);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate (process, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="level" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-155">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-155">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="67c47-156">在其中激活外接程序的外部进程。</span><span class="sxs-lookup"><span data-stu-id="67c47-156">The external process in which to activate the add-in.</span></span></param>
        <param name="level"><span data-ttu-id="67c47-157">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="67c47-157">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="67c47-158">在外部进程中（且在新应用程序域内）激活具有指定信任级别的外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-158">Activates an add-in in an external process, in a new application domain, and with a specified trust level.</span></span></summary>
        <returns><span data-ttu-id="67c47-159">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-159">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-160">此方法设置应用程序域的外接程序程序集的位置的基的目录。</span><span class="sxs-lookup"><span data-stu-id="67c47-160">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="67c47-161">它还会查找配置文件`[addinassemblyname].dll.config`并且如果找到，集，它是新的应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="67c47-161">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-162">下面的示例创建一个新进程并激活外接程序在完全信任安全级别与该进程中。</span><span class="sxs-lookup"><span data-stu-id="67c47-162">The following example creates a new process and activates an add-in in that process with a full trust security level.</span></span>  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="67c47-163">直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="67c47-163">full trust for the immediate caller.</span></span> <span data-ttu-id="67c47-164">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="67c47-164">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate (process, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-165">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-165">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="67c47-166">在其中激活外接程序的外部进程。</span><span class="sxs-lookup"><span data-stu-id="67c47-166">The external process in which to activate the add-in.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="67c47-167">授予外接程序的必需权限集。</span><span class="sxs-lookup"><span data-stu-id="67c47-167">The required permission set granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="67c47-168">在外部进程中（且在新应用程序域内）激活具有指定权限集的外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-168">Activates an add-in in an external process, in a new application domain, and with a specified permission set.</span></span></summary>
        <returns><span data-ttu-id="67c47-169">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-169">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-170">此方法设置应用程序域的外接程序程序集的位置的基的目录。</span><span class="sxs-lookup"><span data-stu-id="67c47-170">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="67c47-171">它还会查找配置文件`[addinassemblyname].dll.config`并且如果找到，集，它是新的应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="67c47-171">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="67c47-172">直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="67c47-172">full trust for the immediate caller.</span></span> <span data-ttu-id="67c47-173">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="67c47-173">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel, appDomainName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel, System::String ^ appDomainName);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel * string -&gt; 'T" Usage="addInToken.Activate (trustLevel, appDomainName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
        <Parameter Name="appDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="67c47-174">表示外接程序的宿主视图的接口或抽象基类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-174">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="67c47-175">用于指定信任级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="67c47-175">One of the enumeration values that specifies the trust level.</span></span></param>
        <param name="appDomainName"><span data-ttu-id="67c47-176">要分配给新应用程序域的友好名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-176">The friendly name to assign to the new application domain.</span></span></param>
        <summary><span data-ttu-id="67c47-177">在具有指定名称和信任级别的新应用程序域中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="67c47-177">Activates an add-in in a new application domain with a specified name and trust level.</span></span></summary>
        <returns><span data-ttu-id="67c47-178">外接程序的宿主视图。</span><span class="sxs-lookup"><span data-stu-id="67c47-178">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-179">如果不需要指定应用程序的域名，使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>重载。</span><span class="sxs-lookup"><span data-stu-id="67c47-179">If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.</span></span>  
  
 <span data-ttu-id="67c47-180">此方法设置应用程序域的外接程序程序集的位置的基的目录。</span><span class="sxs-lookup"><span data-stu-id="67c47-180">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="67c47-181">它还会查找配置文件`[addinassemblyname].dll.config`并且如果找到，集，它是新的应用程序域的配置文件。</span><span class="sxs-lookup"><span data-stu-id="67c47-181">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInFullName">
      <MemberSignature Language="C#" Value="public string AddInFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddInFullName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddInFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInFullName : string" Usage="System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-182">获取外接程序的命名空间和类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-182">Gets the namespace and type of the add-in.</span></span></summary>
        <value><span data-ttu-id="67c47-183">由命名空间完全限定的外接程序的类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-183">The type of the add-in, fully qualified by its namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-184">此属性获取外接程序的完整名称，它将返回的<xref:System.Type.FullName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-184">This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="67c47-185">此值始终是可用的实例上<xref:System.AddIn.Hosting.AddInToken>对象。</span><span class="sxs-lookup"><span data-stu-id="67c47-185">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-186">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-186">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-187">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-187">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : System.Reflection.AssemblyName" Usage="System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-188">获取包含外接程序的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-188">Gets the name of the assembly that contains the add-in.</span></span></summary>
        <value><span data-ttu-id="67c47-189">程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-189">The name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-190">此属性获取包含外接程序的程序集的显示名称，它将返回的<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-190">This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="67c47-191">此值始终是可用的实例上<xref:System.AddIn.Hosting.AddInToken>对象。</span><span class="sxs-lookup"><span data-stu-id="67c47-191">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-192">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-192">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-193">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-193">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.AddIn.Hosting.AddInToken.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-194">获取外接程序的说明。</span><span class="sxs-lookup"><span data-stu-id="67c47-194">Gets the description of the add-in.</span></span></summary>
        <value><span data-ttu-id="67c47-195">外接程序的说明；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定该说明，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-195">A description of the add-in, or <see langword="null" /> if the description is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-196">此属性获取的外接程序中指定说明<xref:System.AddIn.AddInAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-196">This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-197">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-197">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-198">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-198">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDirectConnect">
      <MemberSignature Language="C#" Value="public static bool EnableDirectConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDirectConnect" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDirectConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDirectConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDirectConnect : bool with get, set" Usage="System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-199">获取或设置一个值，该值指示在条件允许时外接程序是否应直接连接到它们的宿主。</span><span class="sxs-lookup"><span data-stu-id="67c47-199">Gets or sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.</span></span></summary>
        <value><span data-ttu-id="67c47-200">如果外接程序应该直接连接到宿主，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-200"><see langword="true" /> if the add-in should be directly connected to the host; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="67c47-201">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-202">要进行直接连接的情况下，必须满足下列条件：</span><span class="sxs-lookup"><span data-stu-id="67c47-202">The following conditions must exist for the direct connection to occur:</span></span>  
  
-   <span data-ttu-id="67c47-203">此属性必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="67c47-203">This property must be set to `true`.</span></span>  
  
-   <span data-ttu-id="67c47-204">外接程序必须在与主机相同的应用程序域中。</span><span class="sxs-lookup"><span data-stu-id="67c47-204">The add-in must be in the same application domain as the host.</span></span>  
  
-   <span data-ttu-id="67c47-205">外接程序视图和外接程序的主机视图必须是同一类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-205">The add-in view and the host view of the add-in must be the same type.</span></span>  
  
-   <span data-ttu-id="67c47-206">管道的所有段都必须可用。</span><span class="sxs-lookup"><span data-stu-id="67c47-206">All the segments of the pipeline must be available.</span></span>  
  
 <span data-ttu-id="67c47-207">当建立直接连接时外, 接程序端适配器和主机端适配器不实例化。</span><span class="sxs-lookup"><span data-stu-id="67c47-207">When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="addInToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="67c47-208">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="67c47-208">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="67c47-209">确定指定的对象是否等于当前实例。</span><span class="sxs-lookup"><span data-stu-id="67c47-209">Determines whether a specified object is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="67c47-210">如果指定的对象与当前实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-210"><see langword="true" /> if the specified object and the current instance are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of QualificationDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::AddIn::Hosting::QualificationDataItem&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;" Usage="addInToken.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c47-211">返回一个与此标记关联的管线段的限定数据枚举数。</span><span class="sxs-lookup"><span data-stu-id="67c47-211">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="67c47-212">一个枚举数，可用于循环访问与当前标记关联的管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-212">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-213">此方法用于将令牌视为一系列限定数据项的示例中，它处于`foreach`语句 (`For Each`在 Visual Basic`for each`视觉对象中C++)。</span><span class="sxs-lookup"><span data-stu-id="67c47-213">Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="67c47-214">使用此方法返回的枚举器循环访问与当前标记关联的管线段的限定数据项。</span><span class="sxs-lookup"><span data-stu-id="67c47-214">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="67c47-215">限定数据的每个项目均<xref:System.AddIn.Hosting.QualificationDataItem>结构，它标识管道段并包含名称/值对从<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性应用于该时间段。</span><span class="sxs-lookup"><span data-stu-id="67c47-215">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67c47-216">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-216">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="67c47-217">因此，当您将无法找到的限定数据枚举时的任何项<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性是<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="67c47-217">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="67c47-218">或者，可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>属性来获取一组嵌套的包含的管线段的限定数据的字典。</span><span class="sxs-lookup"><span data-stu-id="67c47-218">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-219">以下示例列出了与每个关联的管线段的限定数据<xref:System.AddIn.Hosting.AddInToken>集合中的令牌。</span><span class="sxs-lookup"><span data-stu-id="67c47-219">The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.</span></span>  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="addInToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c47-220">作为标记的哈希函数。</span><span class="sxs-lookup"><span data-stu-id="67c47-220">Serves as a hash function for a token.</span></span></summary>
        <returns><span data-ttu-id="67c47-221">当前标记的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="67c47-221">A hash code for the current token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.AddInToken.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-222">获取外接程序的名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-222">Gets the name of the add-in.</span></span></summary>
        <value><span data-ttu-id="67c47-223">外接程序的名称。</span><span class="sxs-lookup"><span data-stu-id="67c47-223">The name of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-224">此属性获取外接程序中指定的名称<xref:System.AddIn.AddInAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-224">This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span> <span data-ttu-id="67c47-225">此值始终是可用的实例上<xref:System.AddIn.Hosting.AddInToken>对象。</span><span class="sxs-lookup"><span data-stu-id="67c47-225">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-226">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-226">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-227">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-227">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Publisher : string" Usage="System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-228">获取外接程序的发布者。</span><span class="sxs-lookup"><span data-stu-id="67c47-228">Gets the publisher of the add-in.</span></span></summary>
        <value><span data-ttu-id="67c47-229">外接程序的发行者；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定发行者，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-229">The publisher of the add-in, or <see langword="null" /> if the publisher is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-230">此属性获取的外接程序中指定发布者<xref:System.AddIn.AddInAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-230">This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-231">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-231">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-232">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-232">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualificationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.AddIn.Hosting.AddInSegmentType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; QualificationData" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualificationData As IDictionary(Of AddInSegmentType, IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ QualificationData { System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualificationData : System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType, System.Collections.Generic.IDictionary&lt;string, string&gt;&gt;" Usage="System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-233">获取与当前标记关联的各个管线段的相关数据的字典。</span><span class="sxs-lookup"><span data-stu-id="67c47-233">Gets a dictionary of data about the segments in the pipeline associated with the current token.</span></span></summary>
        <value><span data-ttu-id="67c47-234">一个字典，其键为管线段，其值为一系列名称/值对的字典，这些名称/值对表示每个段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-234">A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-235">此属性用于获取已应用于管道段使用的数据<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-235">Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute.</span></span> <span data-ttu-id="67c47-236">可以使用此数据来识别和使用 compose 管道的类型。</span><span class="sxs-lookup"><span data-stu-id="67c47-236">You can use this data to identify and work with the types that compose your pipelines.</span></span>  
  
 <span data-ttu-id="67c47-237">此属性返回的字典的字典。</span><span class="sxs-lookup"><span data-stu-id="67c47-237">This property returns a dictionary of dictionaries.</span></span> <span data-ttu-id="67c47-238">顶级字典始终具有六个密钥。</span><span class="sxs-lookup"><span data-stu-id="67c47-238">The top dictionary always has six keys.</span></span> <span data-ttu-id="67c47-239">每个键都<xref:System.AddIn.Hosting.AddInSegmentType>管道中的某个段的值。</span><span class="sxs-lookup"><span data-stu-id="67c47-239">Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline.</span></span> <span data-ttu-id="67c47-240">每个值为泛型<xref:System.Collections.Generic.IDictionary%602>的包含的段的限定数据的字符串键的字符串。</span><span class="sxs-lookup"><span data-stu-id="67c47-240">Each value is a generic <xref:System.Collections.Generic.IDictionary%602> of strings with string keys that contains the segment's qualification data.</span></span>  
  
 <span data-ttu-id="67c47-241">密钥和这些内部字典的值是名称和值中指定<xref:System.AddIn.Pipeline.QualificationDataAttribute>段的属性。</span><span class="sxs-lookup"><span data-stu-id="67c47-241">The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments.</span></span> <span data-ttu-id="67c47-242">如果没有限定数据已应用于一个段，其字典为空。</span><span class="sxs-lookup"><span data-stu-id="67c47-242">If no qualification data has been applied to a segment, its dictionary is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67c47-243">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-243">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="67c47-244">因此，对于字典<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>始终为空。</span><span class="sxs-lookup"><span data-stu-id="67c47-244">As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> is always empty.</span></span>  
  
 <span data-ttu-id="67c47-245">或者，可以获取限定数据通过枚举<xref:System.AddIn.Hosting.AddInToken>就像一系列<xref:System.AddIn.Hosting.QualificationDataItem>结构，使用`foreach`语句 (`For Each`在 Visual Basic 中`for each`视觉对象中C++)。</span><span class="sxs-lookup"><span data-stu-id="67c47-245">Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span> <span data-ttu-id="67c47-246">提供有关示例，请参阅<xref:System.AddIn.Hosting.QualificationDataItem>结构。</span><span class="sxs-lookup"><span data-stu-id="67c47-246">See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-247">下面的示例演示如何检查外接程序的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-247">The following example shows how to examine an add-in's qualification data.</span></span>  
  
 [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]
 [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c47-248">返回一个与此标记关联的管线段的限定数据枚举数。</span><span class="sxs-lookup"><span data-stu-id="67c47-248">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="67c47-249">一个枚举数，可用于循环访问与当前标记关联的管线段的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-249">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-250">此方法允许用于被当作一系列限定数据项，例如中的令牌`foreach`语句 (`For Each`在 Visual Basic`for each`视觉对象中C++)。</span><span class="sxs-lookup"><span data-stu-id="67c47-250">This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="67c47-251">使用此方法返回的枚举器循环访问与当前标记关联的管线段的限定数据项。</span><span class="sxs-lookup"><span data-stu-id="67c47-251">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="67c47-252">限定数据的每个项目均<xref:System.AddIn.Hosting.QualificationDataItem>结构，它标识管道段并包含名称/值对从<xref:System.AddIn.Pipeline.QualificationDataAttribute>属性应用于该时间段。</span><span class="sxs-lookup"><span data-stu-id="67c47-252">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67c47-253">外接程序模型不使用应用于外接程序的宿主视图的限定数据。</span><span class="sxs-lookup"><span data-stu-id="67c47-253">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="67c47-254">因此，当您将无法找到的限定数据枚举时的任何项<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>属性是<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="67c47-254">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="67c47-255">或者，可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>属性来获取一组嵌套的包含的管线段的限定数据的字典。</span><span class="sxs-lookup"><span data-stu-id="67c47-255">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="addInToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c47-256">返回一个表示标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="67c47-256">Returns a string that represents the token.</span></span></summary>
        <returns><span data-ttu-id="67c47-257">一个表示标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="67c47-257">A string that represents the token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.AddIn.Hosting.AddInToken.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c47-258">获取 <see cref="T:System.AddIn.AddInAttribute" /> 特性中指定的外接程序版本。</span><span class="sxs-lookup"><span data-stu-id="67c47-258">Gets the version of the add-in, as specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></summary>
        <value><span data-ttu-id="67c47-259">外接程序的版本；如果 <see cref="T:System.AddIn.AddInAttribute" /> 特性中未指定版本号，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67c47-259">The version of the add-in, or <see langword="null" /> if the version number is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c47-260">版本编号是自由格式字符串。</span><span class="sxs-lookup"><span data-stu-id="67c47-260">The version number is a free-form string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c47-261">下面的示例显示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，并<xref:System.AddIn.Hosting.AddInToken.Version%2A>属性到控制台。</span><span class="sxs-lookup"><span data-stu-id="67c47-261">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="67c47-262">此代码示例是为提供一个更大示例的一部分<xref:System.AddIn.Hosting.AddInToken>类。</span><span class="sxs-lookup"><span data-stu-id="67c47-262">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>