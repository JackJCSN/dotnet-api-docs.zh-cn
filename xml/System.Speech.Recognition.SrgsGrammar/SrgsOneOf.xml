<Type Name="SrgsOneOf" FullName="System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdcb45883b25eb177da4035dcb3e96cea5dfe1e2" /><Meta Name="ms.sourcegitcommit" Value="bfce49b3a0c0685f994313d2e44a7c70def1694a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/05/2019" /><Meta Name="ms.locfileid" Value="66690928" /></Metadata><TypeSignature Language="C#" Value="public class SrgsOneOf : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsOneOf extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsOneOf&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsOneOf : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsOneOf = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsOneOf/OneOfDebugDisplay))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示可选的单词或短语的列表，其中所有可用于匹配语音输入。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>对象包含一系列可选的单词或短语，解说时可能会识别其中的任何一个。 可以生成从数组的替代项列表<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>对象或数组的<xref:System.String>对象。 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items%2A>属性来访问列表中的替代项。  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>类表示`one-of`World Wide Web 联合会 (W3C) 从元素[语音识别语法规范 (SRGS) 1.0 版](https://go.microsoft.com/fwlink/?LinkId=201761)。 璝惠 SRGS`one-of`元素，并通过 System.Speech，其支持有关的详细信息请参阅[一个-元素的](https://msdn.microsoft.com/library/643cee6b-5082-46ea-9fc1-9f3646a95801)。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以构造的实例<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>数组中的类<xref:System.String>对象的数组从<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>对象，或为空列表。 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>对象而不是<xref:System.String>一个替代项列表中的对象，可将应用的属性<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>到每个项在列表中，如<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat%2A>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat%2A>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability%2A>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight%2A>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsOneOf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsOneOf();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>元素生成的电子邮件列表的<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>包含国家/地区名称的元素，其中一个可用于识别包含的任何短语。 然后，该示例添加一个生成的<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>欧洲国家/地区和南美洲的国家/地区及其各自规则的对象。 进一步上，该示例使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>以对组规则引用的对象`ruleEurope`和`ruleSAmerica`到两个替代项列表，两者中任何一个的这可能会用于识别朗读的输入。  
  
```  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsOneOf (params System.Speech.Recognition.SrgsGrammar.SrgsItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray items As SrgsItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsOneOf(... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsOneOf : System.Speech.Recognition.SrgsGrammar.SrgsItem[] -&gt; System.Speech.Recognition.SrgsGrammar.SrgsOneOf" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsOneOf items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Speech.Recognition.SrgsGrammar.SrgsItem[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">要添加的替代项。</param>
        <summary>从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建识别短语的语法"is 赢得了世界杯国家/地区"跟赢得了全球创新杯的国家/地区的名称。 它将创建一个名为公共规则`WorldCupWinner`。 然后创建两个<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>对象使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>对象，其中包含数组的新<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>对象。 若要查看此示例生成的语法，请参阅<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>。  
  
```csharp  
 public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> 为 <see langword="null" />。  
  
<paramref name="items" /> 数组中的任何元素为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsOneOf (params string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsOneOf(... cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsOneOf : string[] -&gt; System.Speech.Recognition.SrgsGrammar.SrgsOneOf" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsOneOf items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">要添加的替代项。</param>
        <summary>从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 对象数组初始化 <see cref="T:System.String" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建识别短语的语法"is 赢得了世界杯国家/地区"跟赢得了全球创新杯的国家/地区的名称。 该示例使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>元素生成的数组中的可接受的国家/地区名称列表<xref:System.String>对象。 然后，该示例添加一个生成的<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>欧洲国家/地区和南美洲的国家/地区及其各自规则的对象。  
  
```  
public void WorldSoccerWinners ()  
{  
    // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf (new string[] {"England","France","Germany","Italy"});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf (new string[] {"Argentina","Brazil","Uruguay"});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  srgsGrammar.Rules.Add (new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> 为 <see langword="null" />。  
  
<paramref name="items" /> 数组中的任何元素为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As SrgsItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.SrgsGrammar.SrgsItem -&gt; unit" Usage="srgsOneOf.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Speech.Recognition.SrgsGrammar.SrgsItem" />
      </Parameters>
      <Docs>
        <param name="item">要添加到选项列表的项。</param>
        <summary>添加包含单词或短语的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 到替换选项列表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建识别短语的语法"is 赢得了世界杯国家/地区"跟赢得了全球创新杯的国家/地区的名称。 该示例使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>对象生成的数组中的可接受的国家/地区名称列表<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>对象。 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add%2A>方法，该示例将追加<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>，其中包含字符串"意大利"到<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>对象`oneOfEurope`。  
  
```  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany")});  
  oneOfEurope.Add(new SrgsItem("Italy"));  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As Collection(Of SrgsItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsItem ^&gt; ^ Items { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsItem&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 元素中包含的所有备选项的列表。</summary>
        <value>返回备选项列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可选的单词和短语，此属性返回可能已添加到<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>作为<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>或<xref:System.String>对象。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">创建使用 SrgsGrammar 语法</related>
      </Docs>
    </Member>
  </Members>
</Type>