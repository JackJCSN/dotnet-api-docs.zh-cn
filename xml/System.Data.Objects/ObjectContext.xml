<Type Name="ObjectContext" FullName="System.Data.Objects.ObjectContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b1ef87437a98df693bddfd709df8690e07c2b9a" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67240741" /></Metadata><TypeSignature Language="C#" Value="public class ObjectContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ObjectContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5f461-101">提供用于查询和使用对象形式的实体数据的功能。</span><span class="sxs-lookup"><span data-stu-id="5f461-101">Provides facilities for querying and working with entity data as objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f461-102"><xref:System.Data.Objects.ObjectContext> 类不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="5f461-102">The <xref:System.Data.Objects.ObjectContext> class is not thread safe.</span></span> <span data-ttu-id="5f461-103">中的数据对象的完整性<xref:System.Data.Objects.ObjectContext>无法确保在多线程方案中。</span><span class="sxs-lookup"><span data-stu-id="5f461-103">The integrity of data objects in an <xref:System.Data.Objects.ObjectContext> cannot be ensured in multithreaded scenarios.</span></span>  
  
 <span data-ttu-id="5f461-104"><xref:System.Data.Objects.ObjectContext>类是用于作为对象的概念模型中定义的实体类型实例的形式与数据进行交互的主类。</span><span class="sxs-lookup"><span data-stu-id="5f461-104">The <xref:System.Data.Objects.ObjectContext> class is the primary class for interacting with data as objects that are instances of entity types that are defined in a conceptual model.</span></span> <span data-ttu-id="5f461-105"><xref:System.Data.Objects.ObjectContext> 类的实例包装以下内容：</span><span class="sxs-lookup"><span data-stu-id="5f461-105">An instance of the <xref:System.Data.Objects.ObjectContext> class encapsulates the following:</span></span>  
  
-   <span data-ttu-id="5f461-106">到数据库的连接，以 <xref:System.Data.EntityClient.EntityConnection> 对象的形式包装。</span><span class="sxs-lookup"><span data-stu-id="5f461-106">A connection to the database, in the form of an <xref:System.Data.EntityClient.EntityConnection> object.</span></span>  
  
-   <span data-ttu-id="5f461-107">描述模型的元数据，以 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 对象的形式包装。</span><span class="sxs-lookup"><span data-stu-id="5f461-107">Metadata that describes the model, in the form of a <xref:System.Data.Metadata.Edm.MetadataWorkspace> object.</span></span>  
  
-   <span data-ttu-id="5f461-108">用来管理保存在缓存中的对象的 <xref:System.Data.Objects.ObjectStateManager> 对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-108">An <xref:System.Data.Objects.ObjectStateManager> object that manages objects persisted in the cache.</span></span>  
  
 <span data-ttu-id="5f461-109">当通过 Entity Data Model 工具生成表示概念模型的对象层时，类，表示<xref:System.Data.Metadata.Edm.EntityContainer>模型派生自<xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="5f461-109">When the object layer that represents a conceptual model is generated by the Entity Data Model tools, the class that represents the <xref:System.Data.Metadata.Edm.EntityContainer> for the model is derived from the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-110">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-110">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-111">该示例演示如何构造 <xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="5f461-111">The example shows you how to construct an <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectcontext)]
 [!code-vb[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectcontext)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="5f461-112">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-112">Querying Data as Objects (Entity Framework)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-113">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-113">Working with Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f461-114">初始化 <see cref="T:System.Data.Objects.ObjectContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-114">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectContext (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectContext(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : System.Data.EntityClient.EntityConnection -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="5f461-115">一个 <see cref="T:System.Data.EntityClient.EntityConnection" />，其中包含对模型和数据源连接的引用。</span><span class="sxs-lookup"><span data-stu-id="5f461-115">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that contains references to the model and to the data source connection.</span></span></param>
        <summary><span data-ttu-id="5f461-116">使用给定连接初始化 <see cref="T:System.Data.Objects.ObjectContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-116">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with the given connection.</span></span> <span data-ttu-id="5f461-117">在构造过程中，从 <see cref="T:System.Data.EntityClient.EntityConnection" /> 对象提取元数据工作区。</span><span class="sxs-lookup"><span data-stu-id="5f461-117">During construction, the metadata workspace is extracted from the <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-118"><paramref name="connection" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-118">The <paramref name="connection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-119"><paramref name="connection" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-119">The <paramref name="connection" /> is invalid.</span></span>  
  
<span data-ttu-id="5f461-120">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-120">-or-</span></span> 
<span data-ttu-id="5f461-121">元数据工作区无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-121">The metadata workspace is invalid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-122">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-122">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectContext (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectContext(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="5f461-123">连接字符串，此连接字符串也可提供对元数据信息的访问。</span><span class="sxs-lookup"><span data-stu-id="5f461-123">The connection string, which also provides access to the metadata information.</span></span></param>
        <summary><span data-ttu-id="5f461-124">使用给定的连接字符串和默认的实体容器名称初始化 <see cref="T:System.Data.Objects.ObjectContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-124">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with the given connection string and default entity container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-125">`connectionString`是一个字符串，包含所需访问概念模型并连接到数据源信息。</span><span class="sxs-lookup"><span data-stu-id="5f461-125">The `connectionString` is a string that contains information that is required to access a conceptual model and to connect to a data source.</span></span> <span data-ttu-id="5f461-126"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> 类可用于正确地格式化字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-126">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class can be used to correctly format the string.</span></span>  
  
 <span data-ttu-id="5f461-127">[Entity Data Model 工具](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399249(v%3dvs.100))生成应用程序的配置文件中存储的已命名的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-127">The [Entity Data Model tools](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399249(v%3dvs.100)) generate a named connection string that is stored in the application's configuration file.</span></span> <span data-ttu-id="5f461-128">此命名的连接字符串可以提供而不是`connectionString`参数实例化时<xref:System.Data.Objects.ObjectContext>类。</span><span class="sxs-lookup"><span data-stu-id="5f461-128">This named connection string can be supplied instead of the `connectionString` parameter when instantiating the <xref:System.Data.Objects.ObjectContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-129">本主题中的示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-129">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-130">该示例演示如何构造 <xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="5f461-130">The example shows how to construct an <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectcontext)]
 [!code-vb[DP ObjectServices Concepts#ObjectContext](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectcontext)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-131"><paramref name="connectionString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-131">The <paramref name="connectionString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-132"><paramref name="connectionString" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-132">The <paramref name="connectionString" /> is invalid.</span></span>  
  
<span data-ttu-id="5f461-133">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-133">-or-</span></span> 
<span data-ttu-id="5f461-134">元数据工作区无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-134">The metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-135">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-135">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectContext (System.Data.EntityClient.EntityConnection connection, string defaultContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection, string defaultContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (connection As EntityConnection, defaultContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectContext(System::Data::EntityClient::EntityConnection ^ connection, System::String ^ defaultContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : System.Data.EntityClient.EntityConnection * string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext (connection, defaultContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
        <Parameter Name="defaultContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="5f461-136">一个 <see cref="T:System.Data.EntityClient.EntityConnection" />，其中包含对模型和数据源连接的引用。</span><span class="sxs-lookup"><span data-stu-id="5f461-136">An <see cref="T:System.Data.EntityClient.EntityConnection" /> that contains references to the model and to the data source connection.</span></span></param>
        <param name="defaultContainerName"><span data-ttu-id="5f461-137">默认实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-137">The name of the default entity container.</span></span> <span data-ttu-id="5f461-138">通过此方法设置 <paramref name="defaultContainerName" /> 时，该属性为只读属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-138">When the <paramref name="defaultContainerName" /> is set through this method, the property becomes read-only.</span></span></param>
        <summary><span data-ttu-id="5f461-139">使用给定的连接和实体容器名称初始化 <see cref="T:System.Data.Objects.ObjectContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-139">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with a given connection and entity container name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-140"><paramref name="connection" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-140">The <paramref name="connection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-141"><paramref name="connection" /> 或 <paramref name="defaultContainerName" /> 或元数据工作区无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-141">The <paramref name="connection" />, <paramref name="defaultContainerName" />, or metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-142">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-142">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectContext (string connectionString, string defaultContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string connectionString, string defaultContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (connectionString As String, defaultContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectContext(System::String ^ connectionString, System::String ^ defaultContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectContext : string * string -&gt; System.Data.Objects.ObjectContext" Usage="new System.Data.Objects.ObjectContext (connectionString, defaultContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="defaultContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="5f461-143">连接字符串，此连接字符串也可提供对元数据信息的访问。</span><span class="sxs-lookup"><span data-stu-id="5f461-143">The connection string, which also provides access to the metadata information.</span></span></param>
        <param name="defaultContainerName"><span data-ttu-id="5f461-144">默认实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-144">The name of the default entity container.</span></span> <span data-ttu-id="5f461-145">通过此方法设置 <paramref name="defaultContainerName" /> 时，该属性为只读属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-145">When the <paramref name="defaultContainerName" /> is set through this method, the property becomes read-only.</span></span></param>
        <summary><span data-ttu-id="5f461-146">使用给定的连接字符串和实体容器名称初始化 <see cref="T:System.Data.Objects.ObjectContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-146">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectContext" /> class with a given connection string and entity container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-147">`connectionString`是一个字符串，包含所需访问概念模型并连接到数据源信息。</span><span class="sxs-lookup"><span data-stu-id="5f461-147">The `connectionString` is a string that contains information that is required to access a conceptual model and to connect to a data source.</span></span> <span data-ttu-id="5f461-148"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> 类可用于正确地格式化字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-148">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class can be used to correctly format the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-149"><paramref name="connectionString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-149">The <paramref name="connectionString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-150"><paramref name="connectionString" /> 或 <paramref name="defaultContainerName" /> 或元数据工作区无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-150">The <paramref name="connectionString" />, <paramref name="defaultContainerName" />, or metadata workspace is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-151">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-151">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptAllChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptAllChanges : unit -&gt; unit" Usage="objectContext.AcceptAllChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-152">接受在对象上下文中对对象所做的所有更改。</span><span class="sxs-lookup"><span data-stu-id="5f461-152">Accepts all changes made to objects in the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-153">接受 <xref:System.Data.Objects.ObjectStateManager> 中所有关联项上的更改，因此这些项的结果状态为未更改或已分离。</span><span class="sxs-lookup"><span data-stu-id="5f461-153">Accepts the changes on all associated entries in the <xref:System.Data.Objects.ObjectStateManager> so their resultant state is either unchanged or detached.</span></span>  
  
 <span data-ttu-id="5f461-154">此方法循环访问 <xref:System.Data.Objects.ObjectStateEntry> 中所有为 Added 或 Modified 的 <xref:System.Data.Objects.ObjectStateManager> 对象，然后将项的状态设置为 Unchanged。</span><span class="sxs-lookup"><span data-stu-id="5f461-154">This method iterates all the <xref:System.Data.Objects.ObjectStateEntry> objects within the <xref:System.Data.Objects.ObjectStateManager> that are Added or Modified, and then sets the state of the entry to Unchanged.</span></span> <span data-ttu-id="5f461-155">Deleted 项变为已分离的。</span><span class="sxs-lookup"><span data-stu-id="5f461-155">The Deleted items become detached.</span></span>  
  
 <span data-ttu-id="5f461-156">如果<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>调用方法和<xref:System.Data.Objects.SaveOptions.AcceptAllChangesAfterSave>未指定，则用户必须调用<xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-156">If the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method was called and the <xref:System.Data.Objects.SaveOptions.AcceptAllChangesAfterSave> was not specified, the user must call the <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> method.</span></span> <span data-ttu-id="5f461-157">如果事务失败而用户希望重试，<xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> 方法就很有用。</span><span class="sxs-lookup"><span data-stu-id="5f461-157">The <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> method is useful in the scenario where a transaction has failed and a user wants to retry.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-158">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-158">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="objectContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="5f461-159">表示实体集名称，可以选择通过实体容器名称对它进行限定。</span><span class="sxs-lookup"><span data-stu-id="5f461-159">Represents the entity set name, which may optionally be qualified by the entity container name.</span></span></param>
        <param name="entity"><span data-ttu-id="5f461-160">要添加的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-160">The <see cref="T:System.Object" /> to add.</span></span></param>
        <summary><span data-ttu-id="5f461-161">将对象添加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-161">Adds an object to the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-162">调用 <xref:System.Data.Objects.ObjectContext.AddObject%2A> 的 <xref:System.Data.Objects.ObjectContext> 可将对象添加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-162">Call <xref:System.Data.Objects.ObjectContext.AddObject%2A> on the <xref:System.Data.Objects.ObjectContext> to add the object to the object context.</span></span> <span data-ttu-id="5f461-163">当对象为数据源中尚不存在的新对象时采用此方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-163">Do this when the object is a new object that does not yet exist in the data source.</span></span> <span data-ttu-id="5f461-164">有关详细信息，请参阅[附加和分离对象](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。</span><span class="sxs-lookup"><span data-stu-id="5f461-164">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="5f461-165">对象以 <xref:System.Data.Objects.ObjectStateManager>、<xref:System.Data.EntityState.Detached> 或 <xref:System.Data.EntityState.Deleted> 状态添加到 <xref:System.Data.EntityState.Added>。</span><span class="sxs-lookup"><span data-stu-id="5f461-165">Objects are added to the <xref:System.Data.Objects.ObjectStateManager> in the <xref:System.Data.EntityState.Detached>, <xref:System.Data.EntityState.Deleted> or <xref:System.Data.EntityState.Added> state.</span></span>  
  
 <span data-ttu-id="5f461-166">在创建与对象上下文中的另一个对象相关的新对象时，通过使用下列方法之一添加该新对象：</span><span class="sxs-lookup"><span data-stu-id="5f461-166">When you create a new object that is related to another object in the object context, add the object by using one of the following methods:</span></span>  
  
-   <span data-ttu-id="5f461-167">调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 的 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 方法并指定相关对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-167">Call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and specify the related object.</span></span> <span data-ttu-id="5f461-168">此方法适用于一对多或多对多关系。</span><span class="sxs-lookup"><span data-stu-id="5f461-168">Do this for a one-to-many or many-to-many relationship.</span></span>  
  
-   <span data-ttu-id="5f461-169">将 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 的 <xref:System.Data.Objects.DataClasses.EntityReference%601> 属性设置为相关对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-169">Set the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> to the related object.</span></span> <span data-ttu-id="5f461-170">此方法适用于一对一或多对一关系。</span><span class="sxs-lookup"><span data-stu-id="5f461-170">Do this for a one-to-one or many-to-one relationship.</span></span>  
  
 <span data-ttu-id="5f461-171">有关详细信息，请参阅[创建、 添加、 修改和删除对象](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)。</span><span class="sxs-lookup"><span data-stu-id="5f461-171">For more information, see [Creating, Adding, Modifying, and Deleting Objects](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1).</span></span>  
  
 <span data-ttu-id="5f461-172">如果对象处于已分离状态，它必须不具有<xref:System.Data.EntityKey>。</span><span class="sxs-lookup"><span data-stu-id="5f461-172">If the object is in a detached state it must not have an <xref:System.Data.EntityKey>.</span></span>  
  
 <span data-ttu-id="5f461-173">为规则`entitySetName`格式如下所示：</span><span class="sxs-lookup"><span data-stu-id="5f461-173">The rules for the `entitySetName` format are as follows:</span></span>  
  
-   <span data-ttu-id="5f461-174">如果<xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A>属性是`null`，然后`entitySetName`必须是完全限定作为 in *\<实体容器名称 >*。*\<实体集名称 >*。</span><span class="sxs-lookup"><span data-stu-id="5f461-174">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> property is `null`, then the `entitySetName` has to be fully qualified as in *\<Entity Container Name>*.*\<Entity Set Name>*.</span></span>  
  
-   <span data-ttu-id="5f461-175">如果<xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A>不是`null`，然后`entitySetName`可以是*\<实体容器名称 >*。*\<实体集名称 >* 或*\<实体集名称 >*。</span><span class="sxs-lookup"><span data-stu-id="5f461-175">If <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> is not `null`, then the `entitySetName` can be either *\<Entity Container Name>*.*\<Entity Set Name>* or *\<Entity Set Name>*.</span></span>  
  
 <span data-ttu-id="5f461-176">如果`object`已<xref:System.Data.EntityKey>并`entitySetName`具有值，则<xref:System.Data.Metadata.Edm.EntitySet>的实体键必须与匹配<xref:System.Data.Metadata.Edm.EntitySet>找到基于`entitySetName`和实体容器名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-176">If the `object` has an <xref:System.Data.EntityKey> and `entitySetName` has a value, then the <xref:System.Data.Metadata.Edm.EntitySet> of the entity key must match the <xref:System.Data.Metadata.Edm.EntitySet> that was found based on the `entitySetName` and entity container name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-177">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-177">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-178">示例添加一个新产品，并将所做的更改保存到数据库。</span><span class="sxs-lookup"><span data-stu-id="5f461-178">The example adds a new product and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobject)]
 [!code-vb[DP ObjectServices Concepts#AddObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobject)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-179"><paramref name="entity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-179">The <paramref name="entity" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="5f461-180">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-180">-or-</span></span> 
<span data-ttu-id="5f461-181"><paramref name="entitySetName" /> 未限定。</span><span class="sxs-lookup"><span data-stu-id="5f461-181">The <paramref name="entitySetName" /> does not qualify.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.AddObject(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-182">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-182">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplyCurrentValues&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public TEntity ApplyCurrentValues&lt;TEntity&gt; (string entitySetName, TEntity currentEntity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TEntity ApplyCurrentValues&lt;class TEntity&gt;(string entitySetName, !!TEntity currentEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyCurrentValues(Of TEntity As Class) (entitySetName As String, currentEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class TEntity ApplyCurrentValues(System::String ^ entitySetName, TEntity currentEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyCurrentValues : string * 'Entity -&gt; 'Entity (requires 'Entity : null)" Usage="objectContext.ApplyCurrentValues (entitySetName, currentEntity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="currentEntity" Type="TEntity" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-183">对象的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-183">The entity type of the object.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="5f461-184">对象所属的实体集的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-184">The name of the entity set to which the object belongs.</span></span></param>
        <param name="currentEntity"><span data-ttu-id="5f461-185">具有要应用于原始对象的属性更新的已分离对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-185">The detached object that has property updates to apply to the original object.</span></span> <span data-ttu-id="5f461-186"><paramref name="currentEntity" /> 的实体键必须与 <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> 中某个项的 <see cref="T:System.Data.Objects.ObjectContext" /> 属性相匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-186">The entity key of <paramref name="currentEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="5f461-187">将标量值从提供的对象复制到具有相同键的 <see cref="T:System.Data.Objects.ObjectContext" /> 中的对象中。</span><span class="sxs-lookup"><span data-stu-id="5f461-187">Copies the scalar values from the supplied object into the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span></span></summary>
        <returns><span data-ttu-id="5f461-188">已更新的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-188">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-189"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>方法用于将应用到外部对象所做的更改<xref:System.Data.Objects.ObjectContext>，例如，Web 服务接收到的已分离对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-189">The <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method is used to apply changes that were made to objects outside the <xref:System.Data.Objects.ObjectContext>, such as detached objects that are received by a Web service.</span></span> <span data-ttu-id="5f461-190">方法将标量值从提供的对象复制到中的对象<xref:System.Data.Objects.ObjectContext>中具有相同的键。</span><span class="sxs-lookup"><span data-stu-id="5f461-190">The method copies the scalar values from the supplied object into the object in the <xref:System.Data.Objects.ObjectContext> that has the same key.</span></span> <span data-ttu-id="5f461-191">可以使用<xref:System.Data.EntityKey>已分离对象以从数据源中检索此对象的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-191">You can use the <xref:System.Data.EntityKey> of the detached object to retrieve an instance of this object from the data source.</span></span> <span data-ttu-id="5f461-192">有关详细信息，请参阅[如何：返回使用其密钥的特定对象](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd)。</span><span class="sxs-lookup"><span data-stu-id="5f461-192">For more information, see [How to: Return a Specific Object Using its Key](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd).</span></span> <span data-ttu-id="5f461-193">不同于该对象的原始值的任何值都标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="5f461-193">Any values that differ from the original values of the object are marked as modified.</span></span> <span data-ttu-id="5f461-194">请注意，此方法不适用于当前值的相关对象`currentEntity`。</span><span class="sxs-lookup"><span data-stu-id="5f461-194">Note, the method does not apply the current values to the related objects of `currentEntity`.</span></span>  
  
 <span data-ttu-id="5f461-195">如果您有与当前值的关系图，并想要应用的原始值，调用<xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-195">If you have a graph with the current values and want to apply the original values, call <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-196">此外可以使用<xref:System.Data.Objects.ObjectSet%601.ApplyCurrentValues%2A>的<xref:System.Data.Objects.ObjectSet%601>或<xref:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues%2A>方法的<xref:System.Data.Objects.ObjectStateEntry>。</span><span class="sxs-lookup"><span data-stu-id="5f461-196">You may also use the <xref:System.Data.Objects.ObjectSet%601.ApplyCurrentValues%2A> of the <xref:System.Data.Objects.ObjectSet%601> or <xref:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues%2A> method of the <xref:System.Data.Objects.ObjectStateEntry>.</span></span> <span data-ttu-id="5f461-197">有关详细信息，请参阅[生成 N 层应用程序](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb)。</span><span class="sxs-lookup"><span data-stu-id="5f461-197">For more information, see [Building N-Tier Applications](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-198"><paramref name="entitySetName" /> 或 <paramref name="current" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-198"><paramref name="entitySetName" /> or <paramref name="current" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-199">来自 <paramref name="entitySetName" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 与对象的 <see cref="T:System.Data.EntityKey" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-199">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="5f461-200">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-200">-or-</span></span> 
<span data-ttu-id="5f461-201">该对象未处于 <see cref="T:System.Data.Objects.ObjectStateManager" /> 状态或处于 <see cref="F:System.Data.EntityState.Detached" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-201">The object is not in the <see cref="T:System.Data.Objects.ObjectStateManager" /> or it is in a <see cref="F:System.Data.EntityState.Detached" /> state.</span></span>  
  
<span data-ttu-id="5f461-202">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-202">-or-</span></span> 
<span data-ttu-id="5f461-203">所提供对象的实体键无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-203">The entity key of the supplied object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-204"><paramref name="entitySetName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-204"><paramref name="entitySetName" /> is an empty string.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)" />
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyOriginalValues&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public TEntity ApplyOriginalValues&lt;TEntity&gt; (string entitySetName, TEntity originalEntity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TEntity ApplyOriginalValues&lt;class TEntity&gt;(string entitySetName, !!TEntity originalEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOriginalValues(Of TEntity As Class) (entitySetName As String, originalEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class TEntity ApplyOriginalValues(System::String ^ entitySetName, TEntity originalEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyOriginalValues : string * 'Entity -&gt; 'Entity (requires 'Entity : null)" Usage="objectContext.ApplyOriginalValues (entitySetName, originalEntity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="originalEntity" Type="TEntity" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-205">实体对象的类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-205">The type of the entity object.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="5f461-206">对象所属的实体集的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-206">The name of the entity set to which the object belongs.</span></span></param>
        <param name="originalEntity"><span data-ttu-id="5f461-207">具有要应用于对象的原始值的已分离对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-207">The detached object that has original values to apply to the object.</span></span> <span data-ttu-id="5f461-208"><paramref name="originalEntity" /> 的实体键必须与 <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> 中某个项的 <see cref="T:System.Data.Objects.ObjectContext" /> 属性相匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-208">The entity key of <paramref name="originalEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="5f461-209">将标量值从提供的对象复制到 <see cref="T:System.Data.Objects.ObjectContext" /> 中具有相同键的对象的原始值集中。</span><span class="sxs-lookup"><span data-stu-id="5f461-209">Copies the scalar values from the supplied object into set of original values for the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span></span></summary>
        <returns><span data-ttu-id="5f461-210">已更新的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-210">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-211"><xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A>方法用于将应用到外部对象所做的更改<xref:System.Data.Objects.ObjectContext>，例如，Web 服务接收到的已分离对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-211">The <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method is used to apply changes that were made to objects outside the <xref:System.Data.Objects.ObjectContext>, such as detached objects that are received by a Web service.</span></span> <span data-ttu-id="5f461-212">方法将标量值从提供的对象复制到中的对象<xref:System.Data.Objects.ObjectContext>中具有相同的键。</span><span class="sxs-lookup"><span data-stu-id="5f461-212">The method copies the scalar values from the supplied object into the object in the <xref:System.Data.Objects.ObjectContext> that has the same key.</span></span> <span data-ttu-id="5f461-213">可以使用<xref:System.Data.EntityKey>已分离对象以从数据源中检索此对象的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-213">You can use the <xref:System.Data.EntityKey> of the detached object to retrieve an instance of this object from the data source.</span></span> <span data-ttu-id="5f461-214">有关详细信息，请参阅[如何：返回使用其密钥的特定对象](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd)。</span><span class="sxs-lookup"><span data-stu-id="5f461-214">For more information, see [How to: Return a Specific Object Using its Key](https://msdn.microsoft.com/library/2e9902af-29b0-4e5d-92db-03dfe6ec49bd).</span></span> <span data-ttu-id="5f461-215">与当前对象的值不同的任何值都标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="5f461-215">Any values that differ from the current values of the object are marked as modified.</span></span> <span data-ttu-id="5f461-216">请注意，此方法不适用于当前值的相关对象`originalEntity`。</span><span class="sxs-lookup"><span data-stu-id="5f461-216">Note, the method does not apply the current values to the related objects of `originalEntity`.</span></span>  
  
 <span data-ttu-id="5f461-217">如果您有使用原始值的关系图，并想要应用的当前值，调用<xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-217">If you have a graph with the original values and want to apply the current values, call <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-218">此外可以使用<xref:System.Data.Objects.ObjectSet%601.ApplyOriginalValues%2A>的<xref:System.Data.Objects.ObjectSet%601>或<xref:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues%2A>方法的<xref:System.Data.Objects.ObjectStateEntry>。</span><span class="sxs-lookup"><span data-stu-id="5f461-218">You may also use the <xref:System.Data.Objects.ObjectSet%601.ApplyOriginalValues%2A> of the <xref:System.Data.Objects.ObjectSet%601> or <xref:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues%2A> method of the <xref:System.Data.Objects.ObjectStateEntry>.</span></span> <span data-ttu-id="5f461-219">有关详细信息，请参阅[生成 N 层应用程序](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb)。</span><span class="sxs-lookup"><span data-stu-id="5f461-219">For more information, see [Building N-Tier Applications](https://msdn.microsoft.com/library/9439d2ba-6b5f-44e8-be65-8a442d922cbb).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-220"><paramref name="entitySetName" /> 或 <paramref name="original" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-220"><paramref name="entitySetName" /> or <paramref name="original" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-221">来自 <paramref name="entitySetName" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 与对象的 <see cref="T:System.Data.EntityKey" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-221">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="5f461-222">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-222">-or-</span></span> 
<span data-ttu-id="5f461-223">对象的 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 无法在 <see cref="T:System.Data.Objects.ObjectStateManager" /> 中找到。</span><span class="sxs-lookup"><span data-stu-id="5f461-223">An <see cref="T:System.Data.Objects.ObjectStateEntry" /> for the object cannot be found in the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span> <span data-ttu-id="5f461-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-224">-or-</span></span> 
<span data-ttu-id="5f461-225">该对象处于 <see cref="F:System.Data.EntityState.Added" /> 或 <see cref="F:System.Data.EntityState.Detached" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-225">The object is in an <see cref="F:System.Data.EntityState.Added" /> or a <see cref="F:System.Data.EntityState.Detached" /> state.</span></span>  
  
<span data-ttu-id="5f461-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-226">-or-</span></span> 
<span data-ttu-id="5f461-227">所提供对象的实体键无效，或者有属性更改。</span><span class="sxs-lookup"><span data-stu-id="5f461-227">The entity key of the supplied object is invalid or has property changes.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-228"><paramref name="entitySetName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-228"><paramref name="entitySetName" /> is an empty string.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)" />
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyPropertyChanges">
      <MemberSignature Language="C#" Value="public void ApplyPropertyChanges (string entitySetName, object changed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPropertyChanges(string entitySetName, object changed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPropertyChanges (entitySetName As String, changed As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPropertyChanges(System::String ^ entitySetName, System::Object ^ changed);" />
      <MemberSignature Language="F#" Value="member this.ApplyPropertyChanges : string * obj -&gt; unit" Usage="objectContext.ApplyPropertyChanges (entitySetName, changed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use ApplyCurrentValues instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="changed" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="5f461-229">对象所属的实体集的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-229">The name of the entity set to which the object belongs.</span></span></param>
        <param name="changed"><span data-ttu-id="5f461-230">具有要应用于原始对象的属性更新的已分离对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-230">The detached object that has property updates to apply to the original object.</span></span></param>
        <summary><span data-ttu-id="5f461-231">将已分离对象的属性更改应用于已附加到对象上下文的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-231">Applies property changes from a detached object to an object already attached to the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-232"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 方法用于将已修改、已分离版本的对象的属性更改应用于附加到 <xref:System.Data.Objects.ObjectContext> 的原始版本。</span><span class="sxs-lookup"><span data-stu-id="5f461-232">The <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method is used to apply property changes from a modified, detached version of an object to the original version attached to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="5f461-233">这样可支持 Web 服务等方案，这些方案将实体对象分离并发送至属性已更新的远程应用程序。</span><span class="sxs-lookup"><span data-stu-id="5f461-233">This supports scenarios, such as Web services, where an entity object is detached and sent to a remote application where property updates are made.</span></span> <span data-ttu-id="5f461-234">使用此方法可以更加方便地将这些更改应用回原始对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-234">This method enables you to more easily apply these changes back to the original object.</span></span>  
  
 <span data-ttu-id="5f461-235">在执行 <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 之后，对象处于 <xref:System.Data.EntityState.Modified> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-235">After <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A>, the object is in the <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="5f461-236">必须调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 方法来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-236">You must call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method to update the data source.</span></span>  
  
 <span data-ttu-id="5f461-237">原始对象必须存在于 <xref:System.Data.Objects.ObjectStateManager> 中，并且必须处于 <xref:System.Data.EntityState.Modified> 或 <xref:System.Data.EntityState.Unchanged> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-237">The original object must exist in the <xref:System.Data.Objects.ObjectStateManager> and must be in the <xref:System.Data.EntityState.Modified> or <xref:System.Data.EntityState.Unchanged> state.</span></span> <span data-ttu-id="5f461-238">如果已修改的属性中，仅修改原始对象`changed`对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-238">The original object is only modified if there are modified properties in the `changed` object.</span></span>  
  
 <span data-ttu-id="5f461-239">提供对象的 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 属性必须设置为有效的 <xref:System.Data.EntityKey>。</span><span class="sxs-lookup"><span data-stu-id="5f461-239">The <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> property of the supplied object must be set to a valid <xref:System.Data.EntityKey>.</span></span>  
  
 <span data-ttu-id="5f461-240"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 不影响导航属性或相关对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-240"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> does not affect navigation properties or related objects.</span></span>  
  
 <span data-ttu-id="5f461-241"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 仅设置类型的实体元数据中存在的属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-241"><xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> only sets properties that exist in the entity metadata for the type.</span></span> <span data-ttu-id="5f461-242">例如，<xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> 操作不涉及在分部类中添加的属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-242">For example, properties that are added in a partial class are not included in the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-243">当 <paramref name="entitySetName" /> 为 <see langword="null" /> 或空字符串时。</span><span class="sxs-lookup"><span data-stu-id="5f461-243">When <paramref name="entitySetName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="5f461-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-244">-or-</span></span> 
<span data-ttu-id="5f461-245">当 <paramref name="changed" /> 为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="5f461-245">When <paramref name="changed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-246">来自 <paramref name="entitySetName" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 与对象的 <see cref="T:System.Data.EntityKey" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 不匹配时。</span><span class="sxs-lookup"><span data-stu-id="5f461-246">When the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="5f461-247">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-247">-or-</span></span> 
<span data-ttu-id="5f461-248">当实体处于 <see cref="F:System.Data.EntityState.Modified" /> 或 <see cref="F:System.Data.EntityState.Unchanged" /> 之外的状态时。</span><span class="sxs-lookup"><span data-stu-id="5f461-248">When the entity is in a state other than <see cref="F:System.Data.EntityState.Modified" /> or <see cref="F:System.Data.EntityState.Unchanged" />.</span></span>  
  
<span data-ttu-id="5f461-249">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-249">-or-</span></span> 
<span data-ttu-id="5f461-250">原始对象未附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-250">The original object is not attached to the context.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-251">当 <paramref name="changed" /> 对象的类型与原始对象的类型不同时。</span><span class="sxs-lookup"><span data-stu-id="5f461-251">When the type of the <paramref name="changed" /> object is not the same type as the original object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Data.Objects.DataClasses.IEntityWithKey entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(class System.Data.Objects.DataClasses.IEntityWithKey entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As IEntityWithKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Data::Objects::DataClasses::IEntityWithKey ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Attach : System.Data.Objects.DataClasses.IEntityWithKey -&gt; unit" Usage="objectContext.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithKey" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="5f461-252">要附加的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-252">The object to attach.</span></span></param>
        <summary><span data-ttu-id="5f461-253">在对象具有实体键时将对象或对象图附加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-253">Attaches an object or object graph to the object context when the object has an entity key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-254">调用 <xref:System.Data.Objects.ObjectContext.Attach%2A> 的 <xref:System.Data.Objects.ObjectContext> 可将对象附加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-254">Call <xref:System.Data.Objects.ObjectContext.Attach%2A> on the <xref:System.Data.Objects.ObjectContext> to attach the object to the object context.</span></span> <span data-ttu-id="5f461-255">当对象已存在于数据源中但当前尚未附加到上下文时采用此方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-255">Do this when the object already exists in the data source but is currently not attached to the context.</span></span> <span data-ttu-id="5f461-256">有关详细信息，请参阅[自定义对象](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)。</span><span class="sxs-lookup"><span data-stu-id="5f461-256">For more information, see [Customizing Objects](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span></span>  
  
 <span data-ttu-id="5f461-257"><xref:System.Data.Objects.ObjectContext.Attach%2A> 用于附加对象或对象图中的顶层对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-257"><xref:System.Data.Objects.ObjectContext.Attach%2A> is used to attach an object or the top-level object in an object graph.</span></span>  
  
 <span data-ttu-id="5f461-258">要附加的对象必须实现 <xref:System.Data.Objects.DataClasses.IEntityWithKey> 以公开 <xref:System.Data.EntityKey>。</span><span class="sxs-lookup"><span data-stu-id="5f461-258">The object being attached must implement <xref:System.Data.Objects.DataClasses.IEntityWithKey> to expose an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="5f461-259">所有生成的实体类都实现 <xref:System.Data.Objects.DataClasses.IEntityWithKey>。</span><span class="sxs-lookup"><span data-stu-id="5f461-259">All generated entity classes implement <xref:System.Data.Objects.DataClasses.IEntityWithKey>.</span></span>  
  
 <span data-ttu-id="5f461-260">附加相关的对象时，你还必须调用`Attach`上<xref:System.Data.Objects.DataClasses.EntityReference%601>或<xref:System.Data.Objects.DataClasses.EntityCollection%601>定义的关系。</span><span class="sxs-lookup"><span data-stu-id="5f461-260">When you attach related objects, you must also call `Attach` on the <xref:System.Data.Objects.DataClasses.EntityReference%601> or the <xref:System.Data.Objects.DataClasses.EntityCollection%601> to define the relationship.</span></span>  
  
 <span data-ttu-id="5f461-261">此方法调用 <xref:System.Data.Objects.ObjectContext.AttachTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-261">This method calls the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-262">在附加对象时需要考虑下列注意事项：</span><span class="sxs-lookup"><span data-stu-id="5f461-262">The following considerations apply when attaching objects:</span></span>  
  
-   <span data-ttu-id="5f461-263">如果要附加的对象具有相关对象，则这些对象也会附加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-263">If the object being attached has related objects, those objects will also be attached to the object context.</span></span>  
  
-   <span data-ttu-id="5f461-264">对象以未更改状态添加到对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-264">Objects are added to the object context in an unchanged state.</span></span>  
  
-   <span data-ttu-id="5f461-265">传递到 <xref:System.Data.Objects.ObjectContext.Attach%2A> 方法的对象必须具有有效的 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="5f461-265">The object that is passed to the <xref:System.Data.Objects.ObjectContext.Attach%2A> method must have a valid <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> value.</span></span> <span data-ttu-id="5f461-266">如果对象没有有效的 <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> 值，请使用 <xref:System.Data.Objects.ObjectContext.AttachTo%2A> 方法指定实体集的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-266">If the object does not have a valid <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> value, use the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method to specify the name of the entity set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-267">本主题中的示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-267">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-268">在此示例中，附加了两个对象，然后定义了关系。</span><span class="sxs-lookup"><span data-stu-id="5f461-268">In this example, two objects are attached and then the relationship is defined.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#attachrelatedobjects)]
 [!code-vb[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#attachrelatedobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-269"><paramref name="entity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-269">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-270">实体键无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-270">Invalid entity key.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="objectContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="5f461-271">表示实体集名称，可以选择通过实体容器名称对它进行限定。</span><span class="sxs-lookup"><span data-stu-id="5f461-271">Represents the entity set name, which may optionally be qualified by the entity container name.</span></span></param>
        <param name="entity"><span data-ttu-id="5f461-272">要附加的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-272">The <see cref="T:System.Object" /> to attach.</span></span></param>
        <summary><span data-ttu-id="5f461-273">将对象或对象图附加到特定实体集中的对象上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-273">Attaches an object or object graph to the object context in a specific entity set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-274">调用<xref:System.Data.Objects.ObjectContext.AttachTo%2A>上<xref:System.Data.Objects.ObjectContext>将对象附加到对象上下文中设置的特定实体或如果对象具有`null`(`Nothing`在 Visual Basic 中)<xref:System.Data.EntityKey>值。</span><span class="sxs-lookup"><span data-stu-id="5f461-274">Call <xref:System.Data.Objects.ObjectContext.AttachTo%2A> on the <xref:System.Data.Objects.ObjectContext> to attach the object to a specific entity set in the object context or if the object has a `null` (`Nothing` in Visual Basic) <xref:System.Data.EntityKey> value.</span></span> <span data-ttu-id="5f461-275">有关详细信息，请参阅[附加和分离对象](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。</span><span class="sxs-lookup"><span data-stu-id="5f461-275">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="5f461-276">要附加的对象可以是单个对象，也可以是对象图的一部分。</span><span class="sxs-lookup"><span data-stu-id="5f461-276">The object being attached can be a single object or be part of the graph.</span></span>  
  
 <span data-ttu-id="5f461-277">为规则`entitySetName`格式如下所示：</span><span class="sxs-lookup"><span data-stu-id="5f461-277">The rules for the `entitySetName` format are as follows:</span></span>  
  
-   <span data-ttu-id="5f461-278">如果<xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A>属性是`null`，然后`entitySetName`必须是完全限定作为 in *\<实体容器名称 >*。*\<实体集名称 >*。</span><span class="sxs-lookup"><span data-stu-id="5f461-278">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> property is `null`, then the `entitySetName` has to be fully qualified as in *\<Entity Container Name>*.*\<Entity Set Name>*.</span></span>  
  
-   <span data-ttu-id="5f461-279">如果<xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A>不是`null`，然后`entitySetName`可以是*\<实体容器名称 >*。*\<实体集名称 >* 或*\<实体集名称 >*。</span><span class="sxs-lookup"><span data-stu-id="5f461-279">If the <xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> is not `null`, then the `entitySetName` can be either *\<Entity Container Name>*.*\<Entity Set Name>* or *\<Entity Set Name>*.</span></span>  
  
 <span data-ttu-id="5f461-280">要附加的对象不需要 <xref:System.Data.EntityKey> 与其关联。</span><span class="sxs-lookup"><span data-stu-id="5f461-280">The object being attached is not required to have an <xref:System.Data.EntityKey> associated with it.</span></span> <span data-ttu-id="5f461-281">如果该对象不具有实体键，然后`entitySetName`不能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-281">If the object does not have an entity key, then `entitySetName` cannot be an empty string.</span></span>  
  
 <span data-ttu-id="5f461-282">如果要附加的对象具有<xref:System.Data.EntityKey>并`entitySetName`具有一个值，则<xref:System.Data.Metadata.Edm.EntitySet>的实体键必须与匹配<xref:System.Data.Metadata.Edm.EntitySet>找到基于`entitySetName`和实体容器名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-282">If the object being attached has an <xref:System.Data.EntityKey> and `entitySetName` has a value, then the <xref:System.Data.Metadata.Edm.EntitySet> of the entity key must match the <xref:System.Data.Metadata.Edm.EntitySet> that was found based on the `entitySetName` and entity container name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-283"><paramref name="entity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-283">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-284">实体集无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-284">Invalid entity set.</span></span>  
  
<span data-ttu-id="5f461-285">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-285">-or-</span></span> 
<span data-ttu-id="5f461-286">对象具有临时键。</span><span class="sxs-lookup"><span data-stu-id="5f461-286">The object has a temporary key.</span></span>  
  
<span data-ttu-id="5f461-287">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-287">-or-</span></span> 
<span data-ttu-id="5f461-288">对象具有 <see cref="T:System.Data.EntityKey" /> 且 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 与作为方法参数传入的实体集不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-288">The object has an <see cref="T:System.Data.EntityKey" /> and the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> does not match with the entity set passed in as an argument of the method.</span></span>  
  
<span data-ttu-id="5f461-289">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-289">-or-</span></span> 
<span data-ttu-id="5f461-290">对象没有 <see cref="T:System.Data.EntityKey" />，且未提供任何实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-290">The object does not have an <see cref="T:System.Data.EntityKey" /> and no entity set is provided.</span></span>  
  
<span data-ttu-id="5f461-291">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-291">-or-</span></span> 
<span data-ttu-id="5f461-292">对象图中的任何对象都具有临时 <see cref="T:System.Data.EntityKey" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-292">Any object from the object graph has a temporary <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="5f461-293">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-293">-or-</span></span> 
<span data-ttu-id="5f461-294">对象图中的任何对象都具有无效的 <see cref="T:System.Data.EntityKey" />（例如，键中的值与对象中的值不匹配）。</span><span class="sxs-lookup"><span data-stu-id="5f461-294">Any object from the object graph has an invalid <see cref="T:System.Data.EntityKey" /> (for example, values in the key do not match values in the object).</span></span>  
  
<span data-ttu-id="5f461-295">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-295">-or-</span></span> 
<span data-ttu-id="5f461-296">未能根据给定的 <paramref name="entitySetName" /> 名称和实体容器名称找到实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-296">The entity set could not be found from a given <paramref name="entitySetName" /> name and entity container name.</span></span>  
  
<span data-ttu-id="5f461-297">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-297">-or-</span></span> 
<span data-ttu-id="5f461-298">对象图中的任何对象都已存在于另一个状态管理器中。</span><span class="sxs-lookup"><span data-stu-id="5f461-298">Any object from the object graph already exists in another state manager.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-299">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-299">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CommandTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : Nullable&lt;int&gt; with get, set" Usage="System.Data.Objects.ObjectContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-300">获取或设置所有对象上下文操作的超时值（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="5f461-300">Gets or sets the timeout value, in seconds, for all object context operations.</span></span> <span data-ttu-id="5f461-301"><see langword="null" /> 值表示将使用基础提供程序的默认值。</span><span class="sxs-lookup"><span data-stu-id="5f461-301">A <see langword="null" /> value indicates that the default value of the underlying provider will be used.</span></span></summary>
        <value><span data-ttu-id="5f461-302">表示超时值的 <see cref="T:System.Int32" /> 值（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="5f461-302">An <see cref="T:System.Int32" /> value that is the timeout value, in seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-303">对象查询和 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 操作的默认超时由基础连接提供程序定义。</span><span class="sxs-lookup"><span data-stu-id="5f461-303">The default timeout for object queries and the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operation is defined by the underlying connection provider.</span></span> <span data-ttu-id="5f461-304">但是，可以通过在 <xref:System.Data.Objects.ObjectContext.CommandTimeout%2A> 上使用 <xref:System.Data.Objects.ObjectContext> 属性重写此默认超时值，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="5f461-304">However, you can override this default timeout value by using the <xref:System.Data.Objects.ObjectContext.CommandTimeout%2A> property on the <xref:System.Data.Objects.ObjectContext>, as shown in the following example.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryTimeout](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querytimeout)]
 [!code-vb[DP ObjectServices Concepts#QueryTimeout](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querytimeout)]  
  
 <span data-ttu-id="5f461-305">当查询很复杂或者由于其他性能问题导致对 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 的查询或调用频繁超时时，可以执行此操作。</span><span class="sxs-lookup"><span data-stu-id="5f461-305">Do this when you have a complex query or when other performance issues cause queries or calls to <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> to time out frequently.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5f461-306">对象查询</span><span class="sxs-lookup"><span data-stu-id="5f461-306">Object Queries</span></span>](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-307">超时值小于 0。</span><span class="sxs-lookup"><span data-stu-id="5f461-307">The timeout value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Objects.ObjectContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-308">获取对象上下文使用的连接。</span><span class="sxs-lookup"><span data-stu-id="5f461-308">Gets the connection used by the object context.</span></span></summary>
        <value><span data-ttu-id="5f461-309">一个表示连接的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-309">A <see cref="T:System.Data.Common.DbConnection" /> object that is the connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-310">此属性返回传递给构造函数或在构造过程中创建的连接对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-310">This property returns the connection object that was passed into the constructor or created during construction.</span></span> <span data-ttu-id="5f461-311">构造函数用于确定连接的所有权。</span><span class="sxs-lookup"><span data-stu-id="5f461-311">The connection's ownership is determined by the constructors used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-312">本示例创建一个 <xref:System.Data.EntityClient.EntityConnection> 对象，该对象将传递到长时间运行的 <xref:System.Data.Objects.ObjectContext> 的构造函数中。</span><span class="sxs-lookup"><span data-stu-id="5f461-312">This example creates an <xref:System.Data.EntityClient.EntityConnection> object that is passed into the constructor of a long-running <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="5f461-313">此连接以手动方式建立。</span><span class="sxs-lookup"><span data-stu-id="5f461-313">The connection is opened manually.</span></span> <span data-ttu-id="5f461-314"><xref:System.Data.EntityClient.EntityConnection> 对象和 <xref:System.Data.Objects.ObjectContext> 对象都是手动释放的。</span><span class="sxs-lookup"><span data-stu-id="5f461-314">Both the <xref:System.Data.EntityClient.EntityConnection> object and the <xref:System.Data.Objects.ObjectContext> object are disposed of manually.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#OpenEntityConnection](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#openentityconnection)]
 [!code-vb[DP ObjectServices Concepts#OpenEntityConnection](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#openentityconnection)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5f461-315">当释放了 <see cref="T:System.Data.Objects.ObjectContext" /> 实例时。</span><span class="sxs-lookup"><span data-stu-id="5f461-315">When the <see cref="T:System.Data.Objects.ObjectContext" /> instance has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-316">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-316">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContextOptions">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContextOptions ContextOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContextOptions ContextOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.ContextOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextOptions As ObjectContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContextOptions ^ ContextOptions { System::Data::Objects::ObjectContextOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextOptions : System.Data.Objects.ObjectContextOptions" Usage="System.Data.Objects.ObjectContext.ContextOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-317">获取 <see cref="T:System.Data.Objects.ObjectContextOptions" /> 实例，该实例包含影响 <see cref="T:System.Data.Objects.ObjectContext" /> 的行为的选项。</span><span class="sxs-lookup"><span data-stu-id="5f461-317">Gets the <see cref="T:System.Data.Objects.ObjectContextOptions" /> instance that contains options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></summary>
        <value><span data-ttu-id="5f461-318"><see cref="T:System.Data.Objects.ObjectContextOptions" /> 实例，该实例包含影响 <see cref="T:System.Data.Objects.ObjectContext" /> 的行为的选项。</span><span class="sxs-lookup"><span data-stu-id="5f461-318">The <see cref="T:System.Data.Objects.ObjectContextOptions" /> instance that contains options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="objectContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-319">使用当前数据源连接和 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 中的元数据创建数据库。</span><span class="sxs-lookup"><span data-stu-id="5f461-319">Creates the database by using the current data source connection and the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-320">调用<xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A>若要查看数据定义语言 (DDL) 脚本。</span><span class="sxs-lookup"><span data-stu-id="5f461-320">Call <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> to view the data definition language (DDL) script.</span></span> <span data-ttu-id="5f461-321">调用<xref:System.Data.Objects.ObjectContext.CreateDatabase%2A>来执行该脚本。</span><span class="sxs-lookup"><span data-stu-id="5f461-321">Call <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> to execute the script.</span></span>  
  
 <span data-ttu-id="5f461-322">大部分工作委托给<xref:System.Data.Common.DbProviderServices.CreateDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-322">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-323">有关详细信息，请参阅[使用数据定义语言](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)。</span><span class="sxs-lookup"><span data-stu-id="5f461-323">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseScript">
      <MemberSignature Language="C#" Value="public string CreateDatabaseScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateDatabaseScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDatabaseScript () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateDatabaseScript();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabaseScript : unit -&gt; string" Usage="objectContext.CreateDatabaseScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-324">生成数据定义语言 (DDL) 脚本，该脚本为 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 中的元数据创建架构对象（表、主键、外键）。</span><span class="sxs-lookup"><span data-stu-id="5f461-324">Generates a data definition language (DDL) script that creates schema objects (tables, primary keys, foreign keys) for the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span> <span data-ttu-id="5f461-325"><see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 用于加载存储架构定义语言 (SSDL) 文件中的元数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-325">The <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> loads metadata from store schema definition language (SSDL) files.</span></span></summary>
        <returns><span data-ttu-id="5f461-326">为 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 中的元数据创建架构对象的 DDL 脚本。</span><span class="sxs-lookup"><span data-stu-id="5f461-326">A DDL script that creates schema objects for the metadata in the <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-327">调用<xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A>若要查看 DDL 脚本。</span><span class="sxs-lookup"><span data-stu-id="5f461-327">Call <xref:System.Data.Objects.ObjectContext.CreateDatabaseScript%2A> to view the DDL script.</span></span> <span data-ttu-id="5f461-328">调用<xref:System.Data.Objects.ObjectContext.CreateDatabase%2A>来执行该脚本。</span><span class="sxs-lookup"><span data-stu-id="5f461-328">Call <xref:System.Data.Objects.ObjectContext.CreateDatabase%2A> to execute the script.</span></span>  
  
 <span data-ttu-id="5f461-329">大部分工作委托给<xref:System.Data.Common.DbProviderServices.CreateDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-329">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.CreateDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-330">有关详细信息，请参阅[使用数据定义语言](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)。</span><span class="sxs-lookup"><span data-stu-id="5f461-330">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="CreateEntityKey">
      <MemberSignature Language="C#" Value="public System.Data.EntityKey CreateEntityKey (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityKey CreateEntityKey(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntityKey (entitySetName As String, entity As Object) As EntityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityKey ^ CreateEntityKey(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.CreateEntityKey : string * obj -&gt; System.Data.EntityKey" Usage="objectContext.CreateEntityKey (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="5f461-331">实体对象所属的实体集的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-331">The fully qualified name of the entity set to which the entity object belongs.</span></span></param>
        <param name="entity"><span data-ttu-id="5f461-332">要为其检索实体键的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-332">The object for which the entity key is being retrieved.</span></span></param>
        <summary><span data-ttu-id="5f461-333">为特定对象创建实体键，如果实体键已存在，则返回该键。</span><span class="sxs-lookup"><span data-stu-id="5f461-333">Creates the entity key for a specific object, or returns the entity key if it already exists.</span></span></summary>
        <returns><span data-ttu-id="5f461-334">对象的 <see cref="T:System.Data.EntityKey" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-334">The <see cref="T:System.Data.EntityKey" /> of the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-335">如果<xref:System.Data.EntityKey>不存在`entity`，则<xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A>方法为其创建新的密钥。</span><span class="sxs-lookup"><span data-stu-id="5f461-335">If an <xref:System.Data.EntityKey> does not exist for the `entity`, the <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> method creates a new key for it.</span></span>  
  
 <span data-ttu-id="5f461-336">此方法用于确定具有相同 <xref:System.Data.EntityKey> 的对象是否已附加到 <xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="5f461-336">This method is used to determine whether an object that has the same <xref:System.Data.EntityKey> is already attached to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="5f461-337">如果已附加了具有相同 <xref:System.Data.EntityKey> 的对象，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-337">If an object that has the same <xref:System.Data.EntityKey> is already attached, an exception is raised.</span></span> <span data-ttu-id="5f461-338">在调用 <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> 方法之前，使用 <xref:System.Data.EntityKey> 方法尝试检索已分离对象的 <xref:System.Data.Objects.ObjectContext.Attach%2A>。</span><span class="sxs-lookup"><span data-stu-id="5f461-338">Use the <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> method to try to retrieve the <xref:System.Data.EntityKey> of the detached object before calling the <xref:System.Data.Objects.ObjectContext.Attach%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-339">本主题中的示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-339">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-340">在此示例中，<xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> 用于检索现有对象的实体键。</span><span class="sxs-lookup"><span data-stu-id="5f461-340">In this example, <xref:System.Data.Objects.ObjectContext.CreateEntityKey%2A> is used to retrieve the entity key of an existing object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdatesGetObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdatesgetobject)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdatesGetObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdatesgetobject)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-341">当任一参数为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="5f461-341">When either parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-342">当 <paramref name="entitySetName" /> 为空时。</span><span class="sxs-lookup"><span data-stu-id="5f461-342">When <paramref name="entitySetName" /> is empty.</span></span>  
  
<span data-ttu-id="5f461-343">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-343">-or-</span></span> 
<span data-ttu-id="5f461-344">当 <paramref name="entity" /> 对象的类型不存在于实体集中时。</span><span class="sxs-lookup"><span data-stu-id="5f461-344">When the type of the <paramref name="entity" /> object does not exist in the entity set.</span></span>  
  
<span data-ttu-id="5f461-345">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-345">-or-</span></span> 
<span data-ttu-id="5f461-346">当 <paramref name="entitySetName" /> 未完全限定时。</span><span class="sxs-lookup"><span data-stu-id="5f461-346">When the <paramref name="entitySetName" /> is not fully qualified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-347">当无法根据提供的参数成功构造实体键时。</span><span class="sxs-lookup"><span data-stu-id="5f461-347">When the entity key cannot be constructed successfully based on the supplied parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateObject&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateObject&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObject``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T CreateObject();" />
      <MemberSignature Language="F#" Value="member this.CreateObject : unit -&gt; 'T (requires 'T : null)" Usage="objectContext.CreateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="5f461-348">要返回的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-348">Type of object to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="5f461-349">创建并返回所请求类型的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-349">Creates and returns an instance of the requested type .</span></span></summary>
        <returns><span data-ttu-id="5f461-350">所请求类型 <paramref name="T" /> 的实例，或一个使得 <paramref name="T" /> 能够与 Entity Framework 一起使用的派生类型的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-350">An instance of the requested type <paramref name="T" />, or an instance of a derived type that enables <paramref name="T" /> to be used with the Entity Framework.</span></span> <span data-ttu-id="5f461-351">返回的对象是所请求类型的实例或使得请求的类型能够与 Entity Framework 一起使用的派生类型的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-351">The returned object is either an instance of the requested type or an instance of a derived type that enables the requested type to be used with the Entity Framework.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-352"><xref:System.Data.Objects.ObjectContext.CreateObject%2A>方法使用 POCO 自定义数据类，以确保返回的对象可以正确管理由实体框架。</span><span class="sxs-lookup"><span data-stu-id="5f461-352">The <xref:System.Data.Objects.ObjectContext.CreateObject%2A> method is used with POCO custom data classes to make sure that the returned object can be managed correctly by the Entity Framework.</span></span> <span data-ttu-id="5f461-353">有关详细信息，请参阅[创建 POCO 代理的要求](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8)并[使用 POCO 实体](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)。</span><span class="sxs-lookup"><span data-stu-id="5f461-353">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectSet&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectSet&lt;TEntity&gt; CreateObjectSet&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectSet`1&lt;!!TEntity&gt; CreateObjectSet&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObjectSet``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectSet(Of TEntity As Class) () As ObjectSet(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectSet&lt;TEntity&gt; ^ CreateObjectSet();" />
      <MemberSignature Language="F#" Value="member this.CreateObjectSet : unit -&gt; System.Data.Objects.ObjectSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="objectContext.CreateObjectSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectSet&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-354">请求的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-354">Entity type of the requested <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span></typeparam>
        <summary><span data-ttu-id="5f461-355">创建新的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 实例，该实例用于查询、添加、修改和删除指定实体类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-355">Creates a new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance that is used to query, add, modify, and delete objects of the specified entity type.</span></span></summary>
        <returns><span data-ttu-id="5f461-356">新的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-356">The new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-357"><see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> 属性未在 <see cref="T:System.Data.Objects.ObjectContext" /> 上设置。</span><span class="sxs-lookup"><span data-stu-id="5f461-357">The <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span>  
  
<span data-ttu-id="5f461-358">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-358">-or-</span></span> 
<span data-ttu-id="5f461-359">指定类型属于多个实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-359">The specified type belongs to more than one entity set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectSet&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectSet&lt;TEntity&gt; CreateObjectSet&lt;TEntity&gt; (string entitySetName) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectSet`1&lt;!!TEntity&gt; CreateObjectSet&lt;class TEntity&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectSet(Of TEntity As Class) (entitySetName As String) As ObjectSet(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectSet&lt;TEntity&gt; ^ CreateObjectSet(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectSet : string -&gt; System.Data.Objects.ObjectSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="objectContext.CreateObjectSet entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectSet&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-360">请求的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-360">Entity type of the requested <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span></typeparam>
        <param name="entitySetName"><span data-ttu-id="5f461-361">返回的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 的实体集的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-361">Name of the entity set for the returned <see cref="T:System.Data.Objects.ObjectSet`1" />.</span></span> <span data-ttu-id="5f461-362">如果未在 <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> 上设置 <see cref="T:System.Data.Objects.ObjectContext" /> 属性，则字符串必须由默认容器名称进行限定。</span><span class="sxs-lookup"><span data-stu-id="5f461-362">The string must be qualified by the default container name if the <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="5f461-363">创建新的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 实例，该实例用于查询、添加、修改和删除具有指定类型和指定实体集名称的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-363">Creates a new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance that is used to query, add, modify, and delete objects of the specified type and with the specified entity set name.</span></span></summary>
        <returns><span data-ttu-id="5f461-364">新的 <see cref="T:System.Data.Objects.ObjectSet`1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-364">The new <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-365">来自 <paramref name="entitySetName" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 与对象的 <see cref="T:System.Data.EntityKey" /> 的 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-365">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> from <paramref name="entitySetName" /> does not match the <see cref="T:System.Data.Metadata.Edm.EntitySet" /> of the object's <see cref="T:System.Data.EntityKey" />.</span></span>  
  
<span data-ttu-id="5f461-366">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-366">-or-</span></span> 
<span data-ttu-id="5f461-367">在 <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> 上没有设置 <see cref="T:System.Data.Objects.ObjectContext" /> 属性，且名称未限定为 <paramref name="entitySetName" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="5f461-367">The <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> property is not set on the <see cref="T:System.Data.Objects.ObjectContext" /> and the name is not qualified as part of the <paramref name="entitySetName" /> parameter.</span></span>  
  
<span data-ttu-id="5f461-368">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-368">-or-</span></span> 
<span data-ttu-id="5f461-369">指定类型属于多个实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-369">The specified type belongs to more than one entity set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProxyTypes">
      <MemberSignature Language="C#" Value="public void CreateProxyTypes (System.Collections.Generic.IEnumerable&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateProxyTypes(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProxyTypes (types As IEnumerable(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProxyTypes(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CreateProxyTypes : seq&lt;Type&gt; -&gt; unit" Usage="objectContext.CreateProxyTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="5f461-370"><see cref="T:System.Type" /> 对象的枚举，这些对象表示映射到概念模型的自定义数据类。</span><span class="sxs-lookup"><span data-stu-id="5f461-370">An enumeration of <see cref="T:System.Type" /> objects that represent custom data classes that map to the conceptual model.</span></span></param>
        <summary><span data-ttu-id="5f461-371">为提供的枚举中的每个类型生成可用于 Entity Framework 的等效类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-371">Generates an equivalent type that can be used with the Entity Framework for each type in the supplied enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-372">各个类型`types`不映射到概念模型中的实体类型的枚举将被忽略。</span><span class="sxs-lookup"><span data-stu-id="5f461-372">Individual types in the `types` enumeration that do not map to an entity type in the conceptual model are ignored.</span></span>  
  
 <span data-ttu-id="5f461-373">有关详细信息，请参阅[创建 POCO 代理的要求](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8)并[使用 POCO 实体](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)。</span><span class="sxs-lookup"><span data-stu-id="5f461-373">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; CreateQuery&lt;T&gt; (string queryString, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string queryString, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (queryString As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ CreateQuery(System::String ^ queryString, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectContext.CreateQuery (queryString, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5f461-374">返回的 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-374">The entity type of the returned <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></typeparam>
        <param name="queryString"><span data-ttu-id="5f461-375">要执行的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="5f461-375">The query string to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-376">要传递给查询的参数。</span><span class="sxs-lookup"><span data-stu-id="5f461-376">Parameters to pass to the query.</span></span></param>
        <summary><span data-ttu-id="5f461-377">使用指定查询字符串在当前对象上下文中创建 <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-377">Creates an <see cref="T:System.Data.Objects.ObjectQuery`1" /> in the current object context by using the specified query string.</span></span></summary>
        <returns><span data-ttu-id="5f461-378">具有指定类型的 <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-378">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-379">使用 <xref:System.Data.Objects.ObjectContext.CreateQuery%2A> 创建属于当前对象上下文且具有指定类型的 <xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="5f461-379">Use <xref:System.Data.Objects.ObjectContext.CreateQuery%2A> to create an <xref:System.Data.Objects.ObjectQuery%601> of the specified type that belongs to the current object context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-380">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-380">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="5f461-381">该示例创建一个简单查询并循环访问结果集合。</span><span class="sxs-lookup"><span data-stu-id="5f461-381">The example creates a simple query and iterates through the collection of results.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#CreateQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#createquery)]
 [!code-vb[DP ObjectServices Concepts#CreateQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#createquery)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-382"><paramref name="queryString" /> 或 <paramref name="parameters" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-382">The <paramref name="queryString" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="5f461-383">查询概念模型</span><span class="sxs-lookup"><span data-stu-id="5f461-383">Querying a Conceptual Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="objectContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-384">检查在当前数据源连接中指定为数据库的数据库是否在数据源上存在。</span><span class="sxs-lookup"><span data-stu-id="5f461-384">Checks if the database that is specified as the database in the current data source connection exists on the data source.</span></span></summary>
        <returns><span data-ttu-id="5f461-385">如果数据库存在，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-385"><see langword="true" /> if the database exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-386">大部分工作委托给<xref:System.Data.Common.DbProviderServices.DatabaseExists%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-386">Most of the work is delegated to the <xref:System.Data.Common.DbProviderServices.DatabaseExists%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-387">有关详细信息，请参阅[使用数据定义语言](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)。</span><span class="sxs-lookup"><span data-stu-id="5f461-387">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultContainerName : string with get, set" Usage="System.Data.Objects.ObjectContext.DefaultContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-388">获取或设置默认容器名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-388">Gets or sets the default container name.</span></span></summary>
        <value><span data-ttu-id="5f461-389">一个作为默认容器名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-389">A <see cref="T:System.String" /> that is the default container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-390"><xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> 永远不会返回`null`; 它会返回已设置或为空字符串的值。</span><span class="sxs-lookup"><span data-stu-id="5f461-390"><xref:System.Data.Objects.ObjectContext.DefaultContainerName%2A> never returns `null`; it either returns the value that was set or an empty string.</span></span> <span data-ttu-id="5f461-391">用户可以将此属性设置为`null`，但内部名称将被设置为空字符串，因此用户不需要检查是否为这两个空字符串和`null`。</span><span class="sxs-lookup"><span data-stu-id="5f461-391">The user can set this property to `null`, but internally the name will be set to an empty string, so the user never needs to check for both an empty string and `null`.</span></span>  
  
 <span data-ttu-id="5f461-392">默认容器名称也定义为构造函数的一部分。</span><span class="sxs-lookup"><span data-stu-id="5f461-392">The default container name is also defined as part of a constructor.</span></span> <span data-ttu-id="5f461-393">如果通过受保护构造函数设置默认容器名称，则该属性为只读属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-393">If the default container name is set through the protected constructor, the property becomes read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-394">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-394">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="objectContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-395">删除在当前数据源连接中指定为数据库的数据库。</span><span class="sxs-lookup"><span data-stu-id="5f461-395">Deletes the database that is specified as the database in the current data source connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-396">大部分工作委托给<xref:System.Data.Common.DbProviderServices.DeleteDatabase%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-396">Most of the work is delegated to the  <xref:System.Data.Common.DbProviderServices.DeleteDatabase%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-397">有关详细信息，请参阅[使用数据定义语言](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md)。</span><span class="sxs-lookup"><span data-stu-id="5f461-397">For more information, see [Working with Data Definition Language](~/docs/framework/data/adonet/ef/working-with-data-definition-language.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabase" />
        <altmember cref="M:System.Data.Objects.ObjectContext.CreateDatabaseScript" />
        <altmember cref="M:System.Data.Objects.ObjectContext.DatabaseExists" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="objectContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="5f461-398">指定待删除实体的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-398">An object that specifies the entity to delete.</span></span> <span data-ttu-id="5f461-399">该对象可以为任何状态（<see cref="F:System.Data.EntityState.Detached" /> 除外）。</span><span class="sxs-lookup"><span data-stu-id="5f461-399">The object can be in any state except <see cref="F:System.Data.EntityState.Detached" />.</span></span></param>
        <summary><span data-ttu-id="5f461-400">标记对象以备删除。</span><span class="sxs-lookup"><span data-stu-id="5f461-400">Marks an object for deletion.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-401">从 <xref:System.Data.Objects.ObjectStateManager> 中标记对象以备删除。</span><span class="sxs-lookup"><span data-stu-id="5f461-401">Marks an object for deletion from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="5f461-402">当调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 方法时，在数据源中删除该对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-402">The object is deleted in the data source when the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method is called.</span></span>  
  
 <span data-ttu-id="5f461-403">删除父对象也会删除约束关系中的所有子对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-403">Deleting the parent object also deletes all the child objects in the constrained relationship.</span></span> <span data-ttu-id="5f461-404">此结果与启用关系的关联上的 `CascadeDelete` 属性相同。</span><span class="sxs-lookup"><span data-stu-id="5f461-404">This result is the same as enabling the `CascadeDelete` property on the association for the relationship.</span></span>  
  
 <span data-ttu-id="5f461-405"><xref:System.Data.Objects.ObjectContext.DeleteObject%2A>可以对已删除的对象调用方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-405">The <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method can be called on objects that are already deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-406">这些示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-406">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="5f461-407">以下示例构造<xref:System.Data.EntityKey>特定 ProductID，与使用的密钥来从数据源中检索产品对象、 删除该产品，并将所做的更改保存到数据库。</span><span class="sxs-lookup"><span data-stu-id="5f461-407">This example constructs an <xref:System.Data.EntityKey> with a specific ProductID, uses the key to retrieve a Product object from the data source, deletes the product, and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#DeleteObject](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#deleteobject)]
 [!code-vb[DP ObjectServices Concepts#DeleteObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#deleteobject)]  
  
 <span data-ttu-id="5f461-408">此示例将删除现有订单项、 添加新项，并将所做的更改保存到数据库。</span><span class="sxs-lookup"><span data-stu-id="5f461-408">This example deletes an existing order item, adds a new item, and saves the changes to the database.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SaveChanges](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#savechanges)]
 [!code-vb[DP ObjectServices Concepts#SaveChanges](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#savechanges)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-409"><paramref name="entity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-409"><paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-410"><paramref name="entity" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="5f461-410"><paramref name="entity" /> does not exist.</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-411">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-411">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; unit" Usage="objectContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="5f461-412">要分离的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-412">Object to be detached.</span></span> <span data-ttu-id="5f461-413">仅移除 <paramref name="entity" />；如果有任何相关对象受同一 <see cref="T:System.Data.Objects.ObjectStateManager" /> 跟踪，则不会自动分离这些对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-413">Only the <paramref name="entity" /> is removed; if there are any related objects that are being tracked by the same <see cref="T:System.Data.Objects.ObjectStateManager" />, those will not be detached automatically.</span></span></param>
        <summary><span data-ttu-id="5f461-414">从对象上下文移除对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-414">Removes the object from the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-415">从 <xref:System.Data.Objects.ObjectStateManager> 移除对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-415">Removes the object from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="5f461-416">这会禁用对该对象的更改跟踪和标识解析。</span><span class="sxs-lookup"><span data-stu-id="5f461-416">This disables change tracking and identity resolution for that object.</span></span> <span data-ttu-id="5f461-417">有关详细信息，请参阅[附加和分离对象](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。</span><span class="sxs-lookup"><span data-stu-id="5f461-417">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="5f461-418">调用 <xref:System.Data.Objects.ObjectContext.Detach%2A> 方法后，系统将不再保留指向此对象的引用，此对象可由垃圾回收器收集。</span><span class="sxs-lookup"><span data-stu-id="5f461-418">After the <xref:System.Data.Objects.ObjectContext.Detach%2A> method is called, the system will no longer keep references that point to this object and it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f461-419">仅当用户代码不包含对已分离对象的任何引用时，才进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="5f461-419">Garbage collection can only occur if the user code does not have any references to the detached object.</span></span>  
  
 <span data-ttu-id="5f461-420">在分离对象时，应考虑以下注意事项：</span><span class="sxs-lookup"><span data-stu-id="5f461-420">The following considerations apply when detaching objects:</span></span>  
  
-   <span data-ttu-id="5f461-421"><xref:System.Data.Objects.ObjectContext.Detach%2A> 仅影响传递给方法的特定对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-421"><xref:System.Data.Objects.ObjectContext.Detach%2A> only affects the specific object that is passed to the method.</span></span> <span data-ttu-id="5f461-422">如果要分离的对象在对象上下文中具有相关对象，则那些相关对象不会分离。</span><span class="sxs-lookup"><span data-stu-id="5f461-422">If the object being detached has related objects in the object context, those objects are not detached.</span></span>  
  
-   <span data-ttu-id="5f461-423">分离对象不影响数据源中的数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-423">Detaching objects does not affect data in the data source.</span></span>  
  
-   <span data-ttu-id="5f461-424">在分离操作过程中不会强制执行级联删除指令和引用约束。</span><span class="sxs-lookup"><span data-stu-id="5f461-424">Cascade delete directives and referential constraints are not enforced during a detach operation.</span></span>  
  
 <span data-ttu-id="5f461-425">有关详细信息，请参阅[附加和分离对象](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)。</span><span class="sxs-lookup"><span data-stu-id="5f461-425">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#DetachObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#detachobjects)]
 [!code-vb[DP ObjectServices Concepts#DetachObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#detachobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-426"><paramref name="entity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-426">The <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-427"><paramref name="entity" /> 不与此 <see cref="T:System.Data.Objects.ObjectContext" /> 关联（例如，是新创建的，仍未与任何上下文关联，或是通过其他上下文获取，或是已分离）。</span><span class="sxs-lookup"><span data-stu-id="5f461-427">The <paramref name="entity" /> is not associated with this <see cref="T:System.Data.Objects.ObjectContext" /> (for example, was newly created and not associated with any context yet, or was obtained through some other context, or was already detached).</span></span></exception>
        <altmember cref="M:System.Data.Objects.ObjectSet`1.Detach(`0)" />
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-428">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-428">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DetectChanges">
      <MemberSignature Language="C#" Value="public void DetectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.DetectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetectChanges();" />
      <MemberSignature Language="F#" Value="member this.DetectChanges : unit -&gt; unit" Usage="objectContext.DetectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-429">确保 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 更改与由 <see cref="T:System.Data.Objects.ObjectStateManager" /> 跟踪的所有对象中的更改进行同步。</span><span class="sxs-lookup"><span data-stu-id="5f461-429">Ensures that <see cref="T:System.Data.Objects.ObjectStateEntry" /> changes are synchronized with changes in all objects that are tracked by the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f461-430">释放对象上下文使用的资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-430">Releases the resources used by the object context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="objectContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-431">释放对象上下文使用的资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-431">Releases the resources used by the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-432">如果它打开的实体框架，此方法关闭连接。</span><span class="sxs-lookup"><span data-stu-id="5f461-432">This method closes the connection if it was opened by the Entity Framework.</span></span> <span data-ttu-id="5f461-433">之后<xref:System.Data.Objects.ObjectContext.Dispose%2A>调用时，需要打开的连接，如执行查询或调用的操作<xref:System.Data.Objects.ObjectQuery.ToTraceString%2A>方法中，将导致异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-433">After <xref:System.Data.Objects.ObjectContext.Dispose%2A> is called, operations that require an open connection, such as executing a query or calling the <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> method, will cause an exception.</span></span> <span data-ttu-id="5f461-434">执行不要求连接为打开状态的操作（如编写查询或附加对象），则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-434">Operations that do not require an open connection, such as composing a query or attaching objects, will not cause an exception.</span></span> <span data-ttu-id="5f461-435"><xref:System.Data.Objects.ObjectContext.Dispose%2A>方法不会关闭任何显式打开的连接。</span><span class="sxs-lookup"><span data-stu-id="5f461-435">The <xref:System.Data.Objects.ObjectContext.Dispose%2A> method does not close any explicitly opened connections.</span></span>  
  
 <span data-ttu-id="5f461-436">限制的作用域<xref:System.Data.Objects.ObjectContext>内`using`块 (`Using`在 Visual Basic 中) 可确保正确释放资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-436">Limiting the scope of an <xref:System.Data.Objects.ObjectContext> within a `using` block (`Using` in Visual Basic) ensures that resources are correctly disposed.</span></span> <span data-ttu-id="5f461-437">有关详细信息，请参阅[管理连接和事务](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)。</span><span class="sxs-lookup"><span data-stu-id="5f461-437">For more information, see [Managing Connections and Transactions](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99).</span></span>  
  
 <span data-ttu-id="5f461-438"><xref:System.Data.Objects.ObjectContext.Dispose>方法调用`virtual`(`Overridable`在 Visual Basic 中)<xref:System.Data.Objects.ObjectContext.Dispose%28System.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-438">The <xref:System.Data.Objects.ObjectContext.Dispose> method calls the `virtual` (`Overridable` in Visual Basic) <xref:System.Data.Objects.ObjectContext.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-439">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-439">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="objectContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5f461-440"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-440"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5f461-441">释放对象上下文使用的资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-441">Releases the resources used by the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-442">此方法关闭连接。</span><span class="sxs-lookup"><span data-stu-id="5f461-442">This method closes the connection.</span></span> <span data-ttu-id="5f461-443">之后<xref:System.Data.Objects.ObjectContext.Dispose%2A>调用时，需要打开的连接，如执行查询或调用的操作<xref:System.Data.Objects.ObjectQuery.ToTraceString%2A>方法中，将导致异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-443">After <xref:System.Data.Objects.ObjectContext.Dispose%2A> is called, operations that require an open connection, such as executing a query or calling the <xref:System.Data.Objects.ObjectQuery.ToTraceString%2A> method, will cause an exception.</span></span> <span data-ttu-id="5f461-444">执行不要求连接为打开状态的操作（如编写查询或附加对象），则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-444">Operations that do not require an open connection, such as composing a query or attaching objects, will not cause an exception.</span></span>  
  
 <span data-ttu-id="5f461-445">限制的作用域<xref:System.Data.Objects.ObjectContext>内`using`块 (`Using`在 Visual Basic 中) 可确保正确释放资源。</span><span class="sxs-lookup"><span data-stu-id="5f461-445">Limiting the scope of an <xref:System.Data.Objects.ObjectContext> within a `using` block (`Using` in Visual Basic) ensures that resources are properly disposed.</span></span> <span data-ttu-id="5f461-446">有关详细信息，请参阅[管理连接和事务](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99)。</span><span class="sxs-lookup"><span data-stu-id="5f461-446">For more information, see [Managing Connections and Transactions](https://msdn.microsoft.com/library/b6659d2a-9a45-4e98-acaa-d7a8029e5b99).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-447">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-447">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction">
      <MemberSignature Language="C#" Value="public int ExecuteFunction (string functionName, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteFunction(string functionName, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteFunction (functionName As String, ParamArray parameters As ObjectParameter()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteFunction(System::String ^ functionName, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.ObjectParameter[] -&gt; int" Usage="objectContext.ExecuteFunction (functionName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="functionName"><span data-ttu-id="5f461-448">存储过程或函数的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-448">The name of the stored procedure or function.</span></span> <span data-ttu-id="5f461-449">该名称可以包含容器名称，如 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="5f461-449">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="5f461-450">如果默认容器名称已知，则只需要函数名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-450">When the default container name is known, only the function name is required.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-451">一个 <see cref="T:System.Data.Objects.ObjectParameter" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-451">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="5f461-452">执行在数据源中定义并在概念模型中表示的存储过程或函数，丢弃该函数返回的任何结果，并返回执行该函数影响的行数。</span><span class="sxs-lookup"><span data-stu-id="5f461-452">Executes a stored procedure or function that is defined in the data source and expressed in the conceptual model; discards any results returned from the function; and returns the number of rows affected by the execution.</span></span></summary>
        <returns><span data-ttu-id="5f461-453">受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="5f461-453">The number of rows affected.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-454"><paramref name="function" /> 为 null 或为空。</span><span class="sxs-lookup"><span data-stu-id="5f461-454"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="5f461-455">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-455">-or-</span></span> 
 <span data-ttu-id="5f461-456"><paramref name="function" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="5f461-456"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-457">实体读取器不支持此 <paramref name="function" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-457">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="5f461-458">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-458">-or-</span></span> 
<span data-ttu-id="5f461-459">读取器的类型与 <paramref name="function" /> 的类型不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-459">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteFunction&lt;TElement&gt; (string functionName, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteFunction&lt;TElement&gt;(string functionName, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteFunction(Of TElement) (functionName As String, ParamArray parameters As ObjectParameter()) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteFunction(System::String ^ functionName, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteFunction (functionName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="5f461-460">对数据源执行函数时返回的 <see cref="T:System.Data.Objects.ObjectResult`1" /> 的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-460">The entity type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the function is executed against the data source.</span></span> <span data-ttu-id="5f461-461">此类型必须实现 <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-461">This type must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.</span></span></typeparam>
        <param name="functionName"><span data-ttu-id="5f461-462">存储过程或函数的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-462">The name of the stored procedure or function.</span></span> <span data-ttu-id="5f461-463">该名称可以包含容器名称，如 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="5f461-463">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="5f461-464">如果默认容器名称已知，则只需要函数名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-464">When the default container name is known, only the function name is required.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-465">一个 <see cref="T:System.Data.Objects.ObjectParameter" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-465">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="5f461-466">使用指定的参数，执行在数据源中定义并在概念模型中映射的存储过程或函数。</span><span class="sxs-lookup"><span data-stu-id="5f461-466">Executes a stored procedure or function that is defined in the data source and mapped in the conceptual model, with the specified parameters.</span></span> <span data-ttu-id="5f461-467">返回类型化的 <see cref="T:System.Data.Objects.ObjectResult`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-467">Returns a typed <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></summary>
        <returns><span data-ttu-id="5f461-468">存储过程返回的数据的 <see cref="T:System.Data.Objects.ObjectResult`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-468">An <see cref="T:System.Data.Objects.ObjectResult`1" /> for the data that is returned by the stored procedure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-469"><xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A>方法是用于执行存储的过程或函数是数据源中定义并在概念模型中表示一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-469">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method is a helper method that is used to execute stored procedures or functions that are defined in the data source and expressed in the conceptual model.</span></span> <span data-ttu-id="5f461-470">每个 Entity Data Model 工具生成的一种方法[FunctionImport 元素](/ef/ef6/modeling/designer/advanced/edmx/csdl-spec#functionimport-element-csdl)概念模型中。</span><span class="sxs-lookup"><span data-stu-id="5f461-470">The Entity Data Model tools generate a method for each [FunctionImport Element](/ef/ef6/modeling/designer/advanced/edmx/csdl-spec#functionimport-element-csdl) in the conceptual model.</span></span> <span data-ttu-id="5f461-471">这些方法调用强类型`ExecuteFunction`返回类型化<xref:System.Data.Objects.ObjectResult%601>。</span><span class="sxs-lookup"><span data-stu-id="5f461-471">These methods call a strongly-typed `ExecuteFunction` to return a typed <xref:System.Data.Objects.ObjectResult%601>.</span></span> <span data-ttu-id="5f461-472">有关详细信息，请参阅[应用程序代码使用存储过程 （实体框架）](https://docs.microsoft.com/previous-versions/cc716795(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="5f461-472">For more information, see [Application Code using Stored Procedures (Entity Framework)](https://docs.microsoft.com/previous-versions/cc716795(v=vs.90)).</span></span>  
  
 <span data-ttu-id="5f461-473">函数的所有参数都都必需的参数数组中并针对导入函数，其中包括函数自身类型的元数据检查的所有类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-473">All parameters for the function are required in the parameters array and all types are checked against the metadata for the import function, including the type of the function itself.</span></span> <span data-ttu-id="5f461-474">`null` 对于 CLR 值类型时，允许使用值。</span><span class="sxs-lookup"><span data-stu-id="5f461-474">`null` values are permitted for CLR value types.</span></span> <span data-ttu-id="5f461-475">参数验证由提供程序执行。</span><span class="sxs-lookup"><span data-stu-id="5f461-475">Parameter validation is performed by the provider.</span></span>  
  
 <span data-ttu-id="5f461-476"><xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A>方法使用<xref:System.Data.Objects.MergeOption>的值<xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="5f461-476">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method uses the <xref:System.Data.Objects.MergeOption> value of <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="5f461-477">因此，如果对象上下文中已存在的对象，它将加载从数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-477">Therefore, if an object already exists in the object context, it will not be loaded from the data source.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-478"><paramref name="function" /> 为 null 或为空。</span><span class="sxs-lookup"><span data-stu-id="5f461-478"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="5f461-479">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-479">-or-</span></span> 
 <span data-ttu-id="5f461-480"><paramref name="function" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="5f461-480"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-481">实体读取器不支持此 <paramref name="function" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-481">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="5f461-482">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-482">-or-</span></span> 
<span data-ttu-id="5f461-483">读取器的类型与 <paramref name="function" /> 的类型不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-483">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-484">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-484">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteFunction&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteFunction&lt;TElement&gt; (string functionName, System.Data.Objects.MergeOption mergeOption, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteFunction&lt;TElement&gt;(string functionName, valuetype System.Data.Objects.MergeOption mergeOption, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteFunction(System::String ^ functionName, System::Data::Objects::MergeOption mergeOption, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteFunction : string * System.Data.Objects.MergeOption * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteFunction (functionName, mergeOption, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="5f461-485">对数据源执行函数时返回的 <see cref="T:System.Data.Objects.ObjectResult`1" /> 的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-485">The entity type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the function is executed against the data source.</span></span> <span data-ttu-id="5f461-486">此类型必须实现 <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-486">This type must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.</span></span></typeparam>
        <param name="functionName"><span data-ttu-id="5f461-487">存储过程或函数的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-487">The name of the stored procedure or function.</span></span> <span data-ttu-id="5f461-488">该名称可以包含容器名称，如 <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="5f461-488">The name can include the container name, such as <c>&lt;Container Name&gt;.&lt;Function Name&gt;</c>.</span></span> <span data-ttu-id="5f461-489">如果默认容器名称已知，则只需要函数名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-489">When the default container name is known, only the function name is required.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="5f461-490">执行查询时要使用的 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-490">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-491">一个 <see cref="T:System.Data.Objects.ObjectParameter" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-491">An array of <see cref="T:System.Data.Objects.ObjectParameter" /> objects.</span></span></param>
        <summary><span data-ttu-id="5f461-492">使用指定的参数和合并选项，执行在数据源中定义并在概念模型中表示的给定存储过程或函数。</span><span class="sxs-lookup"><span data-stu-id="5f461-492">Executes the given stored procedure or function that is defined in the data source and expressed in the conceptual model, with the specified parameters, and merge option.</span></span> <span data-ttu-id="5f461-493">返回类型化的 <see cref="T:System.Data.Objects.ObjectResult`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-493">Returns a typed <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></summary>
        <returns><span data-ttu-id="5f461-494">存储过程返回的数据的 <see cref="T:System.Data.Objects.ObjectResult`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-494">An <see cref="T:System.Data.Objects.ObjectResult`1" /> for the data that is returned by the stored procedure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-495"><xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A>方法是用于执行存储的过程或函数是数据源中定义并在概念模型中表示一个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-495">The <xref:System.Data.Objects.ObjectContext.ExecuteFunction%2A> method is a helper method that is used to execute stored procedures or functions that are defined in the data source and expressed in conceptual model.</span></span> <span data-ttu-id="5f461-496">每个 Entity Data Model 工具生成的一种方法[FunctionImport 元素](/ef/ef6/modeling/designer/advanced/edmx/csdl-spec#functionimport-element-csdl)概念模型中。</span><span class="sxs-lookup"><span data-stu-id="5f461-496">The Entity Data Model tools generate a method for each [FunctionImport Element](/ef/ef6/modeling/designer/advanced/edmx/csdl-spec#functionimport-element-csdl) in the conceptual model.</span></span> <span data-ttu-id="5f461-497">这些方法调用强类型`ExecuteFunction`返回类型化<xref:System.Data.Objects.ObjectResult%601>。</span><span class="sxs-lookup"><span data-stu-id="5f461-497">These methods call a strongly-typed `ExecuteFunction` to return a typed <xref:System.Data.Objects.ObjectResult%601>.</span></span> <span data-ttu-id="5f461-498">有关详细信息，请参阅[应用程序代码使用存储过程 （实体框架）](https://docs.microsoft.com/previous-versions/cc716795(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="5f461-498">For more information, see [Application Code using Stored Procedures (Entity Framework)](https://docs.microsoft.com/previous-versions/cc716795(v=vs.90)).</span></span>  
  
 <span data-ttu-id="5f461-499">函数的所有参数都都必需的参数数组中并针对导入函数，其中包括函数自身类型的元数据检查的所有类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-499">All parameters for the function are required in the parameters array and all types are checked against the metadata for the import function, including the type of the function itself.</span></span> <span data-ttu-id="5f461-500">`null` 对于 CLR 值类型时，允许使用值。</span><span class="sxs-lookup"><span data-stu-id="5f461-500">`null` values are permitted for CLR value types.</span></span> <span data-ttu-id="5f461-501">参数验证由提供程序执行。</span><span class="sxs-lookup"><span data-stu-id="5f461-501">Parameter validation is performed by the provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-502"><paramref name="function" /> 为 null 或为空。</span><span class="sxs-lookup"><span data-stu-id="5f461-502"><paramref name="function" /> is null or empty</span></span> 
<span data-ttu-id="5f461-503">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-503">-or-</span></span> 
 <span data-ttu-id="5f461-504"><paramref name="function" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="5f461-504"><paramref name="function" /> is not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-505">实体读取器不支持此 <paramref name="function" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-505">The entity reader does not support this <paramref name="function" />.</span></span>  
  
<span data-ttu-id="5f461-506">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-506">-or-</span></span> 
<span data-ttu-id="5f461-507">读取器的类型与 <paramref name="function" /> 的类型不匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-507">There is a type mismatch on the reader and the <paramref name="function" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-508">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-508">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreCommand">
      <MemberSignature Language="C#" Value="public int ExecuteStoreCommand (string commandText, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteStoreCommand(string commandText, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteStoreCommand (commandText As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteStoreCommand(System::String ^ commandText, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreCommand : string * obj[] -&gt; int" Usage="objectContext.ExecuteStoreCommand (commandText, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="5f461-509">要用数据源的本机语言执行的命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-509">The command to execute, in the native language of the data source.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-510">要传递给命令的参数数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-510">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="5f461-511">利用现有连接对数据源直接执行任意命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-511">Executes an arbitrary command directly against the data source using the existing connection.</span></span></summary>
        <returns><span data-ttu-id="5f461-512">受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="5f461-512">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-513">使用参数化命令可帮助抵御 SQL 注入攻击，这种攻击的攻击者会将命令“注入”SQL 语句，从而危及服务器的安全。</span><span class="sxs-lookup"><span data-stu-id="5f461-513">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="5f461-514">参数化的命令可抵御 SQL 注入攻击通过确保从外部源接收的值会作为值，而不是 SQL 语句的一部分传递。</span><span class="sxs-lookup"><span data-stu-id="5f461-514">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="5f461-515">因此，SQL 命令插入到值不会在执行数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-515">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="5f461-516">相反，只会将这些命令作为参数值来计算。</span><span class="sxs-lookup"><span data-stu-id="5f461-516">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="5f461-517">除具备安全优势，参数化的命令还提供一种简便方法用于组织使用的 SQL 语句或存储过程传递值。</span><span class="sxs-lookup"><span data-stu-id="5f461-517">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="5f461-518">`parameters` 值可以是 <xref:System.Data.Common.DbParameter> 对象数组或参数值数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-518">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="5f461-519">如果只提供了值，数组<xref:System.Data.Common.DbParameter>基于数组中值的顺序创建对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-519">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="5f461-520">如果当前事务存在，将在当前事务的上下文中执行存储命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-520">The store command is executed in the context of the current transaction, if a current transaction exists.</span></span>  
  
 <span data-ttu-id="5f461-521">有关详细信息，请参见:</span><span class="sxs-lookup"><span data-stu-id="5f461-521">For more information, see:</span></span>  
  
 <span data-ttu-id="5f461-522">[直接执行存储命令](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d)和</span><span class="sxs-lookup"><span data-stu-id="5f461-522">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="5f461-523">如何：针对数据源直接执行命令</span><span class="sxs-lookup"><span data-stu-id="5f461-523">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; ExecuteStoreQuery&lt;TElement&gt; (string commandText, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; ExecuteStoreQuery&lt;TElement&gt;(string commandText, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteStoreQuery(Of TElement) (commandText As String, ParamArray parameters As Object()) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ ExecuteStoreQuery(System::String ^ commandText, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreQuery : string * obj[] -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.ExecuteStoreQuery (commandText, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="5f461-524">返回的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-524">The type of the returned data.</span></span></typeparam>
        <param name="commandText"><span data-ttu-id="5f461-525">要用数据源的本机语言执行的命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-525">The command to execute, in the native language of the data source.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-526">要传递给命令的参数数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-526">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="5f461-527">对数据源直接执行查询，此查询将返回类型化结果的序列。</span><span class="sxs-lookup"><span data-stu-id="5f461-527">Executes a query directly against the data source that returns a sequence of typed results.</span></span></summary>
        <returns><span data-ttu-id="5f461-528">类型为 <paramref name="TElement" /> 的对象的枚举。</span><span class="sxs-lookup"><span data-stu-id="5f461-528">An enumeration of objects of type <paramref name="TElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-529"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A>方法使用现有连接来执行直接针对数据源的任意命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-529">The <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method uses the existing connection to execute an arbitrary command directly against the data source.</span></span> <span data-ttu-id="5f461-530">如果存在当前事务，则将在当前事务的上下文中执行存储命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-530">The store command is executed in the context of the current transaction, if such a transaction exists.</span></span>  
  
 <span data-ttu-id="5f461-531">调用 <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 方法等效于调用 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 类的 <xref:System.Data.Common.DbCommand> 方法，只是 <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 返回实体，而 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 返回 <xref:System.Data.Common.DbDataReader> 中的属性值。</span><span class="sxs-lookup"><span data-stu-id="5f461-531">Calling the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method is equivalent to calling the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method of the <xref:System.Data.Common.DbCommand> class, only <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> returns entities and the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> returns property values in the <xref:System.Data.Common.DbDataReader>.</span></span>  
  
 <span data-ttu-id="5f461-532">调用<xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A>与指定实体集名称，如果想要跟踪的结果。</span><span class="sxs-lookup"><span data-stu-id="5f461-532">Call the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> with the specified entity set name, if you want for the results to be tracked.</span></span>  
  
 <span data-ttu-id="5f461-533">调用<xref:System.Data.Objects.ObjectContext.Translate%2A>方法来转换<xref:System.Data.Common.DbDataReader>为实体对象时该读取器包含映射到指定的实体类型的数据行。</span><span class="sxs-lookup"><span data-stu-id="5f461-533">Call the <xref:System.Data.Objects.ObjectContext.Translate%2A> method to translate a <xref:System.Data.Common.DbDataReader> into entity objects when the reader contains data rows that map to the specified entity type.</span></span>  
  
 <span data-ttu-id="5f461-534">使用参数化命令可帮助抵御 SQL 注入攻击，这种攻击的攻击者会将命令“注入”SQL 语句，从而危及服务器的安全。</span><span class="sxs-lookup"><span data-stu-id="5f461-534">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="5f461-535">参数化的命令可抵御 SQL 注入攻击通过确保从外部源接收的值会作为值，而不是 SQL 语句的一部分传递。</span><span class="sxs-lookup"><span data-stu-id="5f461-535">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="5f461-536">因此，SQL 命令插入到值不会在执行数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-536">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="5f461-537">相反，只会将这些命令作为参数值来计算。</span><span class="sxs-lookup"><span data-stu-id="5f461-537">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="5f461-538">除具备安全优势，参数化的命令还提供一种简便方法用于组织使用的 SQL 语句或存储过程传递值。</span><span class="sxs-lookup"><span data-stu-id="5f461-538">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="5f461-539">`parameters` 值可以是 <xref:System.Data.Common.DbParameter> 对象数组或参数值数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-539">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="5f461-540">如果只提供了值，数组<xref:System.Data.Common.DbParameter>基于数组中值的顺序创建对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-540">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="5f461-541">有关详细信息，请参见:</span><span class="sxs-lookup"><span data-stu-id="5f461-541">For more information, see:</span></span>  
  
 <span data-ttu-id="5f461-542">[直接执行存储命令](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d)和</span><span class="sxs-lookup"><span data-stu-id="5f461-542">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="5f461-543">如何：针对数据源直接执行命令</span><span class="sxs-lookup"><span data-stu-id="5f461-543">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteStoreQuery&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TEntity&gt; ExecuteStoreQuery&lt;TEntity&gt; (string commandText, string entitySetName, System.Data.Objects.MergeOption mergeOption, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TEntity&gt; ExecuteStoreQuery&lt;TEntity&gt;(string commandText, string entitySetName, valuetype System.Data.Objects.MergeOption mergeOption, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; System::Data::Objects::ObjectResult&lt;TEntity&gt; ^ ExecuteStoreQuery(System::String ^ commandText, System::String ^ entitySetName, System::Data::Objects::MergeOption mergeOption, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteStoreQuery : string * string * System.Data.Objects.MergeOption * obj[] -&gt; System.Data.Objects.ObjectResult&lt;'Entity&gt;" Usage="objectContext.ExecuteStoreQuery (commandText, entitySetName, mergeOption, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entitySetName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-544">返回的数据的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-544">The entity type of the returned data.</span></span></typeparam>
        <param name="commandText"><span data-ttu-id="5f461-545">要用数据源的本机语言执行的命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-545">The command to execute, in the native language of the data source.</span></span></param>
        <param name="entitySetName"><span data-ttu-id="5f461-546"><typeparamref name="TEntity" /> 类型的实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-546">The entity set of the <typeparamref name="TEntity" /> type.</span></span> <span data-ttu-id="5f461-547">如果未提供实体集名称，则不会跟踪结果。</span><span class="sxs-lookup"><span data-stu-id="5f461-547">If an entity set name is not provided, the results are not going to be tracked.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="5f461-548">执行查询时要使用的 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-548">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="5f461-549">默认值为 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-549">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="5f461-550">要传递给命令的参数数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-550">An array of parameters to pass to the command.</span></span></param>
        <summary><span data-ttu-id="5f461-551">对数据源直接执行查询，此查询将返回类型化结果的序列。</span><span class="sxs-lookup"><span data-stu-id="5f461-551">Executes a query directly against the data source and returns a sequence of typed results.</span></span> <span data-ttu-id="5f461-552">指定实体集和合并选项，以便能够将查询结果作为实体进行跟踪。</span><span class="sxs-lookup"><span data-stu-id="5f461-552">Specify the entity set and the merge option so that query results can be tracked as entities.</span></span></summary>
        <returns><span data-ttu-id="5f461-553">类型为 <paramref name="TResult" /> 的对象的枚举。</span><span class="sxs-lookup"><span data-stu-id="5f461-553">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-554"><xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A>方法使用现有连接来执行直接针对数据源的任意命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-554">The <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method uses the existing connection to execute an arbitrary command directly against the data source.</span></span> <span data-ttu-id="5f461-555">如果存在当前事务，则将在当前事务的上下文中执行存储命令。</span><span class="sxs-lookup"><span data-stu-id="5f461-555">The store command is executed in the context of the current transaction, if such a transaction exists.</span></span>  
  
 <span data-ttu-id="5f461-556">调用 <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 方法等效于调用 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 类的 <xref:System.Data.Common.DbCommand> 方法，只是 <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> 返回实体，而 <xref:System.Data.Common.DbCommand.ExecuteReader%2A> 返回 <xref:System.Data.Common.DbDataReader> 中的属性值。</span><span class="sxs-lookup"><span data-stu-id="5f461-556">Calling the <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> method is equivalent to calling the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method of the <xref:System.Data.Common.DbCommand> class, only <xref:System.Data.Objects.ObjectContext.ExecuteStoreQuery%2A> returns entities and the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> returns property values in the <xref:System.Data.Common.DbDataReader>.</span></span>  
  
 <span data-ttu-id="5f461-557">指定的实体集名称，如果想要作为实体进行跟踪的结果。</span><span class="sxs-lookup"><span data-stu-id="5f461-557">Specify the entity set name, if you want for the results to be tracked as entities.</span></span>  
  
 <span data-ttu-id="5f461-558">调用<xref:System.Data.Objects.ObjectContext.Translate%2A>方法来转换<xref:System.Data.Common.DbDataReader>为实体对象时该读取器包含映射到指定的实体类型的数据行。</span><span class="sxs-lookup"><span data-stu-id="5f461-558">Call <xref:System.Data.Objects.ObjectContext.Translate%2A> method to translate a <xref:System.Data.Common.DbDataReader> into entity objects when the reader contains data rows that map to the specified entity type.</span></span>  
  
 <span data-ttu-id="5f461-559">使用参数化命令可帮助抵御 SQL 注入攻击，这种攻击的攻击者会将命令“注入”SQL 语句，从而危及服务器的安全。</span><span class="sxs-lookup"><span data-stu-id="5f461-559">Using parameterized commands helps guard against SQL injection attacks, in which an attacker "injects" a command into a SQL statement that compromises security on the server.</span></span> <span data-ttu-id="5f461-560">参数化的命令可抵御 SQL 注入攻击通过确保从外部源接收的值会作为值，而不是 SQL 语句的一部分传递。</span><span class="sxs-lookup"><span data-stu-id="5f461-560">Parameterized commands guard against a SQL injection attack by guaranteeing that values received from an external source are passed as values only, and not part of the SQL statement.</span></span> <span data-ttu-id="5f461-561">因此，SQL 命令插入到值不会在执行数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-561">As a result, SQL commands inserted into a value are not executed at the data source.</span></span> <span data-ttu-id="5f461-562">相反，只会将这些命令作为参数值来计算。</span><span class="sxs-lookup"><span data-stu-id="5f461-562">Rather, they are evaluated only as a parameter value.</span></span> <span data-ttu-id="5f461-563">除具备安全优势，参数化的命令还提供一种简便方法用于组织使用的 SQL 语句或存储过程传递值。</span><span class="sxs-lookup"><span data-stu-id="5f461-563">In addition to the security benefits, parameterized commands provide a convenient method for organizing values passed with a SQL statement or to a stored procedure.</span></span>  
  
 <span data-ttu-id="5f461-564">`parameters` 值可以是 <xref:System.Data.Common.DbParameter> 对象数组或参数值数组。</span><span class="sxs-lookup"><span data-stu-id="5f461-564">The `parameters` value can be an array of <xref:System.Data.Common.DbParameter> objects or an array of parameter values.</span></span> <span data-ttu-id="5f461-565">如果只提供了值，数组<xref:System.Data.Common.DbParameter>基于数组中值的顺序创建对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-565">If only values are supplied, an array of <xref:System.Data.Common.DbParameter> objects are created based on the order of the values in the array.</span></span>  
  
 <span data-ttu-id="5f461-566">有关详细信息，请参见:</span><span class="sxs-lookup"><span data-stu-id="5f461-566">For more information, see:</span></span>  
  
 <span data-ttu-id="5f461-567">[直接执行存储命令](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d)和</span><span class="sxs-lookup"><span data-stu-id="5f461-567">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="5f461-568">如何：针对数据源直接执行命令</span><span class="sxs-lookup"><span data-stu-id="5f461-568">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownProxyTypes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Type&gt; GetKnownProxyTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; GetKnownProxyTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetKnownProxyTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownProxyTypes () As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ GetKnownProxyTypes();" />
      <MemberSignature Language="F#" Value="static member GetKnownProxyTypes : unit -&gt; seq&lt;Type&gt;" Usage="System.Data.Objects.ObjectContext.GetKnownProxyTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-569">返回所有现有代理类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-569">Returns all the existing proxy types.</span></span></summary>
        <returns><span data-ttu-id="5f461-570">所有现有代理类型的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-570">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of all the existing proxy types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-571"><xref:System.Data.Objects.ObjectContext.GetKnownProxyTypes%2A>时为 POCO 实体启用代理对象生成使用方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-571">The <xref:System.Data.Objects.ObjectContext.GetKnownProxyTypes%2A> method is used when proxy object generation is enabled for POCO entities.</span></span> <span data-ttu-id="5f461-572">有关详细信息，请参阅[创建 POCO 代理的要求](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8)并[使用 POCO 实体](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)。</span><span class="sxs-lookup"><span data-stu-id="5f461-572">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectByKey">
      <MemberSignature Language="C#" Value="public object GetObjectByKey (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetObjectByKey(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectByKey (key As EntityKey) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectByKey(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectByKey : System.Data.EntityKey -&gt; obj" Usage="objectContext.GetObjectByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5f461-573">要查找的对象的键。</span><span class="sxs-lookup"><span data-stu-id="5f461-573">The key of the object to be found.</span></span></param>
        <summary><span data-ttu-id="5f461-574">返回具有指定实体键的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-574">Returns an object that has the specified entity key.</span></span></summary>
        <returns><span data-ttu-id="5f461-575">一个 <see cref="T:System.Object" />，它是实体类型的实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-575">An <see cref="T:System.Object" /> that is an instance of an entity type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-576"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> 尝试从 <xref:System.Data.EntityKey> 检索具有指定 <xref:System.Data.Objects.ObjectStateManager> 的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-576"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> tries to retrieve an object that has the specified <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="5f461-577">如果该对象当前尚未加载到对象上下文中，则会执行查询以尝试从数据源返回该对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-577">If the object is currently not loaded into the object context, a query is executed in an attempt to return the object from the data source.</span></span> <span data-ttu-id="5f461-578">有关详细信息，请参阅[对象查询](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="5f461-578">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="5f461-579">如果无法找到对象，<xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> 会引发 <xref:System.Data.ObjectNotFoundException>。</span><span class="sxs-lookup"><span data-stu-id="5f461-579"><xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> raises an <xref:System.Data.ObjectNotFoundException> when the object cannot be found.</span></span> <span data-ttu-id="5f461-580">若要避免处理此异常，请改用 <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-580">To avoid handling this exception, instead use the <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method.</span></span>  
  
 <span data-ttu-id="5f461-581">此方法将返回状态为 <xref:System.Data.EntityState.Deleted> 的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-581">This method will return objects in the <xref:System.Data.EntityState.Deleted> state.</span></span>  
  
 <span data-ttu-id="5f461-582">临时键无法用于从数据源返回对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-582">A temporary key cannot be used to return an object from the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-583">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-583">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-584">该示例为具有给定类型的实体创建 <xref:System.Data.EntityKey>，然后通过键提取实体。</span><span class="sxs-lookup"><span data-stu-id="5f461-584">The example creates an <xref:System.Data.EntityKey> for an entity of the given type and then fetches an entity by key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_GetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_getobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_GetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_getobjectbykey)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-585"><paramref name="key" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-585">The <paramref name="key" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.ObjectNotFoundException"><span data-ttu-id="5f461-586">在 <see cref="T:System.Data.Objects.ObjectStateManager" /> 和数据源中都未找到对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-586">The object is not found in either the <see cref="T:System.Data.Objects.ObjectStateManager" /> or the data source.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="5f461-587">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-587">Querying Data as Objects (Entity Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-588">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-588">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectType">
      <MemberSignature Language="C#" Value="public static Type GetObjectType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetObjectType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.GetObjectType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetObjectType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetObjectType : Type -&gt; Type" Usage="System.Data.Objects.ObjectContext.GetObjectType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5f461-589">代理对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-589">The <see cref="T:System.Type" /> of the proxy object.</span></span></param>
        <summary><span data-ttu-id="5f461-590">返回与指定类型的代理对象关联的 POCO 实体的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-590">Returns the entity type of the POCO entity associated with a proxy object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="5f461-591">关联的 POCO 实体的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-591">The <see cref="T:System.Type" /> of the associated POCO entity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-592"><xref:System.Data.Objects.ObjectContext.GetObjectType%2A>时为 POCO 实体启用代理对象生成使用方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-592">The <xref:System.Data.Objects.ObjectContext.GetObjectType%2A> method is used when proxy object generation is enabled for POCO entities.</span></span> <span data-ttu-id="5f461-593">有关详细信息，请参阅[创建 POCO 代理的要求](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8)并[使用 POCO 实体](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)。</span><span class="sxs-lookup"><span data-stu-id="5f461-593">For more information, see [Requirements for Creating POCO Proxies](https://msdn.microsoft.com/library/dcdbf982-9b9d-4582-806a-64de4a1c03c8) and [Working with POCO Entities](https://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f461-594">在使用 POCO 自定义数据类时显式加载相关对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-594">Explicitly loads a related object when you are using POCO custom data classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-595">使用 POCO 自定义数据类时，不能像由 Entity Data Model 工具生成的实体类型的实例显式加载相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-595">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="5f461-596">这是因为这些工具会生成返回的导航属性<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>的相关对象时<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>上调用<xref:System.Data.Objects.DataClasses.RelatedEnd>。</span><span class="sxs-lookup"><span data-stu-id="5f461-596">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="5f461-597">仍可以通过设置使用延迟加载加载 POCO 实体<xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A>属性设置为`true`的实例上<xref:System.Data.Objects.ObjectContextOptions>返回<xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType>属性，或使用预先加载与<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5f461-597">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public void LoadProperty (object entity, string navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty(object entity, string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadProperty (entity As Object, navigationProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadProperty(System::Object ^ entity, System::String ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; unit" Usage="objectContext.LoadProperty (entity, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="5f461-598">要为其加载相关对象的实体。</span><span class="sxs-lookup"><span data-stu-id="5f461-598">The entity for which related objects are to be loaded.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="5f461-599">可返回要加载的相关对象的导航属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-599">The name of the navigation property that returns the related objects to be loaded.</span></span></param>
        <summary><span data-ttu-id="5f461-600">通过指定的导航属性并使用默认合并选项，显式加载与提供的对象相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-600">Explicitly loads an object related to the supplied object by the specified navigation property and using the default merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-601"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A>必须调用方法来实现在使用 POCO 自定义数据类时显式加载。</span><span class="sxs-lookup"><span data-stu-id="5f461-601">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="5f461-602">在调用<xref:System.Data.Objects.ObjectContext.LoadProperty%2A>，可以通过源实体的导航属性访问相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-602">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="5f461-603">使用 POCO 自定义数据类时，不能像由 Entity Data Model 工具生成的实体类型的实例显式加载相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-603">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="5f461-604">这是因为这些工具会生成返回的导航属性<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>的相关对象时<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>上调用<xref:System.Data.Objects.DataClasses.RelatedEnd>。</span><span class="sxs-lookup"><span data-stu-id="5f461-604">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="5f461-605">仍可以通过设置使用延迟加载加载 POCO 实体<xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A>属性设置为`true`的实例上<xref:System.Data.Objects.ObjectContextOptions>返回<xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType>属性，或使用预先加载与<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5f461-605">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="5f461-606">当<xref:System.Data.Objects.ObjectContext.LoadProperty%2A>方法调用时，对象加载到<xref:System.Data.Objects.ObjectContext>使用默认<xref:System.Data.Objects.MergeOption>的值<xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="5f461-606">When the <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method is called, objects are loaded into the <xref:System.Data.Objects.ObjectContext> by using the default <xref:System.Data.Objects.MergeOption> value of <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-607"><paramref name="entity" /> 处于 <see cref="F:System.Data.EntityState.Detached" />、 <see cref="F:System.Data.EntityState.Added" /> 或 <see cref="F:System.Data.EntityState.Deleted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-607">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="5f461-608">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-608">-or-</span></span> 
<span data-ttu-id="5f461-609"><paramref name="entity" /> 附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-609">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public void LoadProperty (object entity, string navigationProperty, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty(object entity, string navigationProperty, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadProperty(System::Object ^ entity, System::String ^ navigationProperty, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Objects.MergeOption -&gt; unit" Usage="objectContext.LoadProperty (entity, navigationProperty, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="5f461-610">要为其加载相关对象的实体。</span><span class="sxs-lookup"><span data-stu-id="5f461-610">The entity for which related objects are to be loaded.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="5f461-611">可返回要加载的相关对象的导航属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5f461-611">The name of the navigation property that returns the related objects to be loaded.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="5f461-612">在加载相关对象时要使用的 <see cref="T:System.Data.Objects.MergeOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5f461-612">The <see cref="T:System.Data.Objects.MergeOption" /> value to use when you load the related objects.</span></span></param>
        <summary><span data-ttu-id="5f461-613">通过指定的导航属性并使用指定的合并选项，显式加载与提供的对象相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-613">Explicitly loads an object that is related to the supplied object by the specified navigation property and using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-614"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A>必须调用方法来实现在使用 POCO 自定义数据类时显式加载。</span><span class="sxs-lookup"><span data-stu-id="5f461-614">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="5f461-615">在调用<xref:System.Data.Objects.ObjectContext.LoadProperty%2A>，可以通过源实体的导航属性访问相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-615">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="5f461-616">使用 POCO 自定义数据类时，不能像由 Entity Data Model 工具生成的实体类型的实例显式加载相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-616">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="5f461-617">这是因为这些工具会生成返回的导航属性<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>的相关对象时<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>上调用<xref:System.Data.Objects.DataClasses.RelatedEnd>。</span><span class="sxs-lookup"><span data-stu-id="5f461-617">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="5f461-618">仍可以通过设置使用延迟加载加载 POCO 实体<xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A>属性设置为`true`的实例上<xref:System.Data.Objects.ObjectContextOptions>返回<xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType>属性，或使用预先加载与<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5f461-618">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-619"><paramref name="entity" /> 处于 <see cref="F:System.Data.EntityState.Detached" />、 <see cref="F:System.Data.EntityState.Added" /> 或 <see cref="F:System.Data.EntityState.Deleted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-619">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="5f461-620">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-620">-or-</span></span> 
<span data-ttu-id="5f461-621"><paramref name="entity" /> 附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-621">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public void LoadProperty&lt;TEntity&gt; (TEntity entity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty&lt;TEntity&gt;(!!TEntity entity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadProperty(Of TEntity) (entity As TEntity, selector As Expression(Of Func(Of TEntity, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; void LoadProperty(TEntity entity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : 'Entity * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; -&gt; unit" Usage="objectContext.LoadProperty (entity, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-622">提供的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-622">The type of the supplied object.</span></span></typeparam>
        <param name="entity"><span data-ttu-id="5f461-623">要为其加载相关对象的源对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-623">The source object for which related objects are to be loaded.</span></span></param>
        <param name="selector"><span data-ttu-id="5f461-624">定义要加载的相关对象的 LINQ 表达式。</span><span class="sxs-lookup"><span data-stu-id="5f461-624">A LINQ expression that defines the related objects to be loaded.</span></span></param>
        <summary><span data-ttu-id="5f461-625">通过指定的 LINQ 查询并使用默认合并选项，显式加载与提供的对象相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-625">Explicitly loads an object that is related to the supplied object by the specified LINQ query and by using the default merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-626"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A>必须调用方法来实现在使用 POCO 自定义数据类时显式加载。</span><span class="sxs-lookup"><span data-stu-id="5f461-626">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="5f461-627">在调用<xref:System.Data.Objects.ObjectContext.LoadProperty%2A>，可以通过源实体的导航属性访问相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-627">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="5f461-628">要加载的属性指定的 LINQ 表达式，它必须是形式的简单的属性成员访问，如`(entity) => entity.PropertyName`，其中*PropertyName*是返回要加载的相关的对象的导航属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-628">The property to load is specified by a LINQ expression, which must be in the form of a simple property member access, as in `(entity) => entity.PropertyName`, where *PropertyName* is the navigation property that returns the related objects to be loaded.</span></span> <span data-ttu-id="5f461-629">如果使用其他形式的 LINQ 表达式，将发生异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-629">An exception will occur if other forms of the LINQ expression are used.</span></span>  
  
 <span data-ttu-id="5f461-630">使用 POCO 自定义数据类时，不能像由 Entity Data Model 工具生成的实体类型的实例显式加载相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-630">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="5f461-631">这是因为这些工具会生成返回的导航属性<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>的相关对象时<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>上调用<xref:System.Data.Objects.DataClasses.RelatedEnd>。</span><span class="sxs-lookup"><span data-stu-id="5f461-631">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="5f461-632">仍可以通过设置使用延迟加载加载 POCO 实体<xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A>属性设置为`true`的实例上<xref:System.Data.Objects.ObjectContextOptions>返回<xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType>属性，或使用预先加载与<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5f461-632">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-633"><paramref name="selector" /> 未提供有效的输入参数。</span><span class="sxs-lookup"><span data-stu-id="5f461-633"><paramref name="selector" /> does not supply a valid input parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-634"><paramref name="selector" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="5f461-634"><paramref name="selector" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-635"><paramref name="entity" /> 处于 <see cref="F:System.Data.EntityState.Detached" />、 <see cref="F:System.Data.EntityState.Added" /> 或 <see cref="F:System.Data.EntityState.Deleted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-635">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="5f461-636">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-636">-or-</span></span> 
<span data-ttu-id="5f461-637"><paramref name="entity" /> 附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-637">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public void LoadProperty&lt;TEntity&gt; (TEntity entity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; selector, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadProperty&lt;TEntity&gt;(!!TEntity entity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; selector, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; void LoadProperty(TEntity entity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ selector, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : 'Entity * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.Objects.MergeOption -&gt; unit" Usage="objectContext.LoadProperty (entity, selector, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-638">提供的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-638">The type of the supplied object.</span></span></typeparam>
        <param name="entity"><span data-ttu-id="5f461-639">要为其加载相关对象的源对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-639">The source object for which related objects are to be loaded.</span></span></param>
        <param name="selector"><span data-ttu-id="5f461-640">定义要加载的相关对象的 LINQ 表达式。</span><span class="sxs-lookup"><span data-stu-id="5f461-640">A LINQ expression that defines the related objects to be loaded.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="5f461-641">在加载相关对象时要使用的 <see cref="T:System.Data.Objects.MergeOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5f461-641">The <see cref="T:System.Data.Objects.MergeOption" /> value to use when you load the related objects.</span></span></param>
        <summary><span data-ttu-id="5f461-642">通过指定的 LINQ 查询并使用指定的合并选项，显式加载与提供的对象相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-642">Explicitly loads an object that is related to the supplied object by the specified LINQ query and by using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-643"><xref:System.Data.Objects.ObjectContext.LoadProperty%2A>必须调用方法来实现在使用 POCO 自定义数据类时显式加载。</span><span class="sxs-lookup"><span data-stu-id="5f461-643">The <xref:System.Data.Objects.ObjectContext.LoadProperty%2A> method must be called to achieve explicit loading when you are using POCO custom data classes.</span></span>  
  
 <span data-ttu-id="5f461-644">在调用<xref:System.Data.Objects.ObjectContext.LoadProperty%2A>，可以通过源实体的导航属性访问相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-644">After calling <xref:System.Data.Objects.ObjectContext.LoadProperty%2A>, the related object can be accessed through the navigation properties of the source entity.</span></span>  
  
 <span data-ttu-id="5f461-645">要加载的属性指定的 LINQ 表达式，它必须是形式的简单的属性成员访问，如`(entity) => entity.PropertyName`其中*PropertyName*是返回要加载的相关的对象的导航属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-645">The property to load is specified by a LINQ expression, which must be in the form of a simple property member access, as in `(entity) => entity.PropertyName` where *PropertyName* is the navigation property that returns the related objects to be loaded.</span></span> <span data-ttu-id="5f461-646">如果使用其他形式的 LINQ 表达式，将发生异常。</span><span class="sxs-lookup"><span data-stu-id="5f461-646">An exception will occur if other forms of the LINQ expression are used.</span></span>  
  
 <span data-ttu-id="5f461-647">使用 POCO 自定义数据类时，不能像由 Entity Data Model 工具生成的实体类型的实例显式加载相关的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-647">When using POCO custom data classes, related objects cannot be explicitly loaded like instances of entity types that are generated by the Entity Data Model tools.</span></span> <span data-ttu-id="5f461-648">这是因为这些工具会生成返回的导航属性<xref:System.Data.Objects.DataClasses.EntityCollection%601>或<xref:System.Data.Objects.DataClasses.EntityReference%601>的相关对象时<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>上调用<xref:System.Data.Objects.DataClasses.RelatedEnd>。</span><span class="sxs-lookup"><span data-stu-id="5f461-648">This is because the tools generate the navigation properties that return an <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> of related objects when <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> is called on a <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span> <span data-ttu-id="5f461-649">仍可以通过设置使用延迟加载加载 POCO 实体<xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A>属性设置为`true`的实例上<xref:System.Data.Objects.ObjectContextOptions>返回<xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType>属性，或使用预先加载与<xref:System.Data.Objects.ObjectQuery%601.Include%2A>方法<xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="5f461-649">POCO entities can still be loaded by using lazy loading by setting the <xref:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled%2A> property to `true` on the instance of <xref:System.Data.Objects.ObjectContextOptions> that is returned by the <xref:System.Data.Objects.ObjectContext.ContextOptions%2A?displayProperty=nameWithType> property, or by using eager loading with the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method on the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-650"><paramref name="selector" /> 未提供有效的输入参数。</span><span class="sxs-lookup"><span data-stu-id="5f461-650"><paramref name="selector" /> does not supply a valid input parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-651"><paramref name="selector" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="5f461-651"><paramref name="selector" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-652"><paramref name="entity" /> 处于 <see cref="F:System.Data.EntityState.Detached" />、 <see cref="F:System.Data.EntityState.Added" /> 或 <see cref="F:System.Data.EntityState.Deleted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="5f461-652">The <paramref name="entity" /> is in a <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state,</span></span> 
<span data-ttu-id="5f461-653">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-653">-or-</span></span> 
<span data-ttu-id="5f461-654"><paramref name="entity" /> 附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-654">The <paramref name="entity" /> is attached to another instance of <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectContext.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-655">获取对象上下文使用的元数据工作区。</span><span class="sxs-lookup"><span data-stu-id="5f461-655">Gets the metadata workspace used by the object context.</span></span></summary>
        <value><span data-ttu-id="5f461-656">与此 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 关联的 <see cref="T:System.Data.Objects.ObjectContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-656">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> object associated with this <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-657"><xref:System.Data.Metadata.Edm.MetadataWorkspace> 类作为中心运行时 API，可用于在应用程序上下文中与 Entity Data Model (EDM) 元数据交互。</span><span class="sxs-lookup"><span data-stu-id="5f461-657">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class is a central runtime API that you can use to interact with the Entity Data Model (EDM) metadata in the context of an application.</span></span> <span data-ttu-id="5f461-658">有关详细信息，请参阅[元数据工作区](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84)。</span><span class="sxs-lookup"><span data-stu-id="5f461-658">For more information, see [Metadata Workspace](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-659">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-659">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectMaterialized">
      <MemberSignature Language="C#" Value="public event System.Data.Objects.ObjectMaterializedEventHandler ObjectMaterialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Objects.ObjectMaterializedEventHandler ObjectMaterialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectContext.ObjectMaterialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectMaterialized As ObjectMaterializedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Objects::ObjectMaterializedEventHandler ^ ObjectMaterialized;" />
      <MemberSignature Language="F#" Value="member this.ObjectMaterialized : System.Data.Objects.ObjectMaterializedEventHandler " Usage="member this.ObjectMaterialized : System.Data.Objects.ObjectMaterializedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectMaterializedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-660">当使用数据源中的数据创建新的实体对象（作为查询或加载操作的一部分）时发生。</span><span class="sxs-lookup"><span data-stu-id="5f461-660">Occurs when a new entity object is created from data in the data source as part of a query or load operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-661">之后所有标量、 复杂，将引发此事件和上一个对象，但加载集合之前已设置引用属性。</span><span class="sxs-lookup"><span data-stu-id="5f461-661">This event is raised after all scalar, complex, and reference properties have been set on an object, but before collections are loaded.</span></span> <span data-ttu-id="5f461-662">如果对象上下文中存在具有相同密钥值的对象，实体框架将不会重新创建该对象并不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="5f461-662">If an object with the same key value exists in the object context, the Entity Framework will not recreate the object and this event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateManager ObjectStateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectStateManager ObjectStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.ObjectStateManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectStateManager As ObjectStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectStateManager ^ ObjectStateManager { System::Data::Objects::ObjectStateManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManager : System.Data.Objects.ObjectStateManager" Usage="System.Data.Objects.ObjectContext.ObjectStateManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-663">获取对象上下文用于跟踪对象更改的对象状态管理器。</span><span class="sxs-lookup"><span data-stu-id="5f461-663">Gets the object state manager used by the object context to track object changes.</span></span></summary>
        <value><span data-ttu-id="5f461-664">由此 <see cref="T:System.Data.Objects.ObjectStateManager" /> 使用的 <see cref="T:System.Data.Objects.ObjectContext" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-664">The <see cref="T:System.Data.Objects.ObjectStateManager" /> used by this <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5f461-665">这些示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-665">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-666">此示例从 <xref:System.Data.Objects.ObjectStateManager> 获取 <xref:System.Data.Objects.ObjectContext>，并使用状态管理器访问上下文中的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-666">This example gets the <xref:System.Data.Objects.ObjectStateManager> from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 <span data-ttu-id="5f461-667">此示例对返回的 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A> 使用 <xref:System.Data.Objects.ObjectStateManager> 方法基于对象的实体键获取对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-667">This example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A> method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-668">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-668">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QueryProvider">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryProvider QueryProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider QueryProvider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContext.QueryProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property QueryProvider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Linq::IQueryProvider ^ QueryProvider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : System.Linq.IQueryProvider" Usage="System.Data.Objects.ObjectContext.QueryProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-669">获取与此对象上下文关联的 LINQ 查询提供程序。</span><span class="sxs-lookup"><span data-stu-id="5f461-669">Gets the LINQ query provider associated with this object context.</span></span></summary>
        <value><span data-ttu-id="5f461-670">由此对象上下文使用的 <see cref="T:System.Linq.IQueryProvider" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5f461-670">The <see cref="T:System.Linq.IQueryProvider" /> instance used by this object context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f461-671">使用数据源中的数据更新对象上下文中的特定对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-671">Updates specific objects in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-672">刷新对象的顺序具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="5f461-672">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Objects.RefreshMode refreshMode, System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Objects.RefreshMode refreshMode, class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Objects::RefreshMode refreshMode, System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Objects.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="objectContext.Refresh (refreshMode, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Objects.RefreshMode" />
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="5f461-673">一个 <see cref="T:System.Data.Objects.RefreshMode" /> 值，指示是否使用数据源中的属性值覆盖对象上下文中的属性更改。</span><span class="sxs-lookup"><span data-stu-id="5f461-673">A <see cref="T:System.Data.Objects.RefreshMode" /> value that indicates whether property changes in the object context are overwritten with property values from the data source.</span></span></param>
        <param name="collection"><span data-ttu-id="5f461-674">要刷新的对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="5f461-674">An <see cref="T:System.Collections.IEnumerable" /> collection of objects to refresh.</span></span></param>
        <summary><span data-ttu-id="5f461-675">使用数据源中的数据更新对象上下文中的对象集合。</span><span class="sxs-lookup"><span data-stu-id="5f461-675">Updates a collection of objects in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-676">此方法具有两种用途，一种是允许使用数据源中的数据刷新对象上下文中的对象，另一种是作为解决冲突的机制。</span><span class="sxs-lookup"><span data-stu-id="5f461-676">This method has the dual purpose of allowing objects in the object context to be refreshed with data from the data source, and being the mechanism by which conflicts can be resolved.</span></span> <span data-ttu-id="5f461-677">有关详细信息，请参阅[保存更改和管理并发](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)。</span><span class="sxs-lookup"><span data-stu-id="5f461-677">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="5f461-678">刷新对象的顺序具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="5f461-678">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 <span data-ttu-id="5f461-679">之后<xref:System.Data.Objects.ObjectContext.Refresh%2A>调用时，该对象的原始值将始终更新使用数据源值，但可能会也可能不使用的数据源值更新当前的值。</span><span class="sxs-lookup"><span data-stu-id="5f461-679">After <xref:System.Data.Objects.ObjectContext.Refresh%2A> is called, the object's original values will always be updated with the data source value, but the current values might or might not be updated with the data source value.</span></span> <span data-ttu-id="5f461-680">这取决于 <xref:System.Data.Objects.RefreshMode> 值。</span><span class="sxs-lookup"><span data-stu-id="5f461-680">This depends on the <xref:System.Data.Objects.RefreshMode> value.</span></span> <span data-ttu-id="5f461-681"><xref:System.Data.Objects.RefreshMode.StoreWins>模式意味着应将集合中的对象更新为与数据源值匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-681">The <xref:System.Data.Objects.RefreshMode.StoreWins> mode means that the objects in the collection should be updated to match the data source values.</span></span> <span data-ttu-id="5f461-682"><xref:System.Data.Objects.RefreshMode.ClientWins> 意味着，将保持仅在对象上下文中的更改，即使数据源中进行了其他更改。</span><span class="sxs-lookup"><span data-stu-id="5f461-682"><xref:System.Data.Objects.RefreshMode.ClientWins> means that only the changes in the object context will be persisted, even if there have been other changes in the data source.</span></span>  
  
 <span data-ttu-id="5f461-683">若要确保已由数据源端逻辑更新了对象，可以在调用 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 方法后，使用 <xref:System.Data.Objects.RefreshMode.StoreWins> 调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="5f461-683">To ensure that objects have been updated by data source-side logic, you can call <xref:System.Data.Objects.ObjectContext.Refresh%2A> with <xref:System.Data.Objects.RefreshMode.StoreWins> after you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-684"><paramref name="collection" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-684"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5f461-685"><paramref name="refreshMode" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-685"><paramref name="refreshMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-686"><paramref name="collection" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="5f461-686"><paramref name="collection" /> is empty.</span></span>  
  
<span data-ttu-id="5f461-687">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-687">-or-</span></span> 
<span data-ttu-id="5f461-688">对象未附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-688">An object is not attached to the context.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-689">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-689">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Objects.RefreshMode refreshMode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Objects.RefreshMode refreshMode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Objects::RefreshMode refreshMode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Objects.RefreshMode * obj -&gt; unit" Usage="objectContext.Refresh (refreshMode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Objects.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="5f461-690">一个 <see cref="T:System.Data.Objects.RefreshMode" /> 值，指定使用哪种模式来刷新 <see cref="T:System.Data.Objects.ObjectStateManager" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-690">One of the <see cref="T:System.Data.Objects.RefreshMode" /> values that specifies which mode to use for refreshing the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span></param>
        <param name="entity"><span data-ttu-id="5f461-691">要刷新的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-691">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="5f461-692">使用数据源中的数据更新对象上下文中的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-692">Updates an object in the object context with data from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-693"><xref:System.Data.Objects.ObjectContext.Refresh%2A> 具有两种用途，一种是允许使用数据源中的数据刷新对象，另一种是作为解决冲突的机制。</span><span class="sxs-lookup"><span data-stu-id="5f461-693"><xref:System.Data.Objects.ObjectContext.Refresh%2A> has the dual purpose of allowing an object to be refreshed with data from the data source and being the mechanism by which conflicts can be resolved.</span></span> <span data-ttu-id="5f461-694">有关详细信息，请参阅[保存更改和管理并发](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)。</span><span class="sxs-lookup"><span data-stu-id="5f461-694">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="5f461-695">刷新对象的顺序具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="5f461-695">The order in which objects are refreshed is nondeterministic.</span></span>  
  
 <span data-ttu-id="5f461-696">之后<xref:System.Data.Objects.ObjectContext.Refresh%2A>调用方法，该对象的原始值将始终更新使用数据源值，但可能会也可能不使用的数据源值更新当前的值。</span><span class="sxs-lookup"><span data-stu-id="5f461-696">After the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method is called, the object's original values will always be updated with the data source value, but the current values might or might not be updated with the data source value.</span></span> <span data-ttu-id="5f461-697">这取决于 <xref:System.Data.Objects.RefreshMode>。</span><span class="sxs-lookup"><span data-stu-id="5f461-697">This depends on the <xref:System.Data.Objects.RefreshMode>.</span></span> <span data-ttu-id="5f461-698"><xref:System.Data.Objects.RefreshMode.StoreWins> 模式意味着应将对象更新为与数据源值匹配。</span><span class="sxs-lookup"><span data-stu-id="5f461-698">The <xref:System.Data.Objects.RefreshMode.StoreWins> mode means that the object should be updated to match the data source values.</span></span> <span data-ttu-id="5f461-699"><xref:System.Data.Objects.RefreshMode.ClientWins> 值意味着仅保持对象上下文中的更改，即使数据源中发生了其他更改也是如此。</span><span class="sxs-lookup"><span data-stu-id="5f461-699">The <xref:System.Data.Objects.RefreshMode.ClientWins> value means that only the changes in the object context will be persisted, even if there have been other changes in the data source.</span></span>  
  
 <span data-ttu-id="5f461-700">若要确保已由数据源端逻辑更新了对象，可以在调用 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 方法后，使用 <xref:System.Data.Objects.RefreshMode.StoreWins> 值调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-700">To ensure that an object has been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-701">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-701">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-702">此示例尝试保存更改，这可能导致并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-702">The example tries to save changes, and this may cause a concurrency conflict.</span></span> <span data-ttu-id="5f461-703">然后，此示例演示如何通过在重新保存更改前刷新对象上下文来解决并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-703">Then it shows how to resolve the concurrency conflict by refreshing the object context before re-saving changes.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Concurrency](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#concurrency)]
 [!code-vb[DP ObjectServices Concepts#Concurrency](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#concurrency)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-704"><paramref name="collection" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-704"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5f461-705"><paramref name="refreshMode" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="5f461-705"><paramref name="refreshMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-706"><paramref name="collection" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="5f461-706"><paramref name="collection" /> is empty.</span></span>  
  
<span data-ttu-id="5f461-707">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5f461-707">-or-</span></span> 
<span data-ttu-id="5f461-708">对象未附加到上下文。</span><span class="sxs-lookup"><span data-stu-id="5f461-708">An object is not attached to the context.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-709">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-709">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f461-710">将所有更新保存到数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-710">Persists all updates to the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; int" Usage="objectContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f461-711">将所有更新保存到数据源并重置对象上下文中的更改跟踪。</span><span class="sxs-lookup"><span data-stu-id="5f461-711">Persists all updates to the data source and resets change tracking in the object context.</span></span></summary>
        <returns><span data-ttu-id="5f461-712">在调用 <see cref="F:System.Data.EntityState.Added" /> 时处于 <see cref="F:System.Data.EntityState.Modified" />、<see cref="F:System.Data.EntityState.Deleted" /> 或 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 状态的对象数。</span><span class="sxs-lookup"><span data-stu-id="5f461-712">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-713">若要确保已由数据源端逻辑更新了客户端上的对象，可以在调用 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 后，使用 <xref:System.Data.Objects.RefreshMode.StoreWins> 值调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-713">To ensure that objects on the client have been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.</span></span> <span data-ttu-id="5f461-714">有关详细信息，请参阅[保存更改和管理并发](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)。</span><span class="sxs-lookup"><span data-stu-id="5f461-714">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="5f461-715"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 在事务中进行操作。</span><span class="sxs-lookup"><span data-stu-id="5f461-715"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operates within a transaction.</span></span> <span data-ttu-id="5f461-716"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 将回滚该事务并引发异常，如果有任何脏<xref:System.Data.Objects.ObjectStateEntry>对象无法保存。</span><span class="sxs-lookup"><span data-stu-id="5f461-716"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> will roll back that transaction and throw an exception if any of the dirty <xref:System.Data.Objects.ObjectStateEntry> objects cannot be persisted.</span></span>  
  
 <span data-ttu-id="5f461-717">如果发生了开放式并发冲突，则引发 <xref:System.Data.OptimisticConcurrencyException>。</span><span class="sxs-lookup"><span data-stu-id="5f461-717">If an optimistic concurrency violation has occurred, an <xref:System.Data.OptimisticConcurrencyException> is thrown.</span></span> <span data-ttu-id="5f461-718">可以通过以下方式解决开放式并发冲突，即捕获该冲突，使用 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 或 <xref:System.Data.Objects.RefreshMode.StoreWins> 值调用 <xref:System.Data.Objects.RefreshMode.ClientWins> 方法，然后再次调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="5f461-718">You can resolve an optimistic concurrency violation by catching it, calling the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> or <xref:System.Data.Objects.RefreshMode.ClientWins> value, and then calling <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> again.</span></span> <span data-ttu-id="5f461-719">有关详细信息，请参阅[如何：对象上下文中管理数据并发](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a)。</span><span class="sxs-lookup"><span data-stu-id="5f461-719">For more information, see [How to: Manage Data Concurrency in the Object Context](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-720">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-720">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-721">此示例尝试保存更改，这可能导致并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-721">This example tries to save changes, which may cause a concurrency conflict.</span></span> <span data-ttu-id="5f461-722">然后，此示例演示如何通过在重新保存更改前刷新对象上下文来解决并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-722">Then, it demonstrates how to resolve the concurrency conflict by refreshing the object context before re-saving changes.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Concurrency](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#concurrency)]
 [!code-vb[DP ObjectServices Concepts#Concurrency](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#concurrency)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="5f461-723">在数据源中发生了开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-723">An optimistic concurrency violation has occurred in the data source.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-724">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-724">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges (bool acceptChangesDuringSave);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SaveChanges(bool acceptChangesDuringSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (acceptChangesDuringSave As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SaveChanges(bool acceptChangesDuringSave);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : bool -&gt; int" Usage="objectContext.SaveChanges acceptChangesDuringSave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use SaveChanges(SaveOptions options) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptChangesDuringSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="acceptChangesDuringSave"><span data-ttu-id="5f461-725">此参数是客户端事务支持所需的参数。</span><span class="sxs-lookup"><span data-stu-id="5f461-725">This parameter is needed for client-side transaction support.</span></span> <span data-ttu-id="5f461-726">如果为 <see langword="true" />，则所有对象的更改跟踪都会在 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> 完成后重置。</span><span class="sxs-lookup"><span data-stu-id="5f461-726">If <see langword="true" />, the change tracking on all objects is reset after <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> finishes.</span></span> <span data-ttu-id="5f461-727">如果为 <see langword="false" />，则必须在 <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChanges" /> 之后调用 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-727">If <see langword="false" />, you must call the <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChanges" /> method after <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />.</span></span></param>
        <summary><span data-ttu-id="5f461-728">将所有更新保存到数据源并可选择重置对象上下文中的更改跟踪。</span><span class="sxs-lookup"><span data-stu-id="5f461-728">Persists all updates to the data source and optionally resets change tracking in the object context.</span></span></summary>
        <returns><span data-ttu-id="5f461-729">在调用 <see cref="F:System.Data.EntityState.Added" /> 时处于 <see cref="F:System.Data.EntityState.Modified" />、<see cref="F:System.Data.EntityState.Deleted" /> 或 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 状态的对象数。</span><span class="sxs-lookup"><span data-stu-id="5f461-729">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-730">调用<xref:System.Data.Objects.ObjectContext.SaveChanges%28System.Data.Objects.SaveOptions%29>方法相反。</span><span class="sxs-lookup"><span data-stu-id="5f461-730">Call the <xref:System.Data.Objects.ObjectContext.SaveChanges%28System.Data.Objects.SaveOptions%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="5f461-731">发生了开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-731">An optimistic concurrency violation has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public virtual int SaveChanges (System.Data.Objects.SaveOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SaveChanges(valuetype System.Data.Objects.SaveOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges (options As SaveOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SaveChanges(System::Data::Objects::SaveOptions options);" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges : System.Data.Objects.SaveOptions -&gt; int&#xA;override this.SaveChanges : System.Data.Objects.SaveOptions -&gt; int" Usage="objectContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Objects.SaveOptions" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="5f461-732">一个确定操作的行为的 <see cref="T:System.Data.Objects.SaveOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5f461-732">A <see cref="T:System.Data.Objects.SaveOptions" /> value that determines the behavior of the operation.</span></span></param>
        <summary><span data-ttu-id="5f461-733">使用指定的 <see cref="T:System.Data.Objects.SaveOptions" /> 将所有更新保存到数据源。</span><span class="sxs-lookup"><span data-stu-id="5f461-733">Persists all updates to the data source with the specified <see cref="T:System.Data.Objects.SaveOptions" />.</span></span></summary>
        <returns><span data-ttu-id="5f461-734">在调用 <see cref="F:System.Data.EntityState.Added" /> 时处于 <see cref="F:System.Data.EntityState.Modified" />、<see cref="F:System.Data.EntityState.Deleted" /> 或 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 状态的对象数。</span><span class="sxs-lookup"><span data-stu-id="5f461-734">The number of objects in an <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" />, or <see cref="F:System.Data.EntityState.Deleted" /> state when <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-735">请使用此特定重载<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>或者，确保<xref:System.Data.Objects.ObjectContext.DetectChanges%2A>之前将更改保存到数据源中或调用<xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A>后将更改保存到数据源，将调用。</span><span class="sxs-lookup"><span data-stu-id="5f461-735">Use this specific overload of <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> to either make sure that <xref:System.Data.Objects.ObjectContext.DetectChanges%2A> is called before you save changes to the data source or that <xref:System.Data.Objects.ObjectContext.AcceptAllChanges%2A> is called after you save changes to the data source.</span></span>  
  
 <span data-ttu-id="5f461-736">此枚举有<xref:System.FlagsAttribute>，可实现其成员值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="5f461-736">This enumeration has a <xref:System.FlagsAttribute> that allows for a bitwise combination of its member values.</span></span>  
  
 <span data-ttu-id="5f461-737">若要确保已由数据源端逻辑更新，客户端上的对象，可以调用<xref:System.Data.Objects.ObjectContext.Refresh%2A>方法替换<xref:System.Data.Objects.RefreshMode.StoreWins>值调用后<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="5f461-737">To make sure that objects on the client have been updated by data source-side logic, you can call the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> value after you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.</span></span> <span data-ttu-id="5f461-738"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A>方法在事务中的操作。</span><span class="sxs-lookup"><span data-stu-id="5f461-738">The <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method operates in a transaction.</span></span> <span data-ttu-id="5f461-739"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 将回滚该事务并引发异常，如果任何一个脏<xref:System.Data.Objects.ObjectStateEntry>对象无法保存。</span><span class="sxs-lookup"><span data-stu-id="5f461-739"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A> will roll back that transaction and throw an exception if any one of the dirty <xref:System.Data.Objects.ObjectStateEntry> objects cannot be persisted.</span></span>  
  
 <span data-ttu-id="5f461-740">如果发生了开放式并发冲突，则引发 <xref:System.Data.OptimisticConcurrencyException>。</span><span class="sxs-lookup"><span data-stu-id="5f461-740">If an optimistic concurrency violation has occurred, an <xref:System.Data.OptimisticConcurrencyException> is thrown.</span></span> <span data-ttu-id="5f461-741">可以通过以下方式解决开放式并发冲突，即捕获该冲突，使用 <xref:System.Data.Objects.ObjectContext.Refresh%2A> 或 <xref:System.Data.Objects.RefreshMode.StoreWins> 值调用 <xref:System.Data.Objects.RefreshMode.ClientWins> 方法，然后再次调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5f461-741">You can resolve an optimistic concurrency violation by catching it, calling the <xref:System.Data.Objects.ObjectContext.Refresh%2A> method with the <xref:System.Data.Objects.RefreshMode.StoreWins> or <xref:System.Data.Objects.RefreshMode.ClientWins> values, and then calling the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method again.</span></span> <span data-ttu-id="5f461-742">有关详细信息，请参阅[如何：对象上下文中管理数据并发](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a)。</span><span class="sxs-lookup"><span data-stu-id="5f461-742">For more information, see [How to: Manage Data Concurrency in the Object Context](https://msdn.microsoft.com/library/25ffe70d-ce97-4f0a-8ae0-22b7c40f748a).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OptimisticConcurrencyException"><span data-ttu-id="5f461-743">发生了开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="5f461-743">An optimistic concurrency violation has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SavingChanges">
      <MemberSignature Language="C#" Value="public event EventHandler SavingChanges;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SavingChanges" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectContext.SavingChanges" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SavingChanges As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SavingChanges;" />
      <MemberSignature Language="F#" Value="member this.SavingChanges : EventHandler " Usage="member this.SavingChanges : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f461-744">在将更改保存到数据源时发生。</span><span class="sxs-lookup"><span data-stu-id="5f461-744">Occurs when changes are saved to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-745"><xref:System.Data.Objects.ObjectContext.SavingChanges> 事件在 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 的 <xref:System.Data.Objects.ObjectContext> 操作启动时引发。</span><span class="sxs-lookup"><span data-stu-id="5f461-745">The <xref:System.Data.Objects.ObjectContext.SavingChanges> event is raised at the start of a <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> operation on an <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="5f461-746">此事件通常用于在将新值写入数据库前验证更改的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-746">This event is typically used to validate changed objects before new values are written to the database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-747">此示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-747">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-748">此示例为执行实体状态验证的 <xref:System.Data.Objects.ObjectContext.SavingChanges> 事件注册处理程序。</span><span class="sxs-lookup"><span data-stu-id="5f461-748">This registers a handler for the <xref:System.Data.Objects.ObjectContext.SavingChanges> event that performs entity state validation.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SavingChanges](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#savingchanges)]
 [!code-vb[DP ObjectServices Concepts#SavingChanges](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#savingchanges)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-749">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-749">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TElement&gt; Translate&lt;TElement&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TElement&gt; Translate&lt;TElement&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TElement) (reader As DbDataReader) As ObjectResult(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Data::Objects::ObjectResult&lt;TElement&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Objects.ObjectResult&lt;'Element&gt;" Usage="objectContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="5f461-750"><see cref="T:System.Data.Common.DbDataReader" /> 中的数据的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-750">The entity type of the data in the <see cref="T:System.Data.Common.DbDataReader" />.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="5f461-751">包含要转换为实体对象的实体数据的 <see cref="T:System.Data.Common.DbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-751">The <see cref="T:System.Data.Common.DbDataReader" /> that contains entity data to translate into entity objects.</span></span></param>
        <summary><span data-ttu-id="5f461-752">将包含实体数据行的 <see cref="T:System.Data.Common.DbDataReader" /> 转换为请求的实体类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-752">Translates a <see cref="T:System.Data.Common.DbDataReader" /> that contains rows of entity data to objects of the requested entity type.</span></span></summary>
        <returns><span data-ttu-id="5f461-753">类型为 <paramref name="TResult" /> 的对象的枚举。</span><span class="sxs-lookup"><span data-stu-id="5f461-753">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-754"><xref:System.Data.Objects.ObjectContext.Translate%2A>方法用于将实体数据从<xref:System.Data.Common.DbDataReader>到所请求类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-754">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method is used to translate entity data from a <xref:System.Data.Common.DbDataReader> into objects of the requested type.</span></span> <span data-ttu-id="5f461-755">当在自动执行此过程<xref:System.Data.Objects.ObjectQuery%601>执行返回实体数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-755">This process is performed automatically when an <xref:System.Data.Objects.ObjectQuery%601> is executed to return entity data.</span></span> <span data-ttu-id="5f461-756"><xref:System.Data.Objects.ObjectContext.Translate%2A>方法，可执行针对数据源的标准 ADO.NET 查询并转换为实体对象返回的数据行。</span><span class="sxs-lookup"><span data-stu-id="5f461-756">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method enables you to execute a standard ADO.NET query against a data source and translate the returned data rows into entity objects.</span></span>  
  
 <span data-ttu-id="5f461-757">所提供<xref:System.Data.Common.DbDataReader>必须包含映射到请求的实体类型的数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-757">The supplied <xref:System.Data.Common.DbDataReader> must contain data that maps to the requested entity type.</span></span>  
  
 <span data-ttu-id="5f461-758">有关详细信息，请参见:</span><span class="sxs-lookup"><span data-stu-id="5f461-758">For more information, see:</span></span>  
  
 <span data-ttu-id="5f461-759">[直接执行存储命令](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d)和</span><span class="sxs-lookup"><span data-stu-id="5f461-759">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="5f461-760">如何：针对数据源直接执行命令</span><span class="sxs-lookup"><span data-stu-id="5f461-760">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-761">当 <paramref name="reader" /> 为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="5f461-761">When <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;TEntity&gt; Translate&lt;TEntity&gt; (System.Data.Common.DbDataReader reader, string entitySetName, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!!TEntity&gt; Translate&lt;TEntity&gt;(class System.Data.Common.DbDataReader reader, string entitySetName, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; System::Data::Objects::ObjectResult&lt;TEntity&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader, System::String ^ entitySetName, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader * string * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'Entity&gt;" Usage="objectContext.Translate (reader, entitySetName, mergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entitySetName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="5f461-762"><see cref="T:System.Data.Common.DbDataReader" /> 中的数据的实体类型。</span><span class="sxs-lookup"><span data-stu-id="5f461-762">The entity type of the data in the <see cref="T:System.Data.Common.DbDataReader" />.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="5f461-763">包含要转换为实体对象的实体数据的 <see cref="T:System.Data.Common.DbDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-763">The <see cref="T:System.Data.Common.DbDataReader" /> that contains entity data to translate into entity objects.</span></span></param>
        <param name="entitySetName"><span data-ttu-id="5f461-764"><typeparamref name="TEntity" /> 类型的实体集。</span><span class="sxs-lookup"><span data-stu-id="5f461-764">The entity set of the <typeparamref name="TEntity" /> type.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="5f461-765">在将转换后的对象添加到对象上下文时要使用的 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-765">The <see cref="T:System.Data.Objects.MergeOption" /> to use when translated objects are added to the object context.</span></span> <span data-ttu-id="5f461-766">默认值为 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-766">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="5f461-767">在特定的实体集中，使用指定的合并选项将包含实体数据行的 <see cref="T:System.Data.Common.DbDataReader" /> 转换为请求的实体类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-767">Translates a <see cref="T:System.Data.Common.DbDataReader" /> that contains rows of entity data to objects of the requested entity type, in a specific entity set, and with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="5f461-768">类型为 <paramref name="TResult" /> 的对象的枚举。</span><span class="sxs-lookup"><span data-stu-id="5f461-768">An enumeration of objects of type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-769"><xref:System.Data.Objects.ObjectContext.Translate%2A>方法用于将实体数据从<xref:System.Data.Common.DbDataReader>到所请求类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-769">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method is used to translate entity data from a <xref:System.Data.Common.DbDataReader> into objects of the requested type.</span></span> <span data-ttu-id="5f461-770">当在自动执行此过程<xref:System.Data.Objects.ObjectQuery%601>执行返回实体数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-770">This process is performed automatically when an <xref:System.Data.Objects.ObjectQuery%601> is executed to return entity data.</span></span> <span data-ttu-id="5f461-771"><xref:System.Data.Objects.ObjectContext.Translate%2A>方法，可执行针对数据源的标准 ADO.NET 查询并转换为实体对象返回的数据行。</span><span class="sxs-lookup"><span data-stu-id="5f461-771">The <xref:System.Data.Objects.ObjectContext.Translate%2A> method enables you to execute a standard ADO.NET query against a data source and translate the returned data rows into entity objects.</span></span>  
  
 <span data-ttu-id="5f461-772">所提供<xref:System.Data.Common.DbDataReader>必须包含映射到请求的实体类型的数据。</span><span class="sxs-lookup"><span data-stu-id="5f461-772">The supplied <xref:System.Data.Common.DbDataReader> must contain data that maps to the requested entity type.</span></span>  
  
 <span data-ttu-id="5f461-773">有关详细信息，请参见:</span><span class="sxs-lookup"><span data-stu-id="5f461-773">For more information, see:</span></span>  
  
 <span data-ttu-id="5f461-774">[直接执行存储命令](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d)和</span><span class="sxs-lookup"><span data-stu-id="5f461-774">[Directly Executing Store Commands](https://msdn.microsoft.com/library/5708d0a2-3f76-4825-978a-d06ff5c4bb3d) and</span></span>  
  
 [<span data-ttu-id="5f461-775">如何：针对数据源直接执行命令</span><span class="sxs-lookup"><span data-stu-id="5f461-775">How to: Directly Execute Commands Against the Data Source</span></span>](https://msdn.microsoft.com/library/def3cc87-cfff-4dee-83cf-1a40c73a2d01)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-776">当 <paramref name="reader" /> 为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="5f461-776">When <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5f461-777">当提供的 <paramref name="mergeOption" /> 不是有效的 <see cref="T:System.Data.Objects.MergeOption" /> 值时。</span><span class="sxs-lookup"><span data-stu-id="5f461-777">When the supplied <paramref name="mergeOption" /> is not a valid <see cref="T:System.Data.Objects.MergeOption" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f461-778">当提供的 <paramref name="entitySetName" /> 不是 <paramref name="TResult" /> 类型的有效实体集时。</span><span class="sxs-lookup"><span data-stu-id="5f461-778">When the supplied <paramref name="entitySetName" /> is not a valid entity set for the <paramref name="TResult" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectByKey">
      <MemberSignature Language="C#" Value="public bool TryGetObjectByKey (System.Data.EntityKey key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectByKey(class System.Data.EntityKey key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectByKey (key As EntityKey, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectByKey(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectByKey : System.Data.EntityKey *  -&gt; bool" Usage="objectContext.TryGetObjectByKey (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5f461-779">要查找的对象的键。</span><span class="sxs-lookup"><span data-stu-id="5f461-779">The key of the object to be found.</span></span></param>
        <param name="value"><span data-ttu-id="5f461-780">在此方法返回时包含该对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-780">When this method returns, contains the object.</span></span></param>
        <summary><span data-ttu-id="5f461-781">返回具有指定实体键的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-781">Returns an object that has the specified entity key.</span></span></summary>
        <returns><span data-ttu-id="5f461-782">如果成功检索到对象，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-782"><see langword="true" /> if the object was retrieved successfully.</span></span> <span data-ttu-id="5f461-783">如果 <paramref name="key" /> 是临时的，或者连接为 <see langword="false" />，或 <paramref name="value" /> 为 <see langword="null" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-783"><see langword="false" /> if the <paramref name="key" /> is temporary, the connection is <see langword="null" />, or the <paramref name="value" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f461-784"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 尝试从 <xref:System.Data.EntityKey> 检索具有指定 <xref:System.Data.Objects.ObjectStateManager> 的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-784"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> tries to retrieve an object that has the specified <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="5f461-785">如果该对象当前尚未加载到对象上下文中，则会执行查询以尝试从数据源返回该对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-785">If the object is currently not loaded into the object context, a query is executed in an attempt to return the object from the data source.</span></span> <span data-ttu-id="5f461-786">有关详细信息，请参阅[对象查询](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="5f461-786">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="5f461-787">使用 <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> 方法可避免处理在无法找到对象时由 <xref:System.Data.ObjectNotFoundException> 引发的 <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="5f461-787">Use the <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method to avoid handling the <xref:System.Data.ObjectNotFoundException> raised by <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> when the object cannot be found.</span></span>  
  
 <span data-ttu-id="5f461-788">此方法将返回状态为 <xref:System.Data.EntityState.Deleted> 的对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-788">This method will return objects in the <xref:System.Data.EntityState.Deleted> state.</span></span>  
  
 <span data-ttu-id="5f461-789">临时键无法用于从数据源返回对象。</span><span class="sxs-lookup"><span data-stu-id="5f461-789">A temporary key cannot be used to return an object from the data source.</span></span>  
  
 <span data-ttu-id="5f461-790"><xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A>方法将应用标准.NET`TryParse`模式<xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A>方法，并返回`false`时<xref:System.Data.ObjectNotFoundException>捕获。</span><span class="sxs-lookup"><span data-stu-id="5f461-790">The <xref:System.Data.Objects.ObjectContext.TryGetObjectByKey%2A> method applies the standard .NET `TryParse` pattern for the <xref:System.Data.Objects.ObjectContext.GetObjectByKey%2A> method, returning `false` when the <xref:System.Data.ObjectNotFoundException> is caught.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f461-791">本主题中的示例基于[AdventureWorks 销售模型](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="5f461-791">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="5f461-792">该示例为具有给定类型的实体创建 <xref:System.Data.EntityKey>，然后尝试通过键检索实体。</span><span class="sxs-lookup"><span data-stu-id="5f461-792">The example creates an <xref:System.Data.EntityKey> for an entity of the given type and then tries to retrieve an entity by key.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f461-793"><paramref name="key" /> 的元数据不兼容。</span><span class="sxs-lookup"><span data-stu-id="5f461-793">Incompatible metadata for <paramref name="key" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f461-794"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5f461-794"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="5f461-795">使用对象（实体框架）</span><span class="sxs-lookup"><span data-stu-id="5f461-795">Working with Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>