<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d3f389df0ad79c8ac90c3f0eb9e50eafdeaad3a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69425211" /></Metadata><TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidationFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="823c0-101">指定由 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 和 <see cref="T:System.Xml.XmlReader" /> 类使用的架构验证选项。</span><span class="sxs-lookup"><span data-stu-id="823c0-101">Specifies schema validation options used by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> and <see cref="T:System.Xml.XmlReader" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="823c0-102">下面是在将<xref:System.Xml.Schema.XmlSchemaValidationFlags> <xref:System.Xml.XmlReader>值与结合使用时要考虑的注意事项。</span><span class="sxs-lookup"><span data-stu-id="823c0-102">The following are notes to consider when using <xref:System.Xml.Schema.XmlSchemaValidationFlags> values with the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="823c0-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags>值定义验证方案<xref:System.Xml.XmlReader>使用的验证选项, 这些选项用于针对架构执行 XML 验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema.</span></span> <span data-ttu-id="823c0-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags>验证<xref:System.Xml.XmlReader>的值是<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>使用属性指定的。</span><span class="sxs-lookup"><span data-stu-id="823c0-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.</span></span>  
  
 <span data-ttu-id="823c0-105">下面是使用 AllowXmlAttributes 值时要考虑的注意事项。</span><span class="sxs-lookup"><span data-stu-id="823c0-105">The following are notes to consider when using the AllowXmlAttributes value.</span></span>  
  
1.  <span data-ttu-id="823c0-106">当架构未导入 Xml 命名空间时。</span><span class="sxs-lookup"><span data-stu-id="823c0-106">When a schema doesn't import the Xml namespace.</span></span>  
  
    1.  <span data-ttu-id="823c0-107">如果 AllowXmlAttributes 设置为`true` (默认值), 并且实例文档包含 Xml 属性, 则验证引擎将加载默认 xml 命名空间架构的快照, 并将其用于验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-107">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</span></span> <span data-ttu-id="823c0-108">如果在默认架构中找不到实例文档中使用的 Xml 特性, 则该文档将不会进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-108">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="823c0-109">如果 AllowXmlAttributes 设置为`false` , 并且实例文档包含 Xml 属性, 则验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="823c0-109">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.</span></span>  
  
2.  <span data-ttu-id="823c0-110">当架构导入不带位置的 Xml 命名空间时。</span><span class="sxs-lookup"><span data-stu-id="823c0-110">When a schema imports the Xml namespace without a location.</span></span>  
  
    1.  <span data-ttu-id="823c0-111">如果 AllowXmlAttributes 设置为`true` (默认值), 并且实例文档包含 Xml 属性, 则验证引擎将使用默认的 xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-111">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</span></span> <span data-ttu-id="823c0-112">如果在默认架构中找不到实例文档中使用的 Xml 特性, 则该文档将不会进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-112">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="823c0-113">如果将 AllowXmlAttributes 设置为`false` , 并且实例文档包含架构未显式允许的 Xml 特性, 则验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="823c0-113">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="823c0-114">如果将 AllowXmlAttributes 设置为`false` , 并且实例文档包含架构显式允许的 Xml 特性, 则验证引擎将按照使用默认 Xml 验证其他特性的相同方式来验证特性命名空间架构。</span><span class="sxs-lookup"><span data-stu-id="823c0-114">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</span></span>  
  
3.  <span data-ttu-id="823c0-115">当架构导入具有自定义 schemaLocation 的自定义 Xml 命名空间架构时。</span><span class="sxs-lookup"><span data-stu-id="823c0-115">When a schema imports a custom Xml namespace schema with a custom schemaLocation.</span></span>  
  
    1.  <span data-ttu-id="823c0-116">如果 AllowXmlAttributes 设置为`true` (默认值), 并且实例文档包含 Xml 属性, 则验证引擎将使用自定义 xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-116">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</span></span> <span data-ttu-id="823c0-117">如果在指定的架构中找不到实例文档中使用的 Xml 特性, 则该文档将不会进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-117">If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="823c0-118">如果将 AllowXmlAttributes 设置为`false` , 并且实例文档包含架构未显式允许的 Xml 特性, 则验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="823c0-118">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="823c0-119">如果将 AllowXmlAttributes 设置为`false` , 并且实例文档包含架构显式允许的 Xml 特性, 验证引擎将使用指定的 Xml 验证特性的方式与验证其他特性的方式相同。命名空间架构。</span><span class="sxs-lookup"><span data-stu-id="823c0-119">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</span></span>  
  
4.  <span data-ttu-id="823c0-120">当架构定义 xml: \* attribute 并使用 = "required" 时。</span><span class="sxs-lookup"><span data-stu-id="823c0-120">When a schema defines an xml:\* attribute with use="required".</span></span>  
  
    1.  <span data-ttu-id="823c0-121">当 AllowXmlAttributes 设置为`true`和`false`时, 将应用以下内容。</span><span class="sxs-lookup"><span data-stu-id="823c0-121">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="823c0-122">必需的 xml: \* 特性应视为其他特性, 并使用指定的 Xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-122">Required xml:\* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</span></span>  
  
5.  <span data-ttu-id="823c0-123">当架构定义使用 = "禁止" 的 xml: \* 属性时。</span><span class="sxs-lookup"><span data-stu-id="823c0-123">When a schema defines an xml:\* attribute with use="prohibited".</span></span>  
  
    1.  <span data-ttu-id="823c0-124">当 AllowXmlAttributes 设置为`true`和`false`时, 将应用以下内容。</span><span class="sxs-lookup"><span data-stu-id="823c0-124">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="823c0-125">如果实例文档包含架构显式禁止的 xml: \* 特性, 验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="823c0-125">If an instance document contains xml:\* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</span></span>  
  
6.  <span data-ttu-id="823c0-126">如果架构指定了一个属性通配符。</span><span class="sxs-lookup"><span data-stu-id="823c0-126">When a schema specifies an attribute wildcard.</span></span>  
  
    1.  <span data-ttu-id="823c0-127">如果实例文档包含 Xml 特性, 并且架构指定了 processContents 省略或设置为 "strict" 的属性通配符, 则验证引擎将使用中<xref:System.Xml.Schema.XmlSchemaSet>提供的 Xml 命名空间架构。</span><span class="sxs-lookup"><span data-stu-id="823c0-127">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="823c0-128">如果未指定 Xml 命名空间架构, 验证引擎的行为将如下所示。</span><span class="sxs-lookup"><span data-stu-id="823c0-128">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    2.  <span data-ttu-id="823c0-129">如果 AllowXmlAttributes 设置为`true`, 验证引擎将使用默认的 Xml 命名空间架构来执行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-129">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    3.  <span data-ttu-id="823c0-130">如果 AllowXmlAttributes 设置为`false`, 验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="823c0-130">If AllowXmlAttributes is set to `false`, the validation engine will report an error.</span></span>  
  
    4.  <span data-ttu-id="823c0-131">如果实例文档包含 Xml 特性, 并且架构指定了 processContents 设置为 "skip" 的特性通配符, 则验证引擎将跳过属性验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-131">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</span></span>  
  
    5.  <span data-ttu-id="823c0-132">如果实例文档包含 Xml 特性, 并且架构指定了 processContents 设置为 "宽松" 的特性通配符, 则验证引擎将使用中<xref:System.Xml.Schema.XmlSchemaSet>提供的 Xml 命名空间架构。</span><span class="sxs-lookup"><span data-stu-id="823c0-132">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="823c0-133">如果未指定 Xml 命名空间架构, 验证引擎的行为将如下所示。</span><span class="sxs-lookup"><span data-stu-id="823c0-133">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    6.  <span data-ttu-id="823c0-134">如果 AllowXmlAttributes 设置为`true`, 验证引擎将使用默认的 Xml 命名空间架构来执行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-134">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    7.  <span data-ttu-id="823c0-135">如果将 AllowXmlAttributes 设置为`false`, 则不会执行属性验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-135">If AllowXmlAttributes is set to `false`, attribute validation will not be performed.</span></span>  
  
7.  <span data-ttu-id="823c0-136">验证简单类型时。</span><span class="sxs-lookup"><span data-stu-id="823c0-136">When validating simple types.</span></span>  
  
    1.  <span data-ttu-id="823c0-137">当 AllowXmlAttributes 设置为`true` (默认值) 时, 将允许对简单类型的元素使用 Xml 特性。</span><span class="sxs-lookup"><span data-stu-id="823c0-137">When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="823c0-138">有关<xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes>类的示例, <xref:System.Xml.Schema.XmlSchemaValidator>请参见类。</span><span class="sxs-lookup"><span data-stu-id="823c0-138">For an example of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberSignature Language="F#" Value="AllowXmlAttributes = 16" Usage="System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-139">即使架构中未定义 xml:\* 特性，也允许这些特性。</span><span class="sxs-lookup"><span data-stu-id="823c0-139">Allow xml:\* attributes even if they are not defined in the schema.</span></span> <span data-ttu-id="823c0-140">将根据这些特性的数据类型对它们进行验证。</span><span class="sxs-lookup"><span data-stu-id="823c0-140">The attributes will be validated based on their data type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-141">不要处理标识约束、内联架构、架构位置提示或报告架构验证警告。</span><span class="sxs-lookup"><span data-stu-id="823c0-141">Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="F#" Value="ProcessIdentityConstraints = 8" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-142">处理验证过程中遇到的标识约束（<c>xs:ID</c>、<c>xs:IDREF</c>、<c>xs:key</c>、<c>xs:keyref</c>、<c>xs:unique</c>）。</span><span class="sxs-lookup"><span data-stu-id="823c0-142">Process identity constraints (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberSignature Language="F#" Value="ProcessInlineSchema = 1" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-143">处理在验证过程中遇到的内联架构。</span><span class="sxs-lookup"><span data-stu-id="823c0-143">Process inline schemas encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberSignature Language="F#" Value="ProcessSchemaLocation = 2" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-144">处理验证过程中遇到的架构位置提示（<c>xsi:schemaLocation</c>、<c>xsi:noNamespaceSchemaLocation</c>）。</span><span class="sxs-lookup"><span data-stu-id="823c0-144">Process schema location hints (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encountered during validation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberSignature Language="F#" Value="ReportValidationWarnings = 4" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="823c0-145">报告在验证过程中遇到的架构验证警告。</span><span class="sxs-lookup"><span data-stu-id="823c0-145">Report schema validation warnings encountered during validation.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
