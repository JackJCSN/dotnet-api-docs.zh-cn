<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcf3f25be72be216eaabce74a7c4f5c041fb120e" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67240599" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18c77-101">表示一组数据命令和一个数据库连接，它们用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据源。</span><span class="sxs-lookup"><span data-stu-id="18c77-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-102"><xref:System.Data.OleDb.OleDbDataAdapter>用作之间的桥梁<xref:System.Data.DataSet>和用于检索和保存数据的数据源。</span><span class="sxs-lookup"><span data-stu-id="18c77-102">The <xref:System.Data.OleDb.OleDbDataAdapter> serves as a bridge between a <xref:System.Data.DataSet> and data source for retrieving and saving data.</span></span> <span data-ttu-id="18c77-103"><xref:System.Data.OleDb.OleDbDataAdapter>通过使用提供此桥<xref:System.Data.Common.DbDataAdapter.Fill%2A>将数据加载到数据源从<xref:System.Data.DataSet>，并使用<xref:System.Data.Common.DbDataAdapter.Update%2A>发送中所做的更改<xref:System.Data.DataSet>回数据源。</span><span class="sxs-lookup"><span data-stu-id="18c77-103">The <xref:System.Data.OleDb.OleDbDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="18c77-104">当<xref:System.Data.OleDb.OleDbDataAdapter>填充<xref:System.Data.DataSet>，如果它们尚不存在，它将创建相应的表和列返回的数据。</span><span class="sxs-lookup"><span data-stu-id="18c77-104">When the <xref:System.Data.OleDb.OleDbDataAdapter> fills a <xref:System.Data.DataSet>, it will create the appropriate tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="18c77-105">但是，主键信息不包含隐式创建的架构中除非<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为<xref:System.Data.MissingSchemaAction.AddWithKey>。</span><span class="sxs-lookup"><span data-stu-id="18c77-105">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="18c77-106">你还可能<xref:System.Data.OleDb.OleDbDataAdapter>创建的架构<xref:System.Data.DataSet>，其中包括主键信息，与使用数据填充它之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>。</span><span class="sxs-lookup"><span data-stu-id="18c77-106">You may also have the <xref:System.Data.OleDb.OleDbDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="18c77-107">有关详细信息，请参阅[将现有约束添加到数据集](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-107">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="18c77-108">请注意某些 OLE DB 访问接口，包括 MSDataShape 提供程序，不返回基表或主键信息。</span><span class="sxs-lookup"><span data-stu-id="18c77-108">Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</span></span> <span data-ttu-id="18c77-109">因此，<xref:System.Data.OleDb.OleDbDataAdapter>不能正确设置<xref:System.Data.DataTable.PrimaryKey%2A>属性上创建任何<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="18c77-109">Therefore, the <xref:System.Data.OleDb.OleDbDataAdapter> cannot correctly set the <xref:System.Data.DataTable.PrimaryKey%2A> property on any created <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-110">在这些情况下应显式指定中的表的主键<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-110">In these cases you should explicitly specify primary keys for tables in the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="18c77-111"><xref:System.Data.OleDb.OleDbDataAdapter>还包括<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>，并<xref:System.Data.Common.DataAdapter.TableMappings%2A>属性以便于加载和更新的数据。</span><span class="sxs-lookup"><span data-stu-id="18c77-111">The <xref:System.Data.OleDb.OleDbDataAdapter> also includes the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="18c77-112">创建的实例时<xref:System.Data.OleDb.OleDbDataAdapter>，属性设置为其初始值。</span><span class="sxs-lookup"><span data-stu-id="18c77-112">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, properties are set to their initial values.</span></span> <span data-ttu-id="18c77-113">有关这些值的列表，请参阅<xref:System.Data.OleDb.OleDbDataAdapter>构造函数。</span><span class="sxs-lookup"><span data-stu-id="18c77-113">For a list of these values, see the <xref:System.Data.OleDb.OleDbDataAdapter> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-114">下面的示例使用<xref:System.Data.OleDb.OleDbCommand>，<xref:System.Data.OleDb.OleDbDataAdapter>并<xref:System.Data.OleDb.OleDbConnection>，以从 Access 数据源，选择记录并填充<xref:System.Data.DataSet>与所选的行。</span><span class="sxs-lookup"><span data-stu-id="18c77-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="18c77-115">已填充<xref:System.Data.DataSet>然后返回。</span><span class="sxs-lookup"><span data-stu-id="18c77-115">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="18c77-116">若要完成此操作，该方法传递一个已初始化<xref:System.Data.DataSet>，连接字符串，并且是一个 SQL SELECT 语句的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="18c77-116">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-117">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-117">Working with DataAdapters</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18c77-118">初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="18c77-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-119">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-119">Working with DataAdapters</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18c77-120">初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="18c77-120">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-121">创建的实例时<xref:System.Data.OleDb.OleDbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="18c77-121">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="18c77-122">属性</span><span class="sxs-lookup"><span data-stu-id="18c77-122">Properties</span></span>|<span data-ttu-id="18c77-123">初始值</span><span class="sxs-lookup"><span data-stu-id="18c77-123">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="18c77-124">可以更改任何这些属性通过单独调用属性的值。</span><span class="sxs-lookup"><span data-stu-id="18c77-124">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-125">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-125">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-126">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-126">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="18c77-127"><see cref="T:System.Data.OleDb.OleDbCommand" />，它是 SELECT 语句或存储过程，被设置为 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-127">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="18c77-128">初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 类的新实例，用指定的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 作为 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-128">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-129">此实现<xref:System.Data.OleDb.OleDbDataAdapter>构造函数设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性中指定的值为`selectCommand`参数。</span><span class="sxs-lookup"><span data-stu-id="18c77-129">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="18c77-130">创建的实例时<xref:System.Data.OleDb.OleDbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="18c77-130">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="18c77-131">属性</span><span class="sxs-lookup"><span data-stu-id="18c77-131">Properties</span></span>|<span data-ttu-id="18c77-132">初始值</span><span class="sxs-lookup"><span data-stu-id="18c77-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="18c77-133">可以更改任何这些属性通过单独调用属性的值。</span><span class="sxs-lookup"><span data-stu-id="18c77-133">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-134">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-134">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-135">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-135">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="18c77-136">一个字符串，它是 SQL SELECT 语句或将由 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 属性使用的存储过程。</span><span class="sxs-lookup"><span data-stu-id="18c77-136">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="18c77-137">表示连接的 <see cref="T:System.Data.OleDb.OleDbConnection" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-137">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="18c77-138">用 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 初始化 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="18c77-138">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-139">此实现<xref:System.Data.OleDb.OleDbDataAdapter>打开和关闭<xref:System.Data.OleDb.OleDbConnection>如果已打开。</span><span class="sxs-lookup"><span data-stu-id="18c77-139">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> opens and closes an <xref:System.Data.OleDb.OleDbConnection> if it is not already open.</span></span> <span data-ttu-id="18c77-140">这很有用的应用程序必须调用中<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法为两个或多个<xref:System.Data.OleDb.OleDbDataAdapter>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-140">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.OleDb.OleDbDataAdapter> objects.</span></span> <span data-ttu-id="18c77-141">如果<xref:System.Data.OleDb.OleDbConnection>是尚未打开，您必须显式调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**Dispose**以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="18c77-141">If the <xref:System.Data.OleDb.OleDbConnection> is already open, you must explicitly call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="18c77-142">创建的实例时<xref:System.Data.OleDb.OleDbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="18c77-142">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="18c77-143">属性</span><span class="sxs-lookup"><span data-stu-id="18c77-143">Properties</span></span>|<span data-ttu-id="18c77-144">初始值</span><span class="sxs-lookup"><span data-stu-id="18c77-144">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="18c77-145">你可以通过属性单独调用这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="18c77-145">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-146">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-146">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-147">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-147">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="18c77-148">一个字符串，它是 SQL SELECT 语句或将由 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 属性使用的存储过程。</span><span class="sxs-lookup"><span data-stu-id="18c77-148">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="18c77-149">连接字符串。</span><span class="sxs-lookup"><span data-stu-id="18c77-149">The connection string.</span></span></param>
        <summary><span data-ttu-id="18c77-150">用 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 初始化 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="18c77-150">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-151">此重载<xref:System.Data.OleDb.OleDbDataAdapter>构造函数使用`selectConnectionString`参数设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-151">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="18c77-152">但是，它不会打开连接。</span><span class="sxs-lookup"><span data-stu-id="18c77-152">However, it does not open the connection.</span></span> <span data-ttu-id="18c77-153">你仍必须显式打开连接。</span><span class="sxs-lookup"><span data-stu-id="18c77-153">You still must explicitly open the connection.</span></span>  
  
 <span data-ttu-id="18c77-154">创建的实例时<xref:System.Data.OleDb.OleDbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="18c77-154">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="18c77-155">属性</span><span class="sxs-lookup"><span data-stu-id="18c77-155">Properties</span></span>|<span data-ttu-id="18c77-156">初始值</span><span class="sxs-lookup"><span data-stu-id="18c77-156">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="18c77-157">可以更改任何这些属性通过单独调用属性的值。</span><span class="sxs-lookup"><span data-stu-id="18c77-157">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-158">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-158">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-159">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-159">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-160">获取或设置 SQL 语句或存储过程，用于从数据集中删除记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-160">Gets or sets an SQL statement or stored procedure for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="18c77-161">在 <see cref="T:System.Data.OleDb.OleDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，用以删除数据源中与 <see cref="T:System.Data.DataSet" /> 中已删除的行相对应的记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-161">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-162">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>如果您设置可以自动生成<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性，然后使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-162">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-163">然后，你未设置任何其他命令都由<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-163">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-164">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-164">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-165">有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-165">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="18c77-166">当<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>分配到以前创建<xref:System.Data.OleDb.OleDbCommand>，则<xref:System.Data.OleDb.OleDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="18c77-166">When <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="18c77-167"><xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>保留对以前创建的引用<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-167">The <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-168">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-168">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="18c77-169">它假定已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-169">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-170">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-170">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18c77-171">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行，以便与 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 对象中的行相匹配。</span><span class="sxs-lookup"><span data-stu-id="18c77-171">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-172">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-172">Working with DataAdapters</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="18c77-173">要用记录和架构（如果需要）填充的一个 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-173">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema.</span></span></param>
        <param name="ADODBRecordSet"><span data-ttu-id="18c77-174">一个 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-174">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></param>
        <summary><span data-ttu-id="18c77-175">使用指定的 <see cref="T:System.Data.DataTable" /> 和 ADO 对象，在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以便与 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 对象中的行相匹配。</span><span class="sxs-lookup"><span data-stu-id="18c77-175">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</span></span></summary>
        <returns><span data-ttu-id="18c77-176">已对 <see cref="T:System.Data.DataTable" /> 成功刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="18c77-176">The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="18c77-177">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="18c77-177">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-178">ActiveX 数据对象 (ADO) 和 ADO.NET 之间的链接是一个单向操作，可以将数据复制到的 ADO 从<xref:System.Data.DataSet>，但必须由 ADO.NET 处理数据的任何更新。</span><span class="sxs-lookup"><span data-stu-id="18c77-178">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="18c77-179">此重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法不会关闭输入`Recordset`完成<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="18c77-179">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not close the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="18c77-180">处理返回多个结果，此实现的批处理 SQL 语句时<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>为 OLE DB.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="18c77-180">When handling batch SQL statements that return multiple results, this implementation of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</span></span>  
  
 <span data-ttu-id="18c77-181"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作将行添加到指定的目标<xref:System.Data.DataTable>对象中<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="18c77-181">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="18c77-182">当您创建<xref:System.Data.DataTable>对象，<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="18c77-182">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="18c77-183">但是，如果<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="18c77-183">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="18c77-184">可以使用<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="18c77-184">You can use the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-185">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="18c77-185">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="18c77-186">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="18c77-186">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-187">如果主键信息存在，则协调任何重复的行，并且仅中出现一次<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-187">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-188">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="18c77-188">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="18c77-189">如果 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="18c77-189">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-190">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="18c77-190">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="18c77-191">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-191">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="18c77-192">对于 OLE DB，正常使用.NET Framework 数据提供程序`AddWithKey`要求本机 OLE DB 访问接口通过设置 DBPROP_UNIQUEROWS 属性获得必需的主键信息，然后确定哪些列是主键通过检查中的 DBCOLUMN_KEYCOLUMN 列`IColumnsRowset`。</span><span class="sxs-lookup"><span data-stu-id="18c77-192">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the `IColumnsRowset`.</span></span> <span data-ttu-id="18c77-193">或者用户可能会显式设置主键约束上每个<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="18c77-193">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-194">这可确保与现有记录匹配的传入记录进行更新，而不是追加。</span><span class="sxs-lookup"><span data-stu-id="18c77-194">This makes sure that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="18c77-195">如果<xref:System.Data.OleDb.OleDbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="18c77-195">If the <xref:System.Data.OleDb.OleDbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="18c77-196">空的列名称添加到<xref:System.Data.DataTable>，第一列中，使用空字符串后跟"1"、"2"、"3"等用于后续的空列。</span><span class="sxs-lookup"><span data-stu-id="18c77-196">Empty column names are added to the <xref:System.Data.DataTable>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</span></span>  
  
 <span data-ttu-id="18c77-197">在 ADO 中的值`Recordset`或`Record`对象将转换为公共语言运行时类型中的存储<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-197">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="18c77-198">此重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法不会隐式调用`Close`ADO 对象填充操作完成时。</span><span class="sxs-lookup"><span data-stu-id="18c77-198">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not implicitly call `Close` on the ADO object when the fill operation is complete.</span></span> <span data-ttu-id="18c77-199">因此，始终调用`Close`完成后使用 ADO`Recordset`或`Record`对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-199">Therefore, always call `Close` when you are finished using ADO `Recordset` or `Record` objects.</span></span> <span data-ttu-id="18c77-200">可确保基础数据源连接中及时地发布，还可以防止可能的访问冲突，由于非托管时仍存在现有的引用，垃圾回收所回收的 ADO 对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-200">This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</span></span>  
  
 <span data-ttu-id="18c77-201">当您调用`TableMappings.Add`方法`DataAdapter`和显式源表参数映射为空字符串，使用源表中，已成功填充数据集，但将不含任何内容填充数据集。</span><span class="sxs-lookup"><span data-stu-id="18c77-201">When you call the `TableMappings.Add` method on a `DataAdapter` and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</span></span> <span data-ttu-id="18c77-202">例如，在以下示例中，`rDataSet`将填充不含任何内容。</span><span class="sxs-lookup"><span data-stu-id="18c77-202">For example, in the following example, `rDataSet` will be populated with nothing.</span></span>  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 <span data-ttu-id="18c77-203">此示例演示具有多个结果在处理时如何可以跳过一个结果。</span><span class="sxs-lookup"><span data-stu-id="18c77-203">This example shows how you can skip a result when dealing with multiple results.</span></span>  
  
 <span data-ttu-id="18c77-204">下面的示例使用<xref:System.Data.OleDb.OleDbDataAdapter>来填充<xref:System.Data.DataTable>使用 ADO `Recordset`。</span><span class="sxs-lookup"><span data-stu-id="18c77-204">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataTable> using an ADO `Recordset`.</span></span> <span data-ttu-id="18c77-205">此示例假定您已经创建了 ADO `Recordset`。</span><span class="sxs-lookup"><span data-stu-id="18c77-205">This example assumes that you have created an ADO `Recordset`.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-206">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-206">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="18c77-207">要用记录和架构（如果需要）填充的一个 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-207">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema.</span></span></param>
        <param name="ADODBRecordSet"><span data-ttu-id="18c77-208">一个 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-208">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></param>
        <param name="srcTable"><span data-ttu-id="18c77-209">用于表映射的源表。</span><span class="sxs-lookup"><span data-stu-id="18c77-209">The source table used for the table mappings.</span></span></param>
        <summary><span data-ttu-id="18c77-210">使用指定的 <see cref="T:System.Data.DataSet" />、ADO 对象和源表名称，添加或刷新 <see cref="T:System.Data.DataSet" /> 中的行，使之与 ADO <see langword="Recordset" /> 或 <see langword="Record" /> 对象中的行相匹配。</span><span class="sxs-lookup"><span data-stu-id="18c77-210">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</span></span></summary>
        <returns><span data-ttu-id="18c77-211">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="18c77-211">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="18c77-212">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="18c77-212">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-213">ActiveX 数据对象 (ADO) 和 ADO.NET 之间的链接是一个单向操作，可以将数据复制到的 ADO 从<xref:System.Data.DataSet>，但必须由 ADO.NET 处理数据的任何更新。</span><span class="sxs-lookup"><span data-stu-id="18c77-213">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="18c77-214"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法循环访问多个结果通过调用`NextRecordset`方法`Recordset`，关闭输入`Recordset`完成<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="18c77-214">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method iterates through multiple results by calling the `NextRecordset` method on the `Recordset`, closing the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="18c77-215"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作将行添加到指定的目标<xref:System.Data.DataTable>对象中<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="18c77-215">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="18c77-216">当您创建<xref:System.Data.DataTable>对象，<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="18c77-216">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="18c77-217">但是，如果<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="18c77-217">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="18c77-218">如果主键信息存在，则协调任何重复的行，并且仅中出现一次<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-218">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-219">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="18c77-219">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="18c77-220">对于 OLE DB，正常使用.NET Framework 数据提供程序`AddWithKey`需要通过设置 DBPROP_UNIQUEROWS 属性获得必需的主键信息，然后确定哪些列是主键的本机 OLE DB 访问接口列通过检查中的 DBCOLUMN_KEYCOLUMN **IColumnsRowset**。</span><span class="sxs-lookup"><span data-stu-id="18c77-220">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the **IColumnsRowset**.</span></span> <span data-ttu-id="18c77-221">或者用户可能会显式设置主键约束上每个<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="18c77-221">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-222">这将确保对与现有记录匹配的传入记录进行更新，而不是追加。</span><span class="sxs-lookup"><span data-stu-id="18c77-222">This ensures that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="18c77-223">如果 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="18c77-223">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="18c77-224">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="18c77-224">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="18c77-225">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-225">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="18c77-226">如果`Recordset`的开始之前关闭<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>操作，不会产生错误。</span><span class="sxs-lookup"><span data-stu-id="18c77-226">If the `Recordset` is closed before the starting of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation, no error results.</span></span> <span data-ttu-id="18c77-227">这是处理多个结果所必需的因为不返回行的查询所指示的已关闭`Recordset`。</span><span class="sxs-lookup"><span data-stu-id="18c77-227">This is required for handling of multiple results, because queries that do not return rows are indicated by a closed `Recordset`.</span></span> <span data-ttu-id="18c77-228"><xref:System.Data.OleDb.OleDbDataAdapter>只需调用`NextRecordset`上的已关闭`Recordset`，继续进行处理。</span><span class="sxs-lookup"><span data-stu-id="18c77-228">The <xref:System.Data.OleDb.OleDbDataAdapter> just calls `NextRecordset` on the closed `Recordset` and continues processing.</span></span>  
  
 <span data-ttu-id="18c77-229">如果填充数据集时遇到错误，错误发生之前添加的行仍然保留在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-229">If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-230">剩下的操作被中止。</span><span class="sxs-lookup"><span data-stu-id="18c77-230">The rest of the operation is aborted.</span></span>  
  
 <span data-ttu-id="18c77-231">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"、"*columnname*2""*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="18c77-231">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="18c77-232">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="18c77-232">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="18c77-233">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="18c77-233">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="18c77-234">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="18c77-234">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="18c77-235">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="18c77-235">Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="18c77-236">在 ADO 中的值`Recordset`或`Record`对象将转换为公共语言运行时类型中的存储<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-236">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18c77-237">此重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>方法隐式调用`Close`ADO 对象填充操作完成时。</span><span class="sxs-lookup"><span data-stu-id="18c77-237">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method implicitly calls `Close` on the ADO object when the fill operation is complete.</span></span>  
  
 <span data-ttu-id="18c77-238">下面的示例使用<xref:System.Data.OleDb.OleDbDataAdapter>来填充<xref:System.Data.DataSet>使用 ADO `Recordset` ，它是 ADO`Record`对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-238">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataSet> using an ADO `Recordset` that is an ADO `Record` object.</span></span> <span data-ttu-id="18c77-239">此示例假定您已经创建了 ADO`RecordSet`和`Record`对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-239">This example assumes that you have created an ADO `RecordSet` and `Record` object.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="18c77-240">源表无效。</span><span class="sxs-lookup"><span data-stu-id="18c77-240">The source table is invalid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-241">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-241">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-242">获取或设置 SQL 语句或用于将新记录插入数据源的存储过程。</span><span class="sxs-lookup"><span data-stu-id="18c77-242">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="18c77-243">在 <see cref="T:System.Data.OleDb.OleDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，用于将与 <see cref="T:System.Data.DataSet" /> 中的新行相对应的记录插入到数据源中。</span><span class="sxs-lookup"><span data-stu-id="18c77-243">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-244">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>如果您设置可以自动生成<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性，然后使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-244">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-245">然后，你未设置任何其他命令都由<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-245">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-246">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-246">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-247">有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-247">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="18c77-248">当<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>分配到以前创建<xref:System.Data.OleDb.OleDbCommand>，则<xref:System.Data.OleDb.OleDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="18c77-248">When <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="18c77-249"><xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>保留对以前创建的引用<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-249">The <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18c77-250">如果执行此命令返回的行，这些行可能会添加到<xref:System.Data.DataSet>具体取决于如何设置<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>属性的<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-250">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-251">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-251">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="18c77-252">它假定已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-252">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-253">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-253">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-254">在对数据源执行命令后的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 过程中发生。</span><span class="sxs-lookup"><span data-stu-id="18c77-254">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span></span> <span data-ttu-id="18c77-255">尝试进行更新。</span><span class="sxs-lookup"><span data-stu-id="18c77-255">The attempt to update is made.</span></span> <span data-ttu-id="18c77-256">因此，事件发生。</span><span class="sxs-lookup"><span data-stu-id="18c77-256">Therefore, the event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-257">当你使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有两个事件发生每个更新的数据行。</span><span class="sxs-lookup"><span data-stu-id="18c77-257">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="18c77-258">执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="18c77-258">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="18c77-259">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="18c77-259">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="18c77-260">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-260">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="18c77-261">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="18c77-261">The command executes.</span></span>  
  
4.  <span data-ttu-id="18c77-262">如果该命令设置为`FirstReturnedRecord`，第一个返回结果放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="18c77-262">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="18c77-263">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="18c77-263">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="18c77-264">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-264">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="18c77-265">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="18c77-265"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-266">下面的示例演示<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>和<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>正在使用的事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-266">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-267">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-267">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-268">在对数据源执行命令前的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 过程中发生。</span><span class="sxs-lookup"><span data-stu-id="18c77-268">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span> <span data-ttu-id="18c77-269">尝试进行更新。</span><span class="sxs-lookup"><span data-stu-id="18c77-269">The attempt to update is made.</span></span> <span data-ttu-id="18c77-270">因此，事件发生。</span><span class="sxs-lookup"><span data-stu-id="18c77-270">Therefore, the event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-271">当你使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，有两个事件发生每个更新的数据行。</span><span class="sxs-lookup"><span data-stu-id="18c77-271">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="18c77-272">执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="18c77-272">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="18c77-273">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="18c77-273">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="18c77-274">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-274">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="18c77-275">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="18c77-275">The command executes.</span></span>  
  
4.  <span data-ttu-id="18c77-276">如果该命令设置为`FirstReturnedRecord`，第一个返回结果放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="18c77-276">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="18c77-277">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="18c77-277">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="18c77-278">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-278">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="18c77-279">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="18c77-279"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-280">下面的示例演示<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>和<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated>正在使用的事件。</span><span class="sxs-lookup"><span data-stu-id="18c77-280">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-281">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-281">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-282">获取或设置 SQL 语句或存储过程，用于选择数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-282">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="18c77-283">在 <see cref="T:System.Data.OleDb.OleDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />，用于从数据源中选择要放在 <see cref="T:System.Data.DataSet" /> 中的记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-283">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-284">当<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>分配到以前创建<xref:System.Data.OleDb.OleDbCommand>，则<xref:System.Data.OleDb.OleDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="18c77-284">When <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="18c77-285"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>保留对以前创建的引用<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-285">The <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
 <span data-ttu-id="18c77-286">如果<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>不返回任何行的表添加到<xref:System.Data.DataSet>，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="18c77-286">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-287">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-287">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="18c77-288">它假定已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-288">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74"><span data-ttu-id="18c77-289">使用 Dataadapter</span><span class="sxs-lookup"><span data-stu-id="18c77-289">Working with DataAdapters</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-290">有关此成员的说明，请参见 <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-290">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="18c77-291">一个 <see cref="T:System.Data.IDbCommand" />，在更新过程中，用于针对数据集中删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-291">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-292">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="18c77-292">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18c77-293">它只能在 <xref:System.Data.OleDb.OleDbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="18c77-293">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-294">有关此成员的说明，请参见 <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-294">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="18c77-295">一个 <see cref="T:System.Data.IDbCommand" />，在更新过程中，用于插入数据源中的记录，以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="18c77-295">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-296">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="18c77-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18c77-297">它只能在 <xref:System.Data.OleDb.OleDbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="18c77-297">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-298">有关此成员的说明，请参见 <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-298">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="18c77-299">一个 <see cref="T:System.Data.IDbCommand" />，在更新过程中，用于选择数据源中的记录，以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="18c77-299">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-300">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="18c77-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18c77-301">它只能在 <xref:System.Data.OleDb.OleDbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="18c77-301">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-302">有关此成员的说明，请参见 <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-302">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="18c77-303">一个 <see cref="T:System.Data.IDbCommand" />，在更新过程中，用于针对数据集中修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="18c77-303">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-304">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="18c77-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18c77-305">它只能在 <xref:System.Data.OleDb.OleDbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="18c77-305">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18c77-306">有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-306">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="18c77-307">新的 <see cref="T:System.Object" /> 对象，是此实例的副本。</span><span class="sxs-lookup"><span data-stu-id="18c77-307">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-308">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="18c77-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18c77-309">它只能在 <xref:System.Data.OleDb.OleDbDataAdapter> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="18c77-309">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18c77-310">获取或设置 SQL 语句或用于在数据源中更新记录的存储过程。</span><span class="sxs-lookup"><span data-stu-id="18c77-310">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="18c77-311">在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期间用于在对应于 <see cref="T:System.Data.DataSet" /> 中的修改行的数据源中更新记录的 <see cref="T:System.Data.OleDb.OleDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="18c77-311">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18c77-312">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>如果您设置可以自动生成<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性，然后使用<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-312">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-313">然后，你未设置任何其他命令都由<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="18c77-313">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="18c77-314">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="18c77-314">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="18c77-315">有关详细信息，请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="18c77-315">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="18c77-316">当<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>分配到以前创建<xref:System.Data.OleDb.OleDbCommand>，则<xref:System.Data.OleDb.OleDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="18c77-316">When <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="18c77-317"><xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>保留对以前创建的引用<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-317">The <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18c77-318">如果执行此命令返回的行，这些行可能会与合并<xref:System.Data.DataSet>具体取决于如何设置<xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>属性的<xref:System.Data.OleDb.OleDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-318">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18c77-319">下面的示例创建<xref:System.Data.OleDb.OleDbDataAdapter>，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="18c77-319">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="18c77-320">它假定已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="18c77-320">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>