<Type Name="OleDbEnumerator" FullName="System.Data.OleDb.OleDbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efbc6f5519665fed269602c7105cf48a03d84538" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67240576" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbEnumerator sealed" />
  <TypeSignature Language="F#" Value="type OleDbEnumerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e58ab-101">提供用于枚举本地网络中所有可用 OLE DB 提供程序的机制。</span><span class="sxs-lookup"><span data-stu-id="e58ab-101">Provides a mechanism for enumerating all available OLE DB providers within the local network.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e58ab-102">创建 <see cref="T:System.Data.OleDb.OleDbEnumerator" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e58ab-102">Creates an instance of the <see cref="T:System.Data.OleDb.OleDbEnumerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElements">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElements () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetElements();" />
      <MemberSignature Language="F#" Value="member this.GetElements : unit -&gt; System.Data.DataTable" Usage="oleDbEnumerator.GetElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e58ab-103">检索一个 <see cref="T:System.Data.DataTable" />，该数据表包含所有可见 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-103">Retrieves a <see cref="T:System.Data.DataTable" /> that contains information about all visible OLE DB providers.</span></span></summary>
        <returns><span data-ttu-id="e58ab-104">一个 <see cref="T:System.Data.DataTable" />，其中包含可见 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-104">A <see cref="T:System.Data.DataTable" /> that contains information about the visible OLE DB providers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e58ab-105">此方法返回的表包含以下列，所有这些包含字符串：</span><span class="sxs-lookup"><span data-stu-id="e58ab-105">The table that is returned by this method contains the following columns, all of which contain strings:</span></span>  
  
|<span data-ttu-id="e58ab-106">列序号</span><span class="sxs-lookup"><span data-stu-id="e58ab-106">Column Ordinal</span></span>|<span data-ttu-id="e58ab-107">列</span><span class="sxs-lookup"><span data-stu-id="e58ab-107">Column</span></span>|<span data-ttu-id="e58ab-108">描述</span><span class="sxs-lookup"><span data-stu-id="e58ab-108">Description</span></span>|  
|--------------------|------------|-----------------|  
|<span data-ttu-id="e58ab-109">0</span><span class="sxs-lookup"><span data-stu-id="e58ab-109">0</span></span>|<span data-ttu-id="e58ab-110">SOURCES_NAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-110">SOURCES_NAME</span></span>|<span data-ttu-id="e58ab-111">本机 OLEDB 数据源或枚举器的固定名称。</span><span class="sxs-lookup"><span data-stu-id="e58ab-111">The invariant name of the native OLEDB data source or enumerator.</span></span>|  
|<span data-ttu-id="e58ab-112">1</span><span class="sxs-lookup"><span data-stu-id="e58ab-112">1</span></span>|<span data-ttu-id="e58ab-113">SOURCES_PARSENAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-113">SOURCES_PARSENAME</span></span>|<span data-ttu-id="e58ab-114">可以通过使用本机 COM 接口 IParseDisplayName 转换为一个名字对象的可读名称。</span><span class="sxs-lookup"><span data-stu-id="e58ab-114">A human-readable name that can be converted to a moniker by using the native COM interface IParseDisplayName.</span></span> <span data-ttu-id="e58ab-115">对应于返回本机 OLE DB 源行集的 SOURCES_PARSENAME 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-115">Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-116">2</span><span class="sxs-lookup"><span data-stu-id="e58ab-116">2</span></span>|<span data-ttu-id="e58ab-117">SOURCES_DESCRIPTION</span><span class="sxs-lookup"><span data-stu-id="e58ab-117">SOURCES_DESCRIPTION</span></span>|<span data-ttu-id="e58ab-118">本机 OLE DB 数据源的说明。</span><span class="sxs-lookup"><span data-stu-id="e58ab-118">Description of the native OLE DB data source.</span></span> <span data-ttu-id="e58ab-119">对应于返回本机 OLE DB 源行集的 SOURCES_DESCRIPTION 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-119">Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-120">3</span><span class="sxs-lookup"><span data-stu-id="e58ab-120">3</span></span>|<span data-ttu-id="e58ab-121">SOURCES_TYPE</span><span class="sxs-lookup"><span data-stu-id="e58ab-121">SOURCES_TYPE</span></span>|<span data-ttu-id="e58ab-122">以下枚举成员之一：联编程序 (0)，(1)，DataSource_MDP DataSource_TDP (2)、 (3) 的枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-122">One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).</span></span> <span data-ttu-id="e58ab-123">这些对应于在本机 OLE DB 源行集的 SOURCES_TYPE 列中返回的值。</span><span class="sxs-lookup"><span data-stu-id="e58ab-123">These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-124">4</span><span class="sxs-lookup"><span data-stu-id="e58ab-124">4</span></span>|<span data-ttu-id="e58ab-125">SOURCES_ISPARENT</span><span class="sxs-lookup"><span data-stu-id="e58ab-125">SOURCES_ISPARENT</span></span>|<span data-ttu-id="e58ab-126">适用于仅枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-126">Applicable to enumerators only.</span></span> <span data-ttu-id="e58ab-127">如果`true`，指示该条目适用于相同的枚举器在其调用 GetSourcesRowset，这意味着它还包括子枚举中。</span><span class="sxs-lookup"><span data-stu-id="e58ab-127">If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration.</span></span> <span data-ttu-id="e58ab-128">对应于本机 OLE DB 源行集的 SOURCES_ISPARENT 列</span><span class="sxs-lookup"><span data-stu-id="e58ab-128">Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset</span></span>|  
|<span data-ttu-id="e58ab-129">5</span><span class="sxs-lookup"><span data-stu-id="e58ab-129">5</span></span>|<span data-ttu-id="e58ab-130">SOURCES_CLSID</span><span class="sxs-lookup"><span data-stu-id="e58ab-130">SOURCES_CLSID</span></span>|<span data-ttu-id="e58ab-131">用户可读名称，可以转换为使用本机 COM 接口 IParseDisplayName 一个名字对象。</span><span class="sxs-lookup"><span data-stu-id="e58ab-131">A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName.</span></span> <span data-ttu-id="e58ab-132">对应于返回本机 OLE DB 源行集的 SOURCES_CLSID 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-132">Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e58ab-133">以下控制台应用程序检索所有可见 OLE DB 提供程序的信息，并在控制台窗口中显示的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-133">The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.</span></span>  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
Sub Main()  
  Dim enumerator As New OleDbEnumerator  
  Dim table As System.Data.DataTable = enumerator.GetElements()  
  
  DisplayData(table)  
  
   Console.WriteLine("Press any key to continue.")  
   Console.ReadKey()  
 End Sub  
  
 Private Sub DisplayData(ByVal table As DataTable)  
   For Each row As DataRow In table.Rows  
     For Each col As DataColumn In table.Columns  
       Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
     Next  
     Console.WriteLine("==================================")  
   Next  
 End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbEnumerator enumerator = new OleDbEnumerator();  
   DataTable table = enumerator.GetElements();  
  
   DisplayData(table);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(DataTable table)  
 {  
   foreach (DataRow row in table.Rows)  
   {  
     foreach (DataColumn col in table.Columns)  
     {  
       Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e58ab-134">提供程序不支持 ISourcesRowset。</span><span class="sxs-lookup"><span data-stu-id="e58ab-134">The provider does not support ISourcesRowset.</span></span></exception>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="e58ab-135">基础提供程序中发生了异常。</span><span class="sxs-lookup"><span data-stu-id="e58ab-135">Exception has occurred in the underlying provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetEnumerator(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetEnumerator(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetEnumerator : Type -&gt; System.Data.OleDb.OleDbDataReader" Usage="System.Data.OleDb.OleDbEnumerator.GetEnumerator type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e58ab-136"><see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e58ab-136">A <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="e58ab-137">使用特定的 OLE DB 枚举数，无需 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 类的实例即可返回 <see cref="T:System.Data.OleDb.OleDbEnumerator" />，该读取器包含有关当前安装的 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-137">Uses a specific OLE DB enumerator to return an <see cref="T:System.Data.OleDb.OleDbDataReader" /> that contains information about the currently installed OLE DB providers, without requiring an instance of the <see cref="T:System.Data.OleDb.OleDbEnumerator" /> class.</span></span></summary>
        <returns><span data-ttu-id="e58ab-138">一个 <see cref="T:System.Data.OleDb.OleDbDataReader" />，该数据表使用指定的 OLE DB 枚举器包含有关请求的 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-138">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> that contains information about the requested OLE DB providers, using the specified OLE DB enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e58ab-139">此方法返回的读取器包含以下列，所有这些包含字符串：</span><span class="sxs-lookup"><span data-stu-id="e58ab-139">The reader that is returned by this method contains the following columns, all of which contain strings:</span></span>  
  
|<span data-ttu-id="e58ab-140">列序号</span><span class="sxs-lookup"><span data-stu-id="e58ab-140">Column ordinal</span></span>|<span data-ttu-id="e58ab-141">列</span><span class="sxs-lookup"><span data-stu-id="e58ab-141">Column</span></span>|<span data-ttu-id="e58ab-142">描述</span><span class="sxs-lookup"><span data-stu-id="e58ab-142">Description</span></span>|  
|--------------------|------------|-----------------|  
|<span data-ttu-id="e58ab-143">0</span><span class="sxs-lookup"><span data-stu-id="e58ab-143">0</span></span>|<span data-ttu-id="e58ab-144">SOURCES_NAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-144">SOURCES_NAME</span></span>|<span data-ttu-id="e58ab-145">枚举器的本机 OLE DB 数据源的固定名称。</span><span class="sxs-lookup"><span data-stu-id="e58ab-145">The invariant name of the native OLE DB data source or enumerator.</span></span>|  
|<span data-ttu-id="e58ab-146">1</span><span class="sxs-lookup"><span data-stu-id="e58ab-146">1</span></span>|<span data-ttu-id="e58ab-147">SOURCES_PARSENAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-147">SOURCES_PARSENAME</span></span>|<span data-ttu-id="e58ab-148">可以通过使用本机 COM 接口转换为一个名字对象的用户可读名称**IParseDisplayName**。</span><span class="sxs-lookup"><span data-stu-id="e58ab-148">A human-readable name that can be converted to a moniker by using the native COM interface **IParseDisplayName**.</span></span> <span data-ttu-id="e58ab-149">对应于返回本机 OLE DB 源行集的 SOURCES_PARSENAME 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-149">Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-150">2</span><span class="sxs-lookup"><span data-stu-id="e58ab-150">2</span></span>|<span data-ttu-id="e58ab-151">SOURCES_DESCRIPTION</span><span class="sxs-lookup"><span data-stu-id="e58ab-151">SOURCES_DESCRIPTION</span></span>|<span data-ttu-id="e58ab-152">本机 OLE DB 数据源的说明。</span><span class="sxs-lookup"><span data-stu-id="e58ab-152">Description of the native OLE DB data source.</span></span> <span data-ttu-id="e58ab-153">对应于返回本机 OLE DB 源行集的 SOURCES_DESCRIPTION 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-153">Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-154">3</span><span class="sxs-lookup"><span data-stu-id="e58ab-154">3</span></span>|<span data-ttu-id="e58ab-155">SOURCES_TYPE</span><span class="sxs-lookup"><span data-stu-id="e58ab-155">SOURCES_TYPE</span></span>|<span data-ttu-id="e58ab-156">以下枚举成员之一：联编程序 (0)，(1)，DataSource_MDP DataSource_TDP (2)、 (3) 的枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-156">One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).</span></span> <span data-ttu-id="e58ab-157">这些对应于在本机 OLE DB 源行集的 SOURCES_TYPE 列中返回的值。</span><span class="sxs-lookup"><span data-stu-id="e58ab-157">These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-158">4</span><span class="sxs-lookup"><span data-stu-id="e58ab-158">4</span></span>|<span data-ttu-id="e58ab-159">SOURCES_ISPARENT</span><span class="sxs-lookup"><span data-stu-id="e58ab-159">SOURCES_ISPARENT</span></span>|<span data-ttu-id="e58ab-160">适用于仅枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-160">Applicable to enumerators only.</span></span> <span data-ttu-id="e58ab-161">如果`true`，指示该条目适用于在其上相同的枚举器**GetSourcesRowset**调用，这意味着它还包括子枚举中。</span><span class="sxs-lookup"><span data-stu-id="e58ab-161">If `true`, indicates that the entry applies to the same enumerator on which **GetSourcesRowset** was called, implying that it is also included in the sub-enumeration.</span></span> <span data-ttu-id="e58ab-162">对应于本机 OLE DB 源行集的 SOURCES_ISPARENT 列</span><span class="sxs-lookup"><span data-stu-id="e58ab-162">Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset</span></span>|  
  
 <span data-ttu-id="e58ab-163">OLE DB 提供多个枚举器组件，包括 MSDAENUM、 MSDASQL 枚举器、 SQLNCLI 枚举器、 SQLOLEDB 枚举器和其他。</span><span class="sxs-lookup"><span data-stu-id="e58ab-163">OLE DB provides several enumerator components, including MSDAENUM, MSDASQL Enumerator, SQLNCLI Enumerator, SQLOLEDB Enumerator, and others.</span></span> <span data-ttu-id="e58ab-164">有关枚举器组件以及如何使用它们的详细信息，请参阅[OLE DB 程序员参考](https://go.microsoft.com/fwlink/?LinkId=45232)。</span><span class="sxs-lookup"><span data-stu-id="e58ab-164">For more information about the enumerator components and how to use them, see the [OLE DB Programmer's Reference](https://go.microsoft.com/fwlink/?LinkId=45232).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e58ab-165">以下控制台应用程序使用 MSDAENUM 组件检索所有 OLE DB 提供程序的信息，并在控制台窗口中显示的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-165">The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.</span></span>  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = _  
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"))  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader =   
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"));  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e58ab-166">提供程序不支持 ISourcesRowset。</span><span class="sxs-lookup"><span data-stu-id="e58ab-166">The provider does not support **ISourcesRowset**.</span></span></exception>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="e58ab-167">基础提供程序中出现了异常。</span><span class="sxs-lookup"><span data-stu-id="e58ab-167">An exception has occurred in the underlying provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetRootEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetRootEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootEnumerator () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetRootEnumerator();" />
      <MemberSignature Language="F#" Value="static member GetRootEnumerator : unit -&gt; System.Data.OleDb.OleDbDataReader" Usage="System.Data.OleDb.OleDbEnumerator.GetRootEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e58ab-168">无需 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 类的实例，即可返回一个 <see cref="T:System.Data.OleDb.OleDbEnumerator" />，该读取器包含当前安装的 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-168">Returns an <see cref="T:System.Data.OleDb.OleDbDataReader" /> that contains information about the currently installed OLE DB providers, without requiring an instance of the <see cref="T:System.Data.OleDb.OleDbEnumerator" /> class.</span></span></summary>
        <returns><span data-ttu-id="e58ab-169">一个 <see cref="T:System.Data.OleDb.OleDbDataReader" />，其中包含可见 OLE DB 提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-169">A <see cref="T:System.Data.OleDb.OleDbDataReader" /> that contains information about the visible OLE DB providers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e58ab-170">此方法返回的读取器包含以下列，所有这些包含字符串：</span><span class="sxs-lookup"><span data-stu-id="e58ab-170">The reader returned by this method contains the following columns, all of which contain strings:</span></span>  
  
|<span data-ttu-id="e58ab-171">列序号</span><span class="sxs-lookup"><span data-stu-id="e58ab-171">Column Ordinal</span></span>|<span data-ttu-id="e58ab-172">列</span><span class="sxs-lookup"><span data-stu-id="e58ab-172">Column</span></span>|<span data-ttu-id="e58ab-173">描述</span><span class="sxs-lookup"><span data-stu-id="e58ab-173">Description</span></span>|  
|--------------------|------------|-----------------|  
|<span data-ttu-id="e58ab-174">0</span><span class="sxs-lookup"><span data-stu-id="e58ab-174">0</span></span>|<span data-ttu-id="e58ab-175">SOURCES_NAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-175">SOURCES_NAME</span></span>|<span data-ttu-id="e58ab-176">本机 OLEDB 数据源或枚举器的固定名称。</span><span class="sxs-lookup"><span data-stu-id="e58ab-176">The invariant name of the native OLEDB data source or enumerator.</span></span>|  
|<span data-ttu-id="e58ab-177">1</span><span class="sxs-lookup"><span data-stu-id="e58ab-177">1</span></span>|<span data-ttu-id="e58ab-178">SOURCES_PARSENAME</span><span class="sxs-lookup"><span data-stu-id="e58ab-178">SOURCES_PARSENAME</span></span>|<span data-ttu-id="e58ab-179">可以转换为使用本机 COM 接口 IParseDisplayName 一个名字对象的可读名称。</span><span class="sxs-lookup"><span data-stu-id="e58ab-179">A human-readable name that can be converted to a moniker using the native COM interface IParseDisplayName.</span></span> <span data-ttu-id="e58ab-180">对应于返回本机 OLE DB 源行集的 SOURCES_PARSENAME 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-180">Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-181">2</span><span class="sxs-lookup"><span data-stu-id="e58ab-181">2</span></span>|<span data-ttu-id="e58ab-182">SOURCES_DESCRIPTION</span><span class="sxs-lookup"><span data-stu-id="e58ab-182">SOURCES_DESCRIPTION</span></span>|<span data-ttu-id="e58ab-183">本机 OLE DB 数据源的说明。</span><span class="sxs-lookup"><span data-stu-id="e58ab-183">Description of the native OLE DB data source.</span></span> <span data-ttu-id="e58ab-184">对应于返回本机 OLE DB 源行集的 SOURCES_DESCRIPTION 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-184">Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-185">3</span><span class="sxs-lookup"><span data-stu-id="e58ab-185">3</span></span>|<span data-ttu-id="e58ab-186">SOURCES_TYPE</span><span class="sxs-lookup"><span data-stu-id="e58ab-186">SOURCES_TYPE</span></span>|<span data-ttu-id="e58ab-187">以下枚举成员之一：联编程序 (0)，(1)，DataSource_MDP DataSource_TDP (2)、 (3) 的枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-187">One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3).</span></span> <span data-ttu-id="e58ab-188">这些对应于在本机 OLE DB 源行集的 SOURCES_TYPE 列中返回的值。</span><span class="sxs-lookup"><span data-stu-id="e58ab-188">These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.</span></span>|  
|<span data-ttu-id="e58ab-189">4</span><span class="sxs-lookup"><span data-stu-id="e58ab-189">4</span></span>|<span data-ttu-id="e58ab-190">SOURCES_ISPARENT</span><span class="sxs-lookup"><span data-stu-id="e58ab-190">SOURCES_ISPARENT</span></span>|<span data-ttu-id="e58ab-191">适用于仅枚举器。</span><span class="sxs-lookup"><span data-stu-id="e58ab-191">Applicable to enumerators only.</span></span> <span data-ttu-id="e58ab-192">如果`true`，指示该条目适用于相同的枚举器在其调用 GetSourcesRowset，这意味着它还包括子枚举中。</span><span class="sxs-lookup"><span data-stu-id="e58ab-192">If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration.</span></span> <span data-ttu-id="e58ab-193">对应于本机 OLE DB 源行集的 SOURCES_ISPARENT 列</span><span class="sxs-lookup"><span data-stu-id="e58ab-193">Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset</span></span>|  
|<span data-ttu-id="e58ab-194">5</span><span class="sxs-lookup"><span data-stu-id="e58ab-194">5</span></span>|<span data-ttu-id="e58ab-195">SOURCES_CLSID</span><span class="sxs-lookup"><span data-stu-id="e58ab-195">SOURCES_CLSID</span></span>|<span data-ttu-id="e58ab-196">用户可读名称，可以转换为使用本机 COM 接口 IParseDisplayName 一个名字对象。</span><span class="sxs-lookup"><span data-stu-id="e58ab-196">A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName.</span></span> <span data-ttu-id="e58ab-197">对应于返回本机 OLE DB 源行集的 SOURCES_CLSID 列。</span><span class="sxs-lookup"><span data-stu-id="e58ab-197">Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e58ab-198">以下控制台应用程序检索所有可见 OLE DB 提供程序的信息，并在控制台窗口中显示的信息。</span><span class="sxs-lookup"><span data-stu-id="e58ab-198">The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.</span></span>  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e58ab-199">提供程序不支持 ISourcesRowset。</span><span class="sxs-lookup"><span data-stu-id="e58ab-199">The provider does not support ISourcesRowset.</span></span></exception>
        <exception cref="T:System.Data.OleDb.OleDbException"><span data-ttu-id="e58ab-200">基础提供程序中发生了异常。</span><span class="sxs-lookup"><span data-stu-id="e58ab-200">Exception has occurred in the underlying provider.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>