<Type Name="OleDbDataReader" FullName="System.Data.OleDb.OleDbDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20e2aec6b6eccc6280842ad9d4a7ac130796b5b6" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67240588" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OleDbDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="97170-101">提供从数据源读取数据行的只进流的方法。</span><span class="sxs-lookup"><span data-stu-id="97170-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="97170-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="97170-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-103">若要创建<xref:System.Data.OleDb.OleDbDataReader>，必须调用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>方法的<xref:System.Data.OleDb.OleDbCommand>对象，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="97170-103">To create an <xref:System.Data.OleDb.OleDbDataReader>, you must call the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="97170-104">在关闭之前<xref:System.Data.OleDb.OleDbConnection>，先关闭<xref:System.Data.OleDb.OleDbDataReader>对象。</span><span class="sxs-lookup"><span data-stu-id="97170-104">Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object.</span></span> <span data-ttu-id="97170-105">您必须关闭<xref:System.Data.OleDb.OleDbDataReader>对象，如果计划重新<xref:System.Data.OleDb.OleDbCommand>对象。例如，不能检索输出参数，直到调用后<xref:System.Data.OleDb.OleDbDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="97170-105">You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to resuse an <xref:System.Data.OleDb.OleDbCommand> object.For example, you cannot retrieve output parameters until after you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="97170-106">对结果集由另一个进程或线程读取数据时所做的更改可能会对用户可见<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="97170-107">但是，确切的行为与时间有关。</span><span class="sxs-lookup"><span data-stu-id="97170-107">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="97170-108"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 并<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.OleDb.OleDbDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="97170-108"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span> <span data-ttu-id="97170-109">尽管<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>可能会访问属性时<xref:System.Data.OleDb.OleDbDataReader>存在，始终调用<xref:System.Data.OleDb.OleDbDataReader.Close%2A>返回的值之前<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>以保证返回精确的值。</span><span class="sxs-lookup"><span data-stu-id="97170-109">Although the <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.OleDb.OleDbDataReader> exists, always call <xref:System.Data.OleDb.OleDbDataReader.Close%2A> before returning the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97170-110">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>、 一个<xref:System.Data.OleDb.OleDbCommand>，和一个<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-110">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="97170-111">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="97170-111">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="97170-112">最后，该示例关闭<xref:System.Data.OleDb.OleDbDataReader>，然后<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="97170-112">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-113">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-113">DataAdapters and DataReaders</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-114">关闭 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="97170-114">Closes the <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-115">必须显式调用<xref:System.Data.OleDb.OleDbDataReader.Close%2A>方法时都是通过使用<xref:System.Data.OleDb.OleDbDataReader>使用关联<xref:System.Data.OleDb.OleDbConnection>用于任何其他用途。</span><span class="sxs-lookup"><span data-stu-id="97170-115">You must explicitly call the <xref:System.Data.OleDb.OleDbDataReader.Close%2A> method when you are through using the <xref:System.Data.OleDb.OleDbDataReader> to use the associated <xref:System.Data.OleDb.OleDbConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="97170-116">不要调用**关闭**或**Dispose**连接、 DataReader 或在任何其他托管的对象上**Finalize**类的方法。</span><span class="sxs-lookup"><span data-stu-id="97170-116">Do not call **Close** or **Dispose** on a Connection, a DataReader, or any other managed object in the **Finalize** method of your class.</span></span> <span data-ttu-id="97170-117">在终结器中，您应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="97170-117">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="97170-118">如果您的类不拥有任何非托管的资源，不包括**Finalize**在类定义中的方法。</span><span class="sxs-lookup"><span data-stu-id="97170-118">If your class does not own any unmanaged resources, do not include a **Finalize** method in your class definition.</span></span> <span data-ttu-id="97170-119">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="97170-119">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97170-120">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>、 一个<xref:System.Data.OleDb.OleDbCommand>，和一个<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-120">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="97170-121">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="97170-121">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="97170-122">最后，该示例关闭<xref:System.Data.OleDb.OleDbDataReader>，然后<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="97170-122">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-123">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-123">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-124">获取一个值，用于指示当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="97170-124">Gets a value that indicates the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="97170-125">当前行的嵌套深度。</span><span class="sxs-lookup"><span data-stu-id="97170-125">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-126">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="97170-126">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-127">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-127">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-128">获取当前行中的列数。</span><span class="sxs-lookup"><span data-stu-id="97170-128">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="97170-129">如果未放在有效的记录集中，则为 0；否则为当前记录的列数。</span><span class="sxs-lookup"><span data-stu-id="97170-129">When not positioned in a valid recordset, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="97170-130">默认值为 -1。</span><span class="sxs-lookup"><span data-stu-id="97170-130">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-131">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="97170-131">Includes hidden fields.</span></span> <span data-ttu-id="97170-132">使用 <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="97170-132">Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="97170-133">执行不返回行，一个查询后<xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A>返回 0。</span><span class="sxs-lookup"><span data-stu-id="97170-133">After executing a query that does not return rows, <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="97170-134">没有到数据源的当前连接。</span><span class="sxs-lookup"><span data-stu-id="97170-134">There is no current connection to a data source.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-135">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-135">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OleDbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OleDbDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="oleDbDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-136">允许对象在被“垃圾回收”之前尝试释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="97170-136">Allows the object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="oleDbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-137">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-137">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-138">获取指定列的布尔值形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-138">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="97170-139">列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-139">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-140">不执行任何转换;因此检索到的数据必须已经是一个布尔值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="97170-140">No conversions are performed; therefore the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="97170-141">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-141">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-142">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-142">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-143">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-143">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="oleDbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-144">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-144">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-145">以字节的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-145">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="97170-146">指定列的字节形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-146">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-147">不执行任何转换;因此检索到的数据必须已经是一个字节。</span><span class="sxs-lookup"><span data-stu-id="97170-147">No conversions are performed; therefore the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="97170-148">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-148">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-149">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-149">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-150">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-150">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="oleDbDataReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-151">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-151">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="97170-152">字段中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="97170-152">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="97170-153">要读入字节流的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="97170-153">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="97170-154"><paramref name="buffer" /> 中写入操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="97170-154">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="97170-155">复制到缓冲区中的最大长度。</span><span class="sxs-lookup"><span data-stu-id="97170-155">The maximum length to copy into the buffer.</span></span></param>
        <summary><span data-ttu-id="97170-156">从按指定的列偏移量将字节流作为数组从给定的缓冲区偏移量开始读入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="97170-156">Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="97170-157">读取的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="97170-157">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-158"><xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> 返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="97170-158"><xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="97170-159">大多数情况下，这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="97170-159">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="97170-160">但是，返回的数字可能小于字段的真实长度如果`GetBytes`具有用于从字段中获取字节。</span><span class="sxs-lookup"><span data-stu-id="97170-160">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="97170-161">这可能是这种情况，例如，当<xref:System.Data.OleDb.OleDbDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="97170-161">This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="97170-162">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="97170-162">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="97170-163">如果传递的缓冲区，则`null`，<xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A>返回的字段长度以字节为单位。</span><span class="sxs-lookup"><span data-stu-id="97170-163">If you pass a buffer that is `null`, <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="97170-164">不执行任何转换;因此，检索到的数据必须已经是一个字节数组。</span><span class="sxs-lookup"><span data-stu-id="97170-164">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-165">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-165">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="oleDbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-166">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-166">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-167">获取指定列的字符形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-167">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="97170-168">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-168">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-169">对于 <xref:System.Data.OleDb>，不受支持。</span><span class="sxs-lookup"><span data-stu-id="97170-169">Not supported for <xref:System.Data.OleDb>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-170">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-170">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-171">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-171">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="oleDbDataReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-172">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-172">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="97170-173">行中作为读取操作起始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="97170-173">The index within the row from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="97170-174">要向其中复制数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="97170-174">The buffer into which to copy data.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="97170-175"><paramref name="buffer" /> 中写入操作开始位置的索引。</span><span class="sxs-lookup"><span data-stu-id="97170-175">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="97170-176">要读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="97170-176">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="97170-177">从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="97170-177">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="97170-178">读取的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="97170-178">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-179"><xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> 返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="97170-179"><xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="97170-180">大多数情况下，这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="97170-180">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="97170-181">但是，返回的数字可能小于字段的真实长度如果`GetChars`具有用于从字段获取字符。</span><span class="sxs-lookup"><span data-stu-id="97170-181">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="97170-182">这可能是这种情况，例如，当<xref:System.Data.OleDb.OleDbDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="97170-182">This may be the case, for example, when the <xref:System.Data.OleDb.OleDbDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="97170-183">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="97170-183">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="97170-184">如果传递的缓冲区，则`null`，<xref:System.Data.OleDb.OleDbDataReader.GetChars%2A>以字符为单位返回字段的长度。</span><span class="sxs-lookup"><span data-stu-id="97170-184">If you pass a buffer that is `null`, <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="97170-185">不执行任何转换;因此，检索到的数据必须已经是字符数组。</span><span class="sxs-lookup"><span data-stu-id="97170-185">No conversions are performed; therefore, the data retrieved must already be a character array.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-186">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-186">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetData : int -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-187">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-187">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-188">返回请求的列序号的 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="97170-188">Returns an <see cref="T:System.Data.OleDb.OleDbDataReader" /> object for the requested column ordinal.</span></span></summary>
        <returns><span data-ttu-id="97170-189"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="97170-189">An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-190"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>将调用<xref:System.Data.OleDb.OleDbDataReader.GetData%2A>如果访问接口将返回<xref:System.Data.IDataReader>具有支持的列<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-190">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> will call <xref:System.Data.OleDb.OleDbDataReader.GetData%2A> if the provider returns a <xref:System.Data.IDataReader> that has a column that supports <xref:System.Data.IDataReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-191">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-191">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="oleDbDataReader.GetDataTypeName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="97170-192">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-192">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-193">获取源数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-193">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="97170-194">后端数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-194">The name of the back-end data type.</span></span> <span data-ttu-id="97170-195">有关详细信息，请参阅 <see href="https://docs.microsoft.com/sql/t-sql/data-types/data-types-transact-sql">SQL Server 数据类型</see>或<see href="https://docs.microsoft.com/sql/odbc/microsoft/microsoft-access-data-types">访问数据类型</see>。</span><span class="sxs-lookup"><span data-stu-id="97170-195">For more information, see <see href="https://docs.microsoft.com/sql/t-sql/data-types/data-types-transact-sql">SQL Server data types</see> or <see href="https://docs.microsoft.com/sql/odbc/microsoft/microsoft-access-data-types">Access data types</see>.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-196">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-196">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="oleDbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-197">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-197">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-198">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-198">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="97170-199">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-199">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-200">不执行任何转换;因此，检索到的数据必须已经是<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="97170-200">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="97170-201">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-201">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-202">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-202">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-203">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-203">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="oleDbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="oleDbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-204">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-204">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-205">以 <see cref="T:System.Decimal" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-205">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="97170-206">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-206">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-207">不执行任何转换;因此，检索到的数据必须已经是<xref:System.Decimal>对象。</span><span class="sxs-lookup"><span data-stu-id="97170-207">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="97170-208">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-208">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-209">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-209">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-210">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-210">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="oleDbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-211">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-211">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-212">获取指定列的双精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-212">Gets the value of the specified column as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="97170-213">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-213">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-214">不执行任何转换;因此，检索到的数据必须已经是双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="97170-214">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number.</span></span>  
  
 <span data-ttu-id="97170-215">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-215">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-216">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-216">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-217">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-217">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="oleDbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-218">返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="97170-218">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="97170-219">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span><span class="sxs-lookup"><span data-stu-id="97170-219">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-220">尽管此方法可用于检索显式枚举器，但在语言的支持`foreach`构造，它是直接以循环访问数据读取器中的行中使用循环构造简单得多。</span><span class="sxs-lookup"><span data-stu-id="97170-220">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-221">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-221">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (index As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int index);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="oleDbDataReader.GetFieldType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="97170-222">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-222">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-223">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="97170-223">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="97170-224">作为对象的数据类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="97170-224">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-225">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-225">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="oleDbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-226">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-226">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-227">获取指定列的单精度浮点数形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-227">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="97170-228">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-228">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-229">不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="97170-229">No conversions are performed.</span></span> <span data-ttu-id="97170-230">因此，检索到的数据必须已经是一个单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="97170-230">Therefore, the data retrieved must already be a single-precision floating-point number.</span></span>  
  
 <span data-ttu-id="97170-231">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-231">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-232">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-232">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-233">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-233">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="oleDbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-234">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-234">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-235">获取指定列的值作为全局唯一标识符 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="97170-235">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="97170-236">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-236">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-237">不执行任何转换;因此检索到的数据必须已经是全局唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="97170-237">No conversions are performed; therefore the data retrieved must already be a globally unique identifier.</span></span>  
  
 <span data-ttu-id="97170-238">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-238">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-239">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-239">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-240">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-240">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="oleDbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-241">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-241">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-242">获取指定列的 16 位有符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-242">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="97170-243">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-243">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-244">不执行任何转换;因此，检索到的数据必须已经是 16 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="97170-244">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="97170-245">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-245">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-246">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-246">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-247">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-247">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="oleDbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-248">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-248">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-249">获取指定列的 32 位带符号整数形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-249">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="97170-250">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-250">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-251">不执行任何转换;因此，检索到的数据必须已经是 32 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="97170-251">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="97170-252">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-252">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-253">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-253">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-254">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-254">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="oleDbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-255">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-255">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-256">以 64 位有符号整数的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-256">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="97170-257">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-257">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-258">不执行任何转换;因此，检索到的数据必须已经是 64 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="97170-258">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="97170-259">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-259">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-260">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-260">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-261">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-261">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="oleDbDataReader.GetName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="97170-262">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-262">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-263">获取指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-263">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="97170-264">指定列的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-264">The name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-265">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-265">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="oleDbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="97170-266">列的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-266">The name of the column.</span></span></param>
        <summary><span data-ttu-id="97170-267">在给定列名时获取相应的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-267">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="97170-268">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-268">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-269"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 第一次执行区分大小写查找。</span><span class="sxs-lookup"><span data-stu-id="97170-269"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="97170-270">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="97170-270">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="97170-271">该方法将引发`IndexOutOfRange`异常，如果找不到从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-271">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="97170-272"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="97170-272"><xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="97170-273">因为基于序号的查找比命名查找更有效，它是效率低下调用<xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>在循环内。</span><span class="sxs-lookup"><span data-stu-id="97170-273">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="97170-274">节省时间，可以调用<xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>一次并将结果分配给整数变量在循环内使用。</span><span class="sxs-lookup"><span data-stu-id="97170-274">Save time by calling <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> one time and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97170-275">下面的示例演示如何使用 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="97170-275">The following example demonstrates how to use the <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="97170-276">指定的名称不是有效的列名。</span><span class="sxs-lookup"><span data-stu-id="97170-276">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-277">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-277">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="oleDbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-278">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 的列元数据。</span><span class="sxs-lookup"><span data-stu-id="97170-278">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.OleDb.OleDbDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="97170-279">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="97170-279">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-280"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A>方法将映射到 OLE DB **icolumnsrowset:: Getcolumnsrowset**方法，并返回有关按以下顺序的每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="97170-280">The <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> method maps to the OLE DB **IColumnsRowset::GetColumnsRowset** method, and returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="97170-281">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="97170-281">DataReader column</span></span>|<span data-ttu-id="97170-282">OLE DB 列 ID</span><span class="sxs-lookup"><span data-stu-id="97170-282">OLE DB column ID</span></span>|<span data-ttu-id="97170-283">描述</span><span class="sxs-lookup"><span data-stu-id="97170-283">Description</span></span>|  
|-----------------------|----------------------|-----------------|  
|<span data-ttu-id="97170-284">列名</span><span class="sxs-lookup"><span data-stu-id="97170-284">ColumnName</span></span>|<span data-ttu-id="97170-285">DBCOLUMN_NAME</span><span class="sxs-lookup"><span data-stu-id="97170-285">DBCOLUMN_NAME</span></span>|<span data-ttu-id="97170-286">列; 的名称这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="97170-286">The name of the column; this might not be unique.</span></span> <span data-ttu-id="97170-287">如果这不能确定，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-287">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="97170-288">此名称始终反映当前视图或命令文本中的列的最新重命名。</span><span class="sxs-lookup"><span data-stu-id="97170-288">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="97170-289">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="97170-289">ColumnOrdinal</span></span>|<span data-ttu-id="97170-290">DBCOLUMN_NUMBER</span><span class="sxs-lookup"><span data-stu-id="97170-290">DBCOLUMN_NUMBER</span></span>|<span data-ttu-id="97170-291">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-291">The zero-based ordinal of the column.</span></span> <span data-ttu-id="97170-292">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-292">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="97170-293">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="97170-293">ColumnSize</span></span>|<span data-ttu-id="97170-294">DBCOLUMN_COLUMNSIZE</span><span class="sxs-lookup"><span data-stu-id="97170-294">DBCOLUMN_COLUMNSIZE</span></span>|<span data-ttu-id="97170-295">列中值的最大可取长度。</span><span class="sxs-lookup"><span data-stu-id="97170-295">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="97170-296">对于使用固定长度的数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="97170-296">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="97170-297">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="97170-297">NumericPrecision</span></span>|<span data-ttu-id="97170-298">DBCOLUMN_PRECISION</span><span class="sxs-lookup"><span data-stu-id="97170-298">DBCOLUMN_PRECISION</span></span>|<span data-ttu-id="97170-299">如果 DbType 是数值数据类型，这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="97170-299">If DbType is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="97170-300">列的数据类型为 DBTYPE_DECIMAL 或 DBTYPE_NUMERIC 精度取决于列的定义。</span><span class="sxs-lookup"><span data-stu-id="97170-300">The precision of columns with a data type of DBTYPE_DECIMAL or DBTYPE_NUMERIC depends on the definition of the column.</span></span> <span data-ttu-id="97170-301">如果 DbType 不是数值数据类型，则为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-301">If DbType is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="97170-302">NumericScale</span><span class="sxs-lookup"><span data-stu-id="97170-302">NumericScale</span></span>|<span data-ttu-id="97170-303">DBCOLUMN_SCALE</span><span class="sxs-lookup"><span data-stu-id="97170-303">DBCOLUMN_SCALE</span></span>|<span data-ttu-id="97170-304">如果 DbType DBTYPE_DECIMAL 或 DBTYPE_NUMERIC，这是小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="97170-304">If DbType is DBTYPE_DECIMAL or DBTYPE_NUMERIC, this is the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="97170-305">否则，这是一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-305">Otherwise, this is a null value.</span></span>|  
|<span data-ttu-id="97170-306">数据类型</span><span class="sxs-lookup"><span data-stu-id="97170-306">DataType</span></span>|<span data-ttu-id="97170-307">None</span><span class="sxs-lookup"><span data-stu-id="97170-307">None</span></span>|<span data-ttu-id="97170-308">映射到.NET Framework 类型的列。</span><span class="sxs-lookup"><span data-stu-id="97170-308">Maps to the .NET Framework type of the column.</span></span>|  
|<span data-ttu-id="97170-309">ProviderType</span><span class="sxs-lookup"><span data-stu-id="97170-309">ProviderType</span></span>|<span data-ttu-id="97170-310">DBCOLUMN_TYPE</span><span class="sxs-lookup"><span data-stu-id="97170-310">DBCOLUMN_TYPE</span></span>|<span data-ttu-id="97170-311">列的数据类型的指示符。</span><span class="sxs-lookup"><span data-stu-id="97170-311">The indicator of the column's data type.</span></span> <span data-ttu-id="97170-312">如果列的数据类型而异行，这必须是 DBTYPE_VARIANT。</span><span class="sxs-lookup"><span data-stu-id="97170-312">If the data type of the column varies from row to row, this must be DBTYPE_VARIANT.</span></span> <span data-ttu-id="97170-313">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-313">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="97170-314">IsLong</span><span class="sxs-lookup"><span data-stu-id="97170-314">IsLong</span></span>|<span data-ttu-id="97170-315">DBCOLUMNFLAGS_ISLONG</span><span class="sxs-lookup"><span data-stu-id="97170-315">DBCOLUMNFLAGS_ISLONG</span></span>|<span data-ttu-id="97170-316">如果列包含二进制长对象 (BLOB)，其中包含非常长的数据，提供程序设置 DBCOLUMNFLAGS_ISLONG。</span><span class="sxs-lookup"><span data-stu-id="97170-316">The provider sets DBCOLUMNFLAGS_ISLONG if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="97170-317">很长数据的定义是特定于提供程序。</span><span class="sxs-lookup"><span data-stu-id="97170-317">The definition of very long data is provider-specific.</span></span> <span data-ttu-id="97170-318">此标志的设置对应于数据类型的 PROVIDER_TYPES 行集中 IS_LONG 列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-318">The setting of this flag corresponds to the value of the IS_LONG column in the PROVIDER_TYPES rowset for the data type.</span></span>|  
|<span data-ttu-id="97170-319">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="97170-319">AllowDBNull</span></span>|<span data-ttu-id="97170-320">DBCOLUMNFLAGS_ISNULLABLE</span><span class="sxs-lookup"><span data-stu-id="97170-320">DBCOLUMNFLAGS_ISNULLABLE</span></span>|<span data-ttu-id="97170-321">提供程序设置 DBCOLUMNFLAGS_ISNULLABLE，如果使用者可以将列设置为 null 值，或提供程序无法确定使用者是否可以将列设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-321">The provider sets DBCOLUMNFLAGS_ISNULLABLE if the consumer can set the column to a null value, or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="97170-322">列可能包含 null 值，即使它不能设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-322">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="97170-323">为只读</span><span class="sxs-lookup"><span data-stu-id="97170-323">IsReadOnly</span></span>|<span data-ttu-id="97170-324">DBCOLUMNFLAGS_WRITE</span><span class="sxs-lookup"><span data-stu-id="97170-324">DBCOLUMNFLAGS_WRITE</span></span>|<span data-ttu-id="97170-325">`true` 如果不能修改的列;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="97170-325">`true` if the column cannot be modified; otherwise `false`.</span></span> <span data-ttu-id="97170-326">列被假定为可写，如果提供程序已设置了 DBCOLUMNFLAGS_WRITE 或 DBCOLUMNFLAGS_WRITEUNKNOWN 标志。</span><span class="sxs-lookup"><span data-stu-id="97170-326">The column is assumed to be writable if the provider has set either the DBCOLUMNFLAGS_WRITE or DBCOLUMNFLAGS_WRITEUNKNOWN flag.</span></span>|  
|<span data-ttu-id="97170-327">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="97170-327">IsRowVersion</span></span>|<span data-ttu-id="97170-328">DBCOLUMNFLAGS_ISROWID</span><span class="sxs-lookup"><span data-stu-id="97170-328">DBCOLUMNFLAGS_ISROWID</span></span>|<span data-ttu-id="97170-329">提供程序设置 DBCOLUMNFLAGS_ISROWID，如果列包含无法写入到的永久行标识符，除了标识行没有有意义的价值。</span><span class="sxs-lookup"><span data-stu-id="97170-329">The provider sets DBCOLUMNFLAGS_ISROWID if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="97170-330">IsUnique</span><span class="sxs-lookup"><span data-stu-id="97170-330">IsUnique</span></span>|<span data-ttu-id="97170-331">DBCOLUMN_ISUNIQUE</span><span class="sxs-lookup"><span data-stu-id="97170-331">DBCOLUMN_ISUNIQUE</span></span>|<span data-ttu-id="97170-332">VARIANT_TRUE:在本专栏中，BaseTableName 可以返回表的基表中的任何两个行不具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="97170-332">VARIANT_TRUE: No two rows in the base table-the table returned in BaseTableName-can have the same value in this column.</span></span> <span data-ttu-id="97170-333">保证是唯一的本身或是否仅适用于此列的 UNIQUE 类型的约束是 VARIANT_TRUE 如果列表示一个键。</span><span class="sxs-lookup"><span data-stu-id="97170-333">IsUnique is guaranteed to be VARIANT_TRUE if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="97170-334">VARIANT_FALSE:列可以包含基础表中的重复值。</span><span class="sxs-lookup"><span data-stu-id="97170-334">VARIANT_FALSE: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="97170-335">此列的默认值为 VARIANT_FALSE。</span><span class="sxs-lookup"><span data-stu-id="97170-335">The default of this column is VARIANT_FALSE.</span></span>|  
|<span data-ttu-id="97170-336">IsKey</span><span class="sxs-lookup"><span data-stu-id="97170-336">IsKey</span></span>|<span data-ttu-id="97170-337">DBCOLUMN_KEYCOLUMN</span><span class="sxs-lookup"><span data-stu-id="97170-337">DBCOLUMN_KEYCOLUMN</span></span>|<span data-ttu-id="97170-338">VARIANT_TRUE:列是一组的行集中的列，合起来看，唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="97170-338">VARIANT_TRUE: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="97170-339">IsKey 设置为 variant_true，则使用列集必须唯一地标识行集中的行。</span><span class="sxs-lookup"><span data-stu-id="97170-339">The set of columns with IsKey set to VARIANT_TRUE must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="97170-340">没有任何要求这组列是列的最小集。</span><span class="sxs-lookup"><span data-stu-id="97170-340">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="97170-341">这组列可能会生成从基表主键、 唯一约束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="97170-341">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="97170-342">VARIANT_FALSE:列不需要唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="97170-342">VARIANT_FALSE: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="97170-343">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="97170-343">IsAutoIncrement</span></span>|<span data-ttu-id="97170-344">DBCOLUMN_ISAUTOINCREMENT</span><span class="sxs-lookup"><span data-stu-id="97170-344">DBCOLUMN_ISAUTOINCREMENT</span></span>|<span data-ttu-id="97170-345">VARIANT_TRUE:列将值分配给新行以固定的增量。</span><span class="sxs-lookup"><span data-stu-id="97170-345">VARIANT_TRUE: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="97170-346">VARIANT_FALSE:列不会分配到新行以固定的增量值。</span><span class="sxs-lookup"><span data-stu-id="97170-346">VARIANT_FALSE: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="97170-347">此列的默认值为 VARIANT_FALSE。</span><span class="sxs-lookup"><span data-stu-id="97170-347">The default of this column is VARIANT_FALSE.</span></span>|  
|<span data-ttu-id="97170-348">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="97170-348">BaseSchemaName</span></span>|<span data-ttu-id="97170-349">DBCOLUMN_BASESCHEMANAME</span><span class="sxs-lookup"><span data-stu-id="97170-349">DBCOLUMN_BASESCHEMANAME</span></span>|<span data-ttu-id="97170-350">包含的列的数据存储区中的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-350">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="97170-351">如果无法确定基本架构名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-351">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="97170-352">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-352">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="97170-353">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="97170-353">BaseCatalogName</span></span>|<span data-ttu-id="97170-354">DBCOLUMN_BASECATALOGNAME</span><span class="sxs-lookup"><span data-stu-id="97170-354">DBCOLUMN_BASECATALOGNAME</span></span>|<span data-ttu-id="97170-355">包含的列的数据存储区中的目录的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-355">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="97170-356">如果无法确定基本目录名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-356">A null value if the base catalog name cannot be determined.</span></span> <span data-ttu-id="97170-357">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-357">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="97170-358">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="97170-358">BaseTableName</span></span>|<span data-ttu-id="97170-359">DBCOLUMN_BASETABLENAME</span><span class="sxs-lookup"><span data-stu-id="97170-359">DBCOLUMN_BASETABLENAME</span></span>|<span data-ttu-id="97170-360">表或视图中包含的列的数据存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-360">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="97170-361">如果无法确定基表名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-361">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="97170-362">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-362">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="97170-363">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="97170-363">BaseColumnName</span></span>|<span data-ttu-id="97170-364">DBCOLUMN_BASECOLUMNNAME</span><span class="sxs-lookup"><span data-stu-id="97170-364">DBCOLUMN_BASECOLUMNNAME</span></span>|<span data-ttu-id="97170-365">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="97170-365">The name of the column in the data store.</span></span> <span data-ttu-id="97170-366">这可能是不同的列名称列中返回，如果使用别名的列名称。</span><span class="sxs-lookup"><span data-stu-id="97170-366">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="97170-367">如果无法确定基本列名或列数据中的行集列是派生的但并不完全相同，如果存储一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-367">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="97170-368">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="97170-368">The default of this column is a null value.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="97170-369">若要确保元数据列返回正确的信息，必须调用<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>与`behavior`参数设置为`KeyInfo`。</span><span class="sxs-lookup"><span data-stu-id="97170-369">To make sure that metadata columns return the correct information, you must call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="97170-370">否则，一些架构表中的列可能返回默认情况下，为 null，或不正确数据。</span><span class="sxs-lookup"><span data-stu-id="97170-370">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97170-371"><see cref="T:System.Data.OleDb.OleDbDataReader" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="97170-371">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> is closed.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-372">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-372">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="oleDbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-373">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-373">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-374">获取指定列的字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="97170-374">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="97170-375">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-375">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-376">不执行任何转换;因此检索到的数据必须已经是一个字符串。</span><span class="sxs-lookup"><span data-stu-id="97170-376">No conversions are performed; therefore the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="97170-377">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-377">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-378">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-378">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-379">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-379">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (ordinal As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetTimeSpan : int -&gt; TimeSpan" Usage="oleDbDataReader.GetTimeSpan ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-380">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-380">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-381">以 <see cref="T:System.TimeSpan" /> 对象的形式获取指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-381">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="97170-382">指定列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-382">The value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-383">不执行任何转换;因此，检索到的数据必须已经是<xref:System.TimeSpan>对象。</span><span class="sxs-lookup"><span data-stu-id="97170-383">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="97170-384">调用<xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>若要查找的 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="97170-384">Call <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="97170-385">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="97170-385">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-386">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-386">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="oleDbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-387">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-387">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-388">获取以本机格式表示的指定序号处的列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-388">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="97170-389">要返回的值。</span><span class="sxs-lookup"><span data-stu-id="97170-389">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-390">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="97170-390">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-391">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-391">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="oleDbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="97170-392">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="97170-392">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="97170-393">使用当前行的列值来填充对象数组。</span><span class="sxs-lookup"><span data-stu-id="97170-393">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="97170-394">数组中 <see cref="T:System.Object" /> 的实例的数目。</span><span class="sxs-lookup"><span data-stu-id="97170-394">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-395">对于大多数应用程序，<xref:System.Data.OleDb.OleDbDataReader.GetValues%2A>方法提供了一种有效方式检索所有列，而不是逐个都检索每个列。</span><span class="sxs-lookup"><span data-stu-id="97170-395">For most applications, the <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="97170-396">可以将传递<xref:System.Object>数组，其中包含的结果行中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="97170-396">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="97170-397">数据量<xref:System.Object>数组保存复制到数组。</span><span class="sxs-lookup"><span data-stu-id="97170-397">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="97170-398">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="97170-398">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="97170-399">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="97170-399">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OleDbDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/oledbdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OleDbDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/oledbdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-400">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-400">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-401">获取一个值，该值指示 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 是否包含一行还是多行。</span><span class="sxs-lookup"><span data-stu-id="97170-401">Gets a value that indicates whether the <see cref="T:System.Data.OleDb.OleDbDataReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="97170-402">如果 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97170-402"><see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-403">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-403">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-404">指示是否可关闭数据读取器。</span><span class="sxs-lookup"><span data-stu-id="97170-404">Indicates whether the data reader is closed.</span></span></summary>
        <value><span data-ttu-id="97170-405">如果 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97170-405"><see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbDataReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-406"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 并<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.OleDb.OleDbDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="97170-406"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-407">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-407">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="oleDbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-408">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-408">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-409">获取一个值，该值指示列中是否包含不存在或丢失的值。</span><span class="sxs-lookup"><span data-stu-id="97170-409">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns><span data-ttu-id="97170-410">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97170-410"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-411">调用此方法来查找前调用的类型化的 null 列值 get 方法 (例如， <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>， <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>，依次类推) 以避免引发错误。</span><span class="sxs-lookup"><span data-stu-id="97170-411">Call this method to look for null column values before calling the typed get methods (for example, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-412">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-412">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97170-413">获取以本机格式表示的列的值。</span><span class="sxs-lookup"><span data-stu-id="97170-413">Gets the value of a column in its native format.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-414">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-414">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="97170-415">列序号。</span><span class="sxs-lookup"><span data-stu-id="97170-415">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="97170-416">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="97170-416">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="97170-417">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="97170-417">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="97170-418">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</span><span class="sxs-lookup"><span data-stu-id="97170-418">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-419">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-419">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="97170-420">列名称。</span><span class="sxs-lookup"><span data-stu-id="97170-420">The column name.</span></span></param>
        <summary><span data-ttu-id="97170-421">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="97170-421">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="97170-422">指定列的以本机格式表示的值。</span><span class="sxs-lookup"><span data-stu-id="97170-422">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-423">第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="97170-423">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="97170-424">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="97170-424">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="97170-425">此方法是不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="97170-425">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="97170-426">未找到具有指定名称的列。</span><span class="sxs-lookup"><span data-stu-id="97170-426">No column with the specified name was found.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-427">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-427">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="oleDbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-428">在读取一批 SQL 语句的结果时，使数据读取器前进到下一个结果。</span><span class="sxs-lookup"><span data-stu-id="97170-428">Advances the data reader to the next result, when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="97170-429">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97170-429"><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-430">用于处理多个可以通过执行批处理 SQL 语句生成的结果。</span><span class="sxs-lookup"><span data-stu-id="97170-430">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="97170-431">默认情况下，数据读取器定位在第一个结果。</span><span class="sxs-lookup"><span data-stu-id="97170-431">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-432">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-432">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="oleDbDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-433">让 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 前进到下一条记录。</span><span class="sxs-lookup"><span data-stu-id="97170-433">Advances the <see cref="T:System.Data.OleDb.OleDbDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="97170-434">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97170-434"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-435">默认位置的<xref:System.Data.OleDb.OleDbDataReader>之前第一条记录。</span><span class="sxs-lookup"><span data-stu-id="97170-435">The default position of the <xref:System.Data.OleDb.OleDbDataReader> is before the first record.</span></span> <span data-ttu-id="97170-436">因此，您必须调用<xref:System.Data.OleDb.OleDbDataReader.Read%2A>，开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="97170-436">Therefore, you must call <xref:System.Data.OleDb.OleDbDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="97170-437">虽然<xref:System.Data.OleDb.OleDbDataReader>正在使用中，关联<xref:System.Data.OleDb.OleDbConnection>正忙于为服务它直到您调用<xref:System.Data.OleDb.OleDbDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="97170-437">While the <xref:System.Data.OleDb.OleDbDataReader> is being used, the associated <xref:System.Data.OleDb.OleDbConnection> is busy serving it until you call <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97170-438">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>、 一个<xref:System.Data.OleDb.OleDbCommand>，和一个<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-438">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="97170-439">该示例读取数据，将其写到控制台。</span><span class="sxs-lookup"><span data-stu-id="97170-439">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="97170-440">最后，该示例关闭<xref:System.Data.OleDb.OleDbDataReader>，然后<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="97170-440">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-441">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-441">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-442">通过执行 SQL 语句获取更改、插入或删除的行数。</span><span class="sxs-lookup"><span data-stu-id="97170-442">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="97170-443">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</span><span class="sxs-lookup"><span data-stu-id="97170-443">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-444"><xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>读取所有行并在关闭之前未设置属性<xref:System.Data.OleDb.OleDbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="97170-444">The <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.OleDb.OleDbDataReader>.</span></span>  
  
 <span data-ttu-id="97170-445">此属性的值是累积的。</span><span class="sxs-lookup"><span data-stu-id="97170-445">The value of this property is cumulative.</span></span> <span data-ttu-id="97170-446">例如，如果在批处理模式下的值插入两个记录<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>为两个。</span><span class="sxs-lookup"><span data-stu-id="97170-446">For example, if two records are inserted in batch mode, the value of <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> is two.</span></span>  
  
 <span data-ttu-id="97170-447"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> 并<xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.OleDb.OleDbDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="97170-447"><xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> and <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OleDb.OleDbDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-448">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-448">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-449">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="97170-449">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="97170-450">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="97170-450">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="97170-451">要查找的字段的索引。</span><span class="sxs-lookup"><span data-stu-id="97170-451">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="97170-452">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="97170-452">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></summary>
        <returns><span data-ttu-id="97170-453">指定列序号的 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="97170-453">The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97170-454">释放 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 类的当前实例使用的资源。</span><span class="sxs-lookup"><span data-stu-id="97170-454">Releases the resources used by the current instance of the <see cref="T:System.Data.OleDb.OleDbDataReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97170-455">获取 <see cref="T:System.Data.OleDb.OleDbDataReader" /> 中未隐藏的字段的数目。</span><span class="sxs-lookup"><span data-stu-id="97170-455">Gets the number of fields in the <see cref="T:System.Data.OleDb.OleDbDataReader" /> that are not hidden.</span></span></summary>
        <value><span data-ttu-id="97170-456">未隐藏的字段的数目。</span><span class="sxs-lookup"><span data-stu-id="97170-456">The number of fields that are not hidden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97170-457">此值用于确定 <xref:System.Data.OleDb.OleDbDataReader> 中的可见字段的数目。</span><span class="sxs-lookup"><span data-stu-id="97170-457">This value is used to determine how many fields in the <xref:System.Data.OleDb.OleDbDataReader> are visible.</span></span> <span data-ttu-id="97170-458">例如，对分部主键执行 SELECT 将以隐藏字段的形式返回该键的其余部分。</span><span class="sxs-lookup"><span data-stu-id="97170-458">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="97170-459">隐藏的字段始终追加在可见字段之后。</span><span class="sxs-lookup"><span data-stu-id="97170-459">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="97170-460">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="97170-460">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>