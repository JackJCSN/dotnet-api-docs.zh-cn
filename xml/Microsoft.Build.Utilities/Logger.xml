<Type Name="Logger" FullName="Microsoft.Build.Utilities.Logger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56b409f11b5683a0dd4a870125aa556720ebc572" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63957830" /></Metadata><TypeSignature Language="C#" Value="public abstract class Logger : Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Logger extends System.Object implements class Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.Logger" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Logger&#xA;Implements ILogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class Logger abstract : Microsoft::Build::Framework::ILogger" />
  <TypeSignature Language="F#" Value="type Logger = class&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="501b5-101">在派生窗体中重写时，为处理 MSBuild 引擎引发的事件的记录器提供功能。</span><span class="sxs-lookup"><span data-stu-id="501b5-101">When overridden in a derived form, provides functionality for loggers that handle events raised by the MSBuild engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501b5-102">此抽象类提供的方法和属性的默认实现<xref:Microsoft.Build.Framework.ILogger>接口。</span><span class="sxs-lookup"><span data-stu-id="501b5-102">This abstract class provides default implementations for the methods and properties of the <xref:Microsoft.Build.Framework.ILogger> interface.</span></span>  
  
 <span data-ttu-id="501b5-103">此类仅实例化派生窗体中。</span><span class="sxs-lookup"><span data-stu-id="501b5-103">This class can only be instantiated in a derived form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501b5-104">下面的示例演示如何编写响应生成事件的基本记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-104">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Logger ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Logger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="501b5-105">初始化 <see cref="T:Microsoft.Build.Utilities.Logger" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="501b5-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Logger" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorEvent">
      <MemberSignature Language="C#" Value="public virtual string FormatErrorEvent (Microsoft.Build.Framework.BuildErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatErrorEvent(class Microsoft.Build.Framework.BuildErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FormatErrorEvent (args As BuildErrorEventArgs) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ FormatErrorEvent(Microsoft::Build::Framework::BuildErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member FormatErrorEvent : Microsoft.Build.Framework.BuildErrorEventArgs -&gt; string&#xA;override this.FormatErrorEvent : Microsoft.Build.Framework.BuildErrorEventArgs -&gt; string" Usage="logger.FormatErrorEvent args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Build.Framework.BuildErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="501b5-106">错误事件的自变量。</span><span class="sxs-lookup"><span data-stu-id="501b5-106">The arguments of the error event.</span></span></param>
        <summary><span data-ttu-id="501b5-107">生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> 对象的默认格式的错误消息。</span><span class="sxs-lookup"><span data-stu-id="501b5-107">Generates an error message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> object.</span></span></summary>
        <returns><span data-ttu-id="501b5-108">一个 <see cref="T:System.String" />，表示一条规范格式的错误消息。</span><span class="sxs-lookup"><span data-stu-id="501b5-108">A <see cref="T:System.String" /> that represents an error message in canonical format.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatWarningEvent">
      <MemberSignature Language="C#" Value="public virtual string FormatWarningEvent (Microsoft.Build.Framework.BuildWarningEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatWarningEvent(class Microsoft.Build.Framework.BuildWarningEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FormatWarningEvent (args As BuildWarningEventArgs) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ FormatWarningEvent(Microsoft::Build::Framework::BuildWarningEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member FormatWarningEvent : Microsoft.Build.Framework.BuildWarningEventArgs -&gt; string&#xA;override this.FormatWarningEvent : Microsoft.Build.Framework.BuildWarningEventArgs -&gt; string" Usage="logger.FormatWarningEvent args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Build.Framework.BuildWarningEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="501b5-109">警告事件的自变量。</span><span class="sxs-lookup"><span data-stu-id="501b5-109">The arguments of the warning event.</span></span></param>
        <summary><span data-ttu-id="501b5-110">生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> 对象的默认格式的警告消息。</span><span class="sxs-lookup"><span data-stu-id="501b5-110">Generates a warning message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> object.</span></span></summary>
        <returns><span data-ttu-id="501b5-111">一个 <see cref="T:System.String" />，表示一条规范格式的警告消息。</span><span class="sxs-lookup"><span data-stu-id="501b5-111">A <see cref="T:System.String" /> that represents a warning message in canonical format.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="logger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="501b5-112">记录器可订阅的可用事件。</span><span class="sxs-lookup"><span data-stu-id="501b5-112">The available events that a logger can subscribe to.</span></span></param>
        <summary><span data-ttu-id="501b5-113">在派生类中重写时，订阅特定事件的记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-113">When overridden in a derived class, subscribes the logger to specific events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501b5-114">必须执行的初始化逻辑并订阅生成事件由发布在派生类中重写此方法<xref:Microsoft.Build.Framework.IEventSource>。</span><span class="sxs-lookup"><span data-stu-id="501b5-114">This method must be overridden in the derived class to perform initialization logic and to subscribe to build events published by <xref:Microsoft.Build.Framework.IEventSource>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501b5-115">下面的示例演示如何编写响应生成事件的基本记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-115">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVerbosityAtLeast">
      <MemberSignature Language="C#" Value="public bool IsVerbosityAtLeast (Microsoft.Build.Framework.LoggerVerbosity checkVerbosity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVerbosityAtLeast(valuetype Microsoft.Build.Framework.LoggerVerbosity checkVerbosity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVerbosityAtLeast (checkVerbosity As LoggerVerbosity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVerbosityAtLeast(Microsoft::Build::Framework::LoggerVerbosity checkVerbosity);" />
      <MemberSignature Language="F#" Value="member this.IsVerbosityAtLeast : Microsoft.Build.Framework.LoggerVerbosity -&gt; bool" Usage="logger.IsVerbosityAtLeast checkVerbosity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkVerbosity" Type="Microsoft.Build.Framework.LoggerVerbosity" />
      </Parameters>
      <Docs>
        <param name="checkVerbosity"><span data-ttu-id="501b5-116">传入的记录器详细级别设置。</span><span class="sxs-lookup"><span data-stu-id="501b5-116">The logger verbosity setting passed in.</span></span></param>
        <summary><span data-ttu-id="501b5-117">确定当前的 <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> 设置是否至少是传入的值。</span><span class="sxs-lookup"><span data-stu-id="501b5-117">Determines whether the current <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> setting is at least the value that is passed in.</span></span></summary>
        <returns><span data-ttu-id="501b5-118">如果当前的记录器详细级别设置至少是传入的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="501b5-118"><see langword="true" /> if the current logger verbosity setting is at least the value that is passed in; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="501b5-119">下面的示例演示如何编写响应生成事件的基本记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-119">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.Logger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.Logger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="501b5-120">获取或设置记录器的用户定义参数。</span><span class="sxs-lookup"><span data-stu-id="501b5-120">Gets or sets the user-defined parameters of the logger.</span></span></summary>
        <value><span data-ttu-id="501b5-121">记录器参数。</span><span class="sxs-lookup"><span data-stu-id="501b5-121">The logger parameters.</span></span> <span data-ttu-id="501b5-122">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="501b5-122">This value can be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501b5-123">如果派生的类不采用参数，则可以忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="501b5-123">If the derived class does not take parameters, then it can ignore this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501b5-124">下面的示例演示如何编写响应生成事件的基本记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-124">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public virtual void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="logger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="501b5-125">当在派生类中重写时，释放在初始化时和生成期间分配给记录器的资源。</span><span class="sxs-lookup"><span data-stu-id="501b5-125">When overridden in a derived class, releases the resources allocated to the logger at the time of initialization or during the build.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501b5-126">可以在要执行的关闭逻辑，如发布占用的资源的派生类中重写此方法。</span><span class="sxs-lookup"><span data-stu-id="501b5-126">This method can be overridden in the derived class to perform shutdown logic, such as releasing acquired resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="501b5-127">下面的示例演示如何编写响应生成事件的基本记录器。</span><span class="sxs-lookup"><span data-stu-id="501b5-127">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.Logger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.Logger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="501b5-128">获取或设置要显示在事件日志中的详细信息的级别。</span><span class="sxs-lookup"><span data-stu-id="501b5-128">Gets or sets the level of detail to show in the event log.</span></span></summary>
        <value><span data-ttu-id="501b5-129">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="501b5-129">One of the enumeration values.</span></span> <span data-ttu-id="501b5-130">默认值为 <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="501b5-130">The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="501b5-131">尽管记录器可以自由选择它记录的事件，详细级别准则创建一致的用户体验。</span><span class="sxs-lookup"><span data-stu-id="501b5-131">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>