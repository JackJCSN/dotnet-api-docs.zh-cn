<Type Name="HybridDictionary" FullName="System.Collections.Specialized.HybridDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="969ed68bcbb5f81928b0d5075d68078fb02a7f1a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70671099" /></Metadata><TypeSignature Language="C#" Value="public class HybridDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HybridDictionary extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.HybridDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Class HybridDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class HybridDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type HybridDictionary = class&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4af2e-101">通过以下方法来实现 <see langword="IDictionary" />：在集合较小时使用 <see cref="T:System.Collections.Specialized.ListDictionary" />，然后在集合变大时切换到 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-101">Implements <see langword="IDictionary" /> by using a <see cref="T:System.Collections.Specialized.ListDictionary" /> while the collection is small, and then switching to a <see cref="T:System.Collections.Hashtable" /> when the collection gets large.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-102">如果字典中的元素数量未知，则建议使用此类。</span><span class="sxs-lookup"><span data-stu-id="4af2e-102">This class is recommended for cases where the number of elements in a dictionary is unknown.</span></span> <span data-ttu-id="4af2e-103">它充分利用了<xref:System.Collections.Specialized.ListDictionary>具有较小集合的的改进性能，并提供了切换<xref:System.Collections.Hashtable>到的灵活性，从而更好地<xref:System.Collections.Specialized.ListDictionary>处理更大的集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-103">It takes advantage of the improved performance of a <xref:System.Collections.Specialized.ListDictionary> with small collections, and offers the flexibility of switching to a <xref:System.Collections.Hashtable> which handles larger collections better than <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 <span data-ttu-id="4af2e-104">如果集合的初始大小大于的最佳<xref:System.Collections.Specialized.ListDictionary>大小，则集合存储<xref:System.Collections.Hashtable>在中，以避免将中<xref:System.Collections.Specialized.ListDictionary>的<xref:System.Collections.Hashtable>元素复制到的系统开销。</span><span class="sxs-lookup"><span data-stu-id="4af2e-104">If the initial size of the collection is greater than the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the collection is stored in a <xref:System.Collections.Hashtable> to avoid the overhead of copying elements from the <xref:System.Collections.Specialized.ListDictionary> to a <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="4af2e-105">构造函数接受一个布尔型参数，该参数允许用户指定在比较字符串时集合是否忽略大小写。</span><span class="sxs-lookup"><span data-stu-id="4af2e-105">The constructor accepts a Boolean parameter that allows the user to specify whether the collection ignores the case when comparing strings.</span></span> <span data-ttu-id="4af2e-106">如果集合区分大小写，则使用<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>的键实现。</span><span class="sxs-lookup"><span data-stu-id="4af2e-106">If the collection is case-sensitive, it uses the key's implementations of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af2e-107">如果该集合不区分大小写，它将执行简单的不区分大小写的比较，这只会服从固定区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="4af2e-107">If the collection is case-insensitive, it performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</span></span> <span data-ttu-id="4af2e-108">默认情况下，该集合区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4af2e-108">By default, the collection is case-sensitive.</span></span> <span data-ttu-id="4af2e-109">有关固定区域性的详细信息，请参阅<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-109">For more information on the invariant culture, see <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4af2e-110">键不能为 null，但值可以为。</span><span class="sxs-lookup"><span data-stu-id="4af2e-110">A key cannot be null, but a value can.</span></span>  
  
 <span data-ttu-id="4af2e-111">语言的`For Each`语句（在 Visual Basic 中）返回集合中元素的类型的对象。 `foreach` C#</span><span class="sxs-lookup"><span data-stu-id="4af2e-111">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="4af2e-112">由于的<xref:System.Collections.Specialized.HybridDictionary>每个元素都是键/值对，因此元素类型不是键的类型或值的类型。</span><span class="sxs-lookup"><span data-stu-id="4af2e-112">Since each element of the <xref:System.Collections.Specialized.HybridDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="4af2e-113">相反，元素类型为<xref:System.Collections.DictionaryEntry>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-113">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="4af2e-114">例如:</span><span class="sxs-lookup"><span data-stu-id="4af2e-114">For example:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CS/source2.cs#2)]
 [!code-vb[System.Collections.Specialized.HybridDictionary2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/VB/source2.vb#2)]  
  
 <span data-ttu-id="4af2e-115">`foreach`语句是枚举器周围的包装器，它仅允许从集合读取，而不是写入到集合中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-115">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-116">下面的代码示例演示了的多个属性和方法<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-116">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CPP/hybriddictionary.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CS/hybriddictionary.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/VB/hybriddictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4af2e-117">此类型的<see langword="Shared" />公共静态（在 Visual Basic）成员是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-117">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="4af2e-118">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-118">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="4af2e-119">此实现不提供的同步（线程安全）包装<see cref="T:System.Collections.Specialized.HybridDictionary" />器，但派生类可以使用<see cref="P:System.Collections.Specialized.HybridDictionary.SyncRoot" />属性创建其自身的<see cref="T:System.Collections.Specialized.HybridDictionary" />同步版本。</span><span class="sxs-lookup"><span data-stu-id="4af2e-119">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.HybridDictionary" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.HybridDictionary" /> using the <see cref="P:System.Collections.Specialized.HybridDictionary.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="4af2e-120">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="4af2e-120">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="4af2e-121">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-121">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4af2e-122">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-122">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Specialized.ListDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-123">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-123">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4af2e-124">初始化 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4af2e-124">Initializes a new instance of the <see cref="T:System.Collections.Specialized.HybridDictionary" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HybridDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4af2e-125">创建区分大小写的空白 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-125">Creates an empty case-sensitive <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-126">默认情况下，该集合区分大小写，并使用的键实现<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>作为哈希代码提供程序，并使用键作为比较器的<xref:System.Object.Equals%2A?displayProperty=nameWithType>实现。</span><span class="sxs-lookup"><span data-stu-id="4af2e-126">By default, the collection is case-sensitive and uses the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> as the hash code provider and the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType> as the comparer.</span></span>  
  
 <span data-ttu-id="4af2e-127">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="4af2e-127">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="4af2e-128">中的每个<xref:System.Collections.Specialized.HybridDictionary>键都必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-128">Every key in a <xref:System.Collections.Specialized.HybridDictionary> must be unique.</span></span>  
  
 <span data-ttu-id="4af2e-129">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="4af2e-129">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-130">下面的代码示例演示了的多个属性和方法<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-130">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CPP/hybriddictionary.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CS/hybriddictionary.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/VB/hybriddictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-131">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-131">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridDictionary (bool caseInsensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool caseInsensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (caseInsensitive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HybridDictionary(bool caseInsensitive);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.HybridDictionary : bool -&gt; System.Collections.Specialized.HybridDictionary" Usage="new System.Collections.Specialized.HybridDictionary caseInsensitive" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="caseInsensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caseInsensitive"><span data-ttu-id="4af2e-132">一个布尔值，它表示 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4af2e-132">A Boolean that denotes whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is case-insensitive.</span></span></param>
        <summary><span data-ttu-id="4af2e-133">创建使用指定的大小写规则的空白 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-133">Creates an empty <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified case sensitivity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-134">如果`caseInsensitive` <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> <xref:System.Object.Equals%2A?displayProperty=nameWithType>为`false`，则该集合使用和的键的实现。</span><span class="sxs-lookup"><span data-stu-id="4af2e-134">If `caseInsensitive` is `false`, the collection uses the key's implementations of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af2e-135">如果`caseInsensitive`为`true`，则该集合将执行简单的不区分大小写的比较，这只会服从固定区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="4af2e-135">If `caseInsensitive` is `true`, the collection performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</span></span> <span data-ttu-id="4af2e-136">有关固定区域性的详细信息，请参阅<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-136">For more information on the invariant culture, see <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4af2e-137">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="4af2e-137">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-138">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-138">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridDictionary (int initialSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HybridDictionary(int initialSize);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.HybridDictionary : int -&gt; System.Collections.Specialized.HybridDictionary" Usage="new System.Collections.Specialized.HybridDictionary initialSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialSize"><span data-ttu-id="4af2e-139"><see cref="T:System.Collections.Specialized.HybridDictionary" /> 最初可包含的大概项数。</span><span class="sxs-lookup"><span data-stu-id="4af2e-139">The approximate number of entries that the <see cref="T:System.Collections.Specialized.HybridDictionary" /> can initially contain.</span></span></param>
        <summary><span data-ttu-id="4af2e-140">创建具有指定的初始大小且区分大小写的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-140">Creates a case-sensitive <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified initial size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-141">如果集合的初始大小大于的最佳<xref:System.Collections.Specialized.ListDictionary>大小，则集合存储<xref:System.Collections.Hashtable>在中，以避免将中<xref:System.Collections.Specialized.ListDictionary>的<xref:System.Collections.Hashtable>元素复制到的系统开销。</span><span class="sxs-lookup"><span data-stu-id="4af2e-141">If the initial size of the collection is greater than the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the collection is stored in a <xref:System.Collections.Hashtable> to avoid the overhead of copying elements from the <xref:System.Collections.Specialized.ListDictionary> to the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="4af2e-142">默认情况下，该集合区分大小写，并使用的键实现<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>作为哈希代码提供程序，并使用键作为比较器的<xref:System.Object.Equals%2A?displayProperty=nameWithType>实现。</span><span class="sxs-lookup"><span data-stu-id="4af2e-142">By default, the collection is case-sensitive and uses the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> as the hash code provider and the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType> as the comparer.</span></span>  
  
 <span data-ttu-id="4af2e-143">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="4af2e-143">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="4af2e-144">中的每个<xref:System.Collections.Specialized.HybridDictionary>键都必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-144">Every key in a <xref:System.Collections.Specialized.HybridDictionary> must be unique.</span></span>  
  
 <span data-ttu-id="4af2e-145">此构造函数是一个 O`n`（）运算， `n`其中`initialSize`是。</span><span class="sxs-lookup"><span data-stu-id="4af2e-145">This constructor is an O(`n`) operation, where `n` is `initialSize`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-146">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-146">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridDictionary (int initialSize, bool caseInsensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialSize, bool caseInsensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialSize As Integer, caseInsensitive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HybridDictionary(int initialSize, bool caseInsensitive);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.HybridDictionary : int * bool -&gt; System.Collections.Specialized.HybridDictionary" Usage="new System.Collections.Specialized.HybridDictionary (initialSize, caseInsensitive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialSize" Type="System.Int32" />
        <Parameter Name="caseInsensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialSize"><span data-ttu-id="4af2e-147"><see cref="T:System.Collections.Specialized.HybridDictionary" /> 最初可包含的大概项数。</span><span class="sxs-lookup"><span data-stu-id="4af2e-147">The approximate number of entries that the <see cref="T:System.Collections.Specialized.HybridDictionary" /> can initially contain.</span></span></param>
        <param name="caseInsensitive"><span data-ttu-id="4af2e-148">一个布尔值，它表示 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4af2e-148">A Boolean that denotes whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is case-insensitive.</span></span></param>
        <summary><span data-ttu-id="4af2e-149">创建具有指定的初始大小和大小写规则的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-149">Creates a <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified initial size and case sensitivity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-150">如果集合的初始大小大于的最佳<xref:System.Collections.Specialized.ListDictionary>大小，则集合存储<xref:System.Collections.Hashtable>在中，以避免将中<xref:System.Collections.Specialized.ListDictionary>的<xref:System.Collections.Hashtable>元素复制到的系统开销。</span><span class="sxs-lookup"><span data-stu-id="4af2e-150">If the initial size of the collection is greater than the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the collection is stored in a <xref:System.Collections.Hashtable> to avoid the overhead of copying elements from the <xref:System.Collections.Specialized.ListDictionary> to the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="4af2e-151">如果`caseInsensitive` <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> <xref:System.Object.Equals%2A?displayProperty=nameWithType>为`false`，则该集合使用和的键的实现。</span><span class="sxs-lookup"><span data-stu-id="4af2e-151">If `caseInsensitive` is `false`, the collection uses the key's implementations of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4af2e-152">如果`caseInsensitive`为`true`，则该集合将执行简单的不区分大小写的比较，这只会服从固定区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="4af2e-152">If `caseInsensitive` is `true`, the collection performs a simple ordinal case-insensitive comparison, which obeys the casing rules of the invariant culture only.</span></span> <span data-ttu-id="4af2e-153">有关固定区域性的详细信息，请参阅<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-153">For more information on the invariant culture, see <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4af2e-154">此构造函数是一个 O`n`（）运算， `n`其中`initialSize`是。</span><span class="sxs-lookup"><span data-stu-id="4af2e-154">This constructor is an O(`n`) operation, where `n` is `initialSize`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-155">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-155">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hybridDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4af2e-156">要添加的条目的键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-156">The key of the entry to add.</span></span></param>
        <param name="value"><span data-ttu-id="4af2e-157">要添加的项的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-157">The value of the entry to add.</span></span> <span data-ttu-id="4af2e-158">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-158">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4af2e-159">将带有指定键和值的条目添加到 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-159">Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-160">通常不应将其状态与其哈希代码值之间的关联的对象用作键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-160">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="4af2e-161">例如，字符串对象比用于键的 StringBuilder 对象更好。</span><span class="sxs-lookup"><span data-stu-id="4af2e-161">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="4af2e-162">键不能为`null`，但值可以为。</span><span class="sxs-lookup"><span data-stu-id="4af2e-162">A key cannot be `null`, but a value can.</span></span>  
  
 <span data-ttu-id="4af2e-163">你还可以使用<xref:System.Collections.Specialized.HybridDictionary.Item%2A>属性来添加新元素，方法是设置<xref:System.Collections.Specialized.HybridDictionary>中不存在的键的值; 例如`myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="4af2e-163">You can also use the <xref:System.Collections.Specialized.HybridDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.HybridDictionary>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="4af2e-164">但是，如果指定的键已存在于中<xref:System.Collections.Specialized.HybridDictionary>，则<xref:System.Collections.Specialized.HybridDictionary.Item%2A>设置属性会覆盖旧值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-164">However, if the specified key already exists in the <xref:System.Collections.Specialized.HybridDictionary>, setting the <xref:System.Collections.Specialized.HybridDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="4af2e-165">与此<xref:System.Collections.Specialized.HybridDictionary.Add%2A>相反，方法不会修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-165">In contrast, the <xref:System.Collections.Specialized.HybridDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="4af2e-166">如果元素数变得大于的最佳大小<xref:System.Collections.Specialized.ListDictionary>，则会将元素<xref:System.Collections.Specialized.ListDictionary>从复制到<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-166">When the number of elements becomes greater than the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the elements are copied from the <xref:System.Collections.Specialized.ListDictionary> to a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="4af2e-167">但是，这种情况只发生一次。</span><span class="sxs-lookup"><span data-stu-id="4af2e-167">However, this only happens once.</span></span> <span data-ttu-id="4af2e-168">如果集合已存储在中<xref:System.Collections.Hashtable>并且元素数低于的最佳大小<xref:System.Collections.Specialized.ListDictionary>， <xref:System.Collections.Hashtable>则该集合将保留在中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-168">If the collection is already stored in a <xref:System.Collections.Hashtable> and the number of elements falls below the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the collection remains in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="4af2e-169">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-169">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-170">下面的代码示例在中<xref:System.Collections.Specialized.HybridDictionary>添加和移除元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-170">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CPP/hybriddictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CS/hybriddictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/VB/hybriddictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4af2e-171"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-171"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4af2e-172">带有相同键的项已经存在于 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-172">An entry with the same key already exists in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hybridDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4af2e-173">从 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中移除所有项。</span><span class="sxs-lookup"><span data-stu-id="4af2e-173">Removes all entries from the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-174"><xref:System.Collections.Specialized.HybridDictionary.Count%2A>设置为零，还会释放对集合的元素的其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="4af2e-174"><xref:System.Collections.Specialized.HybridDictionary.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="4af2e-175">如果集合已存储在中<xref:System.Collections.Hashtable>，则集合将保留<xref:System.Collections.Hashtable>在中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-175">If the collection is already stored in a <xref:System.Collections.Hashtable>, the collection remains in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="4af2e-176">此方法是 O （`n`）运算，其中`n`是<xref:System.Collections.Specialized.HybridDictionary.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-176">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-177">下面的代码示例在中<xref:System.Collections.Specialized.HybridDictionary>添加和移除元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-177">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CPP/hybriddictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CS/hybriddictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/VB/hybriddictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hybridDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4af2e-178">要在 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中定位的键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-178">The key to locate in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></param>
        <summary><span data-ttu-id="4af2e-179">确定 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否包含特定键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-179">Determines whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="4af2e-180">如果 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 包含具有指定键的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-180"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.HybridDictionary" /> contains an entry with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-181">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-181">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="4af2e-182">从 .NET Framework 2.0 开始，此方法使用<xref:System.Object.Equals%2A>集合的对象的和<xref:System.IComparable.CompareTo%2A>方法`key`来确定是否`item`存在。</span><span class="sxs-lookup"><span data-stu-id="4af2e-182">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="4af2e-183">在 .NET Framework 的早期版本中，此决定是通过对集合中的<xref:System.Object.Equals%2A>对象<xref:System.IComparable.CompareTo%2A>使用`item`参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-183">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-184">下面的代码示例在中<xref:System.Collections.Specialized.HybridDictionary>搜索元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-184">The following code example searches for an element in a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Contains/CPP/hybriddictionary_contains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Contains/CS/hybriddictionary_contains.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Contains/VB/hybriddictionary_contains.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4af2e-185"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-185"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-186">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-186">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hybridDictionary.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4af2e-187">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.DictionaryEntry" /> 复制的 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 对象的目标位置。</span><span class="sxs-lookup"><span data-stu-id="4af2e-187">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span> <span data-ttu-id="4af2e-188"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="4af2e-188">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="4af2e-189"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="4af2e-189">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="4af2e-190">将 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 项复制到位于指定索引处的一维 <see cref="T:System.Array" /> 实例中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-190">Copies the <see cref="T:System.Collections.Specialized.HybridDictionary" /> entries to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-191">元素<xref:System.Array>按枚举器循环访问<xref:System.Collections.Specialized.HybridDictionary>的相同顺序复制到中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-191">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 <span data-ttu-id="4af2e-192">若要仅复制中<xref:System.Collections.Specialized.HybridDictionary>的密钥，请使用。 `HybridDictionary.Keys.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="4af2e-192">To copy only the keys in the <xref:System.Collections.Specialized.HybridDictionary>, use `HybridDictionary.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="4af2e-193">若要仅复制中<xref:System.Collections.Specialized.HybridDictionary>的值，请使用。 `HybridDictionary.Values.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="4af2e-193">To copy only the values in the <xref:System.Collections.Specialized.HybridDictionary>, use `HybridDictionary.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="4af2e-194">此方法是 O （`n`）运算，其中`n`是<xref:System.Collections.Specialized.HybridDictionary.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-194">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-195">下面的代码示例将的元素<xref:System.Collections.Specialized.HybridDictionary>复制到一个数组中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-195">The following code example copies the elements of a <xref:System.Collections.Specialized.HybridDictionary> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_CopyTo/CPP/hybriddictionary_copyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_CopyTo/CS/hybriddictionary_copyto.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_CopyTo/VB/hybriddictionary_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4af2e-196"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-196"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4af2e-197"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4af2e-197"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4af2e-198"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-198"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="4af2e-199">或</span><span class="sxs-lookup"><span data-stu-id="4af2e-199">-or-</span></span> 
<span data-ttu-id="4af2e-200">源 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中的元素个数大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="4af2e-200">The number of elements in the source <see cref="T:System.Collections.Specialized.HybridDictionary" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4af2e-201">无法自动将源 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="4af2e-201">The type of the source <see cref="T:System.Collections.Specialized.HybridDictionary" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Specialized.HybridDictionary.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.HybridDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-202">获取包含在 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中的键/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="4af2e-202">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <value><span data-ttu-id="4af2e-203">包含在 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中的键/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="4af2e-203">The number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span>  
  
<span data-ttu-id="4af2e-204">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-204">Retrieving the value of this property is an O(1) operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4af2e-205">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-205">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hybridDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4af2e-206">返回循环访问 <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-206">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="4af2e-207"><see cref="T:System.Collections.IDictionaryEnumerator" /> 的一个 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-207">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-208">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="4af2e-208">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="4af2e-209">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="4af2e-209">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="4af2e-210">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-210">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="4af2e-211">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="4af2e-211">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="4af2e-212"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="4af2e-212"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="4af2e-213">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-213">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="4af2e-214">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-214">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="4af2e-215">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="4af2e-215"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="4af2e-216"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-216"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="4af2e-217">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="4af2e-217">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4af2e-218">当枚举器位于此位置时，对<xref:System.Collections.IEnumerator.MoveNext%2A>的后续调用也将返回。 `false`</span><span class="sxs-lookup"><span data-stu-id="4af2e-218">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="4af2e-219">如果最后一次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`， <xref:System.Collections.IEnumerator.Current%2A>则未定义。</span><span class="sxs-lookup"><span data-stu-id="4af2e-219">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="4af2e-220">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-220">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="4af2e-221">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="4af2e-221">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4af2e-222">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="4af2e-222">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="4af2e-223">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="4af2e-223">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="4af2e-224">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-224">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="4af2e-225">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="4af2e-225">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="4af2e-226">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-226">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-227">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-227">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Specialized.HybridDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-228">获取一个值，该值指示 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="4af2e-228">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="4af2e-229">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-229">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-230"><xref:System.Collections.Specialized.HybridDictionary>实现属性，因为它是<xref:System.Collections.IDictionary?displayProperty=nameWithType>接口所必需的。 <xref:System.Collections.Specialized.HybridDictionary.IsFixedSize%2A></span><span class="sxs-lookup"><span data-stu-id="4af2e-230"><xref:System.Collections.Specialized.HybridDictionary> implements the <xref:System.Collections.Specialized.HybridDictionary.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4af2e-231">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-231">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="4af2e-232">具有固定大小的集合就是一个集合，其中包含阻止添加和移除元素的包装;因此，如果对基础集合进行了更改，包括添加或删除元素，则固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="4af2e-232">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="4af2e-233">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-233">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Specialized.HybridDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-234">获取一个值，该值指示 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="4af2e-234">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="4af2e-235">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-235">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-236"><xref:System.Collections.Specialized.HybridDictionary>实现属性，因为它是<xref:System.Collections.IDictionary?displayProperty=nameWithType>接口所必需的。 <xref:System.Collections.Specialized.HybridDictionary.IsReadOnly%2A></span><span class="sxs-lookup"><span data-stu-id="4af2e-236"><xref:System.Collections.Specialized.HybridDictionary> implements the <xref:System.Collections.Specialized.HybridDictionary.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4af2e-237">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-237">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="4af2e-238">只读集合就是一个集合，其中包含阻止修改集合的包装器;因此，如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="4af2e-238">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="4af2e-239">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-239">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Specialized.HybridDictionary.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-240">获取一个值，该值指示 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 是否是同步的（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="4af2e-240">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="4af2e-241">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-241">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-242"><xref:System.Collections.Specialized.HybridDictionary>实现属性，因为它是<xref:System.Collections.ICollection?displayProperty=nameWithType>接口所必需的。 <xref:System.Collections.Specialized.HybridDictionary.IsSynchronized%2A></span><span class="sxs-lookup"><span data-stu-id="4af2e-242"><xref:System.Collections.Specialized.HybridDictionary> implements the <xref:System.Collections.Specialized.HybridDictionary.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="4af2e-243">派生类可以<xref:System.Collections.Specialized.HybridDictionary> <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>使用属性提供的同步版本。</span><span class="sxs-lookup"><span data-stu-id="4af2e-243">Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.HybridDictionary> using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="4af2e-244">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="4af2e-244">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="4af2e-245">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-245">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4af2e-246">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-246">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-247">下面的代码示例演示如何使用<xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-247">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CS/source2.cs#3)]
 [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/VB/source2.vb#3)]  
  
 <span data-ttu-id="4af2e-248">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.HybridDictionary.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Specialized.HybridDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4af2e-249">要获取或设置其值的键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-249">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="4af2e-250">获取或设置与指定的键关联的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-250">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="4af2e-251">与指定的键相关联的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-251">The value associated with the specified key.</span></span> <span data-ttu-id="4af2e-252">如果未找到指定的键，尝试获取它将返回 <see langword="null" />，尝试设置它将使用指定的键创建新项。</span><span class="sxs-lookup"><span data-stu-id="4af2e-252">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new entry using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-253">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="4af2e-253">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="4af2e-254">你还可以使用<xref:System.Collections.Specialized.HybridDictionary.Item%2A>属性来添加新元素，方法是设置<xref:System.Collections.Specialized.HybridDictionary>中不存在的键的值; 例如`myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="4af2e-254">You can also use the <xref:System.Collections.Specialized.HybridDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.HybridDictionary>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="4af2e-255">但是，如果指定的键已存在于中<xref:System.Collections.Specialized.HybridDictionary>，则<xref:System.Collections.Specialized.HybridDictionary.Item%2A>设置属性会覆盖旧值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-255">However, if the specified key already exists in the <xref:System.Collections.Specialized.HybridDictionary>, setting the <xref:System.Collections.Specialized.HybridDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="4af2e-256">与此<xref:System.Collections.Specialized.HybridDictionary.Add%2A>相反，方法不会修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-256">In contrast, the <xref:System.Collections.Specialized.HybridDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="4af2e-257">键不能为`null`，但值可以为。</span><span class="sxs-lookup"><span data-stu-id="4af2e-257">A key cannot be `null`, but a value can.</span></span> <span data-ttu-id="4af2e-258">若要区分`null`返回的，因为找不到指定的键， `null`并且因为指定的<xref:System.Collections.Specialized.HybridDictionary.Contains%2A>键的值为`null`而返回，则使用方法确定该键是否存在于列表中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-258">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.HybridDictionary.Contains%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="4af2e-259">该C#语言使用[this](~/docs/csharp/language-reference/keywords/this.md)关键字来定义索引器，而不是实现<xref:System.Collections.Specialized.HybridDictionary.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4af2e-259">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.HybridDictionary.Item%2A> property.</span></span> <span data-ttu-id="4af2e-260">Visual Basic 将 <xref:System.Collections.Specialized.HybridDictionary.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="4af2e-260">Visual Basic implements <xref:System.Collections.Specialized.HybridDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="4af2e-261">检索此属性的值的运算复杂度为 O （1）;设置属性也是 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-261">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-262">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-262">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4af2e-263"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-263"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-264">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-264">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Specialized.HybridDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-265">获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-265">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <value><span data-ttu-id="4af2e-266">包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-266">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-267">中<xref:System.Collections.ICollection>值的顺序未指定，但其顺序与<xref:System.Collections.Specialized.HybridDictionary.Values%2A>方法返回的<xref:System.Collections.ICollection>中的关联值的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="4af2e-267">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.HybridDictionary.Values%2A> method.</span></span>  
  
 <span data-ttu-id="4af2e-268">返回<xref:System.Collections.ICollection>的不是静态副本; 相反<xref:System.Collections.ICollection> ，引用的是原始<xref:System.Collections.Specialized.HybridDictionary>中的键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-268">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.HybridDictionary>.</span></span> <span data-ttu-id="4af2e-269">因此，对的<xref:System.Collections.Specialized.HybridDictionary>更改将继续反映<xref:System.Collections.ICollection>在中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-269">Therefore, changes to the <xref:System.Collections.Specialized.HybridDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="4af2e-270">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-270">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-271">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-271">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Specialized.HybridDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hybridDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4af2e-272">要移除的项的键。</span><span class="sxs-lookup"><span data-stu-id="4af2e-272">The key of the entry to remove.</span></span></param>
        <summary><span data-ttu-id="4af2e-273">从 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中移除带有指定键的项。</span><span class="sxs-lookup"><span data-stu-id="4af2e-273">Removes the entry with the specified key from the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-274">如果不包含具有指定键的元素，则将<xref:System.Collections.Specialized.HybridDictionary>保持不变。 <xref:System.Collections.Specialized.HybridDictionary></span><span class="sxs-lookup"><span data-stu-id="4af2e-274">If the <xref:System.Collections.Specialized.HybridDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.HybridDictionary> remains unchanged.</span></span> <span data-ttu-id="4af2e-275">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-275">No exception is thrown.</span></span>  
  
 <span data-ttu-id="4af2e-276">如果集合已存储在<xref:System.Collections.Hashtable>中并且元素数低于的最佳大小<xref:System.Collections.Specialized.ListDictionary>， <xref:System.Collections.Hashtable>则该集合将保留在中，以<xref:System.Collections.Hashtable>避免将元素从复制到 <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="4af2e-276">If the collection is already stored in a <xref:System.Collections.Hashtable> and the number of elements falls below the optimal size for a <xref:System.Collections.Specialized.ListDictionary>, the collection remains in the <xref:System.Collections.Hashtable> to avoid the overhead of copying elements from the <xref:System.Collections.Hashtable> back to a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 <span data-ttu-id="4af2e-277">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-277">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-278">下面的代码示例在中<xref:System.Collections.Specialized.HybridDictionary>添加和移除元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-278">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CPP/hybriddictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/CS/hybriddictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_AddRemove/VB/hybriddictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4af2e-279"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-279"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="4af2e-280">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="4af2e-280">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Specialized.HybridDictionary.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-281">获取可用于同步对 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="4af2e-281">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <value><span data-ttu-id="4af2e-282">可用于同步对 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="4af2e-282">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-283">派生类可以<xref:System.Collections.Specialized.HybridDictionary> <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>使用属性提供自己的同步版本。</span><span class="sxs-lookup"><span data-stu-id="4af2e-283">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.HybridDictionary> using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> property.</span></span> <span data-ttu-id="4af2e-284">同步代码必须对的执行操作<xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> <xref:System.Collections.Specialized.HybridDictionary> <xref:System.Collections.Specialized.HybridDictionary>，而不是直接在上执行操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-284">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> of the <xref:System.Collections.Specialized.HybridDictionary>, not directly on the <xref:System.Collections.Specialized.HybridDictionary>.</span></span> <span data-ttu-id="4af2e-285">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-285">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="4af2e-286">具体而言，它与可能同时修改<xref:System.Collections.Specialized.HybridDictionary>对象的其他线程保持正确的同步。</span><span class="sxs-lookup"><span data-stu-id="4af2e-286">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.HybridDictionary> object.</span></span>  
  
 <span data-ttu-id="4af2e-287">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="4af2e-287">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="4af2e-288">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-288">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4af2e-289">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-289">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-290">下面的代码示例演示如何使用<xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-290">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/CS/source2.cs#3)]
 [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary2/VB/source2.vb#3)]  
  
 <span data-ttu-id="4af2e-291">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-291">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.HybridDictionary.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4af2e-292">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-292">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="4af2e-293"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="4af2e-293">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-294">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="4af2e-294">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="4af2e-295">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="4af2e-295">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="4af2e-296">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="4af2e-296">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="4af2e-297">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="4af2e-297">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="4af2e-298"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="4af2e-298"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="4af2e-299">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-299">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="4af2e-300">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-300">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="4af2e-301">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="4af2e-301"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="4af2e-302"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="4af2e-302"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="4af2e-303">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="4af2e-303">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4af2e-304">当枚举器位于此位置时，对<xref:System.Collections.IEnumerator.MoveNext%2A>的后续调用也将返回。 `false`</span><span class="sxs-lookup"><span data-stu-id="4af2e-304">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="4af2e-305">如果最后一次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则<xref:System.Collections.IEnumerator.Current%2A>调用会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-305">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="4af2e-306">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-306">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="4af2e-307">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="4af2e-307">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4af2e-308">如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并且对<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>的下<xref:System.InvalidOperationException>一个调用将引发。</span><span class="sxs-lookup"><span data-stu-id="4af2e-308">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="4af2e-309">如果在和<xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>之间修改集合， <xref:System.Collections.IEnumerator.Current%2A>则将返回它设置为的元素，即使枚举器已失效也是如此。</span><span class="sxs-lookup"><span data-stu-id="4af2e-309">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="4af2e-310">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="4af2e-310">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="4af2e-311">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-311">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4af2e-312">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="4af2e-312">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="4af2e-313">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="4af2e-313">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-314">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-314">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.HybridDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Specialized.HybridDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4af2e-315">获取一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-315">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></summary>
        <value><span data-ttu-id="4af2e-316">一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 中的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-316">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4af2e-317">中<xref:System.Collections.ICollection>值的顺序未指定，但其顺序与<xref:System.Collections.Specialized.HybridDictionary.Keys%2A>方法返回的<xref:System.Collections.ICollection>中的关联键的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="4af2e-317">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.HybridDictionary.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="4af2e-318">返回<xref:System.Collections.ICollection>的不是静态副本; 而<xref:System.Collections.ICollection>是指返回到原始<xref:System.Collections.Specialized.HybridDictionary>中的值。</span><span class="sxs-lookup"><span data-stu-id="4af2e-318">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.HybridDictionary>.</span></span> <span data-ttu-id="4af2e-319">因此，对的<xref:System.Collections.Specialized.HybridDictionary>更改将继续反映<xref:System.Collections.ICollection>在中。</span><span class="sxs-lookup"><span data-stu-id="4af2e-319">Therefore, changes to the <xref:System.Collections.Specialized.HybridDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="4af2e-320">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="4af2e-320">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4af2e-321">下面的代码示例枚举的元素<xref:System.Collections.Specialized.HybridDictionary>。</span><span class="sxs-lookup"><span data-stu-id="4af2e-321">The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CPP/hybriddictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/CS/hybriddictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.HybridDictionary_Enumerator/VB/hybriddictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Specialized.HybridDictionary.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>
