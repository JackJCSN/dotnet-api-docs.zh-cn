<Type Name="HttpListenerElement" FullName="System.Net.Configuration.HttpListenerElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bb649fa98399448f29bf4d71df1fde7531797b2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70691259" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpListenerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a09f2-101">表示配置文件中的 HttpListener 元素。</span><span class="sxs-lookup"><span data-stu-id="a09f2-101">Represents the HttpListener element in the configuration file.</span></span> <span data-ttu-id="a09f2-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="a09f2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a09f2-103">此类对应\<于 httpListener > 元素（网络设置）配置元素。</span><span class="sxs-lookup"><span data-stu-id="a09f2-103">This class corresponds to the \<httpListener> Element (Network Settings) configuration element.</span></span> <span data-ttu-id="a09f2-104">此类提供对可以存储在配置文件中的信息的编程访问。</span><span class="sxs-lookup"><span data-stu-id="a09f2-104">This class provides programmatic access to information that can be stored in configuration files.</span></span>  
  
 <span data-ttu-id="a09f2-105">属性指示是否<xref:System.Net.HttpListener>使用原始非转义 uri 而不是转换的 uri （其中任何百分比编码值都已转换）以及执行其他规范化步骤。 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A></span><span class="sxs-lookup"><span data-stu-id="a09f2-105">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="a09f2-106">当某个<xref:System.Net.HttpListener>实例通过该`http.sys`服务收到请求时，它将创建由`http.sys`提供的 URI 字符串的实例，并将<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>其公开为属性。</span><span class="sxs-lookup"><span data-stu-id="a09f2-106">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a09f2-107">`http.sys`服务公开两个请求 URI 字符串：</span><span class="sxs-lookup"><span data-stu-id="a09f2-107">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="a09f2-108">原始 URI</span><span class="sxs-lookup"><span data-stu-id="a09f2-108">Raw URI</span></span>  
  
-   <span data-ttu-id="a09f2-109">转换的 URI</span><span class="sxs-lookup"><span data-stu-id="a09f2-109">Converted URI</span></span>  
  
 <span data-ttu-id="a09f2-110">原始 URI 是在 HTTP <xref:System.Uri?displayProperty=nameWithType>请求的请求行中提供的：</span><span class="sxs-lookup"><span data-stu-id="a09f2-110">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="a09f2-111">`http.sys`为上述请求提供的原始 URI 为 "/path/"。</span><span class="sxs-lookup"><span data-stu-id="a09f2-111">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="a09f2-112">这表示 HTTP 谓词后的字符串，因为它是通过网络发送的。</span><span class="sxs-lookup"><span data-stu-id="a09f2-112">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="a09f2-113">`http.sys`服务通过使用 HTTP 请求行中提供的 uri 和主机标头来确定请求应转发到的源服务器，从请求中提供的信息创建转换的 uri。</span><span class="sxs-lookup"><span data-stu-id="a09f2-113">The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="a09f2-114">这是通过将请求中的信息与一组已注册的 URI 前缀进行比较来完成的。</span><span class="sxs-lookup"><span data-stu-id="a09f2-114">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="a09f2-115">HTTP 服务器 SDK 文档将此转换的 URI 称为[HTTP_COOKED_URL](https://go.microsoft.com/fwlink/?LinkID=166108)结构。</span><span class="sxs-lookup"><span data-stu-id="a09f2-115">The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](https://go.microsoft.com/fwlink/?LinkID=166108) structure.</span></span>  
  
 <span data-ttu-id="a09f2-116">为了能够将请求与已注册的 URI 前缀进行比较，需要对请求进行一些规范化。</span><span class="sxs-lookup"><span data-stu-id="a09f2-116">In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</span></span> <span data-ttu-id="a09f2-117">对于上面的示例，转换后的 URI 如下所示：</span><span class="sxs-lookup"><span data-stu-id="a09f2-117">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="a09f2-118">服务将<xref:System.Uri.Host%2A?displayProperty=nameWithType>属性值和请求行中的字符串结合起来，以创建转换的 URI。 `http.sys`</span><span class="sxs-lookup"><span data-stu-id="a09f2-118">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="a09f2-119">此外， `http.sys` <xref:System.Uri?displayProperty=nameWithType>类还会执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="a09f2-119">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="a09f2-120">取消转义所有百分比编码值。</span><span class="sxs-lookup"><span data-stu-id="a09f2-120">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="a09f2-121">将百分号编码的非 ASCII 字符转换为 UTF-16 字符表示形式。</span><span class="sxs-lookup"><span data-stu-id="a09f2-121">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="a09f2-122">请注意，支持 UTF-8 和 ANSI/DBCS 字符以及 Unicode 字符（使用% uXXXX 格式的 Unicode 编码）。</span><span class="sxs-lookup"><span data-stu-id="a09f2-122">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="a09f2-123">执行其他规范化步骤，如路径压缩。</span><span class="sxs-lookup"><span data-stu-id="a09f2-123">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="a09f2-124">由于请求不包含任何有关用于百分比编码值的编码的信息，因此只需分析百分比编码的值就不能确定正确的编码。</span><span class="sxs-lookup"><span data-stu-id="a09f2-124">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="a09f2-125">因此`http.sys` ，提供了两个用于修改进程的注册表项：</span><span class="sxs-lookup"><span data-stu-id="a09f2-125">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="a09f2-126">注册表项</span><span class="sxs-lookup"><span data-stu-id="a09f2-126">Registry Key</span></span>|<span data-ttu-id="a09f2-127">默认值</span><span class="sxs-lookup"><span data-stu-id="a09f2-127">Default Value</span></span>|<span data-ttu-id="a09f2-128">说明</span><span class="sxs-lookup"><span data-stu-id="a09f2-128">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="a09f2-129">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="a09f2-129">EnableNonUTF8</span></span>|<span data-ttu-id="a09f2-130">1</span><span class="sxs-lookup"><span data-stu-id="a09f2-130">1</span></span>|<span data-ttu-id="a09f2-131">如果为零`http.sys` ，则只接受 utf-8 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="a09f2-131">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="a09f2-132">如果非零， `http.sys`则还接受请求中 ANSI 编码或 DBCS 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="a09f2-132">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="a09f2-133">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="a09f2-133">FavorUTF8</span></span>|<span data-ttu-id="a09f2-134">1</span><span class="sxs-lookup"><span data-stu-id="a09f2-134">1</span></span>|<span data-ttu-id="a09f2-135">如果非零， `http.sys`则始终首先尝试将 URL 解码为 utf-8; 如果该转换失败并且 EnableNonUTF8 为非零，则 http.sys 会尝试将其解码为 ANSI 或 DBCS。</span><span class="sxs-lookup"><span data-stu-id="a09f2-135">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="a09f2-136">如果为零（并且 EnableNonUTF8 为非零）， `http.sys`则尝试将它解码为 ANSI 或 DBCS; 如果不成功，则它将尝试 utf-8 转换。</span><span class="sxs-lookup"><span data-stu-id="a09f2-136">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="a09f2-137">当<xref:System.Net.HttpListener>收到请求时，它将使用转换后的`http.sys` URI 作为<xref:System.Net.HttpListenerRequest.Url%2A>属性的输入。</span><span class="sxs-lookup"><span data-stu-id="a09f2-137">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="a09f2-138">除了 Uri 中的字符和数字以外，还需要支持字符。</span><span class="sxs-lookup"><span data-stu-id="a09f2-138">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="a09f2-139">例如，以下 URI 用于检索客户编号 "1/3812" 的客户信息：</span><span class="sxs-lookup"><span data-stu-id="a09f2-139">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="a09f2-140">请注意 Uri （% 2F）中的百分号编码的斜杠。</span><span class="sxs-lookup"><span data-stu-id="a09f2-140">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="a09f2-141">这是必需的，因为在这种情况下，斜杠字符表示数据而不是路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="a09f2-141">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="a09f2-142">将字符串传递到 Uri 构造函数将导致以下 URI：</span><span class="sxs-lookup"><span data-stu-id="a09f2-142">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="a09f2-143">将路径拆分为其段将导致以下元素：</span><span class="sxs-lookup"><span data-stu-id="a09f2-143">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="a09f2-144">这不是请求发送方的意图。</span><span class="sxs-lookup"><span data-stu-id="a09f2-144">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="a09f2-145">如果该<xref:System.Net.HttpListener> `http.sys` <xref:System.Net.HttpListenerRequest.Url%2A>属性设置为 false，则当收到请求时，它将使用原始 URI，而不是转换的 uri 作为属性的输入。 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A></span><span class="sxs-lookup"><span data-stu-id="a09f2-145">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="P:System.Net.HttpListenerRequest.Url" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="a09f2-146">网络设置架构</span><span class="sxs-lookup"><span data-stu-id="a09f2-146">Network Settings Schema</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="a09f2-147">&lt;httpListener&gt;元素（网络设置）</span><span class="sxs-lookup"><span data-stu-id="a09f2-147">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a09f2-148">初始化 <see cref="T:System.Net.Configuration.HttpListenerElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a09f2-148">Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpListenerElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeouts">
      <MemberSignature Language="C#" Value="public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Configuration.HttpListenerTimeoutsElement Timeouts" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeouts As HttpListenerTimeoutsElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Configuration::HttpListenerTimeoutsElement ^ Timeouts { System::Net::Configuration::HttpListenerTimeoutsElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeouts : System.Net.Configuration.HttpListenerTimeoutsElement" Usage="System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("timeouts")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.HttpListenerTimeoutsElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a09f2-149">获取用于 <see cref="T:System.Net.HttpListener" /> 对象的默认超时元素。</span><span class="sxs-lookup"><span data-stu-id="a09f2-149">Gets the default timeout elements used for an <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <value><span data-ttu-id="a09f2-150">用于 <see cref="T:System.Net.HttpListener" /> 对象的超时元素。</span><span class="sxs-lookup"><span data-stu-id="a09f2-150">The timeout elements used for an <see cref="T:System.Net.HttpListener" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
      </Docs>
    </Member>
    <Member MemberName="UnescapeRequestUrl">
      <MemberSignature Language="C#" Value="public bool UnescapeRequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnescapeRequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnescapeRequestUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnescapeRequestUrl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UnescapeRequestUrl : bool" Usage="System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("unescapeRequestUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a09f2-151">获取一个值，该值指示 <see cref="T:System.Net.HttpListener" /> 是否使用未经转义的原始 URI，而非经过转换的 URI。</span><span class="sxs-lookup"><span data-stu-id="a09f2-151">Gets a value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI instead of the converted URI.</span></span></summary>
        <value><span data-ttu-id="a09f2-152">一个布尔值，该值指示 <see cref="T:System.Net.HttpListener" /> 是否使用未经转义的原始 URI，而非经过转换的 URI。</span><span class="sxs-lookup"><span data-stu-id="a09f2-152">A Boolean value that indicates if <see cref="T:System.Net.HttpListener" /> uses the raw unescaped URI, rather than the converted URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a09f2-153">属性指示是否<xref:System.Net.HttpListener>使用原始非转义 uri 而不是转换的 uri （其中任何百分比编码值都已转换）以及执行其他规范化步骤。 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A></span><span class="sxs-lookup"><span data-stu-id="a09f2-153">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="a09f2-154">当某个<xref:System.Net.HttpListener>实例通过该`http.sys`服务收到请求时，它将创建由`http.sys`提供的 URI 字符串的实例，并将<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>其公开为属性。</span><span class="sxs-lookup"><span data-stu-id="a09f2-154">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a09f2-155">`http.sys`服务公开两个请求 URI 字符串：</span><span class="sxs-lookup"><span data-stu-id="a09f2-155">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="a09f2-156">原始 URI</span><span class="sxs-lookup"><span data-stu-id="a09f2-156">Raw URI</span></span>  
  
-   <span data-ttu-id="a09f2-157">转换的 URI</span><span class="sxs-lookup"><span data-stu-id="a09f2-157">Converted URI</span></span>  
  
 <span data-ttu-id="a09f2-158">原始 URI 是在 HTTP <xref:System.Uri?displayProperty=nameWithType>请求的请求行中提供的：</span><span class="sxs-lookup"><span data-stu-id="a09f2-158">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="a09f2-159">`http.sys`为上述请求提供的原始 URI 为 "/path/"。</span><span class="sxs-lookup"><span data-stu-id="a09f2-159">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="a09f2-160">这表示 HTTP 谓词后的字符串，因为它是通过网络发送的。</span><span class="sxs-lookup"><span data-stu-id="a09f2-160">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="a09f2-161">`http.sys`服务通过使用 HTTP 请求行中提供的 uri 和主机标头来确定请求应转发到的源服务器，从请求中提供的信息创建转换的 uri。</span><span class="sxs-lookup"><span data-stu-id="a09f2-161">The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="a09f2-162">这是通过将请求中的信息与一组已注册的 URI 前缀进行比较来完成的。</span><span class="sxs-lookup"><span data-stu-id="a09f2-162">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="a09f2-163">HTTP 服务器 SDK 文档将此转换的 URI 称为[HTTP_COOKED_URL](https://go.microsoft.com/fwlink/?LinkID=166108)结构。</span><span class="sxs-lookup"><span data-stu-id="a09f2-163">The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](https://go.microsoft.com/fwlink/?LinkID=166108) structure.</span></span>  
  
 <span data-ttu-id="a09f2-164">为了能够将请求与已注册的 URI 前缀进行比较，需要对请求进行一些规范化。</span><span class="sxs-lookup"><span data-stu-id="a09f2-164">In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</span></span> <span data-ttu-id="a09f2-165">对于上面的示例，转换后的 URI 如下所示：</span><span class="sxs-lookup"><span data-stu-id="a09f2-165">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="a09f2-166">服务将<xref:System.Uri.Host%2A?displayProperty=nameWithType>属性值和请求行中的字符串结合起来，以创建转换的 URI。 `http.sys`</span><span class="sxs-lookup"><span data-stu-id="a09f2-166">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="a09f2-167">此外， `http.sys` <xref:System.Uri?displayProperty=nameWithType>类还会执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="a09f2-167">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="a09f2-168">取消转义所有百分比编码值。</span><span class="sxs-lookup"><span data-stu-id="a09f2-168">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="a09f2-169">将百分号编码的非 ASCII 字符转换为 UTF-16 字符表示形式。</span><span class="sxs-lookup"><span data-stu-id="a09f2-169">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="a09f2-170">请注意，支持 UTF-8 和 ANSI/DBCS 字符以及 Unicode 字符（使用% uXXXX 格式的 Unicode 编码）。</span><span class="sxs-lookup"><span data-stu-id="a09f2-170">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="a09f2-171">执行其他规范化步骤，如路径压缩。</span><span class="sxs-lookup"><span data-stu-id="a09f2-171">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="a09f2-172">由于请求不包含任何有关用于百分比编码值的编码的信息，因此只需分析百分比编码的值就不能确定正确的编码。</span><span class="sxs-lookup"><span data-stu-id="a09f2-172">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="a09f2-173">因此`http.sys` ，提供了两个用于修改进程的注册表项：</span><span class="sxs-lookup"><span data-stu-id="a09f2-173">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="a09f2-174">注册表项</span><span class="sxs-lookup"><span data-stu-id="a09f2-174">Registry Key</span></span>|<span data-ttu-id="a09f2-175">默认值</span><span class="sxs-lookup"><span data-stu-id="a09f2-175">Default Value</span></span>|<span data-ttu-id="a09f2-176">说明</span><span class="sxs-lookup"><span data-stu-id="a09f2-176">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="a09f2-177">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="a09f2-177">EnableNonUTF8</span></span>|<span data-ttu-id="a09f2-178">1</span><span class="sxs-lookup"><span data-stu-id="a09f2-178">1</span></span>|<span data-ttu-id="a09f2-179">如果为零`http.sys` ，则只接受 utf-8 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="a09f2-179">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="a09f2-180">如果非零， `http.sys`则还接受请求中 ANSI 编码或 DBCS 编码的 url。</span><span class="sxs-lookup"><span data-stu-id="a09f2-180">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="a09f2-181">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="a09f2-181">FavorUTF8</span></span>|<span data-ttu-id="a09f2-182">1</span><span class="sxs-lookup"><span data-stu-id="a09f2-182">1</span></span>|<span data-ttu-id="a09f2-183">如果非零， `http.sys`则始终首先尝试将 URL 解码为 utf-8; 如果该转换失败并且 EnableNonUTF8 为非零，则 http.sys 会尝试将其解码为 ANSI 或 DBCS。</span><span class="sxs-lookup"><span data-stu-id="a09f2-183">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="a09f2-184">如果为零（并且 EnableNonUTF8 为非零）， `http.sys`则尝试将它解码为 ANSI 或 DBCS; 如果不成功，则它将尝试 utf-8 转换。</span><span class="sxs-lookup"><span data-stu-id="a09f2-184">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="a09f2-185">当<xref:System.Net.HttpListener>收到请求时，它将使用转换后的`http.sys` URI 作为<xref:System.Net.HttpListenerRequest.Url%2A>属性的输入。</span><span class="sxs-lookup"><span data-stu-id="a09f2-185">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="a09f2-186">除了 Uri 中的字符和数字以外，还需要支持字符。</span><span class="sxs-lookup"><span data-stu-id="a09f2-186">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="a09f2-187">例如，以下 URI 用于检索客户编号 "1/3812" 的客户信息：</span><span class="sxs-lookup"><span data-stu-id="a09f2-187">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="a09f2-188">请注意 Uri （% 2F）中的百分号编码的斜杠。</span><span class="sxs-lookup"><span data-stu-id="a09f2-188">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="a09f2-189">这是必需的，因为在这种情况下，斜杠字符表示数据而不是路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="a09f2-189">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="a09f2-190">将字符串传递到 Uri 构造函数将导致以下 URI：</span><span class="sxs-lookup"><span data-stu-id="a09f2-190">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="a09f2-191">将路径拆分为其段将导致以下元素：</span><span class="sxs-lookup"><span data-stu-id="a09f2-191">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="a09f2-192">这不是请求发送方的意图。</span><span class="sxs-lookup"><span data-stu-id="a09f2-192">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="a09f2-193">如果该<xref:System.Net.HttpListener> `http.sys` <xref:System.Net.HttpListenerRequest.Url%2A>属性设置为 false，则当收到请求时，它将使用原始 URI，而不是转换的 uri 作为属性的输入。 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A></span><span class="sxs-lookup"><span data-stu-id="a09f2-193">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="P:System.Net.HttpListenerRequest.Url" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="a09f2-194">网络设置架构</span><span class="sxs-lookup"><span data-stu-id="a09f2-194">Network Settings Schema</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="a09f2-195">&lt;httpListener&gt;元素（网络设置）</span><span class="sxs-lookup"><span data-stu-id="a09f2-195">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
