<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91c4f0de01fc15c7e04a4e8d548b98738b1ae465" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70349938" /></Metadata><TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许应用程序使用简单邮件传输协议 (SMTP) 来发送电子邮件。 <c>SmtpClient</c> 类型现已过时。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `System.Net.Mail.SmtpClient`类用于将电子邮件发送到 SMTP 服务器以便传递。 在 RFC 2821 中定义了 SMTP 协议，该协议在[https://www.ietf.org](https://www.ietf.org/)中提供。  

> [!IMPORTANT]
>  不建议使用`SmtpClient`类进行新的开发。 有关详细信息，请参阅 GitHub 上的[system.net.mail.smtpclient 不应使用](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md)。

 下表中显示的类用于构造可使用<xref:System.Net.Mail.SmtpClient>发送的电子邮件。  
  
|类|说明|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|表示文件附件。 此类允许你将文件、流或文本附加到电子邮件。|  
|<xref:System.Net.Mail.MailAddress>|表示发件人和收件人的电子邮件地址。|  
|<xref:System.Net.Mail.MailMessage>|表示电子邮件。|  
  
 若要使用<xref:System.Net.Mail.SmtpClient>构造和发送电子邮件，必须指定以下信息：  
  
-   用于发送电子邮件的 SMTP 主机服务器。 请参见<xref:System.Net.Mail.SmtpClient.Port%2A>和属性。 <xref:System.Net.Mail.SmtpClient.Host%2A>  
  
-   用于身份验证的凭据（如果 SMTP 服务器需要）。 请参阅 <xref:System.Net.Mail.SmtpClient.Credentials%2A> 属性。  
  
-   发件人的电子邮件地址。 请参阅采用<xref:System.Net.Mail.SmtpClient.SendAsync%2A> 参数`from`的<xref:System.Net.Mail.SmtpClient.Send%2A>和方法。 另请参见<xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType>属性。  
  
-   收件人的电子邮件地址。 请参阅采用<xref:System.Net.Mail.SmtpClient.SendAsync%2A> 参数`recipient`的<xref:System.Net.Mail.SmtpClient.Send%2A>和方法。 另请参见<xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType>属性。  
  
-   消息内容。 请参阅采用<xref:System.Net.Mail.SmtpClient.SendAsync%2A> 参数`body`的<xref:System.Net.Mail.SmtpClient.Send%2A>和方法。 另请参见<xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType>属性。  
  
 若要在电子邮件中包含附件，请首先使用<xref:System.Net.Mail.Attachment>类创建附件，然后<xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType>使用属性将其添加到消息。 由于收件人使用的电子邮件读取器和附件的文件类型，某些收件人可能无法读取附件。 对于无法以原始格式显示附件的客户端，您可以通过使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType>属性来指定替代视图。  
  
 在 .NET Framework 中，可以使用应用程序或计算机配置文件来指定所有<xref:System.Net.Mail.SmtpClient>对象的默认主机、端口和凭据值。 有关详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 .NET Core 不支持设置默认值。 作为一种解决方法，必须<xref:System.Net.Mail.SmtpClient>直接设置相关属性。  
  
 若要在等待电子邮件传输到 SMTP 服务器的同时发送电子邮件和阻止，请使用同步<xref:System.Net.Mail.SmtpClient.Send%2A>方法之一。 若要在传输电子邮件时允许程序的主线程继续执行，请使用其中一种异步<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。 操作完成<xref:System.Net.Mail.SmtpClient.SendAsync%2A>时引发事件。<xref:System.Net.Mail.SmtpClient.SendCompleted> 若要接收此事件，必须将<xref:System.Net.Mail.SendCompletedEventHandler>委托添加到<xref:System.Net.Mail.SmtpClient.SendCompleted>中。 委托必须引用回调方法，该方法处理事件的<xref:System.Net.Mail.SmtpClient.SendCompleted>通知。 <xref:System.Net.Mail.SendCompletedEventHandler> 若要取消异步电子邮件传输，请<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>使用方法。  
  
> [!NOTE]
>  如果正在传输电子邮件，而你调用或<xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpClient.Send%2A>再次调用<xref:System.InvalidOperationException>，你将收到。  
  
 如果应用程序希望向同一 smtp 服务器发送<xref:System.Net.Mail.SmtpClient>多条消息，则可以重新使用由类的当前实例建立的连接到 smtp 服务器。 当使用身份验证或加密建立与 SMTP 服务器的连接时，此方法特别有用。 身份验证和建立 TLS 会话的过程可能是成本高昂的操作。 如果将大量电子邮件发送到相同的 SMTP 服务器，则为每条消息重新建立连接的要求可能会对性能产生重大影响。 有大量的大量电子邮件应用程序可发送电子邮件状态更新、新闻稿分发或电子邮件警报。 此外，许多电子邮件客户端应用程序都支持脱机模式，用户可在此模式下撰写多封电子邮件，这些电子邮件稍后会在与 SMTP 服务器建立连接时发送。 通常，电子邮件客户端将所有 SMTP 邮件发送到特定的 SMTP 服务器（由 Internet 服务提供商提供），然后将此电子邮件转发给其他 SMTP 服务器。  
  
 <xref:System.Net.Mail.SmtpClient>类实现会将 SMTP 连接汇集在一起，这样就可以避免在将每条消息重新建立到同一个服务器时的开销。 应用程序可以重复使用同一<xref:System.Net.Mail.SmtpClient>对象将许多不同的电子邮件发送到相同的 smtp 服务器和许多不同的 smtp 服务器。 因此，不能确定应用程序何时使用完该<xref:System.Net.Mail.SmtpClient>对象并应将其清除。  
  
 当 SMTP 会话完成并且客户端希望终止连接时，它必须向服务器发送一条 QUIT 消息，指示它没有更多要发送的消息。 这允许服务器释放与客户端的连接关联的资源，并处理客户端发送的消息。  
  
 类没有`Finalize`方法，因此应用程序必须调用<xref:System.Net.Mail.SmtpClient.Dispose%2A>以显式释放资源。 <xref:System.Net.Mail.SmtpClient> 方法循环访问在<xref:System.Net.Mail.SmtpClient.Host%2A>属性中指定的 SMTP 服务器的所有已建立连接，并发送一条 QUIT 消息，然后正确地结束 TCP 连接。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法还释放由使用<xref:System.Net.Sockets.Socket>的非托管资源，并可以选择释放托管资源。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 在完成使用 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 后，应调用 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法使 <xref:System.Net.Mail.SmtpClient> 处于不可用状态。 调用<xref:System.Net.Mail.SmtpClient.Dispose%2A>后，必须释放对的<xref:System.Net.Mail.SmtpClient>所有引用，以便垃圾回收器能够<xref:System.Net.Mail.SmtpClient>回收占用的内存。  
  
   
  
## Examples  
 下面的代码示例演示如何以异步方式发送电子邮件。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">.NET Framework 中的网络编程</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">网络编程示例</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">.NET Framework 中的网络跟踪</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">网络编程中的安全性</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用配置文件设置来初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数使用<xref:System.Net.Mail.SmtpClient.Host%2A>应用程序或<xref:System.Net.Mail.SmtpClient.Port%2A>计算机配置文件中<xref:System.Net.Mail.SmtpClient>的设置来初始化新的、 <xref:System.Net.Mail.SmtpClient.Credentials%2A>和属性。 有关详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何发送电子邮件。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 有关应用程序或计算机\<配置文件中的 mailSettings > 节点的示例，请参阅[ &lt;mailSettings&gt;元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">构造<see cref="T:System.Net.Mail.SmtpClient" />。 关联枚举：<see cref="F:System.Net.Mail.SmtpAccess.Connect" />。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">一个包含用于 SMTP 事务的主机名或主机 IP 地址的 <see cref="T:System.String" />。</param>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 类的新实例，该类使用指定的 SMTP 服务器发送电子邮件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数用于初始化<xref:System.Net.Mail.SmtpClient.Host%2A>属性的值。 `host` 使用应用<xref:System.Net.Mail.SmtpClient.Port%2A>程序或计算机配置文件中的设置初始化和属性。<xref:System.Net.Mail.SmtpClient.Credentials%2A> 如果`host`等于 ，<xref:System.Net.Mail.SmtpClient.Host%2A>则使用应用程序或计算机配置文件中的设置来初始化。 <xref:System.String.Empty?displayProperty=nameWithType> `null`  
  
 有关使用应用程序和计算机配置文件的详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用<xref:System.Net.Mail.SmtpClient>构造函数或属性指定信息，则此信息将重写配置文件设置。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">构造<see cref="T:System.Net.Mail.SmtpClient" />。 关联的枚举：<see cref="F:System.Net.Mail.SmtpAccess.Connect" />。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">一个包含用于 SMTP 事务的主机名或主机 IP 地址的 <see cref="T:System.String" />。</param>
        <param name="port">大于 0 的 <see cref="T:System.Int32" />，包含要在 <paramref name="host" /> 上使用的端口。</param>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 类的新实例，该类使用指定的 SMTP 服务器和端口发送电子邮件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 和参数分别设置和<xref:System.Net.Mail.SmtpClient.Port%2A>属性的值。 <xref:System.Net.Mail.SmtpClient.Host%2A> `host` `port` 如果`host`等于 ，<xref:System.Net.Mail.SmtpClient.Host%2A>则使用应用程序或计算机配置文件中的设置来初始化。 <xref:System.String.Empty?displayProperty=nameWithType> `null` 如果`port`为零， <xref:System.Net.Mail.SmtpClient.Port%2A>则使用应用程序或计算机配置文件中的设置进行初始化。 使用应用程序或计算机配置文件中的设置来初始化属性。<xref:System.Net.Mail.SmtpClient.Credentials%2A>  
  
 有关使用应用程序和计算机配置文件的详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用<xref:System.Net.Mail.SmtpClient>构造函数或属性指定信息，则此信息将重写配置文件设置。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> 不能小于 0。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">指定端口。 关联的枚举：<see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定应该使用哪些证书来建立安全套接字层 (SSL) 连接。</summary>
        <value><see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />，包含一个或多个客户端证书。 默认值从配置文件中的邮件配置特性导出。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，客户端证书是可选的;但是，服务器配置可能要求客户端在初始连接协商过程中提供有效的证书。  
  
> [!NOTE]
>  框架在创建时将缓存 SSL 会话，并在可能的情况下尝试重复使用缓存会话来执行新请求。 尝试重用 SSL 会话时，框架使用的<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>第一个元素（如果有），或者如果<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>为空，则尝试重新使用匿名会话。  
  
   
  
## Examples  
 下面的代码示例与 SMTP 服务器建立 SSL 连接，并使用该连接发送电子邮件。  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings 元素（网络设置）</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于验证发件人身份的凭据。</summary>
        <value>表示用于身份验证的凭据的 <see cref="T:System.Net.ICredentialsByHost" />，如果没有指定凭据，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些 SMTP 服务器要求先对客户端进行身份验证，然后服务器才能代表其发送电子邮件。 若要使用默认网络凭据，可以将设置<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>为`true` ，而不是设置此属性。 如果将`false,` <xref:System.Net.Mail.SmtpClient.Credentials%2A>属性设置为，则在连接到服务器时，属性中设置的值将用于凭据。 <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> 如果将`false`属性设置为并且尚未设置<xref:System.Net.Mail.SmtpClient.Credentials%2A>该属性，则会以匿名方式将邮件发送到服务器。 <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>  
  
 还可以使用应用程序和计算机配置文件指定凭据信息。 有关详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用<xref:System.Net.Mail.SmtpClient.Credentials%2A>属性指定信息，则此信息将重写配置文件设置。  
  
> [!CAUTION]
>  如果提供基本身份验证的凭据，则会以明文形式发送到服务器。 这可能会导致安全问题，因为你的凭据可能会被他人使用。  
  
   
  
## Examples  
 下面的代码示例演示如何设置用于发送电子邮件的凭据。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">发送电子邮件时无法更改此属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Net.Mail.SmtpClient" /> 用于发送电子邮件的传递格式。</summary>
        <value><see cref="T:System.Net.Mail.SmtpClient" /> 使用的配送格式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定处理发出的电子邮件的方法。</summary>
        <value><see cref="T:System.Net.Mail.SmtpDeliveryMethod" />，它指示如何传递电子邮件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 传递方法包括：  
  
-   SMTP 服务器。  
  
-   将电子邮件移动到 IIS 的拾取目录中，然后传递该消息。  
  
-   将电子邮件移动到指定<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>的目录，以便以后由其他应用程序传递。  
  
 还可以在计算机或应用程序配置文件中设置此属性的默认值。 对<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>属性所做的任何更改都会覆盖配置文件设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>向 SMTP 服务器发送一条 QUIT 消息，适当地结束 TCP 连接，并释放由 <see cref="T:System.Net.Mail.SmtpClient" /> 类的当前实例使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果应用程序希望向同一 smtp 服务器发送<xref:System.Net.Mail.SmtpClient>多条消息，则可以重新使用由类的当前实例建立的连接到 smtp 服务器。 当使用身份验证或加密建立与 SMTP 服务器的连接时，此方法特别有用。 身份验证和建立 TLS 会话的过程可能是成本高昂的操作。 如果将大量电子邮件发送到相同的 SMTP 服务器，则为每条消息重新建立连接的要求可能会对性能产生重大影响。 有大量的大量电子邮件应用程序可发送电子邮件状态更新、新闻稿分发或电子邮件警报。 此外，许多电子邮件客户端应用程序都支持脱机模式，用户可在此模式下撰写多封电子邮件，这些电子邮件稍后会在与 SMTP 服务器建立连接时发送。 通常，电子邮件客户端将所有 SMTP 邮件发送到特定的 SMTP 服务器（由 Internet 服务提供商提供），然后将此电子邮件转发给其他 SMTP 服务器。  
  
 <xref:System.Net.Mail.SmtpClient>类实现会将 SMTP 连接汇集在一起，这样就可以避免在将每条消息重新建立到同一个服务器时的开销。 应用程序可以重复使用同一<xref:System.Net.Mail.SmtpClient>对象将许多不同的电子邮件发送到相同的 smtp 服务器和许多不同的 smtp 服务器。 因此，不能确定应用程序何时使用完该<xref:System.Net.Mail.SmtpClient>对象并应将其清除。  
  
 当 SMTP 会话完成并且客户端希望终止连接时，它必须向服务器发送一条 QUIT 消息，指示它没有更多要发送的消息。 这允许服务器释放与客户端的连接关联的资源，并处理客户端发送的消息。  
  
 方法<xref:System.Net.Mail.SmtpClient.Dispose%2A>将循环访问所有已建立的连接，并向每个 SMTP 服务器发送一条 QUIT 消息，然后正确地结束 TCP 连接。 这些方法还会释放由使用<xref:System.Net.Sockets.Socket>的非托管资源，并可以选择释放托管资源。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 SMTP 服务器发送一条 QUIT 消息，适当地结束 TCP 连接，并释放由 <see cref="T:System.Net.Mail.SmtpClient" /> 类的当前实例使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果应用程序希望向同一 smtp 服务器发送<xref:System.Net.Mail.SmtpClient>多条消息，则可以重新使用由类的当前实例建立的连接到 smtp 服务器。 当使用身份验证或加密建立与 SMTP 服务器的连接时，此方法特别有用。 身份验证和建立 TLS 会话的过程可能是成本高昂的操作。 如果将大量电子邮件发送到相同的 SMTP 服务器，则为每条消息重新建立连接的要求可能会对性能产生重大影响。 有大量的大量电子邮件应用程序可发送电子邮件状态更新、新闻稿分发或电子邮件警报。 此外，许多电子邮件客户端应用程序都支持脱机模式，用户可在此模式下撰写多封电子邮件，这些电子邮件稍后会在与 SMTP 服务器建立连接时发送。 通常，电子邮件客户端将所有 SMTP 邮件发送到特定的 SMTP 服务器（由 Internet 服务提供商提供），然后将此电子邮件转发给其他 SMTP 服务器。  
  
 <xref:System.Net.Mail.SmtpClient>类实现会将 SMTP 连接汇集在一起，这样就可以避免在将每条消息重新建立到同一个服务器时的开销。 应用程序可以重复使用同一<xref:System.Net.Mail.SmtpClient>对象将许多不同的电子邮件发送到相同的 smtp 服务器和许多不同的 smtp 服务器。 因此，不能确定应用程序何时使用完该<xref:System.Net.Mail.SmtpClient>对象并应将其清除。  
  
 当 SMTP 会话完成并且客户端希望终止连接时，它必须向服务器发送一条 QUIT 消息，指示它没有更多要发送的消息。 这允许服务器释放与客户端的连接关联的资源，并处理客户端发送的消息。  
  
 在执行异步<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> <xref:System.Net.Mail.SmtpClient.Dispose%2A> 操作<xref:System.Net.Mail.SmtpClient.SendAsync%2A>的对象上调用<xref:System.Net.Mail.SmtpClient>方法将取消发送操作，就像调用方法一样。  
  
 <xref:System.Net.Mail.SmtpClient>类没有`Finalize`方法。 因此，应用程序必须<xref:System.Net.Mail.SmtpClient.Dispose%2A>调用以显式释放资源。  
  
 方法循环访问在<xref:System.Net.Mail.SmtpClient.Host%2A>属性中指定的 SMTP 服务器的所有已建立连接，并发送一条 QUIT 消息，然后正确地结束 TCP 连接。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法还释放由基础<xref:System.Net.Sockets.Socket>使用的非托管资源。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 在完成使用 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 后，应调用 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法使 <xref:System.Net.Mail.SmtpClient> 处于不可用状态。 调用<xref:System.Net.Mail.SmtpClient.Dispose%2A>后，必须释放对的<xref:System.Net.Mail.SmtpClient>所有引用，以便垃圾回收器能够<xref:System.Net.Mail.SmtpClient>回收占用的内存。  
  
 有关详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  每次释放对 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Net.Mail.SmtpClient>。 否则，将不会释放它所使用的资源，因此垃圾回收器可以回收内存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>向 SMTP 服务器发送一条 QUIT 消息，适当地结束 TCP 连接，释放由 <see cref="T:System.Net.Mail.SmtpClient" /> 类的当前实例使用的所有资源，并根据需要释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果应用程序希望向同一 smtp 服务器发送<xref:System.Net.Mail.SmtpClient>多条消息，则可以重新使用由类的当前实例建立的连接到 smtp 服务器。 当使用身份验证或加密建立与 SMTP 服务器的连接时，此方法特别有用。 身份验证和建立 TLS 会话的过程可能是成本高昂的操作。 如果将大量电子邮件发送到相同的 SMTP 服务器，则为每条消息重新建立连接的要求可能会对性能产生重大影响。 有大量的大量电子邮件应用程序可发送电子邮件状态更新、新闻稿分发或电子邮件警报。 此外，许多电子邮件客户端应用程序都支持脱机模式，用户可在此模式下撰写多封电子邮件，这些电子邮件稍后会在与 SMTP 服务器建立连接时发送。 通常，电子邮件客户端将所有 SMTP 邮件发送到特定的 SMTP 服务器（由 Internet 服务提供商提供），然后将此电子邮件转发给其他 SMTP 服务器。  
  
 <xref:System.Net.Mail.SmtpClient>类实现会将 SMTP 连接汇集在一起，这样就可以避免在将每条消息重新建立到同一个服务器时的开销。 应用程序可以重复使用同一<xref:System.Net.Mail.SmtpClient>对象将许多不同的电子邮件发送到相同的 smtp 服务器和许多不同的 smtp 服务器。 因此，不能确定应用程序何时使用完该<xref:System.Net.Mail.SmtpClient>对象并应将其清除。  
  
 当 SMTP 会话完成并且客户端希望终止连接时，它必须向服务器发送一条 QUIT 消息，指示它没有更多要发送的消息。 这允许服务器释放与客户端的连接关联的资源，并处理客户端发送的消息。  
  
 在执行异步<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> <xref:System.Net.Mail.SmtpClient.Dispose%2A> 操作<xref:System.Net.Mail.SmtpClient.SendAsync%2A>的对象上调用<xref:System.Net.Mail.SmtpClient>方法将取消发送操作，就像调用方法一样。  
  
 <xref:System.Net.Mail.SmtpClient>类没有`Finalize`方法。 因此，应用程序必须<xref:System.Net.Mail.SmtpClient.Dispose%2A>调用以显式释放资源。  
  
 方法循环访问在<xref:System.Net.Mail.SmtpClient.Host%2A>属性中指定的 SMTP 服务器的所有已建立连接，并发送一条 QUIT 消息，然后正确地结束 TCP 连接。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法还释放由使用<xref:System.Net.Sockets.Socket>的非托管资源，并可以选择释放托管资源。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 在完成使用 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 后，应调用 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法使 <xref:System.Net.Mail.SmtpClient> 处于不可用状态。 调用<xref:System.Net.Mail.SmtpClient.Dispose%2A>后，必须释放对的<xref:System.Net.Mail.SmtpClient>所有引用，以便垃圾回收器能够<xref:System.Net.Mail.SmtpClient>回收占用的内存。  
  
 有关详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  每次释放对 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Net.Mail.SmtpClient>。 否则，将不会释放它所使用的资源，因此垃圾回收器可以回收内存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Net.Mail.SmtpClient" /> 是否使用安全套接字层 (SSL) 加密连接。</summary>
        <value>如果 <see cref="T:System.Net.Mail.SmtpClient" /> 使用 SSL，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>属性指定是否使用 SSL 来访问指定的 SMTP 邮件服务器。  
  
 还可以在计算机或应用程序配置文件中设置此属性的默认值。 对<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>属性所做的任何更改都会覆盖配置文件设置。  
  
 <xref:System.Net.Mail.SmtpClient>类仅支持在 RFC 3207 中定义的基于传输层安全性的安全 smtp 的 smtp 服务扩展。 在此模式下，SMTP 会话在未加密的通道上开始，然后客户端向服务器发出一个 STARTTLS 命令，以使用 SSL 切换到安全通信。 有关详细信息，请参阅 Internet 工程任务组（IETF）发布的 RFC 3207。  
  
 备用连接方法是在发送任何协议命令之前提前建立 SSL 会话的位置。 此连接方法有时被称为 SMTP/SSL、SMTP over SSL 或 SMTPS，并在默认情况下使用端口465。 当前不支持使用 SSL 的替代连接方法。  
  
 你可以使用<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>指定应使用哪些客户端证书建立 SSL 连接。 <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>允许您拒绝 SMTP 服务器提供的证书。 <xref:System.Net.ServicePointManager.SecurityProtocol%2A>属性允许你指定要使用的 SSL 协议的版本。  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A>如果将`true`属性设置为，并且 SMTP 邮件服务器不在对 EHLO 命令的响应中公布 STARTTLS，则对或方法的调用将引发。 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 下面的代码示例与 SMTP 服务器建立 SSL 连接，并使用该连接发送电子邮件。  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;网络&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 SMTP 事务的主机名或主机 IP 地址。</summary>
        <value><see cref="T:System.String" />，包含用于 SMTP 事务的计算机的名称或 IP 地址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 还可以使用构造<xref:System.Net.Mail.SmtpClient.Host%2A>函数或应用程序或计算机配置文件设置属性的值。 有关详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 如果使用此属性指定信息，则此信息将重写配置文件设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用应用程序配置文件中指定的主机和端口发送电子邮件。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">为集运算指定的值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">为设置操作指定的值等于 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.InvalidOperationException">发送电子邮件时无法更改此属性的值。</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">system.net 的 mailSettings</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;网络&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从<xref:System.Net.Mail.SmtpClient>类继承的类可以<xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>重写方法，以便在<xref:System.Net.Mail.SmtpClient.SendCompleted>事件发生时执行其他任务。  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>还允许派生类在不<xref:System.Net.Mail.SmtpClient.SendCompleted>附加委托的情况下进行处理。 这是在派生类中进行<xref:System.Net.Mail.SmtpClient.SendCompleted>处理的首选方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />派生类中重写时，请确保调用基类的<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />方法，以便注册<see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />的委托接收事件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文件夹，应用程序在该文件夹中保存电子邮件供本地 SMTP 服务器处理。</summary>
        <value><see cref="T:System.String" />，它指定邮件的拾取目录。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 拾取目录中的邮件将由本地 SMTP 服务器（如果存在）自动发送，如 IIS。  
  
 还可以在计算机或应用程序配置文件中设置此属性的默认值。 对<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>属性所做的任何更改都会覆盖配置文件设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 SMTP 事务的端口。</summary>
        <value><see cref="T:System.Int32" />，包含 SMTP 主机上的端口号。 默认值为 25。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 还可以使用构造<xref:System.Net.Mail.SmtpClient.Port%2A>函数或应用程序或计算机配置文件设置属性的值。 有关使用配置文件的详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用此属性指定信息，则此信息将重写配置文件设置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用应用程序配置文件中指定的主机和端口发送电子邮件。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException">发送电子邮件时无法更改此属性的值。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">设置<see cref="P:System.Net.Mail.SmtpClient.Port" />属性。 关联的枚举：<see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />。</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">system.net 的 mailSettings</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;网络&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将电子邮件发送到 SMTP 服务器以便传递。 这些方法在传输邮件的过程中进行阻止。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">一个包含要发送的邮件的 <see cref="T:System.Net.Mail.MailMessage" />。</param>
        <summary>将指定的邮件发送到 SMTP 服务器以便传递。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 传输电子邮件时，此方法将会阻止。 您可以使用<xref:System.Net.Mail.SmtpClient.Timeout%2A>属性指定一个超时值，以确保该方法在经过指定的一段时间后返回。  
  
 在调用此方法之前， <xref:System.Net.Mail.SmtpClient.Host%2A>必须<xref:System.Net.Mail.SmtpClient.Port%2A>通过设置相关属性或通过将此信息<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>传递到构造函数来设置和属性。  
  
 如果有正在异步发送的消息，则无法调用此方法。  
  
 如果 SMTP 主机需要凭据，则必须在调用此方法之前设置凭据。 若要指定凭据，请<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>使用<xref:System.Net.Mail.SmtpClient.Credentials%2A>或属性。  
  
 如果收到<xref:System.Net.Mail.SmtpException>异常，请<xref:System.Net.Mail.SmtpException.StatusCode%2A>检查属性以找出操作失败的原因。 还<xref:System.Net.Mail.SmtpException>可以包含内部异常，指示操作失败的原因。  
  
 <xref:System.Net.Mail.SmtpClient.Send%2A>当使用发送给多个收件人的电子邮件，并且 SMTP 服务器接受某些收件人为有效并拒绝其他收件人时，将电子邮件发送<xref:System.Net.Mail.SmtpFailedRecipientsException>到接受的收件人， <xref:System.Net.Mail.SmtpFailedRecipientException> <xref:System.Net.Mail.SmtpClient.Send%2A>然后引发（或者仅当拒绝接收方）。 <xref:System.Net.Mail.SmtpFailedRecipientsException>包含被拒绝的收件人列表。
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A>如果将`true`属性设置为，并且 SMTP 邮件服务器不在对 EHLO 命令的响应中公布 STARTTLS，则对或方法的调用将引发。 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Net.Mail.SmtpClient" /> 有一个 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 调用正在进行。  
  
或 
 <see cref="P:System.Net.Mail.MailMessage.From" /> 为 <see langword="null" />。  
  
- 或 - 
<see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 和 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 属性中没有指定的收件人。  
  
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 为 <see langword="null" />。  
  
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，<see cref="P:System.Net.Mail.SmtpClient.Host" /> 等于空字符串 ("")。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性被设为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> 且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 为零、负数或大于 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">连接到 SMTP 服务器失败。  
  
或 
身份验证失败。  
  
- 或 - 
操作超时。 
或 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true," />，但 SMTP 邮件服务器不在对 EHLO 命令的响应中播发 STARTTLS。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException"><paramref name="message" /> 未能传递给 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一个收件人。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException"><paramref name="message" /> 未能传递给 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的两个或多个收件人。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">连接到 SMTP 服务器。 关联的枚举:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, recipients, subject, body)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">一个包含邮件发件人的地址信息的 <see cref="T:System.String" />。</param>
        <param name="recipients">一个包含邮件收件人的地址的 <see cref="T:System.String" />。</param>
        <param name="to">一个包含邮件收件人的地址的 <see cref="T:System.String" />。</param>
        <param name="subject">一个包含邮件主题行的 <see cref="T:System.String" />。</param>
        <param name="body">一个包含邮件正文的 <see cref="T:System.String" />。</param>
        <summary>将指定的电子邮件发送到 SMTP 服务器以便传递。 使用 <see cref="T:System.String" /> 对象指定邮件的发件人、收件人、主题和邮件正文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 传输电子邮件时，此方法将会阻止。 您可以使用<xref:System.Net.Mail.SmtpClient.Timeout%2A>属性指定一个超时值，以确保该方法在经过指定的一段时间后返回。  
  
 在调用此方法之前， <xref:System.Net.Mail.SmtpClient.Host%2A>必须<xref:System.Net.Mail.SmtpClient.Port%2A>通过设置相关属性或通过将此信息<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>传递到构造函数来设置和属性。  
  
 如果有正在异步发送的消息，则无法调用此方法。  
  
 如果 SMTP 主机需要凭据，则必须在调用此方法之前设置凭据。 若要指定凭据，请<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>使用<xref:System.Net.Mail.SmtpClient.Credentials%2A>或属性。  
  
 如果收到<xref:System.Net.Mail.SmtpException>异常，请<xref:System.Net.Mail.SmtpException.StatusCode%2A>检查属性以找出操作失败的原因。 还<xref:System.Net.Mail.SmtpException>可以包含内部异常，指示操作失败的原因。  

 <xref:System.Net.Mail.SmtpClient.Send%2A>当使用发送给多个收件人的电子邮件，并且 SMTP 服务器接受某些收件人为有效并拒绝其他收件人时，将电子邮件发送<xref:System.Net.Mail.SmtpFailedRecipientsException>到接受的收件人， <xref:System.Net.Mail.SmtpFailedRecipientException> <xref:System.Net.Mail.SmtpClient.Send%2A>然后引发（或者仅当拒绝接收方）。 <xref:System.Net.Mail.SmtpFailedRecipientsException>包含被拒绝的收件人列表。
 
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A>如果将`true`属性设置为，并且 SMTP 邮件服务器不在对 EHLO 命令的响应中公布 STARTTLS，则对或方法的调用将引发。 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 为 <see langword="null" />。  
  
或 
 <paramref name="recipients" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> 为 <see cref="F:System.String.Empty" />。  
  
- 或 - 
 <paramref name="recipients" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Net.Mail.SmtpClient" /> 有一个 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 调用正在进行。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 为 <see langword="null" />。  
  
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，<see cref="P:System.Net.Mail.SmtpClient.Host" /> 等于空字符串 ("")。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性被设为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> 且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 为零、负数或大于 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">连接到 SMTP 服务器失败。  
  
或 
身份验证失败。  
  
或 
操作超时。 
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true," />，但 SMTP 邮件服务器不在对 EHLO 命令的响应中播发 STARTTLS。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException"><paramref name="message" /> 未能传递给 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一个收件人。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException"><paramref name="message" /> 未能传递给 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的两个或多个收件人。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">连接到 SMTP 服务器。 关联的枚举:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>发送电子邮件。 这些方法不阻止调用线程。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">一个包含要发送的邮件的 <see cref="T:System.Net.Mail.MailMessage" />。</param>
        <param name="userToken">一个用户定义对象，此对象将传递给完成异步操作后所调用的方法。</param>
        <summary>将指定的电子邮件发送到 SMTP 服务器以便传递。 此方法不阻止调用线程，并允许调用方将对象传递给操作完成后调用的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要在发送电子邮件或取消操作后收到通知，请向<xref:System.Net.Mail.SmtpClient.SendCompleted>事件添加事件处理程序。 您可以通过<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>调用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法来取消操作。  
  
 调用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>之后，必须等待电子邮件传输完成，然后再尝试使用<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>发送另一封电子邮件。  
  
 在调用此方法之前， <xref:System.Net.Mail.SmtpClient.Host%2A>必须<xref:System.Net.Mail.SmtpClient.Port%2A>通过设置相关属性或通过将此信息<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>传递到构造函数来通过配置文件设置和。  
  
 如果 SMTP 主机需要凭据，则必须在调用此方法之前设置凭据。 若要指定凭据，请<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>使用<xref:System.Net.Mail.SmtpClient.Credentials%2A>或属性。  
  
 如果收到<xref:System.Net.Mail.SmtpException>异常，请<xref:System.Net.Mail.SmtpException.StatusCode%2A>检查属性以找出操作失败的原因。 还<xref:System.Net.Mail.SmtpException>可以包含内部异常，指示操作失败的原因。  
  
 当使用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>多个收件人发送电子邮件时，如果 SMTP 服务器接受某些收件人为有效并拒绝其他收件人<xref:System.Net.Mail.SmtpException> ，则会引发<xref:System.NullReferenceException> ，并为内部异常引发。 如果发生这种<xref:System.Net.Mail.SmtpClient.SendAsync%2A>情况，将无法向任何收件人发送电子邮件。  
  
 您的应用程序可以通过检查传递<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> <xref:System.Net.Mail.SendCompletedEventHandler>到委托中的属性来检测服务器证书验证错误。  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> 属性<xref:System.Net.Mail.SmtpClient.SendAsync%2A>对调用没有任何影响。  
  
 若要在传输到 SMTP 服务器的同时发送邮件和阻止，请使用其中一<xref:System.Net.Mail.SmtpClient.Send%2A>种方法。  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A>如果将`true`属性设置为，并且 SMTP 邮件服务器不在对 EHLO 命令的响应中公布 STARTTLS，则对或方法的调用将引发。 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何调用此方法。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> 为 <see langword="null" />。  
  
或 
 <see cref="P:System.Net.Mail.MailMessage.From" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Net.Mail.SmtpClient" /> 有一个 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 调用正在进行。  
  
或 
<see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 和 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 属性中没有指定的收件人。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 为 <see langword="null" />。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，<see cref="P:System.Net.Mail.SmtpClient.Host" /> 等于空字符串 ("")。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性被设为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> 且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 为零、负数或大于 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">连接到 SMTP 服务器失败。  
  
或 
身份验证失败。  
  
- 或 - 
操作超时。 
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true," />，但 SMTP 邮件服务器不在对 EHLO 命令的响应中播发 STARTTLS。  
  
或 
<paramref name="message" /> 未能传递给 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一个或多个收件人。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">连接到 SMTP 服务器。 关联的枚举:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, recipients, subject, body, userToken)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">一个包含邮件发件人的地址信息的 <see cref="T:System.String" />。</param>
        <param name="recipients">包含邮件收件人的地址的 <see cref="T:System.String" />。</param>
        <param name="to">包含邮件收件人的地址的 <see cref="T:System.String" />。</param>
        <param name="subject">一个包含邮件主题行的 <see cref="T:System.String" />。</param>
        <param name="body">一个包含邮件正文的 <see cref="T:System.String" />。</param>
        <param name="userToken">一个用户定义对象，此对象将传递给完成异步操作后所调用的方法。</param>
        <summary>将电子邮件发送到 SMTP 服务器以便传递。 使用 <see cref="T:System.String" /> 对象指定邮件的发件人、收件人、主题和邮件正文。 此方法不阻止调用线程，并允许调用方将对象传递给操作完成后调用的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要在发送电子邮件或取消操作后收到通知，请向<xref:System.Net.Mail.SmtpClient.SendCompleted>事件添加事件处理程序。 您可以通过<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>调用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法来取消操作。  
  
 调用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>之后，必须等待电子邮件传输完成，然后再尝试使用<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>发送另一封电子邮件。  
  
 在调用此方法之前， <xref:System.Net.Mail.SmtpClient.Host%2A>必须<xref:System.Net.Mail.SmtpClient.Port%2A>通过配置文件或通过设置属性或将此信息<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>传递给构造函数来设置和属性。  
  
 如果 SMTP 主机需要凭据，则必须在调用此方法之前设置凭据。 若要指定凭据，请<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>使用<xref:System.Net.Mail.SmtpClient.Credentials%2A>或属性。  
  
 如果收到<xref:System.Net.Mail.SmtpException>异常，请<xref:System.Net.Mail.SmtpException.StatusCode%2A>检查属性以找出操作失败的原因。 还<xref:System.Net.Mail.SmtpException>可以包含内部异常，指示操作失败的原因。  
  
 当使用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>多个收件人发送电子邮件时，如果 SMTP 服务器接受某些收件人为有效并拒绝其他收件人<xref:System.Net.Mail.SmtpException> ，则会引发<xref:System.NullReferenceException> ，并为内部异常引发。 如果发生这种<xref:System.Net.Mail.SmtpClient.SendAsync%2A>情况，将无法向任何收件人发送电子邮件。  
  
 您的应用程序可以通过检查传递<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> <xref:System.Net.Mail.SendCompletedEventHandler>到委托中的属性来检测服务器证书验证错误。  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> 属性<xref:System.Net.Mail.SmtpClient.SendAsync%2A>对调用没有任何影响。  
  
 若要在传输到 SMTP 服务器的同时发送邮件和阻止，请使用其中一<xref:System.Net.Mail.SmtpClient.Send%2A>种方法。  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A>如果将`true`属性设置为，并且 SMTP 邮件服务器不在对 EHLO 命令的响应中公布 STARTTLS，则对或方法的调用将引发。 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 为 <see langword="null" />。  
  
或 
 <paramref name="recipient" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> 为 <see cref="F:System.String.Empty" />。  
  
或 
 <paramref name="recipient" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Net.Mail.SmtpClient" /> 有一个 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 调用正在进行。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 为 <see langword="null" />。  
  
- 或 - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，<see cref="P:System.Net.Mail.SmtpClient.Host" /> 等于空字符串 ("")。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性被设为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> 且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 为零、负数或大于 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">连接到 SMTP 服务器失败。  
  
- 或 - 
身份验证失败。  
  
或 
操作超时。 
或 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 属性设置为 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 设置为 <see langword="true," />，但 SMTP 邮件服务器不在对 EHLO 命令的响应中播发 STARTTLS。  
  
- 或 - 
邮件未能传递给 <paramref name="recipients" /> 中的一个或多个收件人。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">连接到 SMTP 服务器。 关联的枚举:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消异步操作以发送电子邮件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用方法取消挂起<xref:System.Net.Mail.SmtpClient.SendAsync%2A>的操作。 <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> 如果有邮件正在等待发送，则此方法将释放用于存储邮件的资源。 如果没有邮件等待发送，则此方法不执行任何操作。  
  
   
  
## Examples  
 下面的代码示例演示如何以异步方式发送电子邮件。 如果尚未发送邮件，则用户可以选择取消邮件。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在异步电子邮件发送操作完成时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每次在发送操作完成时异步发送电子邮件时，都会引发事件。<xref:System.Net.Mail.SmtpClient.SendCompleted> 若要以异步方式发送电子邮件， <xref:System.Net.Mail.SmtpClient.SendAsync%2A>请使用方法。  
  
 <xref:System.Net.Mail.SendCompletedEventHandler>是的委托<xref:System.Net.Mail.SmtpClient.SendCompleted>。 <xref:System.ComponentModel.AsyncCompletedEventArgs>类向事件处理程序提供事件数据。  
  
   
  
## Examples  
 下面的代码示例演示如何以异步方式发送电子邮件。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定的邮件以异步操作形式发送给 SMTP 服务器供传递。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">一个包含要发送的邮件的 <see cref="T:System.Net.Mail.MailMessage" />。</param>
        <summary>将指定的邮件以异步操作形式发送给 SMTP 服务器供传递。</summary>
        <returns>表示异步操作的任务对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此操作不会阻止。 发送消息<xref:System.Threading.Tasks.Task>后，将完成返回的 > 对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="from">一个包含邮件发件人的地址信息的 <see cref="T:System.String" />。</param>
        <param name="recipients">一个包含邮件收件人的地址的 <see cref="T:System.String" />。</param>
        <param name="subject">一个包含邮件主题行的 <see cref="T:System.String" />。</param>
        <param name="body">一个包含邮件正文的 <see cref="T:System.String" />。</param>
        <summary>将指定的邮件以异步操作形式发送给 SMTP 服务器供传递。 。 使用 <see cref="T:System.String" /> 对象指定邮件的发件人、收件人、主题和邮件正文。</summary>
        <returns>表示异步操作的任务对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此操作不会阻止。 发送消息<xref:System.Threading.Tasks.Task>后，将完成返回的 > 对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="recipients" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> 为 <see cref="F:System.String.Empty" />。  
  
- 或 - 
 <paramref name="recipients" /> 为 <see cref="F:System.String.Empty" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于传输电子邮件的网络连接。</summary>
        <value>连接到用于 SMTP 的 <see cref="T:System.Net.ServicePoint" /> 属性的 <see cref="P:System.Net.Mail.SmtpClient.Host" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用应用程序或<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>计算机配置文件中指定的默认值<xref:System.Net.ServicePointManager>和类来创建属性的设置。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>属性。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.Mail.SmtpClient.Host" /> 为 <see langword="null" /> 或为空字符串 ("")。  
  
或 
 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 为零。</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement 元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">管理连接</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在使用扩展保护时用于身份验证的服务提供程序名称 (SPN)。</summary>
        <value>一个 <see cref="T:System.String" />，它指定用于扩展保护的 SPN。 此 SPN 的默认值的格式为 "SMTPSVC&lt;/host&gt;"，其中&lt;host&gt;是 SMTP 邮件服务器的主机名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Net.Mail.SmtpClient.TargetName%2A>应用程序使用扩展保护时，属性将与集成的 Windows 身份验证一起使用。 然后<xref:System.Net.Mail.SmtpClient> ，可以提供扩展保护，以确保凭据质询响应包含特定于服务的信息（SPN），并在必要时提供特定于通道的信息（通道绑定令牌或 CBT）。 使用凭据交换中的此信息，服务可以更好地防止恶意使用可能未正确获取的凭据质询响应。  
  
 还可以在计算机或应用程序配置文件中设置此属性的默认值。 对<xref:System.Net.Mail.SmtpClient.TargetName%2A>属性所做的任何更改都会覆盖配置文件设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">带有扩展保护的集成 Windows 身份验证</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;元素（网络设置）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;网络&gt;元素（网络设置）</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定同步 <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> 调用超时后的时间。</summary>
        <value>指定超时值（以毫秒为单位）的 <see cref="T:System.Int32" />。 默认值为 100,000（100 秒）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，对<xref:System.Net.Mail.SmtpClient.Send%2A>方法的调用会一直阻止，直到操作完成。 如果将<xref:System.Net.Mail.SmtpClient.Timeout%2A>属性设置为正值， <xref:System.Net.Mail.SmtpClient.Send%2A>并且操作在分配的时间内无法完成，则<xref:System.Net.Mail.SmtpClient>类将引发<xref:System.Net.Mail.SmtpException>异常。  
  
 若要发送消息并在应用程序线程中继续执行，请<xref:System.Net.Mail.SmtpClient.SendAsync%2A>使用方法。  
  
   
  
## Examples  
 下面的代码示例演示如何获取和设置超时值。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">为设置操作指定的值小于 0。</exception>
        <exception cref="T:System.InvalidOperationException">发送电子邮件时无法更改此属性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Boolean" /> 值，该值控制 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 是否随请求一起发送。</summary>
        <value>如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些 SMTP 服务器要求先对客户端进行身份验证，然后服务器才能代表其发送电子邮件。 如果服务器请求， `true`则将<xref:System.Net.Mail.SmtpClient>此属性设置为 "如果服务器请求，则使用当前登录用户的默认凭据进行身份验证"。 对于客户端应用程序，这在大多数情况下都是所需的行为。  
  
 还可以使用应用程序和计算机配置文件指定凭据信息。 有关详细信息，请[ &lt;参阅&gt; mailSettings 元素（网络设置）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 如果将`false,` <xref:System.Net.Mail.SmtpClient.Credentials%2A>属性设置为，则在连接到服务器时，属性中设置的值将用于凭据。 <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> 如果将`false`属性设置为并且尚未设置<xref:System.Net.Mail.SmtpClient.Credentials%2A>该属性，则会以匿名方式将邮件发送到服务器。 <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>  
  
> [!CAUTION]
>  如果提供基本身份验证的凭据，则会以明文形式发送到服务器。 这可能会导致安全问题，因为你的凭据可能会被他人使用。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">发送电子邮件时无法更改此属性的值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
