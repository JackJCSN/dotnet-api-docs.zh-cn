<Type Name="HitTestFilterCallback" FullName="System.Windows.Media.HitTestFilterCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80a22d949bbde0c9b6125f038865b4f160b7aeb7" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64255989" /></Metadata><TypeSignature Language="C#" Value="public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HitTestFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.HitTestFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function HitTestFilterCallback(potentialHitTestTarget As DependencyObject) As HitTestFilterBehavior " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Windows::Media::HitTestFilterBehavior HitTestFilterCallback(DependencyObject ^ potentialHitTestTarget);" />
  <TypeSignature Language="F#" Value="type HitTestFilterCallback = delegate of DependencyObject -&gt; HitTestFilterBehavior" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="potentialHitTestTarget" Type="System.Windows.DependencyObject" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Windows.Media.HitTestFilterBehavior</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="potentialHitTestTarget"><span data-ttu-id="12216-101">要执行命中测试的视觉对象。</span><span class="sxs-lookup"><span data-stu-id="12216-101">The visual to hit test.</span></span></param>
    <summary><span data-ttu-id="12216-102">表示一个回调方法，该方法指定可视化树中不进行命中测试处理的部分</span><span class="sxs-lookup"><span data-stu-id="12216-102">Represents the callback method that specifies parts of the visual tree to omit from hit test processing</span></span></summary>
    <returns><span data-ttu-id="12216-103">一个 <see cref="T:System.Windows.Media.HitTestFilterBehavior" />，它表示从命中测试中产生的操作。</span><span class="sxs-lookup"><span data-stu-id="12216-103">A <see cref="T:System.Windows.Media.HitTestFilterBehavior" /> that represents the action resulting from the hit test.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12216-104">命中的测试筛选器回叫方法调用将映射到从指定的视觉对象开始，并延伸到它的可视化树的分支的命中的测试条件的所有可视化对象中。</span><span class="sxs-lookup"><span data-stu-id="12216-104">The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree.</span></span> <span data-ttu-id="12216-105">但是，你可能要忽略不希望在命中测试结果回调叫函数中处理的可视化树的某些分支。</span><span class="sxs-lookup"><span data-stu-id="12216-105">However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function.</span></span> <span data-ttu-id="12216-106">命中测试筛选器回叫函数的返回值确定视觉对象的枚举应采用的操作类型。</span><span class="sxs-lookup"><span data-stu-id="12216-106">The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take.</span></span> <span data-ttu-id="12216-107">例如，如果返回值， <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>，可以从命中的测试结果枚举中删除当前的视觉对象及其子代。</span><span class="sxs-lookup"><span data-stu-id="12216-107">For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration.</span></span> <span data-ttu-id="12216-108">这意味着，命中的测试结果回叫方法将看不到其枚举中的这些对象。</span><span class="sxs-lookup"><span data-stu-id="12216-108">This means that the hit test results callback method will not see these objects in its enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12216-109">修剪对象的可视化树会减少命中测试结果枚举传递期间的处理量。</span><span class="sxs-lookup"><span data-stu-id="12216-109">Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.</span></span>  
  
 <span data-ttu-id="12216-110">![修剪可视化树使用命中的测试筛选器](~/add/media/filteredvisualtree-01.png "修剪可视化树使用命中的测试筛选器")</span><span class="sxs-lookup"><span data-stu-id="12216-110">![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png "Pruning a visual tree using a hit test filter")</span></span>  
<span data-ttu-id="12216-111">修剪可视化树</span><span class="sxs-lookup"><span data-stu-id="12216-111">Pruning a visual tree</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12216-112">下面的示例演示如何调用<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>通过使用<xref:System.Windows.Media.HitTestFilterCallback>值。</span><span class="sxs-lookup"><span data-stu-id="12216-112">The following example shows how to invoke <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> by using a <xref:System.Windows.Media.HitTestFilterCallback> value.</span></span> <span data-ttu-id="12216-113">此外定义相应的命中的测试回叫方法。</span><span class="sxs-lookup"><span data-stu-id="12216-113">The corresponding hit test callback method is also defined.</span></span>  
  
 [!code-csharp[HitTestingOverview#104](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#104)]
 [!code-vb[HitTestingOverview#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#104)]  
  
 <span data-ttu-id="12216-114">下面的示例演示如何返回<xref:System.Windows.Media.HitTestFilterBehavior>从命中的测试筛选器回叫方法的值。</span><span class="sxs-lookup"><span data-stu-id="12216-114">The following example shows how to return a <xref:System.Windows.Media.HitTestFilterBehavior> value from a hit test filter callback method.</span></span>  
  
 [!code-csharp[HitTestingOverview#106](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#106)]
 [!code-vb[HitTestingOverview#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)" />
  </Docs>
</Type>