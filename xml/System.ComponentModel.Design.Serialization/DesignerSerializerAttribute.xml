<Type Name="DesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c38923d039096d0a8b2449accc1da2faba2acff3" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63903760" /></Metadata><TypeSignature Language="C#" Value="public sealed class DesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DesignerSerializerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="26835-101">指示某个序列化管理器的序列化程序，它将用于序列化此特性所应用到的类型的值。</span><span class="sxs-lookup"><span data-stu-id="26835-101">Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to.</span></span> <span data-ttu-id="26835-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="26835-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26835-103"><xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> 提供了一种方法来向设计器序列化管理器指示序列化对象的值时，应使用特定类型的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-103"><xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object.</span></span> <span data-ttu-id="26835-104">这允许您指定的序列化一个自定义的类型，例如能够序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-104">This allows you to specify a serializer that is capable of serializing a custom type, for instance.</span></span> <span data-ttu-id="26835-105">将此特性置于类，以指示要序列化类时使用的序列化对象。</span><span class="sxs-lookup"><span data-stu-id="26835-105">Place this attribute on a class to indicate the serialization object to use when serializing the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26835-106">下面的代码使用<xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>能够示例组件相关联的示例序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-106">The following code uses a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> to associate an example serializer with an example component.</span></span>  
  
 [!code-cpp[DesignerSerializerAttribute#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerSerializerAttribute/CPP/source.cpp#1)]
 [!code-csharp[DesignerSerializerAttribute#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerSerializerAttribute/CS/source.cs#1)]
 [!code-vb[DesignerSerializerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerSerializerAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-107">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-107">Designer Serialization Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26835-108">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26835-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute : string * string -&gt; System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute (serializerTypeName, baseSerializerTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="26835-109">序列化程序的数据类型的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="26835-109">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerTypeName"><span data-ttu-id="26835-110">序列化程序的基数据类型的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="26835-110">The fully qualified name of the base data type of the serializer.</span></span> <span data-ttu-id="26835-111">只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-111">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="26835-112">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26835-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-113">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-113">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute : string * Type -&gt; System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute (serializerTypeName, baseSerializerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="26835-114">序列化程序的数据类型的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="26835-114">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="26835-115">序列化程序的基数据类型。</span><span class="sxs-lookup"><span data-stu-id="26835-115">The base data type of the serializer.</span></span> <span data-ttu-id="26835-116">只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-116">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="26835-117">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26835-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-118">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-118">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (Type serializerType, Type baseSerializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute : Type * Type -&gt; System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializerAttribute (serializerType, baseSerializerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializerType"><span data-ttu-id="26835-119">序列化程序的数据类型。</span><span class="sxs-lookup"><span data-stu-id="26835-119">The data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="26835-120">序列化程序的基数据类型。</span><span class="sxs-lookup"><span data-stu-id="26835-120">The base data type of the serializer.</span></span> <span data-ttu-id="26835-121">只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</span><span class="sxs-lookup"><span data-stu-id="26835-121">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="26835-122">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26835-122">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-123">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-123">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerBaseTypeName : string" Usage="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26835-124">获取序列化程序基类型的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="26835-124">Gets the fully qualified type name of the serializer base type.</span></span></summary>
        <value><span data-ttu-id="26835-125">序列化程序基类型的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="26835-125">The fully qualified type name of the serializer base type.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-126">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-126">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerTypeName : string" Usage="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26835-127">获取序列化程序的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="26835-127">Gets the fully qualified type name of the serializer.</span></span></summary>
        <value><span data-ttu-id="26835-128">序列化程序的完全限定类型名。</span><span class="sxs-lookup"><span data-stu-id="26835-128">The fully qualified type name of the serializer.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-129">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-129">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26835-130">指示此特性类型的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="26835-130">Indicates a unique ID for this attribute type.</span></span></summary>
        <value><span data-ttu-id="26835-131">此特性类型的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="26835-131">A unique ID for this attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26835-132">筛选算法使用此 ID 用于标识属于同一类型的两个特性。</span><span class="sxs-lookup"><span data-stu-id="26835-132">This ID is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="26835-133">对于大多数属性，这只是返回<xref:System.Type>实例的属性。</span><span class="sxs-lookup"><span data-stu-id="26835-133">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="26835-134"><xref:System.ComponentModel.EditorAttribute> 重写此方法才能包括的编辑器基类型的类型。</span><span class="sxs-lookup"><span data-stu-id="26835-134"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c342635a-aa5f-4281-915b-b013738af15a"><span data-ttu-id="26835-135">设计器序列化概述</span><span class="sxs-lookup"><span data-stu-id="26835-135">Designer Serialization Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>