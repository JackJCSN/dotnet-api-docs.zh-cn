<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a83de3ae5b12bdc646e43ce9807a4fa104517712" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63904000" /></Metadata><TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type BasicDesignerLoader = class&#xA;    inherit DesignerLoader&#xA;    interface IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54d66-101">提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 接口的实现。</span><span class="sxs-lookup"><span data-stu-id="54d66-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-102">一个<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>无任何关联的持久性格式到设计器加载程序的完整实现。</span><span class="sxs-lookup"><span data-stu-id="54d66-102">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> is a complete implementation of a designer loader without anything relating to a persistence format.</span></span> <span data-ttu-id="54d66-103">一个<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>并未规定文本或二进制持久性，但它支持以下功能：</span><span class="sxs-lookup"><span data-stu-id="54d66-103">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> does not dictate either a text or binary persistence, but it does support the following features:</span></span>  
  
-   <span data-ttu-id="54d66-104">多个加载依赖项。</span><span class="sxs-lookup"><span data-stu-id="54d66-104">Multiple load dependencies.</span></span>  
  
-   <span data-ttu-id="54d66-105">在设计器中的跟踪更改。</span><span class="sxs-lookup"><span data-stu-id="54d66-105">Tracking changes within the designer.</span></span>  
  
-   <span data-ttu-id="54d66-106">延迟的空闲时间重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-106">Deferred idle-time reloading.</span></span>  
  
 <span data-ttu-id="54d66-107">一个<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>将两种类型的服务添加到设计器宿主的服务容器： 可替换服务和不可替代服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-107">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> adds two kinds of services to the designer host's service container: replaceable services and irreplaceable services.</span></span> <span data-ttu-id="54d66-108">您可以通过更改受保护的值来替换可替换服务<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="54d66-108">You can replace a replaceable service by changing the value of the protected <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="54d66-109">因为它们的实现依赖于彼此，不能替换不可替代服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-109">You cannot replace irreplaceable services because their implementations depend on each other.</span></span>  
  
 <span data-ttu-id="54d66-110">下表描述默认情况下提供的服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-110">The following table describes the services that are provided by default.</span></span>  
  
|<span data-ttu-id="54d66-111">默认服务</span><span class="sxs-lookup"><span data-stu-id="54d66-111">Default Service</span></span>|<span data-ttu-id="54d66-112">描述</span><span class="sxs-lookup"><span data-stu-id="54d66-112">Description</span></span>|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|<span data-ttu-id="54d66-113">允许请求在设计器重新本身空闲时加载对象。</span><span class="sxs-lookup"><span data-stu-id="54d66-113">Allows objects to request that the designer reload itself when it is idle.</span></span> <span data-ttu-id="54d66-114">这是可替换的服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-114">This is a replaceable service.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|<span data-ttu-id="54d66-115">用于序列化和反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="54d66-115">Used to serialize and deserialize objects.</span></span> <span data-ttu-id="54d66-116">序列化管理器添加为服务，因此需要执行序列化的对象可使用任何已添加到序列化管理器的序列化提供程序。</span><span class="sxs-lookup"><span data-stu-id="54d66-116">The serialization manager is added as a service so objects that need to perform serialization can utilize any serialization providers that were added to the serialization manager.</span></span> <span data-ttu-id="54d66-117">这是不可替代服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-117">This is an irreplaceable service.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="54d66-118">对系统资源的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="54d66-118">for full access to system resources.</span></span> <span data-ttu-id="54d66-119">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-119">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="54d66-120">关联的状态：</span><span class="sxs-lookup"><span data-stu-id="54d66-120">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-121">初始化 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="54d66-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit" Usage="basicDesignerLoader.BeginLoad host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="54d66-122">要加载的设计器加载程序宿主。</span><span class="sxs-lookup"><span data-stu-id="54d66-122">The designer loader host to load.</span></span></param>
        <summary><span data-ttu-id="54d66-123">启动加载过程。</span><span class="sxs-lookup"><span data-stu-id="54d66-123">Starts the loading process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-124">这是一个实现抽象<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-124">This is an implementation of the abstract <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="54d66-125">不需要重写此方法在您自己的类中。</span><span class="sxs-lookup"><span data-stu-id="54d66-125">You do not need to override this method in your own class.</span></span> <span data-ttu-id="54d66-126"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 方法执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="54d66-126">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method performs the following actions:</span></span>  
  
-   <span data-ttu-id="54d66-127">它验证不具有已加载设计图面。</span><span class="sxs-lookup"><span data-stu-id="54d66-127">It verifies that the design surface has not already loaded.</span></span>  
  
-   <span data-ttu-id="54d66-128">在首次调用，它将添加相关服务和调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-128">On the first call, it adds relevant services and calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method.</span></span>  
  
-   <span data-ttu-id="54d66-129">它将调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>， <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>，和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-129">It calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span>  
  
 <span data-ttu-id="54d66-130">如果设计器加载程序服务未从服务容器中，删除<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>将调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>并<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法，而不是<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-130">If the designer loader service has not been removed from the service container, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> methods instead of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span> <span data-ttu-id="54d66-131">在这种情况下，它是要调用的设计器加载程序服务的责任<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-131">In this situation, it is the responsibility of the designer loader service to call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54d66-132"><paramref name="host" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-132"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-133">设计器已经加载，或者已经使用其他设计器加载程序宿主调用了 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-133">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="54d66-134">已释放 <paramref name="host" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-134"><paramref name="host" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="basicDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-135">释放由 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="54d66-135">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-136">调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>方法不会刷新到设计器加载程序的更改。</span><span class="sxs-lookup"><span data-stu-id="54d66-136">Calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method does not flush changes to the designer loader.</span></span> <span data-ttu-id="54d66-137">如果你想要保存的更改，则调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>之前调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-137">If you want changes to be saved, call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> before calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="54d66-138">在完成使用 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="54d66-138">Call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="54d66-139"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 方法使 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="54d66-139">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="54d66-140">在调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>，必须释放对所有引用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>这样垃圾回收器才能收回内存的<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>占用。</span><span class="sxs-lookup"><span data-stu-id="54d66-140">After calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> was occupying.</span></span> <span data-ttu-id="54d66-141">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="54d66-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54d66-142">每次释放对 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="54d66-142">Always call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="54d66-143">否则，在垃圾回收器调用 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="54d66-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberSignature Language="F#" Value="abstract member EnableComponentNotification : bool -&gt; bool&#xA;override this.EnableComponentNotification : bool -&gt; bool" Usage="basicDesignerLoader.EnableComponentNotification enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable"><span data-ttu-id="54d66-144">要通过 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 启用组件通知，则为 <see langword="true" />；要通过 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 禁用组件通知，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-144"><see langword="true" /> to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span></span></param>
        <summary><span data-ttu-id="54d66-145">使用 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 启用或禁用组件通知。</span><span class="sxs-lookup"><span data-stu-id="54d66-145">Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span></span></summary>
        <returns><span data-ttu-id="54d66-146">如果在进行此调用之前启用了组件通知，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-146"><see langword="true" /> if the component notification was enabled prior to this call; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="basicDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-147">刷新设计器加载程序的挂起更改。</span><span class="sxs-lookup"><span data-stu-id="54d66-147">Flushes pending changes to the designer loader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-148">如果设计器加载程序未加载或不具有已标记为已修改，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法将立即返回。</span><span class="sxs-lookup"><span data-stu-id="54d66-148">If the designer loader has not been loaded or has not been marked as modified, the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method returns immediately.</span></span> <span data-ttu-id="54d66-149">否则为<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>询问要创建的序列化会话的序列化管理器，然后调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-149">Otherwise, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> asks the serialization manager to create a serialization session and then calls <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="basicDesignerLoader.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="54d66-150">服务的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-150">The <see cref="T:System.Type" /> of the service.</span></span></param>
        <summary><span data-ttu-id="54d66-151">获取请求的服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-151">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="54d66-152">请求的服务，或者，如果找不到请求的服务则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-152">The requested service, or <see langword="null" /> if the requested service cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 是一个帮助器方法，允许类派生自<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>访问服务提供的设计器加载程序宿主。</span><span class="sxs-lookup"><span data-stu-id="54d66-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> is a helper method that allows classes deriving from <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> to access services offered by the designer loader host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="basicDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-154">初始化服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-154">Initializes services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-155"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>第一次调用方法<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="54d66-155">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method is called the first time <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is invoked.</span></span> <span data-ttu-id="54d66-156">可以在此时间添加任何所需的设计器加载程序宿主的服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-156">You can add any services necessary to the designer loader host at this time.</span></span> <span data-ttu-id="54d66-157">基实现添加<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>提供，因此在调用基实现后，可能会替换现有的服务。</span><span class="sxs-lookup"><span data-stu-id="54d66-157">The base implementation adds services that <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> provides, so after calling the base implementation you may replace existing services.</span></span> <span data-ttu-id="54d66-158">必须删除通过重写此处添加任何自定义服务<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-158">You must remove any custom services you add here by overriding <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-159"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-159">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="54d66-160">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="abstract member IsReloadNeeded : unit -&gt; bool&#xA;override this.IsReloadNeeded : unit -&gt; bool" Usage="basicDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-161">指示是否应该重新加载设计器。</span><span class="sxs-lookup"><span data-stu-id="54d66-161">Indicates whether the designer should be reloaded.</span></span></summary>
        <returns><span data-ttu-id="54d66-162">如果应重新加载设计器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-162"><see langword="true" /> if the designer should be reloaded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54d66-163">默认实现始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-163">The default implementation always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-164"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A>某些设计器加载程序使用方法来优化重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-164">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> method is used by some designer loaders to optimize reloading.</span></span> <span data-ttu-id="54d66-165">如果设计器加载程序支持智能重新加载，可以重写此方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-165">This method can be overridden if your designer loader supports intelligent reloading.</span></span> <span data-ttu-id="54d66-166">某些设计器加载程序可以检测到它们的基础文档所做的更改，并确定是否真正需要的设计器重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-166">Some designer loaders can detect changes made to their underlying document and determine if a reload of the designer is actually necessary.</span></span> <span data-ttu-id="54d66-167">如果不是，它们应返回`false`从此方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-167">If not, they should return `false` from this method.</span></span> <span data-ttu-id="54d66-168">默认实现始终返回`true`，该值指示任何调用到<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>将会成功。</span><span class="sxs-lookup"><span data-stu-id="54d66-168">The default implementation always returns `true`, indicating that any call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> will succeed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoaderHost : System.ComponentModel.Design.Serialization.IDesignerLoaderHost" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d66-169">获取加载程序宿主。</span><span class="sxs-lookup"><span data-stu-id="54d66-169">Gets the loader host.</span></span></summary>
        <value><span data-ttu-id="54d66-170">已传递至 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 方法的 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-170">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-171">此方法返回提供给此设计器加载程序加载程序宿主。</span><span class="sxs-lookup"><span data-stu-id="54d66-171">This method returns the loader host that was given to this designer loader.</span></span> <span data-ttu-id="54d66-172">这可以是`null`如果<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>未调用，或如果此设计器加载程序已被释放。</span><span class="sxs-lookup"><span data-stu-id="54d66-172">This can be `null` if <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> has not been called yet, or if this designer loader has been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-173"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="54d66-174">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-174">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d66-175">获取一个值，指示设计器加载程序是否正在加载设计图面。</span><span class="sxs-lookup"><span data-stu-id="54d66-175">Gets a value indicating whether the designer loader is loading the design surface.</span></span></summary>
        <value><span data-ttu-id="54d66-176">如果设计器加载程序当前正在加载设计图面，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-176"><see langword="true" /> if the designer loader is currently loading the design surface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-177"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>类提供了<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>，它支持加载依赖项。</span><span class="sxs-lookup"><span data-stu-id="54d66-177">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> class provides the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, which supports load dependencies.</span></span> <span data-ttu-id="54d66-178">此属性采用加载依赖项，并将返回`true`是否存在任何未完成加载依赖项。</span><span class="sxs-lookup"><span data-stu-id="54d66-178">This property takes load dependencies into account and will return `true` if there are any outstanding load dependencies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d66-179">获取或设置一个值，该值指示设计器是否已修改。</span><span class="sxs-lookup"><span data-stu-id="54d66-179">Gets or sets a value indicating whether the designer has been modified.</span></span></summary>
        <value><span data-ttu-id="54d66-180">如果设计器已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-180"><see langword="true" /> if the designer has been modified; otherwise, <see langword="false" />,</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-181">确定是否设计器加载程序检测到已修改设计器。</span><span class="sxs-lookup"><span data-stu-id="54d66-181">Determines if the designer loader has detected that the designer has been modified.</span></span> <span data-ttu-id="54d66-182">如果此属性为`true`时设计器加载程序<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法调用时，设计器加载程序将调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-182">If this property is `true` when the designer loader's <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method is called, the designer loader will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginLoad : unit -&gt; unit&#xA;override this.OnBeginLoad : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-183">通知设计器加载程序加载即将开始。</span><span class="sxs-lookup"><span data-stu-id="54d66-183">Notifies the designer loader that loading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-184"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>方法调用以启动加载过程。</span><span class="sxs-lookup"><span data-stu-id="54d66-184">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method is invoked to start the loading process.</span></span> <span data-ttu-id="54d66-185">适用于在此时间加载的应执行任何必要的初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-185">You should perform any necessary initialization for loading at this time.</span></span> <span data-ttu-id="54d66-186">此方法不应该用于执行的实际负载。</span><span class="sxs-lookup"><span data-stu-id="54d66-186">This method should not be used to perform the actual load.</span></span> <span data-ttu-id="54d66-187">默认实现禁用更改通知并设置<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-187">The default implementation disables change notifications and sets up the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> for loading.</span></span>  
  
 <span data-ttu-id="54d66-188">如果你实现了<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>若要提供依赖加载支持，应调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>依赖在首次加载时。</span><span class="sxs-lookup"><span data-stu-id="54d66-188">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> when the first dependent load occurs.</span></span> <span data-ttu-id="54d66-189">调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法在最后一个调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-189">Call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="54d66-190">默认情况下<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>和执行此。</span><span class="sxs-lookup"><span data-stu-id="54d66-190">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="54d66-191">如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>时不可用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用时，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>将直接调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-191">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>.</span></span>  
  
 <span data-ttu-id="54d66-192">如果您提供您自己的加载程序服务，或者选择不为提供加载程序服务，你负责调用此方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-192">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="54d66-193"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法将自动调用此方法，通过调用间接<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用，或直接如果不是。</span><span class="sxs-lookup"><span data-stu-id="54d66-193">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginUnload : unit -&gt; unit&#xA;override this.OnBeginUnload : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-194">通知设计器加载程序卸载即将开始。</span><span class="sxs-lookup"><span data-stu-id="54d66-194">Notifies the designer loader that unloading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-195"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A>设计器加载程序即将卸载文档时调用方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-195">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> method is invoked when the designer loader is about to unload the document.</span></span>  
  
 <span data-ttu-id="54d66-196">文档可能会卸载准备重新加载，或者如果无法加载文档。</span><span class="sxs-lookup"><span data-stu-id="54d66-196">The document may be unloaded in preparation for reloading, or if the document failed to load.</span></span> <span data-ttu-id="54d66-197">如果添加特定于文档的服务中<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>或<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>，此处将其移除。</span><span class="sxs-lookup"><span data-stu-id="54d66-197">If you added document-specific services in <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> or <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, remove them here.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member OnEndLoad : bool * System.Collections.ICollection -&gt; unit&#xA;override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="54d66-198">如果已成功地完成了加载，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-198"><see langword="true" /> if the load completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="54d66-199">包含被报告为错误的对象（通常是异常）的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-199">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</span></span></param>
        <summary><span data-ttu-id="54d66-200">通知设计器加载程序加载已完成。</span><span class="sxs-lookup"><span data-stu-id="54d66-200">Notifies the designer loader that loading is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-201"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>加载完成后调用方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-201">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method is invoked when loading is finished.</span></span> <span data-ttu-id="54d66-202">始终调用时，即使在加载期间引发异常。</span><span class="sxs-lookup"><span data-stu-id="54d66-202">It is always called, even if an exception is thrown during loading.</span></span> <span data-ttu-id="54d66-203">值`successful`将设置为`true`如果加载成功，或`false`如果出现了致命错误。</span><span class="sxs-lookup"><span data-stu-id="54d66-203">The value of `successful` will be set to `true` if the load succeeded, or `false` if a fatal error occurred.</span></span> <span data-ttu-id="54d66-204">`errors`集合将包含被报告为错误的对象。</span><span class="sxs-lookup"><span data-stu-id="54d66-204">The `errors` collection will contain objects that were reported as errors.</span></span> <span data-ttu-id="54d66-205">通常情况下，这些对象是异常。</span><span class="sxs-lookup"><span data-stu-id="54d66-205">Usually, these objects are exceptions.</span></span>  
  
 <span data-ttu-id="54d66-206">如果你实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>若要提供依赖加载支持，应调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法在最后一个调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-206">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="54d66-207">默认情况下<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>实现<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>和执行此。</span><span class="sxs-lookup"><span data-stu-id="54d66-207">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="54d66-208">如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>时不可用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>调用时，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>将直接调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>后调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d66-208">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> after calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</span></span>  
  
 <span data-ttu-id="54d66-209">完成所有依赖加载后，应由设计器加载程序服务调用此方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-209">This method should be called by the designer loader service when all dependent loads have been completed.</span></span>  <span data-ttu-id="54d66-210">这会停止由启动加载过程<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-210">This stops the loading process that was initiated by the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method.</span></span> <span data-ttu-id="54d66-211">如果您提供您自己的加载程序服务，或者选择不为提供加载程序服务，你负责调用此方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-211">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="54d66-212"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法将自动调用此方法，通过调用间接<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>不可用，或直接如果不是。</span><span class="sxs-lookup"><span data-stu-id="54d66-212">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-213"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-213">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="54d66-214">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-214">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberSignature Language="F#" Value="abstract member OnModifying : unit -&gt; unit&#xA;override this.OnModifying : unit -&gt; unit" Usage="basicDesignerLoader.OnModifying " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-215">通知设计器加载程序即将修改文档的状态。</span><span class="sxs-lookup"><span data-stu-id="54d66-215">Notifies the designer loader that the state of the document is about to be modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-216"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>方法调用以响应的组件更改、 添加，或删除事件表示，在设计器是以进行修改。</span><span class="sxs-lookup"><span data-stu-id="54d66-216">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> method is called in response to a component changing, adding, or removing event which indicates that the designer is about to be modified.</span></span> <span data-ttu-id="54d66-217">您可以通过重写此方法实现源代码管理。</span><span class="sxs-lookup"><span data-stu-id="54d66-217">You can implement source code control by overriding this method.</span></span> <span data-ttu-id="54d66-218">调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>并不意味着<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>更高版本将属性设置为`true`; 它只是表示旨在执行此操作。</span><span class="sxs-lookup"><span data-stu-id="54d66-218">A call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> does not mean that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> property will later be set to `true`; it merely indicates an intention to do so.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="54d66-219">用于保持加载的设计器的状态的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-219">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</span></span></param>
        <summary><span data-ttu-id="54d66-220">刷新对设计器的所有更改。</span><span class="sxs-lookup"><span data-stu-id="54d66-220">Flushes all changes to the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-221"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>设计器加载程序需要刷新以保持对设计器所做的任何更改时调用方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-221">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method is invoked when the designer loader needs to flush to persistence any changes made to the designers.</span></span> <span data-ttu-id="54d66-222">调用以响应对的调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-222">It is invoked in response to a call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><span data-ttu-id="54d66-223">用于加载设计器的状态的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-223">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</span></span></param>
        <summary><span data-ttu-id="54d66-224">从持久性存储中加载设计器。</span><span class="sxs-lookup"><span data-stu-id="54d66-224">Loads a designer from persistence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-225"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>当设计器加载程序需要加载其状态时调用方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-225">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> method is invoked when the designer loader needs to load its state.</span></span> <span data-ttu-id="54d66-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 之前调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> is called before the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method.</span></span> <span data-ttu-id="54d66-227">必须实现此方法以加载设计器的内容。</span><span class="sxs-lookup"><span data-stu-id="54d66-227">You must implement this method to load the designer contents.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d66-228">获取或设置加载程序使用的序列化管理器的属性提供程序。</span><span class="sxs-lookup"><span data-stu-id="54d66-228">Gets or sets the property provider for the serialization manager being used by the loader.</span></span></summary>
        <value><span data-ttu-id="54d66-229">要将其属性提供给序列化管理器的对象。</span><span class="sxs-lookup"><span data-stu-id="54d66-229">An object whose properties are to be provided to the serialization manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-230">序列化管理器提供了`Properties`自定义它们的特定需求的序列化的序列化程序可以读取其主接口上的属性。</span><span class="sxs-lookup"><span data-stu-id="54d66-230">The serialization manager provides a `Properties` property on its primary interface that can be read by serializers to customize their serialization to specific needs.</span></span> <span data-ttu-id="54d66-231">序列化程序进行检查的属性因使用序列化程序的类型而异。</span><span class="sxs-lookup"><span data-stu-id="54d66-231">The properties that are examined by the serializers vary depending on the type of serializer used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-232"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-232">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberSignature Language="F#" Value="member this.Reload : System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions -&gt; unit" Usage="basicDesignerLoader.Reload flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags"><span data-ttu-id="54d66-233"><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="54d66-233">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="54d66-234">排队设计器的重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-234">Queues a reload of the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-235"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>方法可以由请求的设计器重新加载设计器加载程序调用。</span><span class="sxs-lookup"><span data-stu-id="54d66-235">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> method can be invoked by the designer loader to request a reload of the designer.</span></span> <span data-ttu-id="54d66-236">在空闲时不会进行重新加载，因为此方法不会实际重新加载设计器;它只是队列重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-236">Because reloads are performed at idle time, this method does not actually reload the designer; it just queues the reload.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReloadPending : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d66-237">获取一个值，指示重新加载是否已经排队。</span><span class="sxs-lookup"><span data-stu-id="54d66-237">Gets a value indicating whether a reload has been queued.</span></span></summary>
        <value><span data-ttu-id="54d66-238">如果对 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 的调用已经为重新加载请求排队，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-238"><see langword="true" />, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member ReportFlushErrors : System.Collections.ICollection -&gt; unit&#xA;override this.ReportFlushErrors : System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.ReportFlushErrors errors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors"><span data-ttu-id="54d66-239">包含错误对象（通常是异常）的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-239">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</span></span></param>
        <summary><span data-ttu-id="54d66-240">报告刷新更改时发生的错误。</span><span class="sxs-lookup"><span data-stu-id="54d66-240">Reports errors that occurred while flushing changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-241"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>方法调用期间<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>如果刷新更改时发生一个或多个错误。</span><span class="sxs-lookup"><span data-stu-id="54d66-241">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> method is called during <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> if one or more errors occurred while flushing changes.</span></span> <span data-ttu-id="54d66-242">中的值`errors`集合可以是异常或对象与<xref:System.Object.ToString%2A>描述错误的值。</span><span class="sxs-lookup"><span data-stu-id="54d66-242">The values in the `errors` collection can be exceptions or objects with <xref:System.Object.ToString%2A> values that describe the error.</span></span> <span data-ttu-id="54d66-243">默认实现<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>引发集合中的最后一个异常。</span><span class="sxs-lookup"><span data-stu-id="54d66-243">The default implementation of <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> raises the last exception in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-244">刷新更改时发生了一个或多个错误。</span><span class="sxs-lookup"><span data-stu-id="54d66-244">One or more errors occurred while flushing changes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetBaseComponentClassName : string -&gt; unit" Usage="basicDesignerLoader.SetBaseComponentClassName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="54d66-245">表示要设计的组件的全名的字符串。</span><span class="sxs-lookup"><span data-stu-id="54d66-245">A string representing the full name of the component to be designed.</span></span></param>
        <summary><span data-ttu-id="54d66-246">设置基组件的完整类名。</span><span class="sxs-lookup"><span data-stu-id="54d66-246">Sets the full class name of the base component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-247"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A>方法应在调用期间加载来建立一个设计器正在设计的组件的完整名称。</span><span class="sxs-lookup"><span data-stu-id="54d66-247">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method should be called during loading to establish the full name of the component a designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54d66-248"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-248"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-249">将外部组件注册为由 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 管理的加载过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="54d66-249">Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-250">调用<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>一次为每个参与加载进程的外部对象的方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-250">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method once for each external object participating in the load process.</span></span> <span data-ttu-id="54d66-251"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>加载进程的工作都完成时调用方法。</span><span class="sxs-lookup"><span data-stu-id="54d66-251">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-252"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="54d66-253">如果加载成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-253"><see langword="true" /> to load successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="54d66-254">包含加载期间发生的错误的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-254">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</span></span></param>
        <summary><span data-ttu-id="54d66-255">发出信号表示已完成依赖加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-255">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-256"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法调用以指示已完成依赖加载操作。</span><span class="sxs-lookup"><span data-stu-id="54d66-256">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="54d66-257">调用<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>方法通过调用已注册的每个进程一次<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>方法，它已完成。</span><span class="sxs-lookup"><span data-stu-id="54d66-257">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method once for every process that was registered by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method, which has already completed.</span></span>  
  
 <span data-ttu-id="54d66-258">如果依赖加载成功，调用方集`successful`参数`true`，并将传递空集合或`null`到`errorCollection`参数。</span><span class="sxs-lookup"><span data-stu-id="54d66-258">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="54d66-259">如果依赖加载遇到错误，调用方将设置`successful`参数`false`，并将传递一系列指示到失败的原因的异常`errorCollection`参数。</span><span class="sxs-lookup"><span data-stu-id="54d66-259">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54d66-260"><see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> 未添加任何加载依赖项，或者 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="54d66-260">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="54d66-261">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-261">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d66-262">重新加载设计文档。</span><span class="sxs-lookup"><span data-stu-id="54d66-262">Reloads the design document.</span></span></summary>
        <returns><span data-ttu-id="54d66-263">如果接受重新加载请求，则为 <see langword="true" />；如果加载程序不允许重新加载，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d66-263"><see langword="true" /> if the reload request is accepted; <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d66-264">任何对象都可以调用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A>方法来请求加载程序重新加载设计文档。</span><span class="sxs-lookup"><span data-stu-id="54d66-264">Any object can call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> method to request that the loader reload the design document.</span></span> <span data-ttu-id="54d66-265">如果加载程序支持重新加载并执行重新加载，设计器加载程序可以返回`true`。</span><span class="sxs-lookup"><span data-stu-id="54d66-265">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="54d66-266">否则，它将返回`false`，指示将不会发生重新加载。</span><span class="sxs-lookup"><span data-stu-id="54d66-266">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="54d66-267">调用方不能依赖于立即; 发生重新加载设计器加载程序可以计划这段时间，或者它可以尝试在一次重载设计器。</span><span class="sxs-lookup"><span data-stu-id="54d66-267">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload the designer at once.</span></span>  
  
 <span data-ttu-id="54d66-268">如果无法重新加载设计器，调用方可以向用户显示一条消息。</span><span class="sxs-lookup"><span data-stu-id="54d66-268">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>