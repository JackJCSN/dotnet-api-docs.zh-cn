<Type Name="ContentPresenter" FullName="System.Windows.Controls.ContentPresenter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec3403faba1893bdc87063e8c531abebbfb14b09" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70604479" /></Metadata><TypeSignature Language="C#" Value="public class ContentPresenter : System.Windows.FrameworkElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentPresenter extends System.Windows.FrameworkElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContentPresenter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentPresenter&#xA;Inherits FrameworkElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPresenter : System::Windows::FrameworkElement" />
  <TypeSignature Language="F#" Value="type ContentPresenter = class&#xA;    inherit FrameworkElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>显示 <see cref="T:System.Windows.Controls.ContentControl" /> 的内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常使用<xref:System.Windows.Controls.ContentPresenter>的<xref:System.Windows.Controls.ControlTemplate>中<xref:System.Windows.Controls.ContentControl>的来指定要添加内容的位置。 每<xref:System.Windows.Controls.ContentControl>个类型的<xref:System.Windows.Controls.ContentPresenter>默认值<xref:System.Windows.Controls.ControlTemplate>均为。  
  
 <xref:System.Windows.Controls.ControlTemplate> 当对象位于 <xref:System.Windows.Controls.ContentControl> 的中时 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> ， 、 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 和属性将从相同名称的属性中获取其值。 <xref:System.Windows.Controls.ContentControl> <xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.Controls.ContentPresenter.Content%2A> 可以让<xref:System.Windows.Controls.ContentPresenter>属性通过<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>设置属性或绑定到模板父级的其他属性来获取这些属性的值。  
  
 使用以下逻辑 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 显示：  <xref:System.Windows.Controls.ContentPresenter>  
  
-   <xref:System.Windows.Controls.ContentPresenter> 如果设置了 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 的<xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.UIElement>属性，则会将其应用到属性，并将显示结果及其子元素（如果有）。 <xref:System.Windows.DataTemplate>  <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 有关<xref:System.Windows.DataTemplate>对象的详细信息，请参阅[数据模板化概述](~/docs/framework/wpf/data/data-templating-overview.md)。  
  
-   <xref:System.Windows.DataTemplate> <xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.UIElement>如果设置了的<xref:System.Windows.Controls.ContentPresenter>属性，则会向<xref:System.Windows.Controls.ContentPresenter.Content%2A>属性应用合适的，并且会显示结果及其子元素（如果有）。 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>  
  
-   如果有<xref:System.Windows.DataTemplate>与<xref:System.Windows.Controls.ContentPresenter.Content%2A>类型关联的， <xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.DataTemplate> 则会 <xref:System.Windows.UIElement> 将其应用到属性，并将显示生成的及其子元素（如果有）。 <xref:System.Windows.Controls.ContentPresenter.Content%2A>  
  
-   如果<xref:System.Windows.Controls.ContentPresenter.Content%2A>是一个<xref:System.Windows.UIElement>对象， <xref:System.Windows.UIElement>则显示。 <xref:System.Windows.UIElement>如果已经有父级，则会出现异常。  
  
-   <xref:System.ComponentModel.TypeConverter>如果有一个将<xref:System.Windows.Controls.ContentPresenter.Content%2A>类型转换为<xref:System.Windows.UIElement>的，则将<xref:System.Windows.Controls.ContentPresenter>使用<xref:System.ComponentModel.TypeConverter>并显示结果<xref:System.Windows.UIElement> 。  
  
-   如果<xref:System.ComponentModel.TypeConverter>有一个将<xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.Controls.ContentPresenter.Content%2A>类型转换为<xref:System.ComponentModel.TypeConverter>字符串的，则将使用并创建一个<xref:System.Windows.Controls.TextBlock>来包含该字符串。 此时将显示<xref:System.Windows.Controls.TextBlock>。  
  
-   如果内容为<xref:System.Xml.XmlElement>，则<xref:System.Xml.XmlElement.InnerText%2A> <xref:System.Windows.Controls.TextBlock>属性的值将显示在中。  
  
-   <xref:System.Object.ToString%2A>对<xref:System.Windows.Controls.ContentPresenter>调用方法，并 <xref:System.Windows.Controls.TextBlock> 创建以包含由返回的字符串。 <xref:System.Windows.Controls.ContentPresenter.Content%2A> <xref:System.Object.ToString%2A> 此时将显示<xref:System.Windows.Controls.TextBlock>。  
  
   
  
## Examples  
 下面演示<xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.ControlTemplate>了<xref:System.Windows.Style> 用于 <xref:System.Windows.Controls.Button> 设置的的。 定义在元素<xref:System.Windows.Shapes.Ellipse>中<xref:System.Windows.Controls.Button> 显示 <xref:System.Windows.Controls.Grid> 为。 <xref:System.Windows.Controls.ControlTemplate> 应在内垂直<xref:System.Windows.Controls.ContentControl.Content%2A>和水平居中<xref:System.Windows.Controls.Grid>显示和的标记。 <xref:System.Windows.Controls.ContentPresenter>  <xref:System.Windows.Controls.Button>  
  
 [!code-xaml[StylingIntroSample_snippet#ButtonCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#buttonct)]   
  
 下图显示了应用此应用<xref:System.Windows.Controls.Button>时的的外观：  
  
 ![按钮 system.windows.controls.controltemplate> 示例](~/add/media/stylingintro-buttoncontroltemplate.png "按钮 system.windows.controls.controltemplate> 示例")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TemplateBindingExtension" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">样式设置和模板化示例简介</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPresenter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.ContentPresenter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">此 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象为排列其子元素所应使用的大小。</param>
        <summary>定位单个子元素并确定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的内容。</summary>
        <returns>元素所需的实际大小。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="ChooseTemplate">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DataTemplate ChooseTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DataTemplate ChooseTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ChooseTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ChooseTemplate () As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::DataTemplate ^ ChooseTemplate();" />
      <MemberSignature Language="F#" Value="abstract member ChooseTemplate : unit -&gt; System.Windows.DataTemplate&#xA;override this.ChooseTemplate : unit -&gt; System.Windows.DataTemplate" Usage="contentPresenter.ChooseTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回要使用的模板。 这可能取决于内容或其他属性。</summary>
        <returns>要使用的 <see cref="T:System.Windows.DataTemplate" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基类实现以下规则：  
  
1.  如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>设置了，请使用它。  
  
2.  如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>设置了，则调用<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>其方法。 如果结果不`null`为，请使用它。  
  
3.  查找与已知 <xref:System.Windows.Controls.ContentPresenter> 的资源（包括应用程序、主题和系统资源）之间的内容相匹配的。 <xref:System.Windows.DataTemplate.DataType%2A> <xref:System.Windows.DataTemplate> 如果找到一个，请使用它。  
  
4.  如果的类型<xref:System.Windows.Controls.ContentPresenter.Content%2A>是 "common"，请使用标准模板。 常见类型为`String`、 <xref:System.Xml.XmlNode>和<xref:System.Windows.UIElement>。  
  
5.  否则，请使用本质上转换<xref:System.Windows.Controls.ContentPresenter.Content%2A>为字符串的默认模板并将其显示<xref:System.Windows.Controls.TextBlock>在中。  
  
 派生类可以重写这些规则并实现其自己的规则。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.ContentPresenter.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于生成 <see cref="T:System.Windows.Controls.ContentPresenter" /> 的子元素的数据。</summary>
        <value>用于生成子元素的数据。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你<xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.Controls.ContentControl>在的中<xref:System.Windows.Controls.ContentControl.Content%2A>放置时，它会自动显示模板化控件的。 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ControlTemplate.TargetType%2A>这意味着，如果将<xref:System.Windows.Controls.ControlTemplate>的设置为<xref:System.Windows.Controls.Button>， <xref:System.Windows.Controls.ContentPresenter.Content%2A>则的<xref:System.Windows.Controls.ContentPresenter>属性将隐式绑定到<xref:System.Windows.Controls.ContentControl.Content%2A> <xref:System.Windows.Controls.Button>使用<xref:System.Windows.Controls.ControlTemplate>该的的。  
  
 若要为<xref:System.Windows.Controls.ContentPresenter>属性设置绑定，你可能需要考虑<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>使用属性。 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>属性指向模板父节点上的属性，并自动为关联模板和模板选择器属性使用别名。  
  
<a name="xamlTextUsage_Content"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 通常，使用`TemplateBinding`将此属性值绑定到模板化控件上的某个值。 有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[TemplateBinding 标记扩展](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_Content"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.ContentProperty>|  
|元数据属性设置为`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSource">
      <MemberSignature Language="C#" Value="public string ContentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentSource : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在自动命名别名过程中使用的基名称。</summary>
        <value>要在自动命名别名过程中使用的基名称。 默认值为“Content”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当在模板中时<xref:System.Windows.Controls.ContentPresenter> ，才应使用此属性。 如果模板包含<xref:System.Windows.Controls.ContentPresenter> <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>设置<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> <xref:System.Windows.Controls.ContentPresenter> `Abc`为 "`Abc`" 的，则的`AbcTemplate`、和属性将自动化名为、和。 <xref:System.Windows.Controls.ContentPresenter.Content%2A>`AbcTemplateSelector`。  <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> `Abc` `AbcStringFormat`从开始[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]，将设置为 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A>  "" 还会使属性化名为。  
  
 此属性最有用的两个值为 "内容" 和 "标头"。  
  
<a name="dependencyPropertyInfo_ContentSource"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.ContentSourceProperty>|  
|元数据属性设置为`true`|None|  
  
   
  
## Examples  
 下面的示例演示了一个<xref:System.Windows.Controls.HeaderedContentControl>样式，该样式演示<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>属性的用法：  
  
 [!code-xaml[HeaderedContentControl#HeaderedContentControlStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedContentControl/CSharp/Page1.xaml#headeredcontentcontrolstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormat">
      <MemberSignature Language="C#" Value="public string ContentStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentStringFormat : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个撰写字符串，该字符串指定如果 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性显示为字符串，应如何设置该属性的格式。</summary>
        <value>一个撰写字符串，指定如果 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性显示为字符串，应如何设置该属性的格式。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A>可以是预定义的复合字符串格式。 有关字符串格式的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。 如果设置<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>了<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 或 <xref:System.Windows.Controls.ContentPresenter> 的属性，则 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A> 将忽略属性。  
  
<a name="dependencyPropertyInfo_ContentStringFormat"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty>|  
|元数据属性设置为`true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示控件内容的模板。</summary>
        <value>一个 <see cref="T:System.Windows.DataTemplate" />，它定义内容的可视化处理。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ContentTemplate"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[TemplateBinding 标记扩展](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_ContentTemplate"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateProperty>|  
|元数据属性设置为`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Controls.ComboBox>控件的样式：  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ContentTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ContentTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ContentTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" />，它允许应用程序编写器为选择用于显示控件内容的模板提供自定义逻辑。</summary>
        <value>一个 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象，它提供用于返回要应用的 <see cref="T:System.Windows.DataTemplate" /> 的逻辑。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果设置了<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>属性，则忽略此属性。 有关详细信息，请参阅 <xref:System.Windows.Controls.ContentPresenter.ChooseTemplate%2A>。  
  
<a name="xamlTextUsage_ContentTemplateSelector"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[TemplateBinding 标记扩展](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_ContentTemplateSelector"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty>|  
|元数据属性设置为`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">返回值不应超过的上限值。</param>
        <summary>根据大小属性、边距和请求的子内容大小确定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的大小。</summary>
        <returns>排列子内容所需的大小。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentStringFormatChanged (string oldContentStringFormat, string newContentStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentStringFormatChanged(string oldContentStringFormat, string newContentStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentStringFormatChanged (oldContentStringFormat As String, newContentStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentStringFormatChanged(System::String ^ oldContentStringFormat, System::String ^ newContentStringFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnContentStringFormatChanged : string * string -&gt; unit&#xA;override this.OnContentStringFormatChanged : string * string -&gt; unit" Usage="contentPresenter.OnContentStringFormatChanged (oldContentStringFormat, newContentStringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentStringFormat" Type="System.String" />
        <Parameter Name="newContentStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldContentStringFormat"><see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的旧值。</param>
        <param name="newContentStringFormat"><see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的新值。</param>
        <summary>当 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性更改时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateChanged (System.Windows.DataTemplate oldContentTemplate, System.Windows.DataTemplate newContentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateChanged(class System.Windows.DataTemplate oldContentTemplate, class System.Windows.DataTemplate newContentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateChanged (oldContentTemplate As DataTemplate, newContentTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateChanged(System::Windows::DataTemplate ^ oldContentTemplate, System::Windows::DataTemplate ^ newContentTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnContentTemplateChanged (oldContentTemplate, newContentTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newContentTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplate"><see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的旧值。</param>
        <param name="newContentTemplate"><see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的新值。</param>
        <summary>当 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, System.Windows.Controls.DataTemplateSelector newContentTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, class System.Windows.Controls.DataTemplateSelector newContentTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateSelectorChanged (oldContentTemplateSelector As DataTemplateSelector, newContentTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldContentTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newContentTemplateSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit&#xA;override this.OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit" Usage="contentPresenter.OnContentTemplateSelectorChanged (oldContentTemplateSelector, newContentTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplateSelector"><see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的旧值。</param>
        <param name="newContentTemplateSelector"><see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的新值。</param>
        <summary>当 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性更改时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.DataTemplate oldTemplate, System.Windows.DataTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.DataTemplate oldTemplate, class System.Windows.DataTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As DataTemplate, newTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::DataTemplate ^ oldTemplate, System::Windows::DataTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">旧 <see cref="T:System.Windows.DataTemplate" /> 对象值。</param>
        <param name="newTemplate">新 <see cref="T:System.Windows.DataTemplate" /> 对象值。</param>
        <summary>当 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKey">
      <MemberSignature Language="C#" Value="public bool RecognizesAccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecognizesAccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property RecognizesAccessKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecognizesAccessKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecognizesAccessKey : bool with get, set" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.ContentPresenter" /> 是否应在其样式中使用 <see cref="T:System.Windows.Controls.AccessText" />。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.ContentPresenter" /> 应当在其样式中使用 <see cref="T:System.Windows.Controls.AccessText" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_RecognizesAccessKey"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty>|  
|元数据属性设置为`true`|None|  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Controls.CheckBox>控件的样式：  
  
  
  
 有关此示例的详细信息，请参阅[CheckBox 样式和模板](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AccessText" />
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RecognizesAccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RecognizesAccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RecognizesAccessKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RecognizesAccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RecognizesAccessKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContentTemplateSelector">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeContentTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeContentTemplateSelector() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeContentTemplateSelector () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeContentTemplateSelector();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeContentTemplateSelector : unit -&gt; bool" Usage="contentPresenter.ShouldSerializeContentTemplateSelector " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示序列化进程是否应当对此类的实例的 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 有效属性值进行序列化。</summary>
        <returns>如果应当序列化 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
