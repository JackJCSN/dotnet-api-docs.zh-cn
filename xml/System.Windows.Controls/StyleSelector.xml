<Type Name="StyleSelector" FullName="System.Windows.Controls.StyleSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2e81a22697ac11cd494d0bfb1a291b5601f99ab" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70589118" /></Metadata><TypeSignature Language="C#" Value="public class StyleSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StyleSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class StyleSelector" />
  <TypeSignature Language="F#" Value="type StyleSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供根据自定义逻辑应用样式的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要创建<xref:System.Windows.Controls.StyleSelector>基于自定义逻辑应用样式的，请创建<xref:System.Windows.Controls.StyleSelector>类的子类并实现<xref:System.Windows.Controls.StyleSelector.SelectStyle%2A>方法。  
  
   
  
## Examples  
 下面的示例演示如何定义<xref:System.Windows.Controls.StyleSelector> <xref:System.Windows.Style>为行定义的。 此示例根据行<xref:System.Windows.Controls.Control.Background%2A>索引定义颜色。  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 下面的示例演示如何为定义 <xref:System.Windows.ResourceKey> 。 <xref:System.Windows.Controls.StyleSelector> 前缀映射到命名空间和定义了的<xref:System.Windows.Controls.StyleSelector>相应程序集。 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] `namespc` 有关详细信息，请参阅[WPF xaml 的 XAML 命名空间和命名空间映射](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)。  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 下面的示例演示如何将的<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A>属性<xref:System.Windows.Controls.ListView>设置为此<xref:System.Windows.Controls.StyleSelector>资源。  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 有关如何创建选择器以选择定义的样式资源的示例，请参阅的实现<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>，该实现允许你根据类似的概念使用自定义逻辑来<xref:System.Windows.DataTemplate>选择。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
    <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StyleSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.StyleSelector" /> 的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Style SelectStyle (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Style SelectStyle(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectStyle (item As Object, container As DependencyObject) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Style ^ SelectStyle(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style&#xA;override this.SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style" Usage="styleSelector.SelectStyle (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">内容。</param>
        <param name="container">将应用样式的元素。</param>
        <summary>在派生类中重写时，基于自定义逻辑返回 <see cref="T:System.Windows.Style" />。</summary>
        <returns>返回要应用的应用程序特定样式；否则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要创建<xref:System.Windows.Controls.StyleSelector>基于自定义逻辑应用样式的，请创建<xref:System.Windows.Controls.StyleSelector>类的子类并实现<xref:System.Windows.Controls.StyleSelector.SelectStyle%2A>方法。  
  
   
  
## Examples  
 下面的示例演示如何定义<xref:System.Windows.Controls.StyleSelector> <xref:System.Windows.Style>为行定义的。 此示例根据行<xref:System.Windows.Controls.Control.Background%2A>索引定义颜色。  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 下面的示例演示如何为定义 <xref:System.Windows.ResourceKey> 。 <xref:System.Windows.Controls.StyleSelector> 前缀映射到命名空间和定义了的<xref:System.Windows.Controls.StyleSelector>相应程序集。 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] `namespc` 有关详细信息，请参阅[WPF xaml 的 XAML 命名空间和命名空间映射](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)。  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 下面的示例演示如何将的<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A>属性<xref:System.Windows.Controls.ListView>设置为此<xref:System.Windows.Controls.StyleSelector>资源。  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 有关如何创建选择器以选择定义的样式资源的示例，请参阅的实现<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>，该实现允许你根据类似的概念使用自定义逻辑来<xref:System.Windows.DataTemplate>选择。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
  </Members>
</Type>
