<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bdb65d8082839992e9c9f14aafe65d91a1b2156" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70637499" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为开发人员提供一种当内容页的关联母版页中已经声明了 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件的情况下声明内容页中的静态连接的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当已在母版页中声明<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 控件时，在内容页中声明静态连接的特定方案存在该控件。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>  
  
 按照设计，使用 Web 部件控件的网页必须包含一个（且仅有一个） <xref:System.Web.UI.WebControls.WebParts.WebPartManager>管理页面上所有 Web 部件控件的控件。 当 Web 部件应用程序使用母版页时，通常将<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件放置在母版页中，这是因为所有内容页都在运行时与母版页合并，而单个<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件将管理所有 Web 部件控件在所有内容页中。 但是，当开发人员希望在此类应用程序的内容页中声明静态连接时，它们似乎面临着局限性。 静态 Web 部件连接只能通过添加`<asp:webpartconnection>`元素作为`<staticconnections>`元素的子元素来声明，该元素本身必须`<asp:webpartmanager>`是元素的子元素。 但由于<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件已在母版页中声明，并且是允许<xref:System.Web.UI.WebControls.WebParts.WebPartManager>的控件，因此开发人员无法在内容页中<xref:System.Web.UI.WebControls.WebParts.WebPartManager>声明其他控件来添加静态连接。  
  
 控件在此方案中将取代<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 开发人员在`<asp:proxywebpartmanager>`其内容页中`<asp:webpartmanager>`声明元素而不是元素，然后可以将静态连接声明为子元素。 在运行时， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件中的连接只是添加<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>到<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的集合，并与任何其他连接一样处理。  
  
 由于控件仅用于此特定开发方案，因此它具有比类更多的<xref:System.Web.UI.WebControls.WebParts.WebPartManager>功能。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 事实上，尽管<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件充当代理来包含<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件在内容页中的静态连接，但它<xref:System.Web.UI.WebControls.WebParts.WebPartManager>并不从控件继承。 它直接从<xref:System.Web.UI.Control>类继承，只重写几个基成员。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>、和属性 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> 被重写，并分配了阻止它们被使用的值。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> 其他继承属性会被重写以调整其设计时行为，但其他属性的行为与基属性相同。 其中包括<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>属性。 最后， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>该类有一个非继承属性。 属性返回其自己的静态连接的集合<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> （对象）。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>  
  
 与方法一样， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类也只重写几个方法，主要是为了限制其使用。 如果调用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> ，则通过引发异常使继承的方法不可用。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>方法始终返回一个空的控件集合，这会使其无法包含控件的集合。 最后， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>方法调用基方法，然后将<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性引用的连接集合分配<xref:System.Web.UI.WebControls.WebParts.WebPartManager>给<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>控件的属性。 这会影响所有内容页中声明的所有静态连接，并使其成为由母版页中的<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件所维护的连接集合的一部分。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类在使用母版页的应用程序的内容页上声明静态连接。 该示例包括五个部分：  
  
-   允许您在页上更改 Web 部件显示模式的用户控件。  
  
-   接口的源代码和两个<xref:System.Web.UI.WebControls.WebParts.WebPart>用作连接的提供者和使用者的控件。  
  
-   承载应用程序的用户控件、内容页和<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的主网页。  
  
-   承载<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件的内容网页、两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和用于连接两个控件的静态连接。  
  
-   有关如何运行 "示例" 页的说明。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 将以下源代码保存到 .ascx 文件，并为其提供分配给`Src`此用户控件的`Register`指令属性的文件名，该属性位于宿主母版页顶部附近。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅[演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 此代码示例的第二部分是接口和控件的源代码。 源文件包含一个名为`IZipCode`的简单接口。 还有一个<xref:System.Web.UI.WebControls.WebParts.WebPart>名为`ZipCodeWebPart`的类，该类实现接口并充当提供程序控件。 它`ProvideIZipCode`的方法是实现接口的唯一成员的回调方法。 方法只返回接口的实例。 请注意，该方法在其元`ConnectionProvider`数据中用特性标记。 这是将方法标识为提供程序连接点的回调方法的机制。 其他<xref:System.Web.UI.WebControls.WebParts.WebPart>类命名`WeatherWebPart`为，它充当连接的使用者。 此类具有一个名为`GetZipCode`的方法，该方法从`IZipCode`提供程序控件获取接口的实例。 请注意，此方法在其元数据中被标记为使用者`ConnectionConsumer`的连接点方法和属性。  
  
 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，你可以将源代码放在站点的 App_Code 文件夹中，在此文件夹中，它将在运行时动态编译。 此代码示例使用动态编译。 有关演示如何编译的演练，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 此代码示例的第三部分是母版页。 你应采用以下源代码并将其保存到文件中，并将其命名为 MasterPageCS 或 MasterPageVB （具体取决于你使用的语言）。 请注意，母版页包含`Register`注册用户控件的指令，并且它在页面的正文中引用用户控件本身。 母版页还声明用于此页和`<asp:webpartmanager>`所有相关内容页的单个元素。 最后，母版页包含一个`<asp: contentplaceholder>`元素，该元素声明内容页在页面中的插入位置。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 此代码示例的第四部分是内容页。 应复制以下源代码，并将其保存到扩展名为 .aspx 的文件中。 请注意， `Page`其指令包含`MasterFile`用于引用母版页的属性。 此外，此页还包含`Register`一个指令，用于在包含参与连接的动态编译自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件的 App_Code 文件夹中注册文件。 在该页`<asp:content>`的标记中，有`<asp:proxywebpartmanager>`一个元素，其中包含一个子元素`<staticconnections>` ，该子元素又具有子`<asp:webpartconnection>`元素来声明连接的详细信息。 在页`<script>`上的标记中`Button1_Click` ，方法将添加一些代码，用于访问母版页<xref:System.Web.UI.WebControls.WebParts.WebPartManager>中的主控件和内容页<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>中的控件，并将其一些详细信息写入页面。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 在浏览器中加载页面后，单击 " **WebPartManager 信息**" 按钮，并观察有关<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件以及<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>内容页中的控件的信息。 例如，请注意，它们各自在跟踪静态连接的属性（ <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性）中具有相同的计数。 另请注意，虽然<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件具有一个<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>用于跟踪它所管理的控件数量的属性， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>但该控件没有此类属性，因为其唯一用途是包含静态连接。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由 ASP.NET 生成的 HTML 标记的控件 ID。</summary>
        <value>由 ASP.NET 生成的 HTML 标记的控件 ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 UI 层次结构中的指定服务器控件的子控件。</summary>
        <value>指定服务器控件的子控件的集合。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基属性，以阻止 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件包含其他控件。</summary>
        <returns>始终返回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法会重写基方法，以<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>防止控件包含和返回控件的集合。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> 其唯一目的是使静态连接可以在使用母版页的应用程序内的内容页中声明。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止使用主题。</summary>
        <value>始终返回 <see langword="false" />，以防止使用主题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性重写基属性，以防止主题<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>与控件一起使用。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> 这是为了防止它与母版页（其<xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType>属性始终返回`true`）中的控件所使用的任何主题发生冲突。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基方法，以防止该方法被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>任何调用方尝试调用方法，方法将重写基方法并引发异常。 这是因为，继承<xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType>方法是为具有用户界面（UI）的控件设计的，但<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>该控件没有 UI，因此无需设置焦点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试调用此方法。</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件并初始化控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法调用基方法，然后执行任务来<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>初始化控件。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> 此方法的一个重要任务是将<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性引用的连接集合分配<xref:System.Web.UI.WebControls.WebParts.WebPartManager>给控件的<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">关联母版页的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件为 <see langword="null" />。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止对该基属性赋值。</summary>
        <value>始终返回空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性重写基属性，以防止向其赋值，这会阻止将<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>外观与控件一起使用。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> 这是因为控件从不公开页面上的用户界面（UI）。 此行为是由<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件为其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType>属性实现的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取内容页上在 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 元素中声明的静态连接的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" />，该集合中包含在 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 元素中声明的所有静态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性引用元素中声明的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象的集合。 `<asp:proxywebpartmanager>` <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 此集合中包含的连接被添加到<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的静态连接（由其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>集合引用），并与任何与该<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件关联的其他连接完全相同。  
  
 与<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性相对应的声明性元素`<staticconnections>`是元素。 在使用母版页`<staticconnections>`的应用程序中，元素添加`<asp:webpartconnection>`为内容页上`<asp:proxywebpartmanager>`元素的子元素，而中的元素`<staticconnections>`又作为元素的子元素添加。 可以`<asp:webpartconnection>`将多个元素添加到`<staticconnections>`一个元素，多个内容页可以将静态连接作为母版页应用程序的一部分进行声明。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类的属性。 此代码示例仅显示声明<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件的内容页中的代码的相关部分和静态连接。 对于运行代码示例所需的其他页面和有关如何设置它们的说明，请参阅<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类概述的 "示例" 部分。  
  
 下面的代码是将`<staticconnections>`元素声明为`<asp:proxywebpartmanager>`元素的子元素的内容页。 另请注意， `Button1_Click`该方法将检查<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件上<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性的计数，并将其写入页面。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 在浏览器中加载页面后，单击 " **WebPartManager 信息**" 按钮，并观察有关<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件以及<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>内容页中的控件的信息。 例如，请注意，它们各自在跟踪静态连接的属性（ <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性）中具有相同的计数。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止对该基属性赋值。</summary>
        <value>始终返回 <see langword="false" />，以防止控件被设置为可见控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性重写基属性，以<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>防止控件被变为可见。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件（ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 如控件）没有用户界面（UI），也不会向用户显示。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>
