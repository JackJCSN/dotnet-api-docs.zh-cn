<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e1fce1cb9ac7a2829c58575b55cc2fd3a1fb69b" /><Meta Name="ms.sourcegitcommit" Value="6b9d64332f31de312efea785fbb19e4d80f544d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/12/2019" /><Meta Name="ms.locfileid" Value="67027220" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为开发人员提供一种当内容页的关联母版页中已经声明了 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件的情况下声明内容页中的静态连接的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>存在的特定控件的内容中声明静态连接的方案页时<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制已声明在母版页中。  
  
 根据设计，使用 Web 部件控件的网页必须包含一个 （且只有一个）<xref:System.Web.UI.WebControls.WebParts.WebPartManager>管理页上的所有 Web 部件控件的控件。 当 Web 部件应用程序使用主页面时，是常见放置<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制在主页上，因为所有内容页与母版页合并在运行的时和单个<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件将管理所有 Web 部件控件从所有内容页面。 但是，当开发人员想要声明静态连接此类应用程序的内容页中，它们可能会受到限制。 可以仅通过添加声明静态 Web 部件连接`<asp:webpartconnection>`的子元素`<staticconnections>`元素，其本身必须是子元素的`<asp:webpartmanager>`元素。 但是，由于<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件已在母版页中声明，但其中一个允许<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，开发人员不能声明其他<xref:System.Web.UI.WebControls.WebParts.WebPartManager>中要添加静态连接的内容页的控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控制取代了<xref:System.Web.UI.WebControls.WebParts.WebPartManager>在此方案中的控件。 开发人员声明`<asp:proxywebpartmanager>`元素而不是`<asp:webpartmanager>`中其内容页面，并且可以元素然后声明静态连接作为子元素。 在运行时中的连接<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>只需将控件添加到<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>的集合<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件并处理任何其他连接。  
  
 因为<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>仅在此特定开发方案中使用控件时，它具有更多受限功能比<xref:System.Web.UI.WebControls.WebParts.WebPartManager>类。 事实上，尽管<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件充当代理以包含静态连接<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件中内容的页面，它不会继承从<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 它直接继承自<xref:System.Web.UI.Control>，并重写只有几个基成员。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>， <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>，和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>属性已重写并分配值，使其无法使用。 其他继承的属性会被覆盖，以调整它们的设计时行为，但它们否则具有相同的行为的基本属性。 其中包括<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>属性。 最后，<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类具有一个非继承属性。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性返回其自己的静态连接的集合 (<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection>对象)。  
  
 至于方法，<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类同样会重写仅几个方法，主要是将其使用限制。 继承<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>方法由通过引发异常，如果调用不可用。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>方法始终返回空控件的集合，它会阻止从能够包含控件的集合。 最后，<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>方法调用基方法，然后将分配的所引用的连接集合<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性设置为<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>属性的<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 此操作将汇总所有内容页面中声明的所有静态连接使它们的连接集合的一部分由和维护<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类上的应用程序使用主页面中的内容页面中声明静态连接。 该示例包含五个部分：  
  
-   使你能够更改 Web 部件的用户控件在页面上显示模式。  
  
-   源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件作为提供程序和使用者的连接。  
  
-   承载用户控件，内容页面中，主网页和<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制应用程序。  
  
-   内容的网页所在<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件、 两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和静态连接来连接两个控件。  
  
-   如何运行示例页的说明。  
  
 此代码示例的第一个部分是使用户能够更改网页上的显示模式的用户控件。 将以下源代码保存到.ascx 文件，将其分配到的文件名称`Src`属性的`Register`指令对该用户控件，即托管主页面顶部附近。 有关详细信息显示在此控件模式和对源代码的说明，请参见[演练：更改显示模式同时适用于 Web 部件页](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 代码示例的第二部分是为接口和控件的源代码。 源代码文件包含一个简单的接口名为`IZipCode`。 此外，还有<xref:System.Web.UI.WebControls.WebParts.WebPart>类名为`ZipCodeWebPart`的实现接口，并充当提供者控件。 其`ProvideIZipCode`方法是实现接口的唯一成员的回调方法。 该方法只需返回接口的实例。 请注意，该方法标记与`ConnectionProvider`其元数据中的属性。 这是用于标识提供者连接点的回调方法作为该方法的机制。 另<xref:System.Web.UI.WebControls.WebParts.WebPart>类命名为`WeatherWebPart`，并充当使用者的连接。 此类有一个名为方法`GetZipCode`获取的实例`IZipCode`从提供者控件的接口。 请注意，此方法标记为与使用者的连接点方法`ConnectionConsumer`其元数据中的属性。  
  
 若要运行的代码示例，必须编译此源代码。 可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。 此代码示例使用动态编译。 有关演示如何编译的演练，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 代码示例的第三个部分是母版页。 应采取以下源代码，并将其保存在文件中，其命名为 MasterPageCS.master 或 MasterPageVB.master （使用具体取决于哪种语言）。 请注意，主页面包含`Register`指令来注册该用户控件，和它引用用户控件本身的页的正文中。 母版页还声明一个`<asp:webpartmanager>`元素使用此页和所有相关内容页面。 最后，主页面具有`<asp: contentplaceholder>`元素声明中插入内容页的位置页上的点。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 代码示例的第四个部分是内容页。 应复制下面的源代码，并将其保存在.aspx 扩展名的文件。 请注意，其`Page`指令包含`MasterFile`属性来引用母版页。 此外，此页包含`Register`指令包含动态编译的自定义的 App_Code 文件夹中注册该文件<xref:System.Web.UI.WebControls.WebParts.WebPart>参与连接的控件。 内`<asp:content>`标记的页上，还有`<asp:proxywebpartmanager>`元素，具有一个子`<staticconnections>`又具有子元素`<asp:webpartconnection>`元素来声明连接的详细信息。 内`<script>`标记的页上，`Button1_Click`方法将添加一些代码，访问主<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>内容页中的控件和一些及其详细信息写入页。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 加载浏览器中的页面后，单击**WebPartManager 信息**按钮，然后观察有关的信息<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>内容页中的控件。 例如，请注意它们两个跟踪静态连接其相应属性中具有相同的计数 (<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性)。 另请注意，尽管<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件具有<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>属性的跟踪数<xref:System.Web.UI.WebControls.WebParts.WebPart>它管理的控件<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件具有没有此类属性，因为其唯一用途是包含静态连接。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由 ASP.NET 生成的 HTML 标记的控件 ID。</summary>
        <value>由 ASP.NET 生成的 HTML 标记的控件 ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 UI 层次结构中的指定服务器控件的子控件。</summary>
        <value>指定服务器控件的子控件的集合。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基属性，以阻止 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件包含其他控件。</summary>
        <returns>始终返回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>方法重写基方法，以防止<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件包含和返回的控件的集合。 其唯一用途是启用的应用程序使用主页面中的内容页中声明的静态连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止使用主题。</summary>
        <value>始终返回 <see langword="false" />，以防止使用主题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>属性重写基属性，以防止主题与使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件。 这是为了防止它与用于任何主题传入冲突<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件 (其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType>属性始终返回`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基方法，以防止该方法被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>方法重写基方法，则会引发异常，如果任何调用方尝试调用的方法。 这是因为继承<xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType>方法设计为与用户界面 (UI) 控件，但<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件没有用户界面，因此具有无需设置焦点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试调用此方法。</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件并初始化控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>方法调用基方法，并再执行任务来初始化<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件。 此方法的一项重要任务是将分配的所引用的连接集合<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性设置为<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">关联母版页的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件为 <see langword="null" />。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止对该基属性赋值。</summary>
        <value>始终返回空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>属性重写基属性，以防止对要传递给它，这样做会阻止的外观与正在使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件。 这是因为该控件永远不会公开在页面上的用户界面 (UI)。 由实现相同的行为<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取内容页上在 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 元素中声明的静态连接的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" />，该集合中包含在 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 元素中声明的所有静态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性引用的集合<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>中声明对象`<asp:proxywebpartmanager>`元素。 此集合中包含的连接添加到的静态连接<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件 (所引用的其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>集合)，并完全视为与相关联的任何其他连接<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。  
  
 对应于的声明性元素<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性是`<staticconnections>`元素。 使用主页面，应用程序中`<staticconnections>`元素添加为的子`<asp:proxywebpartmanager>`内容页上的元素和一个`<asp:webpartconnection>`元素又作为子级添加的`<staticconnections>`元素。 多个`<asp:webpartconnection>`可以将元素添加到一个`<staticconnections>`元素，并且多个内容页面可以作为主页面应用程序的一部分声明静态连接。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性上的<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类。 此代码示例演示只有声明的内容页中的代码的相关部分<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控制和静态连接。 有关运行代码示例中，并说明如何设置它们，所需的其他页面，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>类概述。  
  
 下面的代码是声明的内容页`<staticconnections>`的子元素`<asp:proxywebpartmanager>`元素。 另请注意，`Button1_Click`方法检查的计数<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性上的<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控制并将其写入到页。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 加载浏览器中的页面后，单击**WebPartManager 信息**按钮，然后观察有关的信息<xref:System.Web.UI.WebControls.WebParts.WebPartManager>母版页中的控件和<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>内容页中的控件。 例如，请注意它们两个跟踪静态连接其相应属性中具有相同的计数 (<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>属性)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写基属性，以防止对该基属性赋值。</summary>
        <value>始终返回 <see langword="false" />，以防止控件被设置为可见控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>属性重写基属性，以防止<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>被设置为可见的控件。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>控件，如<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制、 没有用户界面 (UI) 和永远不会向用户显示。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">调用方尝试为此属性赋值。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>