<Type Name="WebPartZone" FullName="System.Web.UI.WebControls.WebParts.WebPartZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf0f142d7920b9b56ba26bb89e4280db4dad6ee8" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399859" /></Metadata><TypeSignature Language="C#" Value="public class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartZone extends System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartZone&#xA;Inherits WebPartZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartZone : System::Web::UI::WebControls::WebParts::WebPartZoneBase" />
  <TypeSignature Language="F#" Value="type WebPartZone = class&#xA;    inherit WebPartZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPartZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作 Web 部件控件集内的主控件，用于在网页中承载 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Web 部件功能中, 区域是包含 Web 部件控件的网页上的已定义区域。 区域的主要功能是布局其包含的控件, 并为这些控件提供公共用户界面 (UI)。 有关区域及其在 Web 部件应用程序中的使用方式的一般信息, 请参阅基本<xref:System.Web.UI.WebControls.WebParts.WebZone>和<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>类的参考文档和标题为 " [Web 部件控制集概述](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100))" 的主题。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的特殊功能是包含<xref:System.Web.UI.WebControls.WebParts.WebPart>控件, 它们构成了 Web 部件应用程序的主 UI。 控件可以在网页上以持久性格式声明, 使开发人员能够将其用作模板并在`<asp:webpartzone>`元素内添加其他服务器控件。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 任何类型的服务器控件 (如果添加到<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域) 都可在运行时<xref:System.Web.UI.WebControls.WebParts.WebPart>作为控件运行。 无论添加的控件是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件、用户控件、自定义控件还是 ASP.NET 控件, 都是如此。 有关详细信息, 请参阅<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>类的主题。  
  
 除了包含<xref:System.Web.UI.WebControls.WebParts.WebPart>控件以外<xref:System.Web.UI.WebControls.WebParts.WebPartZone> , 控件还为它所包含的控件提供公共 UI。 此常见的 UI (统称为 chrome) 由所有控件上的外围用户界面元素组成, 如边框、标题、页眉和页脚、样式特征和谓词 (用户可在控件上执行的 UI 操作, 如关闭或最小化)。  
  
> [!NOTE]
>  Internet Explorer 可能会以意外的方式<xref:System.Web.UI.WebControls.WebParts.WebPartZone>呈现或其包含的控件的高度, 具体取决于区域的方向。 有关更多详细信息, 请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>或属性的文档。  
  
 类从<xref:System.Web.UI.WebControls.WebParts.WebZone>基类派生其大多数行为; <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>它仅添加一个唯一成员, 即属性。 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 此属性引用<xref:System.Web.UI.ITemplate>一个对象, 该对象是一个模板, 它允许页面开发人员使用 .aspx 页面的声明性标记中`<zonetemplate>`的元素以静态方式定义区域中的控件。  
  
## <a name="accessibility"></a>可访问性  
 默认情况下, 为此控件呈现的标记可能不符合辅助功能标准, 例如 Web 内容可访问性准则 1.0 (WCAG) 优先级1指导原则。 有关此控件的辅助功能支持的详细信息, 请参阅[ASP.NET 控件和辅助功能](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
   
  
## Examples  
 下面的代码示例演示如何在 Web 部件页<xref:System.Web.UI.WebControls.WebParts.WebPartZone>中使用控件。 要使代码示例运行, 必须编译此源代码。 可以显式编译该程序集, 并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者, 你可以将源代码放在站点的 App_Code 文件夹中, 在此文件夹中, 它将在运行时动态编译。 有关演示两种编译方法的演练, 请参阅[演练:开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 该示例的第一部分演示从<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类继承的自定义类, 并在构造函数中设置了两个基本区域属性。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 该示例的第二部分演示包含自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的页面。 请注意, 页面顶部需要特殊`Register`的指令, 才能引用包含自定义区域的程序集。 此页还包含一个`<asp:webpartmanager>`元素, 该元素在每个 Web 部件页上都是必需的。 表示自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的<xref:System.Web.UI.WebControls.Calendar> 元素包含标准的ASP.NET控件。`<cc1:MyWebPartZone>` 由于<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.Calendar>控件包含在区域中, 因此控件<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>将在运行时与控件一起包装<xref:System.Web.UI.WebControls.WebParts.WebPart> , 这使它能够作为控件。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#1)]  
  
 检查自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的声明性标记。 请注意, 您可以在标记中设置各种区域级别的属性, 如下面的代码示例所示。  
  
> [!NOTE]
>  注意`<zonetemplate>`元素的使用非常重要。 如 "备注" 部分中所述, 此元素在<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域内需要用于包装在页面中声明的静态<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web 部件控制集概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/hhy9ewf1(v=vs.100)">ASP.NET Web 部件概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:System.Web.UI.WebControls.WebParts.WebPartZone.%23ctor%2A>方法是一个无参数的构造函数, 不会设置任何值。 但是, 派生类可以使用构造函数来设置基本区域属性, 以创建自定义区域控件的标准行为和外观。  
  
   
  
## Examples  
 下面的代码示例演示如何在自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类上使用构造函数来设置区域的几个基属性。 如果要创建具有特定行为和外观的自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件, 此方法可能会很有用。 此示例的完整代码包括自定义类和承载控件的 .aspx 页, 位于<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类概述主题的 "示例" 部分。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected internal override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetInitialWebParts () As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartCollection ^ GetInitialWebParts();" />
      <MemberSignature Language="F#" Value="override this.GetInitialWebParts : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="webPartZone.GetInitialWebParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写抽象基方法，并获取区域模板中初始的静态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件集。</summary>
        <returns>包含区域模板中的所有 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> 控件或其他服务器控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法提供抽象基<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A>方法的实现。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> 基方法不提供实现, 而是声明方法, 以便派生类可以自定义如何获取属于某个区域的初始控件集, 而无需考虑个性化更改。  
  
 对于在区域中找到的每个服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> , 将调用方法。 如果控件是直接从<xref:System.Web.UI.WebControls.WebParts.WebPart>类继承的, 则只需将其添加到区域的<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>集合 (和<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的类似集合)。 如果控件不是直接从<xref:System.Web.UI.WebControls.WebParts.WebPart>继承的, 则 Web 部件控件集会将控件<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>与对象包装在一起, 从而使<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在运行时表现为控件。  
  
 类通过返回在 Web 部件页面的标记中的一`<zonetemplate>`组标记中静态声明的一组控件 (如果有) 来实现基方法。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.PlaceHolder>如果控件在区域中声明, 则会添加该控件的子控件, 而不是控件本身。 例如, 此实现允许您在母版页中创建一个<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域, 然后在内容页中声明各个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或服务器控件。 如果在<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域<xref:System.Web.UI.WebControls.Literal>中声明控件, 则这些控件将被忽略。  
  
> [!NOTE]
>  执行个性化后, <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>方法返回的控件的初始集合可能与区域中控件的实际运行时集合不同。 例如, 假设有一个包含两个<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的网页, 第一个控件包含名为`User1`的用户控件, 该控件在`<zonetemplate>`标记内静态声明。 如果用户加载页面并拖`User1`放到第二个区域`User1` , 则仍是通过调用<xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>第一个区域的方法返回的集合的一部分, 因为它是在该区域中声明的。 但在运行时, 当<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件加载个性化设置数据时, `User1`实际上会出现在用户拖动它的第二个区域中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartZone.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>重写基方法，以指示区域已向 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件进行了成功的注册。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对 <see cref="T:System.Web.UI.ITemplate" /> 实例的引用，该实例包含网页标记中声明的控件。</summary>
        <value>包含区域中 <see cref="T:System.Web.UI.ITemplate" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>属性引用控件中<xref:System.Web.UI.WebControls.WebParts.WebPartZone>的实例<xref:System.Web.UI.ITemplate> 。 模板包含可在<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件中声明的静态服务器控件, 包括<xref:System.Web.UI.WebControls.WebParts.WebPart>控件、用户控件、自定义控件和 ASP.NET 控件。  
  
 在网页的声明<xref:System.Web.UI.WebControls.WebParts.WebPart>性标记<xref:System.Web.UI.WebControls.WebParts.WebPartZone>中将静态或其他服务器控件添加到中时, 必须将`<zonetemplate>`控件的标记放在一对标记中。 如果未在标记中`<zonetemplate>`声明控件, 则会引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> Web 部件页的声明性标记中的属性。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>类概述主题的 "示例" 部分中提供了此示例的完整代码, 包括用于承载控件的自定义类和 .aspx 页。  
  
 请注意, 在<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件的标记中, 有一个`<zonetemplate>`元素包含对日历控件的引用。 如果要将其他<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或其他服务器控件添加到区域, 还可以在`<zonetemplate>`标记中添加这些控件或其他服务器控件。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">区域中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的注册工作已完成。</exception>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Web 部件个性化概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>