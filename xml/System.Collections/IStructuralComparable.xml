<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="625ac9d081d1ec3de268eae09f25563fa017a9e7" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63906822" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="191b5-101">支持集合对象的结构比较。</span><span class="sxs-lookup"><span data-stu-id="191b5-101">Supports the structural comparison of collection objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191b5-102"><xref:System.Collections.IStructuralComparable>接口可以实现自定义的比较的集合成员。</span><span class="sxs-lookup"><span data-stu-id="191b5-102">The <xref:System.Collections.IStructuralComparable> interface enables you to implement customized comparisons for collection members.</span></span> <span data-ttu-id="191b5-103">也就是说，可以定义精确的含义要位于之前、 之后还是发生在第二个集合对象的相同位置中的排序顺序中的一个集合对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-103">That is, you can define precisely what it means for one collection object to precede, follow, or occur in the same position in the sort order as a second collection object.</span></span> <span data-ttu-id="191b5-104">然后可以指定与接受的集合类型使用此定义<xref:System.Collections.IStructuralComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="191b5-104">You can then specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="191b5-105">此接口具有一个成员， <xref:System.Collections.IStructuralComparable.CompareTo%2A>，用于确定当前集合对象是小于、 等于还是大于第二个对象在排序顺序中。</span><span class="sxs-lookup"><span data-stu-id="191b5-105">The interface has a single member, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, which determines whether the current collection object is less than, equal to, or greater than a second object in the sort order.</span></span> <span data-ttu-id="191b5-106">由执行实际的成员或当前实例中与第二个对象中的元素的比较<xref:System.Collections.IComparer>接口实现，它包含定义的自定义比较。</span><span class="sxs-lookup"><span data-stu-id="191b5-106">The actual comparison of the members or elements in the current instance with those in a second object is performed by an <xref:System.Collections.IComparer> interface implementation, which contains the definition of your custom comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="191b5-107"><xref:System.Collections.IStructuralComparable>接口仅支持结构化比较的排序或顺序。</span><span class="sxs-lookup"><span data-stu-id="191b5-107">The <xref:System.Collections.IStructuralComparable> interface supports only structural comparisons for sorting or ordering.</span></span> <span data-ttu-id="191b5-108"><xref:System.Collections.IStructuralEquatable>接口支持自定义比较的结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="191b5-108">The <xref:System.Collections.IStructuralEquatable> interface supports custom comparisons for structural equality.</span></span>  
  
 <span data-ttu-id="191b5-109">.NET Framework 提供了两个默认比较器。</span><span class="sxs-lookup"><span data-stu-id="191b5-109">The .NET Framework provides two default comparers.</span></span> <span data-ttu-id="191b5-110">返回一个<xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType>属性; 其他返回<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="191b5-110">One is returned by the <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> property; the other is returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="191b5-111">泛型 tuple 类 (<xref:System.Tuple%601>， <xref:System.Tuple%602>， <xref:System.Tuple%603>，依次类推) 和<xref:System.Array>类提供的显式实现<xref:System.Collections.IStructuralComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="191b5-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralComparable> interface.</span></span> <span data-ttu-id="191b5-112">通过强制转换 （在 C# 中) 或当前实例的数组或元组中的转换 （在 Visual Basic)<xref:System.Collections.IStructuralComparable>接口值并提供你<xref:System.Collections.IComparer>实现的自变量作为<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法，可以定义的自定义排序顺序数组或集合。</span><span class="sxs-lookup"><span data-stu-id="191b5-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralComparable> interface value and providing your <xref:System.Collections.IComparer> implementation as an argument to the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method, you can define a custom sort order for the array or collection.</span></span> <span data-ttu-id="191b5-113">但是，您不用调用<xref:System.Collections.IStructuralComparable.CompareTo%2A>在大多数情况下直接的方法。</span><span class="sxs-lookup"><span data-stu-id="191b5-113">However, you do not call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method directly in most cases.</span></span> <span data-ttu-id="191b5-114">相反，<xref:System.Collections.IStructuralComparable.CompareTo%2A>排序方法，如调用方法<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>。</span><span class="sxs-lookup"><span data-stu-id="191b5-114">Instead, the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method is called by sorting methods such as <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>.</span></span> <span data-ttu-id="191b5-115">在这种情况下，定义在<xref:System.Collections.IComparer>实现并将其作为参数传递给排序方法或集合对象的类构造函数。</span><span class="sxs-lookup"><span data-stu-id="191b5-115">In this case, you define your <xref:System.Collections.IComparer> implementation and pass it as an argument to a sorting method or collection object's class constructor.</span></span> <span data-ttu-id="191b5-116"><xref:System.Collections.IStructuralComparable.CompareTo%2A>然后每当集合进行排序时自动调用带自定义比较器方法。</span><span class="sxs-lookup"><span data-stu-id="191b5-116">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method with your custom comparer is then called automatically whenever the collection is sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191b5-117">下面的示例创建的数组<xref:System.Tuple%606>包含三个从 1960 年年到 2000年的美国城市的人口数据的对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-117">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="191b5-118">六元组的第一个组件是城市名称。</span><span class="sxs-lookup"><span data-stu-id="191b5-118">The sextuple's first component is the city name.</span></span> <span data-ttu-id="191b5-119">剩余的五个组件表示十年时间间隔的总体 1960 年到 2000年。</span><span class="sxs-lookup"><span data-stu-id="191b5-119">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="191b5-120">`PopulationComparer`类提供了<xref:System.Collections.IComparer>实现，它允许六元及其组件的任何一个进行排序的数组。</span><span class="sxs-lookup"><span data-stu-id="191b5-120">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="191b5-121">两个值提供给`PopulationComparer`其构造函数中的类： 定义排序顺序的组件和一个布尔值，该值指示是否应按升序或降序顺序排序的元组对象的位置。</span><span class="sxs-lookup"><span data-stu-id="191b5-121">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a Boolean value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="191b5-122">该示例然后显示未排序顺序中的数组中的元素、 由第三个组件 （在 1970年填充） 对它们进行排序和显示它们，按第 6 个组件 （2000年中填充） 进行排序并显示它们。</span><span class="sxs-lookup"><span data-stu-id="191b5-122">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="191b5-123">请注意，该示例不直接调用<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="191b5-123">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method.</span></span> <span data-ttu-id="191b5-124">隐式调用该方法<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>数组中的每个元组对象的方法。</span><span class="sxs-lookup"><span data-stu-id="191b5-124">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="191b5-125">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="191b5-126">一个将当前集合对象的成员与 <paramref name="other" /> 的对应成员进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-126">An object that compares members of the current collection object with the corresponding members of <paramref name="other" />.</span></span></param>
        <summary><span data-ttu-id="191b5-127">确定当前集合对象在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span><span class="sxs-lookup"><span data-stu-id="191b5-127">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="191b5-128">指明当前集合对象与 <paramref name="other" /> 的排序顺序关系的带符号整数：</span><span class="sxs-lookup"><span data-stu-id="191b5-128">A signed integer that indicates the relationship of the current collection object to <paramref name="other" /> in the sort order:</span></span><br /> <span data-ttu-id="191b5-129">- 如果小于 0，表明当前实例先于 <paramref name="other" />。</span><span class="sxs-lookup"><span data-stu-id="191b5-129">- If less than 0, the current instance precedes <paramref name="other" />.</span></span><br /> <span data-ttu-id="191b5-130">- 如果等于 0，表明当前实例和 <paramref name="other" /> 的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="191b5-130">- If 0, the current instance and <paramref name="other" /> are equal.</span></span><br /> <span data-ttu-id="191b5-131">- 如果大于 0，表明当前实例后于 <paramref name="other" />。</span><span class="sxs-lookup"><span data-stu-id="191b5-131">- If greater than 0, the current instance follows <paramref name="other" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="191b5-132">返回值</span><span class="sxs-lookup"><span data-stu-id="191b5-132">Return value</span></span> 
 </term><description> <span data-ttu-id="191b5-133">描述</span><span class="sxs-lookup"><span data-stu-id="191b5-133">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="191b5-134">-1</span><span class="sxs-lookup"><span data-stu-id="191b5-134">-1</span></span> 
 </term><description> <span data-ttu-id="191b5-135">当前实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="191b5-135">The current instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="191b5-136">0</span><span class="sxs-lookup"><span data-stu-id="191b5-136">0</span></span> 
 </term><description> <span data-ttu-id="191b5-137">当前实例与 <paramref name="other" /> 位于同一位置。</span><span class="sxs-lookup"><span data-stu-id="191b5-137">The current instance and <paramref name="other" /> are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="191b5-138">1</span><span class="sxs-lookup"><span data-stu-id="191b5-138">1</span></span> 
 </term><description> <span data-ttu-id="191b5-139">当前实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="191b5-139">The current instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191b5-140"><xref:System.Collections.IStructuralComparable.CompareTo%2A>方法支持自定义结构化比较和排序的数组和元组对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-140">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method supports custom structural comparison and sorting of array and tuple objects.</span></span> <span data-ttu-id="191b5-141"><xref:System.Collections.IStructuralComparable.CompareTo%2A>方法调用`comparer`对象的<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法来比较各个数组元素或元组组件，从第一个元素或组件开始。</span><span class="sxs-lookup"><span data-stu-id="191b5-141">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method calls the `comparer` object's <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="191b5-142">对单个调用<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>结束和<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法返回一个值，在下列情况之一，将为 true 时：</span><span class="sxs-lookup"><span data-stu-id="191b5-142">The individual calls to <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method returns a value when one of the following conditions becomes true:</span></span>  
  
-   <span data-ttu-id="191b5-143"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法返回-1。</span><span class="sxs-lookup"><span data-stu-id="191b5-143">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns -1.</span></span>  
  
-   <span data-ttu-id="191b5-144"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法返回 1。</span><span class="sxs-lookup"><span data-stu-id="191b5-144">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns 1.</span></span>  
  
-   <span data-ttu-id="191b5-145"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法调用的最后一个元素或组件中的集合对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-145">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method is called for the last element or component in the collection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191b5-146">下面的示例创建的数组<xref:System.Tuple%606>包含三个从 1960 年年到 2000年的美国城市的人口数据的对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-146">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="191b5-147">六元组的第一个组件是城市名称。</span><span class="sxs-lookup"><span data-stu-id="191b5-147">The sextuple's first component is the city name.</span></span> <span data-ttu-id="191b5-148">剩余的五个组件表示十年时间间隔的总体 1960 年到 2000年。</span><span class="sxs-lookup"><span data-stu-id="191b5-148">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="191b5-149">`PopulationComparer`类提供了<xref:System.Collections.IComparer>实现，它允许六元及其组件的任何一个进行排序的数组。</span><span class="sxs-lookup"><span data-stu-id="191b5-149">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="191b5-150">两个值提供给`PopulationComparer`其构造函数中的类： 定义排序顺序，该组件的位置和一个<xref:System.Boolean>值，该值指示是否应按升序或降序顺序排序的元组对象。</span><span class="sxs-lookup"><span data-stu-id="191b5-150">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="191b5-151">该示例然后显示未排序顺序中的数组中的元素、 由第三个组件 （在 1970年填充） 对它们进行排序和显示它们，按第 6 个组件 （2000年中填充） 进行排序并显示它们。</span><span class="sxs-lookup"><span data-stu-id="191b5-151">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="191b5-152">请注意，该示例不直接调用<xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType>实现。</span><span class="sxs-lookup"><span data-stu-id="191b5-152">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="191b5-153">隐式调用该方法<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>数组中的每个元组对象的方法。</span><span class="sxs-lookup"><span data-stu-id="191b5-153">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191b5-154">此实例与 <paramref name="other" /> 不是同一类型。</span><span class="sxs-lookup"><span data-stu-id="191b5-154">This instance and <paramref name="other" /> are not the same type.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>