<Type Name="ReadOnlyCollectionBase" FullName="System.Collections.ReadOnlyCollectionBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9d048ea05d107b00cf31ad89ef075b3a9bcf8a4" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63907123" /></Metadata><TypeSignature Language="C#" Value="public abstract class ReadOnlyCollectionBase : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ReadOnlyCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReadOnlyCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyCollectionBase abstract : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ReadOnlyCollectionBase = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="07492-101">为强类型非泛型只读集合提供 <see langword="abstract" /> 基类。</span><span class="sxs-lookup"><span data-stu-id="07492-101">Provides the <see langword="abstract" /> base class for a strongly typed non-generic read-only collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="07492-102">一个<xref:System.Collections.ReadOnlyCollectionBase>实例始终是只读的。</span><span class="sxs-lookup"><span data-stu-id="07492-102">A <xref:System.Collections.ReadOnlyCollectionBase> instance is always read-only.</span></span> <span data-ttu-id="07492-103">请参阅<xref:System.Collections.CollectionBase>有关的此类可修改版本。</span><span class="sxs-lookup"><span data-stu-id="07492-103">See <xref:System.Collections.CollectionBase> for a modifiable version of this class.</span></span>  

> [!IMPORTANT]
>  <span data-ttu-id="07492-104">我们不建议你使用`ReadOnlyCollectionBase`类的新的开发。</span><span class="sxs-lookup"><span data-stu-id="07492-104">We don't recommend that you use the `ReadOnlyCollectionBase` class for new development.</span></span> <span data-ttu-id="07492-105">相反，我们建议使用泛型<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="07492-105">Instead, we recommend that you use the generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="07492-106">有关详细信息，请参阅[不应使用非泛型集合](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md)GitHub 上。</span><span class="sxs-lookup"><span data-stu-id="07492-106">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>


## Examples  
 <span data-ttu-id="07492-107">下面的代码示例实现<xref:System.Collections.ReadOnlyCollectionBase>类。</span><span class="sxs-lookup"><span data-stu-id="07492-107">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="07492-108">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员是线程安全。</span><span class="sxs-lookup"><span data-stu-id="07492-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="07492-109">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="07492-109">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="07492-110">此实现不提供同步 （线程安全） 包装器<see cref="T:System.Collections.ReadOnlyCollectionBase" />，但是，派生的类可以创建他们自己的同步的版本<see cref="T:System.Collections.ReadOnlyCollectionBase" />使用<see cref="P:System.Collections.ICollection.SyncRoot" />属性。</span><span class="sxs-lookup"><span data-stu-id="07492-110">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.ReadOnlyCollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="07492-111">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="07492-111">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07492-112">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="07492-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07492-113">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="07492-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="07492-114">此基类提供轻松实现器来创建强类型化只读的自定义集合。</span><span class="sxs-lookup"><span data-stu-id="07492-114">This base class is provided to make it easier for implementers to create a strongly typed read-only custom collection.</span></span> <span data-ttu-id="07492-115">建议来扩展此基类而不是创建其自己的实施者。</span><span class="sxs-lookup"><span data-stu-id="07492-115">Implementers are encouraged to extend this base class instead of creating their own.</span></span> <span data-ttu-id="07492-116">此基类的成员受到保护，并且可用于通过派生类使用。</span><span class="sxs-lookup"><span data-stu-id="07492-116">Members of this base class are protected and are intended to be used through a derived class only.</span></span>  
  
<span data-ttu-id="07492-117">此类可通过提供基础集合<see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" />属性，它仅供直接派生自的类<see cref="T:System.Collections.ReadOnlyCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="07492-117">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span></span> <span data-ttu-id="07492-118">在派生的类必须确保其自己的用户不能修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="07492-118">The derived class must ensure that its own users cannot modify the underlying collection.</span></span></para></block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.CollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReadOnlyCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReadOnlyCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07492-119">初始化 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="07492-119">Initializes a new instance of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-120">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="07492-120">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ReadOnlyCollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07492-121">获取包含在 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中的元素数。</span><span class="sxs-lookup"><span data-stu-id="07492-121">Gets the number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="07492-122">包含在 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中的元素数。</span><span class="sxs-lookup"><span data-stu-id="07492-122">The number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span>  
  
<span data-ttu-id="07492-123">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="07492-123">Retrieving the value of this property is an O(1) operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07492-124">下面的代码示例实现<xref:System.Collections.ReadOnlyCollectionBase>类。</span><span class="sxs-lookup"><span data-stu-id="07492-124">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="readOnlyCollectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07492-125">返回循环访问 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例的枚举器。</span><span class="sxs-lookup"><span data-stu-id="07492-125">Returns an enumerator that iterates through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="07492-126">用于 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="07492-126">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-127">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="07492-127">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="07492-128">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="07492-128">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="07492-129">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="07492-129">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="07492-130">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="07492-130">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="07492-131"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="07492-131"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="07492-132">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="07492-132">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="07492-133">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="07492-133">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="07492-134">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="07492-134"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="07492-135"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="07492-135"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="07492-136">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="07492-136">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="07492-137">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="07492-137">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="07492-138">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="07492-138">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="07492-139">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="07492-139">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="07492-140">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="07492-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07492-141">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="07492-141">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="07492-142">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="07492-142">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="07492-143">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="07492-143">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="07492-144">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="07492-144">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="07492-145">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="07492-145">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07492-146">下面的代码示例实现<xref:System.Collections.ReadOnlyCollectionBase>类。</span><span class="sxs-lookup"><span data-stu-id="07492-146">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerList : System.Collections.ArrayList" Usage="System.Collections.ReadOnlyCollectionBase.InnerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07492-147">获取包含在 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中的元素的列表。</span><span class="sxs-lookup"><span data-stu-id="07492-147">Gets the list of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="07492-148">表示 <see cref="T:System.Collections.ArrayList" /> 实例本身的 <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="07492-148">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-149">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="07492-149">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07492-150">下面的代码示例实现<xref:System.Collections.ReadOnlyCollectionBase>类。</span><span class="sxs-lookup"><span data-stu-id="07492-150">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="07492-151">此类可通过提供基础集合<see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" />属性，它仅供直接派生自的类<see cref="T:System.Collections.ReadOnlyCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="07492-151">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span></span> <span data-ttu-id="07492-152">在派生的类必须确保其自己的用户不能修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="07492-152">The derived class must ensure that its own users cannot modify the underlying collection.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="07492-153">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="07492-153">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span></span> <span data-ttu-id="07492-154"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="07492-154">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="07492-155"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="07492-155">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="07492-156">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="07492-156">Copies the entire <see cref="T:System.Collections.ReadOnlyCollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-157">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="07492-157">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="07492-158">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>元素将复制到。</span><span class="sxs-lookup"><span data-stu-id="07492-158">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="07492-159">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ReadOnlyCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="07492-159">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07492-160"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07492-160"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="07492-161"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="07492-161"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07492-162"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="07492-162"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="07492-163">- 或 -</span><span class="sxs-lookup"><span data-stu-id="07492-163">-or-</span></span> 
<span data-ttu-id="07492-164">源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="07492-164">The number of elements in the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07492-165">无法自动将源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="07492-165">The type of the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07492-166">获取一个值，该值指示对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问是否同步（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="07492-166">Gets a value indicating whether access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="07492-167">如果对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07492-167"><see langword="true" /> if access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="07492-168">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07492-168">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-169">一个<xref:System.Collections.ReadOnlyCollectionBase>对象不同步。</span><span class="sxs-lookup"><span data-stu-id="07492-169">A <xref:System.Collections.ReadOnlyCollectionBase> object is not synchronized.</span></span> <span data-ttu-id="07492-170">派生的类可以提供的同步的版本<xref:System.Collections.ReadOnlyCollectionBase>类使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="07492-170">Derived classes can provide a synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="07492-171">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="07492-171">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07492-172">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="07492-172">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07492-173">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="07492-173">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07492-174">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>属性在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="07492-174">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="07492-175">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="07492-175">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07492-176">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问。</span><span class="sxs-lookup"><span data-stu-id="07492-176">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span></span></summary>
        <value><span data-ttu-id="07492-177">一个对象，该对象可用于同步对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问。</span><span class="sxs-lookup"><span data-stu-id="07492-177">An object that can be used to synchronize access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07492-178">派生的类可以提供其自己的同步的版本<xref:System.Collections.ReadOnlyCollectionBase>类使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="07492-178">Derived classes can provide their own synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="07492-179">同步代码必须在执行操作<xref:System.Collections.ICollection.SyncRoot%2A>的属性<xref:System.Collections.ReadOnlyCollectionBase>对象，不是直接在<xref:System.Collections.ReadOnlyCollectionBase>对象。</span><span class="sxs-lookup"><span data-stu-id="07492-179">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.ReadOnlyCollectionBase> object, not directly on the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span> <span data-ttu-id="07492-180">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="07492-180">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="07492-181">具体而言，它维护与其他线程可能同时对修改的正确同步<xref:System.Collections.ReadOnlyCollectionBase>对象。</span><span class="sxs-lookup"><span data-stu-id="07492-181">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span>  
  
 <span data-ttu-id="07492-182">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="07492-182">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07492-183">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="07492-183">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07492-184">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="07492-184">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07492-185">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>属性在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="07492-185">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="07492-186">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="07492-186">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>