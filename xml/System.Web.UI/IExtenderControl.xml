<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b99efa43597d478921015a59df70a556695a5db3" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64015718" /></Metadata><TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <TypeSignature Language="F#" Value="type IExtenderControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义扩展程序控件的行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 扩展程序控件派生自<xref:System.Web.UI.ExtenderControl>类需要<xref:System.Web.UI.ScriptManager>控件，使其在页上。 <xref:System.Web.UI.ExtenderControl>基类执行显式测试，确保<xref:System.Web.UI.ScriptManager>页面上存在的控件。  
  
 但是，如果你想要创建扩展程序控件和页面不包含<xref:System.Web.UI.ScriptManager>控件，可以创建一个实现类<xref:System.Web.UI.IExtenderControl>直接接口。 此外，如果要创建派生的类<xref:System.Web.UI.Control>或扩展现有控件派生自<xref:System.Web.UI.Control>，可以实现<xref:System.Web.UI.IExtenderControl>接口以支持客户端功能。  
  
 <xref:System.Web.UI.IExtenderControl>接口注册脚本库控件通过调用<xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A>方法，并注册<xref:System.Web.UI.ScriptDescriptor>对象通过调用<xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>方法。 <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>方法将返回<xref:System.Collections.IEnumerable>系列<xref:System.Web.UI.ScriptDescriptor>对象。  
  
> [!NOTE]
>  如果您扩展现有控件类型派生自<xref:System.Web.UI.WebControls.WebControl>类，请实现<xref:System.Web.UI.IScriptControl>接口。  
  
 若要通过实现来创建扩展程序控件<xref:System.Web.UI.IExtenderControl>，执行以下操作：  
  
-   为控件的编写代码`OnInit`事件以检测和使用<xref:System.Web.UI.ScriptManager>如果可在页面控件。  
  
-   如果<xref:System.Web.UI.ScriptManager>不可用的页上，提供的可选方法通过调用静态方法注册所需的脚本<xref:System.Web.UI.ScriptManager>类。  
  
-   提供的受保护虚拟成员<xref:System.Web.UI.IExtenderControl>成员。  
  
-   为您注册的脚本块提供实例脚本<xref:System.Web.UI.ScriptManager>控件。 必须执行此操作在控件的过程`PreRender`， `PreRenderComplete`，或`Render`事件。  
  
-   在控件的期间注册脚本描述符`Render`事件。  
  
> [!NOTE]
>  如果页面包含<xref:System.Web.UI.UpdatePanel>控件，必须包含页<xref:System.Web.UI.ScriptManager>控件。 必须实现<xref:System.Web.UI.IExtenderControl>接口仅当页面不包含<xref:System.Web.UI.ScriptManager>控件。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : System.Web.UI.Control -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="iExtenderControl.GetScriptDescriptors targetControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">与扩展程序相关联的服务器控件。</param>
        <summary>为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象，并为该控件返回包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的对象。</summary>
        <returns>一个包含 <see cref="T:System.Collections.IEnumerable" /> 对象的 <see cref="T:System.Web.UI.ScriptDescriptor" /> 集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="iExtenderControl.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为控件注册脚本库，并返回已注册为嵌入资源的 ECMAScript (JavaScript) 文件的枚举。</summary>
        <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 集合，其中包含已注册为嵌入资源的 JavaScript 文件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>