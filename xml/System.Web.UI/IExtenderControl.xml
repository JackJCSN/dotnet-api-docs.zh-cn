<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b16adaf9256788e09771f7d1d6c588334a3bea22" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70644019" /></Metadata><TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <TypeSignature Language="F#" Value="type IExtenderControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义扩展程序控件的行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自<xref:System.Web.UI.ExtenderControl>类的扩展器控件<xref:System.Web.UI.ScriptManager>需要控件位于页面上。 基类执行显式测试，以确保<xref:System.Web.UI.ScriptManager>页面上存在控件。 <xref:System.Web.UI.ExtenderControl>  
  
 但是，如果你想要创建扩展程序控件，并且该页不包含<xref:System.Web.UI.ScriptManager>控件，则可以创建直接<xref:System.Web.UI.IExtenderControl>实现接口的类。 此外，如果您要创建一个派生自<xref:System.Web.UI.Control>的类，或者您正在扩展派生自<xref:System.Web.UI.Control>的现有控件，则可以实现该<xref:System.Web.UI.IExtenderControl>接口以支持客户端功能。  
  
 接口通过<xref:System.Web.UI.ScriptDescriptor>调用方法为控件注册脚本库，并通过调用<xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>方法来注册对象。 <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A> <xref:System.Web.UI.IExtenderControl> 方法返回对象的 <xref:System.Web.UI.ScriptDescriptor> 列表。 <xref:System.Collections.IEnumerable> <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A>  
  
> [!NOTE]
>  如果扩展派生自<xref:System.Web.UI.WebControls.WebControl>类的现有控件类型，请<xref:System.Web.UI.IScriptControl>实现接口。  
  
 若要通过实现<xref:System.Web.UI.IExtenderControl>来创建扩展程序控件，请执行以下操作：  
  
-   为控件的`OnInit`事件编写代码，以检测并<xref:System.Web.UI.ScriptManager>使用控件（如果该控件在该页上可用）。  
  
-   如果在页上不可用，则提供替代方法，通过调用<xref:System.Web.UI.ScriptManager>类的静态方法来注册所需的脚本。 <xref:System.Web.UI.ScriptManager>  
  
-   为成员提供受保护<xref:System.Web.UI.IExtenderControl>的虚拟成员。  
  
-   提供实例脚本作为向<xref:System.Web.UI.ScriptManager>控件注册的脚本块。 必须在控件的`PreRender`、 `PreRenderComplete`或`Render`事件期间执行此操作。  
  
-   在控件`Render`事件期间注册脚本描述符。  
  
> [!NOTE]
>  如果页面包含<xref:System.Web.UI.UpdatePanel>控件，则页面必须<xref:System.Web.UI.ScriptManager>包含控件。 仅当页不<xref:System.Web.UI.IExtenderControl> <xref:System.Web.UI.ScriptManager>包含控件时，才必须实现接口。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : System.Web.UI.Control -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="iExtenderControl.GetScriptDescriptors targetControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">与扩展程序相关联的服务器控件。</param>
        <summary>为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象，并为该控件返回包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的对象。</summary>
        <returns>一个包含 <see cref="T:System.Collections.IEnumerable" /> 对象的 <see cref="T:System.Web.UI.ScriptDescriptor" /> 集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="iExtenderControl.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为控件注册脚本库，并返回已注册为嵌入资源的 ECMAScript (JavaScript) 文件的枚举。</summary>
        <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 集合，其中包含已注册为嵌入资源的 JavaScript 文件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
