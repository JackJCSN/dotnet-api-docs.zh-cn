<Type Name="ClientIDMode" FullName="System.Web.UI.ClientIDMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b68bbe1c5654dc2dcd04cc005aab7ca3d4d1fe2b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389325" /></Metadata><TypeSignature Language="C#" Value="public enum ClientIDMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientIDMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientIDMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ClientIDMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ClientIDMode" />
  <TypeSignature Language="F#" Value="type ClientIDMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定 ASP.NET 如何为客户端脚本中可以访问的控件生成 <see cref="P:System.Web.UI.Control.ClientID" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在设置控件<xref:System.Web.UI.ClientIDMode>的<xref:System.Web.UI.Control.ClientIDMode%2A>属性时, 可以使用枚举。 为<xref:System.Web.UI.Control.ClientIDMode%2A>属性分配的值确定<xref:System.Web.UI.Control.ClientID%2A>如何生成属性。 <xref:System.Web.UI.Control.ClientID%2A>属性的值呈现为标记中的`id`属性, 它是用于从客户端脚本访问控件的值。 分配给<xref:System.Web.UI.Control.ClientIDMode%2A>属性的值不<xref:System.Web.UI.Control.ID%2A>会影响`id`服务器控件的属性, 而只会影响相应 HTML 元素的属性。  
  
 页面的默认值<xref:System.Web.UI.Control.ClientIDMode%2A>是可预测的。 控件的默认值<xref:System.Web.UI.Control.ClientIDMode%2A>为 "继承"。  
  
 由于控件的默认值是继承的, 因此默认生成模式是可预测的。 (但是, 如果使用 Visual Studio 将 Web 项目从早期版本转换为 ASP.NET 4, 则 Visual Studio 会自动将该站点默认设置为 web.config 文件中的 AutoID。)  
  
 通过在站点的`ClientIDMode` web.config 文件中设置[pages](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)元素, 你可以为网站中的所有页面设置值。 您可以在`ClientIDMode` [@ page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指令中设置页的值。  
  
 有关详细信息，请参阅 [ASP.NET Web 服务器控件标识](https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7)。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Web.UI.WebControls.Label> <xref:System.Web.UI.WebControls.ListView>控件中包含的控件。 在控件上<xref:System.Web.UI.Control.ClientIDMode%2A> , 将属性<xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A>设置为可预测, 并将属性设置为`ProductID`。 <xref:System.Web.UI.WebControls.ListView> 通过客户端脚本, 你可以基于<xref:System.Web.UI.WebControls.Label> `ProductID`你尝试访问的实例的值访问的特定实例。  
  
 此示例创建包含三个`ProductIDLabel`控件的 HTML。 当页面运行时, 控件的 Id 将如下所示:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
 有关详细信息, 请参阅[ASP.NET Web Server Control 标识](https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7)  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
    <altmember cref="P:System.Web.UI.HierarchicalDataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.Configuration.PagesSection.ClientIDMode" />
    <altmember cref="P:System.Web.UI.DataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode" />
    <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET 控件标识</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fb58ed73-d8f7-401c-9560-d99dd9ca7db8">如何：按 ID 从 JavaScript 访问控件</related>
    <related type="Article" href="https://msdn.microsoft.com/library/776f3747-7fa7-4851-ae27-f728ede1a564">演练：使数据绑定控件更易于从 JavaScript 进行访问</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f0eaf202-61b6-4cd8-9604-6b7638fdf0ae">演练：使位于 Web 用户控件中的控件更易于从 JavaScript 访问</related>
  </Docs>
  <Members>
    <Member MemberName="AutoID">
      <MemberSignature Language="C#" Value="AutoID" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode AutoID = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.AutoID" />
      <MemberSignature Language="VB.NET" Value="AutoID" />
      <MemberSignature Language="C++ CLI" Value="AutoID" />
      <MemberSignature Language="F#" Value="AutoID = 1" Usage="System.Web.UI.ClientIDMode.AutoID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.ClientID" /> 值是通过串联每个父命名容器的 <see cref="P:System.Web.UI.Control.ID" /> 值生成的，这些父命名容器都具有控件的 <see cref="P:System.Web.UI.Control.ID" /> 值。 在呈现控件的多个实例的数据绑定方案中，将在控件的 <see cref="P:System.Web.UI.Control.ID" /> 值的前面插入递增的值。 各部分之间用下划线字符 (_) 分隔。 此算法是 ASP.NET 4 以前的 ASP.NET 版本中唯一可以使用的算法。</summary>
      </Docs>
    </Member>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Inherit = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = 0" Usage="System.Web.UI.ClientIDMode.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>控件继承其 <see cref="P:System.Web.UI.Control.NamingContainer" /> 控件的 <see cref="T:System.Web.UI.ClientIDMode" /> 设置。</summary>
      </Docs>
    </Member>
    <Member MemberName="Predictable">
      <MemberSignature Language="C#" Value="Predictable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Predictable = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Predictable" />
      <MemberSignature Language="VB.NET" Value="Predictable" />
      <MemberSignature Language="C++ CLI" Value="Predictable" />
      <MemberSignature Language="F#" Value="Predictable = 2" Usage="System.Web.UI.ClientIDMode.Predictable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>对于数据绑定控件中的控件使用此算法。 <see cref="P:System.Web.UI.Control.ClientID" /> 值是通过串联每个父命名容器的 <see cref="P:System.Web.UI.Control.ClientID" /> 值生成的，这些父命名容器都具有控件的<see cref="P:System.Web.UI.Control.ID" /> 值。 如果控件是生成多个行的数据绑定控件，则在末尾添加 <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> 属性中指定的数据字段的值。 对于 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件，可以指定多个数据字段。 如果 <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> 属性为空白，则在末尾添加顺序号，而非数据字段值。 各部分之间用下划线字符 (_) 分隔。</summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Static = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 3" Usage="System.Web.UI.ClientIDMode.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.ClientID" /> 值设置为 <see cref="P:System.Web.UI.Control.ID" /> 属性的值。 如果控件是命名容器，则该控件将用作其所包含的任何控件的命名容器的顶层。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
