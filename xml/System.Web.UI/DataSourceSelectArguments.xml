<Type Name="DataSourceSelectArguments" FullName="System.Web.UI.DataSourceSelectArguments">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2ce1e3b4d3fac108fd310c4333b693b838a6aa9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64015980" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataSourceSelectArguments" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataSourceSelectArguments extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceSelectArguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataSourceSelectArguments" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceSelectArguments sealed" />
  <TypeSignature Language="F#" Value="type DataSourceSelectArguments = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一种机制，数据绑定控件可使用这种机制向数据源控件请求在检索数据之后执行与数据相关的操作。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件使用<xref:System.Web.UI.DataSourceSelectArguments>类请求数据源控件执行结果集，例如对数据进行排序或返回数据的特定子集的其他相关的数据操作。 这些与数据相关的操作都用枚举<xref:System.Web.UI.DataSourceCapabilities>枚举。 下表指示了<xref:System.Web.UI.DataSourceSelectArguments>类支持这些与数据相关的操作。  
  
|功能|相关的 DataSourceSelectArguments 属性|  
|----------------|--------------------------------------------------|  
|<xref:System.Web.UI.DataSourceCapabilities.Sort?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>|  
|<xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>， <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>|  
|<xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>， <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>|  
  
 数据绑定控件显式调用<xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A>方法来绑定数据，调用<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>与之关联的数据源控件的方法。 这样一来，数据绑定控件从数据源控件按需检索数据。 因为<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法接受<xref:System.Web.UI.DataSourceSelectArguments>参数的数据绑定控件是负责创建和管理<xref:System.Web.UI.DataSourceSelectArguments>对象并将其传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法从数据源控件检索数据时。  
  
 在某些情况下，数据绑定控件可能不需要任何其他数据相关的功能。 在这种情况下，数据绑定控件传递<xref:System.Web.UI.DataSourceSelectArguments.Empty%2A>自变量对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法。  
  
 对于已排序的结果集，数据绑定控件检查数据源视图<xref:System.Web.UI.DataSourceView.CanSort%2A>属性在运行时间，并添加<xref:System.Web.UI.DataSourceCapabilities.Sort?displayProperty=nameWithType>功能使用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法。 数据绑定控件可以作为单独的操作，请求的已排序的结果集数据源控件通过设置<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>上的属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法。  
  
 数据绑定控件的分页情况下，检查数据源视图<xref:System.Web.UI.DataSourceView.CanPage%2A>属性在运行时间，并添加<xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType>功能使用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法。 作为一个单独的操作，数据绑定控件可以请求数据的子集从数据源控件进行分页通过设置<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>并<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>上的属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法。  
  
 若要检索的总行数为分页方案，数据绑定控件，请检查数据源视图<xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A>属性在运行时间，并添加<xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType>功能使用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法。 作为一个单独的操作，数据绑定控件可以请求总的行计数从数据源控件进行分页通过设置<xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>上的属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法。 当<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法返回时，包含总计行计数<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性。  
  
> [!IMPORTANT]
>  如果任一<xref:System.Web.UI.DataSourceSelectArguments>设置的属性，但在当前绑定的数据源控件不支持请求的功能<xref:System.InvalidOperationException>时将引发异常<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType>调用方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新默认实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认构造函数创建的类的实例<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性初始化为<xref:System.String.Empty?displayProperty=nameWithType>并<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>和<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性初始化为零。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (string sortExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sortExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sortExpression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(System::String ^ sortExpression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : string -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments sortExpression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sortExpression">在结果返回调用方之前，数据源控件用来排序数据检索操作结果的排序表达式。</param>
        <summary>使用指定的排序表达式初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.%23ctor%28System.String%29>构造函数创建的类的实例<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>初始化使用指定的表达式并<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>和<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性初始化为零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (int startRowIndex, int maximumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 startRowIndex, int32 maximumRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startRowIndex As Integer, maximumRows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(int startRowIndex, int maximumRows);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : int * int -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments (startRowIndex, maximumRows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">数据行的索引，标记数据检索操作返回数据的起始位置。</param>
        <param name="maximumRows">数据检索操作返回的最大行数。</param>
        <summary>使用要为分页方案返回的起始位置和行数初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.%23ctor%28System.Int32%2CSystem.Int32%29>构造函数创建的类的实例<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>初始化为<xref:System.String.Empty?displayProperty=nameWithType>并且<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>并<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性初始化为提供的值为`startRowIndex`和`maximumRows`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (string sortExpression, int startRowIndex, int maximumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sortExpression, int32 startRowIndex, int32 maximumRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sortExpression As String, startRowIndex As Integer, maximumRows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(System::String ^ sortExpression, int startRowIndex, int maximumRows);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : string * int * int -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments (sortExpression, startRowIndex, maximumRows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sortExpression">在结果返回调用方之前，数据源控件用来排序数据检索操作结果的排序表达式。</param>
        <param name="startRowIndex">数据行的索引，标记数据检索操作返回数据的起始位置。</param>
        <param name="maximumRows">数据检索操作返回的最大行数。</param>
        <summary>使用要为分页方案返回的指定排序表达式、起始位置和行数初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSupportedCapabilities">
      <MemberSignature Language="C#" Value="public void AddSupportedCapabilities (System.Web.UI.DataSourceCapabilities capabilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSupportedCapabilities(valuetype System.Web.UI.DataSourceCapabilities capabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSupportedCapabilities (capabilities As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSupportedCapabilities(System::Web::UI::DataSourceCapabilities capabilities);" />
      <MemberSignature Language="F#" Value="member this.AddSupportedCapabilities : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceSelectArguments.AddSupportedCapabilities capabilities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capabilities" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capabilities"><see cref="T:System.Web.UI.DataSourceCapabilities" /> 值之一。</param>
        <summary>向 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 实例添加一个功能，用于对支持的功能和请求的功能进行比较。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据源控件调用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法为每个数据源支持的功能。 在添加功能后，任何调用到<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29>方法比较与请求的功能支持的功能 (通过设置表示<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>， <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>， <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>，和<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>属性)。 例如，如果如功能<xref:System.Web.UI.DataSourceCapabilities.Sort>未添加，但<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性设置，<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29>方法，则会引发<xref:System.NotSupportedException>异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Web.UI.DataSourceSelectArguments Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.DataSourceSelectArguments Empty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::DataSourceSelectArguments ^ Empty { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.DataSourceSelectArguments.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个排序表达式设置为 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 的 <see cref="F:System.String.Empty" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该属性返回<xref:System.Web.UI.DataSourceSelectArguments>使用默认值创建的对象<xref:System.Web.UI.DataSourceSelectArguments.%23ctor>构造函数。 可以使用<xref:System.Web.UI.DataSourceSelectArguments.Empty%2A>属性时要调用<xref:System.Web.UI.DataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29>没有任何附加参数的数据源视图类的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceSelectArguments.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataSourceSelectArguments.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">与当前实例进行比较的 <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</param>
        <summary>确定指定的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 实例是否等于当前实例。</summary>
        <returns>如果指定的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 等于当前实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments>类将重写<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法使用的对象的各种属性的相等性测试。 如果<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>， <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>， <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>， <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>，并<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性是在值均相等<xref:System.Web.UI.DataSourceSelectArguments.Equals%28System.Object%29>方法将返回`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataSourceSelectArguments.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类型的哈希代码。</summary>
        <returns><see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类型的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="public int MaximumRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRows : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示在一次数据检索操作中，数据源控件返回的最大数据行数。</summary>
        <value>在一次数据检索操作中，数据源返回的最大数据行数。 默认值为 0，指示返回所有可能的数据行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性支持分页方案。 数据绑定控件检查数据源视图<xref:System.Web.UI.DataSourceView.CanPage%2A>属性在运行时间，并添加<xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType>功能使用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法如果视图支持分页。 如果数据绑定控件无法添加该功能，并在设置了分页属性<xref:System.Web.UI.DataSourceSelectArguments>在数据检索操作中，传递到数据源视图对象<xref:System.InvalidOperationException>可能会引发异常。  
  
 数据绑定控件可以通过设置从数据源控件进行分页请求数据的子集<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>并<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>上的属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29>方法。  
  
> [!IMPORTANT]
>  如果任一<xref:System.Web.UI.DataSourceSelectArguments>设置的属性，但在当前绑定的数据源控件不支持请求的功能<xref:System.InvalidOperationException>时将引发异常<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilitiesError">
      <MemberSignature Language="C#" Value="public void RaiseUnsupportedCapabilitiesError (System.Web.UI.DataSourceView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseUnsupportedCapabilitiesError(class System.Web.UI.DataSourceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseUnsupportedCapabilitiesError (view As DataSourceView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseUnsupportedCapabilitiesError(System::Web::UI::DataSourceView ^ view);" />
      <MemberSignature Language="F#" Value="member this.RaiseUnsupportedCapabilitiesError : System.Web.UI.DataSourceView -&gt; unit" Usage="dataSourceSelectArguments.RaiseUnsupportedCapabilitiesError view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Web.UI.DataSourceView" />
      </Parameters>
      <Docs>
        <param name="view">执行数据检索操作的数据源视图。</param>
        <summary>将为 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作请求的功能与指定的数据源视图所支持的功能进行比较。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29>数据绑定控件使用方法进行比较的属性所表示的其他请求的功能<xref:System.Web.UI.DataSourceSelectArguments>类，例如想要进行排序或分页结果集，使用的数据支持的功能源视图。 视图将调用其自身<xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%28System.Web.UI.DataSourceCapabilities%29>方法中定义每个可能功能<xref:System.Web.UI.DataSourceCapabilities>枚举。  
  
> [!IMPORTANT]
>  如果任一<xref:System.Web.UI.DataSourceSelectArguments>设置的属性，但在当前绑定的数据源控件不支持请求的功能<xref:System.InvalidOperationException>时将引发异常<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType>调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">数据源视图不支持指定的数据源功能。</exception>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="RetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public bool RetrieveTotalRowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetrieveTotalRowCount { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetrieveTotalRowCount : bool with get, set" Usage="System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在数据检索操作过程中，数据源控件是否应检索所有数据行的计数。</summary>
        <value>如果数据源控件应检索数据行总数，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>属性支持分页方案。 将此属性设置为`true`数据检索操作期间从数据源控件请求的总行数。 检查<xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A?displayProperty=nameWithType>属性来确定数据源视图是否支持检索总的行计数。 如果数据源支持<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性设置的数据源控件的数据检索操作过程和中返回的总数据行计数<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>数量为一个值，则返回输出参数的属性，方法。  
  
> [!IMPORTANT]
>  如果任一<xref:System.Web.UI.DataSourceSelectArguments>设置的属性，但在当前绑定的数据源控件不支持请求的功能<xref:System.InvalidOperationException>时将引发异常<xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string with get, set" Usage="System.Web.UI.DataSourceSelectArguments.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个表达式，数据源视图使用该表达式对 <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> 方法检索的数据进行排序。</summary>
        <value>一个字符串，数据源视图使用该字符串对 <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> 方法检索的数据进行排序。 如果未设置排序表达式，则返回 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性支持排序方案。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.DataSourceCapabilities.Sort" />
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="public int StartRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndex : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示在数据检索操作过程中，检索数据行时数据源控件应使用的起始位置。</summary>
        <value>数据源控件检索数据的起始行位置。 默认值为 0，指示起始位置为结果集的开始处。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>属性支持分页方案。 数据绑定控件检查数据源视图<xref:System.Web.UI.DataSourceView.CanPage%2A>属性在运行时间，并添加<xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType>功能使用<xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29>方法如果视图支持分页。 如果数据绑定控件无法添加该功能，并在设置了分页属性<xref:System.Web.UI.DataSourceSelectArguments>在数据检索操作中，传递到数据源视图对象<xref:System.InvalidOperationException>可能会引发异常。  
  
 作为一个单独的操作，数据绑定控件可以请求数据的子集从数据源控件通过设置<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>并<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>上的属性<xref:System.Web.UI.DataSourceSelectArguments>对象传递给<xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在数据检索操作过程中检索的行数。</summary>
        <value>数据检索操作检索的数据行总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性支持分页方案。 数据源和数据源视图控件的有关如何检索总计行计数其内部实现方式不同。 检查<xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A?displayProperty=nameWithType>属性来确定数据源视图是否支持在数据检索操作过程中检索的总行数。 如果数据源支持<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性的数据源控件设置过程中一次数据检索操作，并在中返回的总数据行计数<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>数量为一个值，则返回输出参数的属性，方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
  </Members>
</Type>