<Type Name="IPostBackEventHandler" FullName="System.Web.UI.IPostBackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af6e22edb72351733983b9038b588199ead06f0a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70592518" /></Metadata><TypeSignature Language="C#" Value="public interface IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type IPostBackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义 ASP.NET 服务器控件为处理回发事件而必须实现的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要创建从浏览器捕获窗体提交信息的服务器控件，您必须实现此接口。 有关如何使用此接口的详细信息，请参阅[ASP.NET Web Forms Pages 中的服务器事件处理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)。  
  
   
  
## Examples  
 下面的代码示例定义了一个自定义按钮服务器控件，该控件将导致回发， <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>使用方法捕获回发`Click`事件，并在服务器上引发事件。  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET 网页中的服务器事件处理</related>
  </Docs>
  <Members>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="public void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit" Usage="iPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件参数的 <see cref="T:System.String" />。</param>
        <summary>当由类实现时，使服务器控件能够处理将窗体发送到服务器时引发的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该页将`eventArgument`参数值传递`RaisePostBackEvent`给实现<xref:System.Web.UI.IPostBackEventHandler>接口的控件的方法。 此控件还呈现导致回发发生的 HTML 元素。 如果控件呈现用于回发的客户端脚本，则会在`eventArgument`参数中传递脚本中的参数。 如果回发是由简单的提交操作引起的， `eventArgument`则参数`null`为。  
  
 此方法为 HTML 和 Web 服务器控件实现的多个事件提供了功能。  
  
   
  
## Examples  
 下面的代码示例定义了一个自定义按钮服务器控件，该控件将导致回发， <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>使用方法捕获回发`Click`事件，并在服务器上引发事件。  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET 网页中的服务器事件处理</related>
      </Docs>
    </Member>
  </Members>
</Type>
