<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a1002fcaea416118b8df8fd6b19d4179cbc1043" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69398808" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <TypeSignature Language="F#" Value="type DataBinding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含有关 ASP.NET 服务器控件中的单个数据绑定表达式的信息，这些信息可让快速应用程序开发 (RAD) 设计器（如 Microsoft Visual Studio）能够在设计时创建数据绑定表达式。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 服务器控件中的每个数据绑定表达式在设计时由<xref:System.Web.UI.DataBinding>类的实例表示。 包含一个或多个数据绑定表达式的任何服务器控件都有<xref:System.Web.UI.DataBindingCollection>一个<xref:System.Web.UI.DataBinding>包含对象的对象。 可以通过<xref:System.Web.UI.Control> <xref:System.Web.UI.IDataBindingsAccessor>实现接口的类来访问此集合。 创建自定义 RAD 设计器时, 请使用该实现访问该集合。 与<xref:System.Web.UI.DataBinding>服务器<xref:System.Web.UI.DataBindingCollection>控件关联的任何或对象只存在于设计时。 它们在运行时不存在, 因此在运行时无法访问。  
  
   
  
## Examples  
 下面的代码示例创建一个<xref:System.Web.UI.DataBinding>对象, 并将其设置为与控件的<xref:System.Web.UI.DataBindingCollection>集合中具有`propertyName`值的`Text`参数相同的现有对象。 如果集合包含<xref:System.Web.UI.DataBinding>一个`propertyName`值为的`Text`对象, 则此代码将返回对象的<xref:System.Web.UI.DataBinding.Expression%2A>属性的值。 如果没有此类对象, 则返回一个空字符串 ("")。  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataBinding : string * Type * string -&gt; System.Web.UI.DataBinding" Usage="new System.Web.UI.DataBinding (propertyName, propertyType, expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">要数据绑定到的属性。</param>
        <param name="propertyType">要数据绑定到的属性的 .NET Framework 类型。</param>
        <param name="expression">要计算的数据绑定表达式。</param>
        <summary>初始化 <see cref="T:System.Web.UI.DataBinding" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建一个<xref:System.Web.UI.DataBinding>对象, 并将其设置为与控件的<xref:System.Web.UI.DataBindingCollection>集合中具有`propertyName`值的`Text`参数相同的现有对象。 如果集合包含<xref:System.Web.UI.DataBinding>一个`propertyName`值为的`Text`对象, 则此代码将返回对象的<xref:System.Web.UI.DataBinding.Expression%2A>属性的值。 如果没有此类对象, 则返回一个空字符串 ("")。  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataBinding.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要与当前的 <see cref="T:System.Web.UI.DataBinding" /> 进行比较的对象。</param>
        <summary>确定指定的对象与当前对象是否是 <see cref="T:System.Web.UI.DataBinding" /> 类的同一实例。</summary>
        <returns>如果数据绑定属性名称匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Web.UI.DataBinding.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要计算的数据绑定表达式。</summary>
        <value>要计算的数据绑定表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建一个<xref:System.Web.UI.DataBinding>对象, 并将其设置为与控件的<xref:System.Web.UI.DataBindingCollection>集合中具有`propertyName`值的`Text`参数相同的现有对象。 如果集合包含<xref:System.Web.UI.DataBinding>一个`propertyName`值为的`Text`对象, 则此代码将返回对象的<xref:System.Web.UI.DataBinding.Expression%2A>属性的值。 如果没有此类对象, 则返回一个空字符串 ("")。  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataBinding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索 <see cref="T:System.Web.UI.DataBinding" /> 对象的实例的哈希代码。</summary>
        <returns>32 位有符号整数哈希代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinding>对象位于<xref:System.Web.UI.DataBindingCollection>对象中, 只能在设计时访问。 集合是表示控件上的绑定的哈希表。 每个属性只能有一个绑定, 因此哈希代码计算与<xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType>实现匹配, 只考虑属性名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Web.UI.DataBinding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要将数据绑定到的 ASP.NET 服务器控件属性的名称。</summary>
        <value>要数据绑定到的属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例声明了三个`dataBindingOutput1`变量`dataBindingOutput2`:、 `dataBindingOutput3`和<xref:System.Web.UI.DataBinding> , 它们`myDataBinding2`访问对象的不同属性。 然后, 它将<xref:System.Web.UI.DataBinding.PropertyName%2A>属性的值分配给, 将该属性的值连接到`dataBindingOutput1`字符串 "属性名称是", 并将值写入文件。  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Web.UI.DataBinding.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据绑定 ASP.NET 服务器控件属性的 .NET Framework 类型。</summary>
        <value>数据绑定属性的 .NET Framework 类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例声明了三个`dataBindingOutput1`变量`dataBindingOutput2`:、 `dataBindingOutput3`和<xref:System.Web.UI.DataBinding> , 它们`myDataBinding2`访问对象的不同属性。 属性值被`dataBindingOutput2`赋给, 并与字符串 "属性类型为" 连接, 并将值写入文件。 <xref:System.Web.UI.DataBinding.PropertyType%2A>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
