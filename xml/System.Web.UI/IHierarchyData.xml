<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a76fe191d67a7207d0c19716e729845546d57a3f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64062608" /></Metadata><TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>公开分层数据结构的节点，包括节点对象和描述节点特征的一些属性。 实现 <see cref="T:System.Web.UI.IHierarchyData" /> 接口的对象可以包含在 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合中，并由 ASP.NET 站点导航和数据源控件所使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData>接口由类实现，表示节点的层次结构，并跟踪对其父节点和子节点的层次结构关系。 类实现<xref:System.Web.UI.IHierarchyData>接口中实现的集合可包含<xref:System.Web.UI.IHierarchicalEnumerable>接口。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.UI.IHierarchyData>包装类接口<xref:System.IO.FileSystemInfo>对象。 <xref:System.IO.FileSystemInfo>类是个不错的分层数据节点，其中<xref:System.Web.UI.IHierarchyData>接口表示 ASP.NET 分层数据源控件。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.HierarchicalDataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 下面的代码示例演示如何以递归方式循环访问<xref:System.Web.UI.IHierarchicalEnumerable>集合，提取<xref:System.Web.UI.IHierarchyData>使用枚举器中的项<xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>方法，并执行具有数据项的基本工作。  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个枚举对象，该对象表示当前分层节点的所有子节点。</summary>
        <returns>当前分层节点的子节点的 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性来确定是否<xref:System.Web.UI.IHierarchyData>节点具有子节点。  
  
   
  
## Examples  
 下面的代码示例演示了如何检查<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性来确定当前的分层数据节点是否具有子节点，然后检索这些使用<xref:System.Web.UI.IHierarchyData.GetChildren%2A>方法。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.IHierarchyData>接口。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</summary>
        <returns>一个 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData>接口无法定义 hasparent 简便属性，因此调用方必须检查的返回值<xref:System.Web.UI.IHierarchyData.GetParent%2A>方法`null`来确定是否当前<xref:System.Web.UI.IHierarchyData>节点是分层数据的根节点该节点所属的结构。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.UI.IHierarchyData.GetParent%2A>中实现的类的方法<xref:System.Web.UI.IHierarchyData>接口。 `FileSystemHierarchyData`类包装<xref:System.IO.FileSystemInfo>对象，并<xref:System.Web.UI.IHierarchyData.GetParent%2A>方法的实现会检查的类型<xref:System.IO.FileSystemInfo>对象，并返回相应的父对象基于的类型。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.IHierarchyData>接口和<xref:System.Web.UI.HierarchicalDataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点是否有子节点。</summary>
        <value>如果当前节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性是可使调用方以避免检查返回值的一个便捷属性<xref:System.Web.UI.IHierarchyData.GetChildren%2A>方法`null`。 如果<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性返回`true`，调用<xref:System.Web.UI.IHierarchyData.GetChildren%2A>方法来检索<xref:System.Web.UI.IHierarchicalEnumerable>子节点的集合。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 ASP.NET 分层数据绑定控件<xref:System.Web.UI.IHierarchyData>递归数据绑定方法中的对象。 中的项<xref:System.Web.UI.IHierarchicalEnumerable>集合进行枚举，为每个<xref:System.Web.UI.IHierarchyData>使用检索对象<xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>方法。 最后，<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性进行检查以确定是否要进行递归。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点。</summary>
        <value>一个 <see cref="T:System.Object" /> 分层数据节点对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虽然很多表示分层数据节点，如<xref:System.Web.SiteMapNode>类，请实现<xref:System.Web.UI.IHierarchyData>直接接口中，其他类只充当不实现接口的类的包装器。 <xref:System.Web.UI.IHierarchyData.Item%2A>属性用于设计这些情况下，当业务对象在功能上等效于<xref:System.Web.UI.IHierarchyData>对象但不能轻松地重新设计。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.IHierarchyData>属性，请检查的类型<xref:System.Web.UI.IHierarchyData>对象使用<xref:System.Web.UI.IHierarchyData.Type%2A>属性，并强制转换对象以执行更多特定于类型的操作。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.IHierarchyData>接口。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取节点的分层路径。</summary>
        <value>一个 <see cref="T:System.String" />，标识相对当前节点的分层路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData.Path%2A>属性可以传递给<xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>方法来检索<xref:System.Web.UI.HierarchicalDataSourceView>对象标识的节点对应<xref:System.Web.UI.IHierarchyData.Path%2A>。  
  
> [!CAUTION]
>  <xref:System.Web.UI.IHierarchyData.Path%2A>属性不应包含主机环境有关的任何敏感信息，因为它可能会呈现给数据绑定控件中的客户端。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.UI.IHierarchyData.Path%2A>中实现的类属性<xref:System.Web.UI.IHierarchyData>接口。 `FileSystemHierarchyData`类包装<xref:System.IO.FileSystemInfo>对象，和<xref:System.Web.UI.IHierarchyData.Path%2A>属性实现将返回其文件系统路径。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.IHierarchyData>接口和<xref:System.Web.UI.HierarchicalDataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含在 <see cref="P:System.Web.UI.IHierarchyData.Item" /> 属性中的 <see cref="T:System.Object" /> 的类型名称。</summary>
        <value><see cref="T:System.Web.UI.IHierarchyData" /> 对象表示的对象的类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData.Type%2A>属性不会返回<xref:System.Type?displayProperty=nameWithType>中所表示的对象的<xref:System.Web.UI.IHierarchyData>对象。 它将返回的数据绑定控件用于区分具有不同的可绑定属性层次结构中的项的名称。  
  
   
  
## Examples  
 下面的代码示例演示如何编写基本<xref:System.Web.UI.IHierarchyData>属性设置为<xref:System.Web.HttpResponse>流，然后检查的类型<xref:System.Web.UI.IHierarchyData>对象使用<xref:System.Web.UI.IHierarchyData.Type%2A>属性和强制转换对象以执行更多特定于类型的操作。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.IHierarchyData>接口。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>