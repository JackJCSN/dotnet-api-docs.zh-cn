<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c25eae624341b1a216e0d0bcb63719a92df0df86" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70566888" /></Metadata><TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>公开分层数据结构的节点，包括节点对象和描述节点特征的一些属性。 实现 <see cref="T:System.Web.UI.IHierarchyData" /> 接口的对象可以包含在 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合中，并由 ASP.NET 站点导航和数据源控件所使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData>接口由表示层次结构节点的类实现，并跟踪其父节点和子节点的层次结构关系。 实现<xref:System.Web.UI.IHierarchyData>接口的类可以包含在<xref:System.Web.UI.IHierarchicalEnumerable>实现接口的集合中。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.IHierarchyData> <xref:System.IO.FileSystemInfo>包装对象的类实现接口。 类是层次结构数据节点的一个很好的示例， <xref:System.Web.UI.IHierarchyData>接口表示该节点的 ASP.NET 分层数据源控件。 <xref:System.IO.FileSystemInfo> 此代码示例是为<xref:System.Web.UI.HierarchicalDataSourceControl>类提供的更大示例的一部分。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 下面的代码示例演示如何以递归方式循环访问<xref:System.Web.UI.IHierarchicalEnumerable>集合，使用<xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>方法<xref:System.Web.UI.IHierarchyData>从枚举器提取项，并使用数据项执行基本操作。  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个枚举对象，该对象表示当前分层节点的所有子节点。</summary>
        <returns>当前分层节点的子节点的 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性来确定<xref:System.Web.UI.IHierarchyData>节点是否有子节点。  
  
   
  
## Examples  
 下面的代码示例演示如何检查<xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性以确定当前分层数据节点是否有子节点，并<xref:System.Web.UI.IHierarchyData.GetChildren%2A>使用方法检索它们。 此代码示例是为<xref:System.Web.UI.IHierarchyData>接口提供的更大示例的一部分。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</summary>
        <returns>一个 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口未定义 HasParent 方便性属性，因此调用方必须检查<xref:System.Web.UI.IHierarchyData.GetParent%2A>方法`null`的返回值，以确定当前<xref:System.Web.UI.IHierarchyData>节点是否为层次结构数据的根节点<xref:System.Web.UI.IHierarchyData>节点所属的结构。  
  
   
  
## Examples  
 下面的代码示例演示如何在<xref:System.Web.UI.IHierarchyData.GetParent%2A> <xref:System.Web.UI.IHierarchyData>实现接口的类中实现方法。 类包装对象， <xref:System.Web.UI.IHierarchyData.GetParent%2A>方法实现检查<xref:System.IO.FileSystemInfo>对象的类型，并根据类型返回相应的父对象。 <xref:System.IO.FileSystemInfo> `FileSystemHierarchyData` 此代码示例摘自为<xref:System.Web.UI.IHierarchyData>接口<xref:System.Web.UI.HierarchicalDataSourceControl>和类提供的更大示例的一部分。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点是否有子节点。</summary>
        <value>如果当前节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性是一个便捷属性，使调用方可以避免检查的<xref:System.Web.UI.IHierarchyData.GetChildren%2A>方法`null`的返回值。 <xref:System.Web.UI.IHierarchyData.HasChildren%2A> 如果属性返回`true`，则调用<xref:System.Web.UI.IHierarchyData.GetChildren%2A>方法来检索<xref:System.Web.UI.IHierarchicalEnumerable>子节点的集合。 <xref:System.Web.UI.IHierarchyData.HasChildren%2A>  
  
   
  
## Examples  
 下面的代码示例演示了 ASP.NET 分层数据绑定控件如何使用递归数据<xref:System.Web.UI.IHierarchyData>绑定方法中的对象。 枚举<xref:System.Web.UI.IHierarchicalEnumerable>集合中的项，并使用<xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>方法检索<xref:System.Web.UI.IHierarchyData>每个对象。 最后， <xref:System.Web.UI.IHierarchyData.HasChildren%2A>将检查属性以确定是否要进行递归。 此代码示例是为<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>类提供的更大示例的一部分。  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点。</summary>
        <value>一个 <see cref="T:System.Object" /> 分层数据节点对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管许多表示分层数据节点的类（如<xref:System.Web.SiteMapNode>类）可直接<xref:System.Web.UI.IHierarchyData>实现接口，但其他类只充当不实现接口的类的包装。 如果业务对象在功能上等同于某个<xref:System.Web.UI.IHierarchyData>对象，但无法轻松地进行重新设计，则会为这些设计情况提供属性。 <xref:System.Web.UI.IHierarchyData.Item%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.IHierarchyData>属性，使用<xref:System.Web.UI.IHierarchyData.Type%2A>属性检查<xref:System.Web.UI.IHierarchyData>对象的类型，并强制转换对象以执行更多类型特定的操作。 此代码示例是为<xref:System.Web.UI.IHierarchyData>接口提供的更大示例的一部分。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取节点的分层路径。</summary>
        <value>一个 <see cref="T:System.String" />，标识相对当前节点的分层路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将<xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> <xref:System.Web.UI.HierarchicalDataSourceView>属性传递给方法，以检索与标识的节点相对应的<xref:System.Web.UI.IHierarchyData.Path%2A>对象。 <xref:System.Web.UI.IHierarchyData.Path%2A>  
  
> [!CAUTION]
>  <xref:System.Web.UI.IHierarchyData.Path%2A>属性不应包含有关主机环境的任何敏感信息，因为它可能会在数据绑定控件中呈现给客户端。  
  
   
  
## Examples  
 下面的代码示例演示如何在<xref:System.Web.UI.IHierarchyData.Path%2A> <xref:System.Web.UI.IHierarchyData>实现接口的类中实现属性。 类包装对象， <xref:System.Web.UI.IHierarchyData.Path%2A> 属性实现返回其文件系统路径。 <xref:System.IO.FileSystemInfo> `FileSystemHierarchyData` 此代码示例摘自为<xref:System.Web.UI.IHierarchyData>接口<xref:System.Web.UI.HierarchicalDataSourceControl>和类提供的更大示例的一部分。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含在 <see cref="P:System.Web.UI.IHierarchyData.Item" /> 属性中的 <see cref="T:System.Object" /> 的类型名称。</summary>
        <value><see cref="T:System.Web.UI.IHierarchyData" /> 对象表示的对象的类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性不<xref:System.Web.UI.IHierarchyData>返回对象中表示的对象的。 <xref:System.Type?displayProperty=nameWithType> <xref:System.Web.UI.IHierarchyData.Type%2A> 它将返回数据绑定控件使用的名称，以区分层次结构中具有不同可绑定属性的项。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.IHierarchyData>基本属性<xref:System.Web.HttpResponse>写入流，然后使用<xref:System.Web.UI.IHierarchyData.Type%2A>属性<xref:System.Web.UI.IHierarchyData>检查对象的类型，并强制转换对象以执行更多类型特定的操作。 此代码示例是为<xref:System.Web.UI.IHierarchyData>接口提供的更大示例的一部分。  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
