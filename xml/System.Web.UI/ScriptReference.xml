<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d792d915a3d344ce11def9671271ae43b1a9ebd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70621109" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="956c1-101">注册 ECMAScript (JavaScript) 文件，以便在 ASP.NET 网页上使用。</span><span class="sxs-lookup"><span data-stu-id="956c1-101">Registers an ECMAScript (JavaScript) file for use on an ASP.NET Web page.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956c1-102">可以通过<xref:System.Web.UI.ScriptReference>对象注册 JavaScript 文件，将该文件包含在 ASP.NET 网页上。</span><span class="sxs-lookup"><span data-stu-id="956c1-102">You can include a JavaScript file on an ASP.NET Web page by registering it through a <xref:System.Web.UI.ScriptReference> object.</span></span> <span data-ttu-id="956c1-103">你可以在网站上注册一个作为 .js 文件（静态脚本文件）的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-103">You can register a script file that is located as a .js file (a static script file) on the Web site.</span></span> <span data-ttu-id="956c1-104">你还可以将嵌入的脚本文件注册为程序集中的资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-104">You can also register a script file that is embedded as a resource in an assembly.</span></span> <span data-ttu-id="956c1-105">注册脚本文件后，可以在网页上的客户端脚本中使用其功能。</span><span class="sxs-lookup"><span data-stu-id="956c1-105">After registering the script file, you can use its functions in client script on the Web page.</span></span>  
  
 <span data-ttu-id="956c1-106">若要注册静态脚本文件，请将<xref:System.Web.UI.ScriptReferenceBase.Path%2A> <xref:System.Web.UI.ScriptReference>对象的属性设置为文件的相对位置。</span><span class="sxs-lookup"><span data-stu-id="956c1-106">To register a static script file, set the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property of the <xref:System.Web.UI.ScriptReference> object to the relative location of the file.</span></span>  
  
 <span data-ttu-id="956c1-107">若要将作为资源嵌入的脚本文件注册到程序集中，请将<xref:System.Web.UI.ScriptReference.Assembly%2A>属性设置为包含该文件的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-107">To register a script file that is embedded as a resource in an assembly, set the <xref:System.Web.UI.ScriptReference.Assembly%2A> property to the name of the assembly that contains the file.</span></span> <span data-ttu-id="956c1-108">然后将<xref:System.Web.UI.ScriptReference.Name%2A>属性设置为嵌入到程序集中的 .js 文件的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-108">Then set the <xref:System.Web.UI.ScriptReference.Name%2A> property to the name of the .js file that is embedded in the assembly.</span></span> <span data-ttu-id="956c1-109">在这种情况下，必须嵌入脚本文件，而不是链接。</span><span class="sxs-lookup"><span data-stu-id="956c1-109">In that case, the script file must be embedded, not linked.</span></span>  
  
 <span data-ttu-id="956c1-110">设置<xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>属性以指示是使用脚本的调试版本还是发布版本。</span><span class="sxs-lookup"><span data-stu-id="956c1-110">You set the <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> property to indicate whether to use the debug or release version of the script.</span></span>  
  
 <span data-ttu-id="956c1-111"><xref:System.Web.UI.ScriptMode.Auto>该值产生不同的结果，具体取决于它是引用独立脚本文件还是引用嵌入为程序集中的资源的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-111">The <xref:System.Web.UI.ScriptMode.Auto> value produces different results depending on whether it refers to a standalone script file or to a script file that is embedded as a resource in an assembly.</span></span> <span data-ttu-id="956c1-112">独立脚本文件是使用<xref:System.Web.UI.ScriptReferenceBase.Path%2A>属性定义的。</span><span class="sxs-lookup"><span data-stu-id="956c1-112">A standalone script file is defined with the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property.</span></span> <span data-ttu-id="956c1-113">必须通过<xref:System.Web.UI.ScriptReference.Name%2A>和<xref:System.Web.UI.ScriptReference.Assembly%2A>属性访问程序集引用。</span><span class="sxs-lookup"><span data-stu-id="956c1-113">An assembly reference must be accessed through the <xref:System.Web.UI.ScriptReference.Name%2A> and <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.</span></span> <span data-ttu-id="956c1-114"><xref:System.Web.UI.ScriptMode.Auto>值的结果如下所示：</span><span class="sxs-lookup"><span data-stu-id="956c1-114">The results for the <xref:System.Web.UI.ScriptMode.Auto> value are as follows:</span></span>  
  
-   <span data-ttu-id="956c1-115">当应用于独立脚本文件时<xref:System.Web.UI.ScriptReferenceBase.Path%2A> <xref:System.Web.UI.ScriptMode.Auto> ，如果该文件指定了属性，则值等效<xref:System.Web.UI.ScriptMode.Release>于。</span><span class="sxs-lookup"><span data-stu-id="956c1-115">When it is applied to a standalone script file where the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is specified, the <xref:System.Web.UI.ScriptMode.Auto> value is equivalent to <xref:System.Web.UI.ScriptMode.Release>.</span></span>  
  
-   <span data-ttu-id="956c1-116">当应用于程序集中的脚本引用时， <xref:System.Web.UI.ScriptMode.Auto> <xref:System.Web.UI.ScriptMode.Inherit>等效于。</span><span class="sxs-lookup"><span data-stu-id="956c1-116">When it is applied to a script reference in an assembly, <xref:System.Web.UI.ScriptMode.Auto> is equivalent to <xref:System.Web.UI.ScriptMode.Inherit>.</span></span> <span data-ttu-id="956c1-117">仅<xref:System.Web.UI.ScriptReference.Name%2A>指定时，它用于引用脚本。</span><span class="sxs-lookup"><span data-stu-id="956c1-117">When only <xref:System.Web.UI.ScriptReference.Name%2A> is specified, it is used to reference the script.</span></span> <span data-ttu-id="956c1-118">如果<xref:System.Web.UI.ScriptReference.Name%2A>同时指定<xref:System.Web.UI.ScriptReferenceBase.Path%2A>了和属性， <xref:System.Web.UI.ScriptReferenceBase.Path%2A>则使用<xref:System.Web.UI.ScriptMode.Auto>属性而不<xref:System.Web.UI.ScriptReference.Name%2A>是，但该值仍等效<xref:System.Web.UI.ScriptMode.Inherit>于。</span><span class="sxs-lookup"><span data-stu-id="956c1-118">When <xref:System.Web.UI.ScriptReference.Name%2A> and the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property are both specified, the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is used instead of <xref:System.Web.UI.ScriptReference.Name%2A>, but the <xref:System.Web.UI.ScriptMode.Auto> value is still equivalent to <xref:System.Web.UI.ScriptMode.Inherit>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956c1-119">下面的示例演示如何引用嵌入到控件程序集中的自定义控件和 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-119">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="956c1-120">该程序集假定在网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-120">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-121">自定义控件对<xref:System.Web.UI.UpdatePanel>控件进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="956c1-121">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="956c1-122">JavaScript 文件编译为名为 SampleControl 的嵌入资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-122">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="956c1-123">使用<xref:System.Web.UI.ScriptReference.Assembly%2A> 和 <xref:System.Web.UI.ScriptReference.Name%2A> 属性注册嵌入的 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-123">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="956c1-124">若要使用此示例，请使用自定义控件，将示例中显示的 JavaScript 文件编译为嵌入的资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-124">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="956c1-125">将生成的程序集放入网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-125">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-126">有关如何在程序集中嵌入 JavaScript 文件的示例，请参阅[演练：将 Javascript 文件作为资源嵌入到程序集中](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。</span><span class="sxs-lookup"><span data-stu-id="956c1-126">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="956c1-127">下面的示例演示使用自定义控件的页。</span><span class="sxs-lookup"><span data-stu-id="956c1-127">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="956c1-128">下面的示例演示了自定义控件类定义。</span><span class="sxs-lookup"><span data-stu-id="956c1-128">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="956c1-129">下面的示例演示支持 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-129">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="956c1-130">下面的示例演示必须添加到包含自定义控件和 JavaScript 文件的项目的 AssemblyInfo 文件中的代码。</span><span class="sxs-lookup"><span data-stu-id="956c1-130">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="956c1-131">初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="956c1-131">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="956c1-132">初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="956c1-132">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="956c1-133">客户端脚本文件相对于网页的路径。</span><span class="sxs-lookup"><span data-stu-id="956c1-133">The path of the client script file relative to the Web page.</span></span></param>
        <summary><span data-ttu-id="956c1-134">使用指定的路径初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="956c1-134">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="956c1-135">嵌入到程序集中的脚本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-135">The name of the script file that is embedded in the assembly.</span></span></param>
        <param name="assembly"><span data-ttu-id="956c1-136">包含作为嵌入资源的客户端脚本文件的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-136">The name of the assembly that contains the client script file as an embedded resource.</span></span></param>
        <summary><span data-ttu-id="956c1-137">使用指定的名称和程序集初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="956c1-137">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified name and assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="956c1-138">获取或设置包含作为嵌入资源的客户端脚本文件的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-138">Gets or sets the name of the assembly that contains the client script file as an embedded resource.</span></span></summary>
        <value><span data-ttu-id="956c1-139">包含作为嵌入资源的客户端脚本文件的程序集完全限定名或部分限定名。</span><span class="sxs-lookup"><span data-stu-id="956c1-139">The fully qualified or partially qualified name of the assembly that contains a client script file as an embedded resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956c1-140">引用作为嵌入<xref:System.Web.UI.ScriptReference.Assembly%2A>资源包含在程序集中的客户端脚本文件时，可以设置属性。</span><span class="sxs-lookup"><span data-stu-id="956c1-140">You set the <xref:System.Web.UI.ScriptReference.Assembly%2A> property when you reference a client script file that is included as an embedded resource in an assembly.</span></span> <span data-ttu-id="956c1-141">设置<xref:System.Web.UI.ScriptReference.Assembly%2A>为完全限定或部分限定的程序集名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-141">Set <xref:System.Web.UI.ScriptReference.Assembly%2A> to the fully qualified or partially qualified assembly name.</span></span> <span data-ttu-id="956c1-142">完全限定的程序集名称包括名称、区域性、公钥和版本号。</span><span class="sxs-lookup"><span data-stu-id="956c1-142">A fully qualified assembly name includes a name, culture, public key, and version number.</span></span> <span data-ttu-id="956c1-143">部分限定的程序集名称只包含名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-143">A partially qualified assembly name includes only a name.</span></span>  
  
 <span data-ttu-id="956c1-144">为<xref:System.Web.UI.ScriptReference.Assembly%2A>指定值时，还必须<xref:System.Web.UI.ScriptReference.Name%2A>在属性中指定嵌入资源的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-144">When you specify a value for <xref:System.Web.UI.ScriptReference.Assembly%2A>, you must also specify the name of the embedded resource in the <xref:System.Web.UI.ScriptReference.Name%2A> property.</span></span> <span data-ttu-id="956c1-145">否则， <xref:System.InvalidOperationException>将引发。</span><span class="sxs-lookup"><span data-stu-id="956c1-145">Otherwise, an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="956c1-146">引用的程序集必须位于网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="956c1-146">The assembly being referenced must be located in either the Bin folder of the Web site or in the global assembly cache.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956c1-147">下面的示例演示如何引用嵌入到控件程序集中的自定义控件和 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-147">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="956c1-148">该程序集假定在网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-148">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-149">自定义控件对<xref:System.Web.UI.UpdatePanel>控件进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="956c1-149">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="956c1-150">JavaScript 文件编译为名为 SampleControl 的嵌入资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-150">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="956c1-151">使用<xref:System.Web.UI.ScriptReference.Assembly%2A> 和 <xref:System.Web.UI.ScriptReference.Name%2A> 属性注册嵌入的 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-151">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="956c1-152">若要使用此示例，请使用自定义控件，将示例中显示的 JavaScript 文件编译为嵌入的资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-152">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="956c1-153">将生成的程序集放入网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-153">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-154">有关如何在程序集中嵌入 JavaScript 文件的示例，请参阅[演练：将 Javascript 文件作为资源嵌入到程序集中](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。</span><span class="sxs-lookup"><span data-stu-id="956c1-154">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="956c1-155">下面的示例演示使用自定义控件的页。</span><span class="sxs-lookup"><span data-stu-id="956c1-155">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="956c1-156">下面的示例演示了自定义控件类定义。</span><span class="sxs-lookup"><span data-stu-id="956c1-156">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="956c1-157">下面的示例演示支持 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-157">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="956c1-158">下面的示例演示必须添加到包含自定义控件和 JavaScript 文件的项目的 AssemblyInfo 文件中的代码。</span><span class="sxs-lookup"><span data-stu-id="956c1-158">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><span data-ttu-id="956c1-159">目标网页上的 <see langword="ScriptManager" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="956c1-159">The <see langword="ScriptManager" /> control on the target Web page.</span></span></param>
        <param name="zip"><span data-ttu-id="956c1-160">如果应压缩脚本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="956c1-160"><see langword="true" /> if the script should be compressed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="956c1-161">检索呈现为 <see langword="src" /> 元素的 <see langword="script" /> 特性值的 URL。</span><span class="sxs-lookup"><span data-stu-id="956c1-161">Retrieves the URL that is rendered as the value of the <see langword="src" /> attribute of the <see langword="script" /> element.</span></span></summary>
        <returns><span data-ttu-id="956c1-162">一个字符串，其中包含作为 <see langword="src" /> 元素的 <see langword="script" /> 特性的值所呈现的 URL。</span><span class="sxs-lookup"><span data-stu-id="956c1-162">A string that contains the URL that is rendered as the value of the <see langword="src" /> attribute of the <see langword="script" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="956c1-163">获取或设置一个值，该值指示从资源注册客户端脚本文件时，URL 中是否包括 <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="956c1-163">Gets or sets a value that indicates whether the <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> property is included in the URL when you register a client script file from a resource.</span></span></summary>
        <value><span data-ttu-id="956c1-164">如果在注册客户端脚本时未使用脚本路径，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="956c1-164"><see langword="true" /> if the script path is not used when you register the client script; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956c1-165">如果要<xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A>注册`true`客户端<xref:System.Web.UI.ScriptManager.ScriptPath%2A>脚本文件，而不在脚本文件的 URL 中包含值，则将设置为。</span><span class="sxs-lookup"><span data-stu-id="956c1-165">You set <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> to `true` when you want to register a client script file without including the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value in the URL of the script file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><span data-ttu-id="956c1-166">一个 <see cref="T:System.Web.UI.ScriptManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="956c1-166">A <see cref="T:System.Web.UI.ScriptManager" /> object.</span></span></param>
        <summary><span data-ttu-id="956c1-167">确定脚本引用是否为 AJAX 脚本。</span><span class="sxs-lookup"><span data-stu-id="956c1-167">Determines whether the script reference is an AJAX script.</span></span></summary>
        <returns><span data-ttu-id="956c1-168">如果脚本引用为 AJAX 脚本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="956c1-168"><see langword="true" /> if the script reference is an AJAX script; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="956c1-169">指示复合脚本是否包含对 ASP.NET AJAX 框架脚本的引用。</span><span class="sxs-lookup"><span data-stu-id="956c1-169">Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</span></span></summary>
        <returns><span data-ttu-id="956c1-170">如果复合脚本包含对 ASP.NET AJAX 框架脚本的引用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="956c1-170"><see langword="true" /> if the composite script contains a reference to an ASP.NET AJAX framework script; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="956c1-171">获取或设置包含客户端脚本文件的嵌入资源的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-171">Gets or sets the name of the embedded resource that contains the client script file.</span></span></summary>
        <value><span data-ttu-id="956c1-172">作为资源嵌入到程序集中的客户端脚本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="956c1-172">The name of the client script file that is embedded as a resource in an assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956c1-173">设置<xref:System.Web.UI.ScriptReference.Name%2A>属性以引用嵌入为程序集中的资源的客户端脚本文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-173">You set the <xref:System.Web.UI.ScriptReference.Name%2A> property to reference a client script file that is embedded as a resource in an assembly.</span></span>  
  
 <span data-ttu-id="956c1-174">如果在同一脚本引用中同时<xref:System.Web.UI.ScriptReferenceBase.Path%2A>定义<xref:System.Web.UI.ScriptReference.Name%2A>和属性的值，该属性将<xref:System.Web.UI.ScriptReferenceBase.Path%2A>优先。</span><span class="sxs-lookup"><span data-stu-id="956c1-174">If you define values for both the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties in the same script reference, the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956c1-175">下面的示例演示如何引用嵌入到控件程序集中的自定义控件和 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-175">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="956c1-176">该程序集假定在网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-176">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-177">自定义控件对<xref:System.Web.UI.UpdatePanel>控件进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="956c1-177">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="956c1-178">JavaScript 文件编译为名为 SampleControl 的嵌入资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-178">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="956c1-179">使用<xref:System.Web.UI.ScriptReference.Assembly%2A> 和 <xref:System.Web.UI.ScriptReference.Name%2A> 属性注册嵌入的 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-179">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="956c1-180">若要使用此示例，请使用自定义控件，将示例中显示的 JavaScript 文件编译为嵌入的资源。</span><span class="sxs-lookup"><span data-stu-id="956c1-180">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="956c1-181">将生成的程序集放入网站的 Bin 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="956c1-181">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="956c1-182">有关如何在程序集中嵌入 JavaScript 文件的示例，请参阅[演练：将 Javascript 文件作为资源嵌入到程序集中](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。</span><span class="sxs-lookup"><span data-stu-id="956c1-182">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="956c1-183">下面的示例演示使用自定义控件的页。</span><span class="sxs-lookup"><span data-stu-id="956c1-183">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="956c1-184">下面的示例演示了自定义控件类定义。</span><span class="sxs-lookup"><span data-stu-id="956c1-184">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="956c1-185">下面的示例演示支持 JavaScript 文件。</span><span class="sxs-lookup"><span data-stu-id="956c1-185">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="956c1-186">下面的示例演示必须添加到包含自定义控件和 JavaScript 文件的项目的 AssemblyInfo 文件中的代码。</span><span class="sxs-lookup"><span data-stu-id="956c1-186">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="956c1-187">返回一个字符串，该字符串表示 <see cref="P:System.Web.UI.ScriptReference.Name" /> 属性、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 属性或类型名称的值。</span><span class="sxs-lookup"><span data-stu-id="956c1-187">Returns a string that represents the value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property, the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property, or the type name.</span></span></summary>
        <returns><span data-ttu-id="956c1-188">如果已定义，则为 <see cref="P:System.Web.UI.ScriptReference.Name" /> 属性的值或 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 属性的值；否则为 <see cref="P:System.Reflection.MemberInfo.Name" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="956c1-188">The value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property if it is defined, or the value of the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
