<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ac6e318f06c85ad10854690a2664a126446dd85" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64147145" /></Metadata><TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DynamicValidatorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含事件数据的 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 类的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicValidator>类捕获从 LINQ to SQL 类或者从实体框架数据模型中的方法引发的异常。 此类不包含事件数据。 它使用时，不要传递状态信息到事件处理程序引发事件的事件。 如果事件处理程序需要状态信息，必须从此类以保存数据来创建派生的类。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicValidatorEventArgs : Exception * System.Web.DynamicData.DynamicDataSourceOperation -&gt; System.Web.DynamicData.DynamicValidatorEventArgs" Usage="new System.Web.DynamicData.DynamicValidatorEventArgs (exception, operation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">发生的异常。</param>
        <param name="operation">引发异常的数据源操作。</param>
        <summary>使用发生的异常和引发异常的数据源操作初始化 <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 动态数据提供了可以执行的数据源对象的数据源操作。 这些操作包括`Delete`， `Insert`，`Select`并`Update`和`ContextCreate`。 如果数据源操作过程中发生异常，导致该异常和发生的异常的数据源操作由<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A>和<xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A>分别。  
  
 此构造函数初始化的新实例<xref:System.Web.DynamicData.DynamicValidatorEventArgs>类使用这些属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在数据源操作事件期间发生的异常。</summary>
        <value>在数据源操作事件期间发生的异常。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 动态数据提供了可以执行的数据源对象的数据源操作。 这些操作包括`Delete`， `Insert`，`Select`并`Update`和`ContextCreate`。 如果发生异常，<xref:System.Web.DynamicData.DynamicValidator>类使用此属性来获取数据源操作期间触发的异常的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.DynamicData.DynamicDataSourceOperation" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 类中引发异常的数据源操作。</summary>
        <value>引发异常的数据源操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 动态数据提供了数据源对象可以执行的数据源操作。 这些操作包括`Delete`， `Insert`，`Select`并`Update`和`ContextCreate`。 如果发生异常，<xref:System.Web.DynamicData.DynamicValidator>类使用此属性来检索触发该异常的操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>