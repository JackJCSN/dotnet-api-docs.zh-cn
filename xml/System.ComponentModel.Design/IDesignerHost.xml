<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="daadc95c0dc44493d0c50168deacfe6012b89075" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63899154" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : IServiceProvider, System::ComponentModel::Design::IServiceContainer" />
  <TypeSignature Language="F#" Value="type IDesignerHost = interface&#xA;    interface IServiceContainer&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e0638-101">提供用于管理设计器事务和组件的接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-101">Provides an interface for managing designer transactions and components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-102"><xref:System.ComponentModel.Design.IDesignerHost> 是适用于.NET Framework 窗体设计器结构，以便为设计器事务和组件管理提供支持的接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="e0638-103">.NET Framework 不提供此接口的实现。</span><span class="sxs-lookup"><span data-stu-id="e0638-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="e0638-104">通过支持设计器的开发工具实现该接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0638-105">下面的代码示例演示如何获取<xref:System.ComponentModel.Design.IDesignerHost>从设计器或已就位的组件的服务接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="e0638-106">下面的代码示例演示了如何使用<xref:System.ComponentModel.Design.IDesignerHost>列表项目组件的接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="e0638-107">若要获取的实现<see cref="T:System.ComponentModel.Design.IDesignerHost" />从开发环境中，调用<see cref="M:System.ComponentModel.Component.GetService(System.Type)" />组件设计模式中处于活动状态时，传递的类型<see cref="T:System.ComponentModel.Design.IDesignerHost" />请求<see cref="T:System.ComponentModel.Design.IDesignerHost" />服务接口。</span><span class="sxs-lookup"><span data-stu-id="e0638-107">To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.</span></span>  
  
 <span data-ttu-id="e0638-108"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供了与设计器状态相关的以下成员：</span><span class="sxs-lookup"><span data-stu-id="e0638-108"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:</span></span> 
<span data-ttu-id="e0638-109">-<see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />属性指示是否正在加载设计器或文档。</span><span class="sxs-lookup"><span data-stu-id="e0638-109">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.</span></span>  
  
<span data-ttu-id="e0638-110">-<see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />之前显示激活设计器时发生事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-110">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.</span></span>  
  
<span data-ttu-id="e0638-111">-<see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />停用一个设计器时发生事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-111">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.</span></span>  
  
<span data-ttu-id="e0638-112">-<see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />事件发生后加载文档。</span><span class="sxs-lookup"><span data-stu-id="e0638-112">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.</span></span>  
  
<span data-ttu-id="e0638-113">-<see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" />方法激活设计器。</span><span class="sxs-lookup"><span data-stu-id="e0638-113">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.</span></span>  
  
 <span data-ttu-id="e0638-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供了与管理组件相关的以下成员：</span><span class="sxs-lookup"><span data-stu-id="e0638-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:</span></span> 
<span data-ttu-id="e0638-115">-<see cref="P:System.ComponentModel.Design.IDesignerHost.Container" />属性指示设计器宿主的容器。</span><span class="sxs-lookup"><span data-stu-id="e0638-115">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.</span></span>  
  
<span data-ttu-id="e0638-116">-<see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />属性指示的根组件的基类。</span><span class="sxs-lookup"><span data-stu-id="e0638-116">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.</span></span>  
  
<span data-ttu-id="e0638-117">-<see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />属性指示的根组件的类名称。</span><span class="sxs-lookup"><span data-stu-id="e0638-117">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.</span></span>  
  
<span data-ttu-id="e0638-118">-<see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />方法创建指定的类型的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-118">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.</span></span>  
  
<span data-ttu-id="e0638-119">-<see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />方法销毁指定的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-119">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.</span></span>  
  
<span data-ttu-id="e0638-120">-<see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />方法获取与指定组件关联的设计器。</span><span class="sxs-lookup"><span data-stu-id="e0638-120">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.</span></span>  
  
<span data-ttu-id="e0638-121">-<see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />方法获取具有指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-121">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.</span></span>  
  
 <span data-ttu-id="e0638-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> 提供了与事务管理相关的以下成员：</span><span class="sxs-lookup"><span data-stu-id="e0638-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:</span></span> 
<span data-ttu-id="e0638-123">-<see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />属性指示设计器是否在事务中。</span><span class="sxs-lookup"><span data-stu-id="e0638-123">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.</span></span>  
  
<span data-ttu-id="e0638-124">-<see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />属性指示当前的事务说明。</span><span class="sxs-lookup"><span data-stu-id="e0638-124">-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.</span></span>  
  
<span data-ttu-id="e0638-125">-<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />事务完成时发生事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-125">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.</span></span>  
  
<span data-ttu-id="e0638-126">-<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />以完成事务时，发生事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-126">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.</span></span>  
  
<span data-ttu-id="e0638-127">-<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />事件发生时事务已开始。</span><span class="sxs-lookup"><span data-stu-id="e0638-127">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.</span></span>  
  
<span data-ttu-id="e0638-128">-<see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />事务是将要开始时发生事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-128">-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.</span></span>  
  
<span data-ttu-id="e0638-129">-<see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />方法创建并返回新的事务。</span><span class="sxs-lookup"><span data-stu-id="e0638-129">-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="iDesignerHost.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0638-130">激活此宿主所承载的设计器。</span><span class="sxs-lookup"><span data-stu-id="e0638-130">Activates the designer that this host is hosting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-131">应激活设计器，然后它们将显示其用户界面。</span><span class="sxs-lookup"><span data-stu-id="e0638-131">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-132">在激活此设计器时发生。</span><span class="sxs-lookup"><span data-stu-id="e0638-132">Occurs when this designer is activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-133">显示前已激活设计器。</span><span class="sxs-lookup"><span data-stu-id="e0638-133">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-134">获取此设计器宿主的容器。</span><span class="sxs-lookup"><span data-stu-id="e0638-134">Gets the container for this designer host.</span></span></summary>
        <value><span data-ttu-id="e0638-135">此宿主的 <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-135">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-136">这<xref:System.ComponentModel.IContainer>包含当前的设计模式文档的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-136">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="e0638-137">可以列出，也可以访问通过当前的设计模式文档的组件的任何<xref:System.ComponentModel.IContainer.Components%2A>此成员<xref:System.ComponentModel.IContainer>。</span><span class="sxs-lookup"><span data-stu-id="e0638-137">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0638-138">创建指定类型的组件，并将其添加到设计文档中。</span><span class="sxs-lookup"><span data-stu-id="e0638-138">Creates a component of the specified type and adds it to the design document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent componentClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass"><span data-ttu-id="e0638-139">要创建的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="e0638-139">The type of the component to create.</span></span></param>
        <summary><span data-ttu-id="e0638-140">创建指定类型的组件，并将其添加到设计文档中。</span><span class="sxs-lookup"><span data-stu-id="e0638-140">Creates a component of the specified type and adds it to the design document.</span></span></summary>
        <returns><span data-ttu-id="e0638-141">新创建的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-141">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-142">如果无法解析的类型实现的对象到<xref:System.ComponentModel.IComponent>，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e0638-142">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e0638-143">此方法不会指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="e0638-143">This method does not specify a name for the component.</span></span> <span data-ttu-id="e0638-144">此方法创建组件，并将其添加到设计器的容器。</span><span class="sxs-lookup"><span data-stu-id="e0638-144">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type * string -&gt; System.ComponentModel.IComponent" Usage="iDesignerHost.CreateComponent (componentClass, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass"><span data-ttu-id="e0638-145">要创建的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="e0638-145">The type of the component to create.</span></span></param>
        <param name="name"><span data-ttu-id="e0638-146">组件的名称。</span><span class="sxs-lookup"><span data-stu-id="e0638-146">The name for the component.</span></span></param>
        <summary><span data-ttu-id="e0638-147">创建指定类型和名称的组件，并将其添加到设计文档中。</span><span class="sxs-lookup"><span data-stu-id="e0638-147">Creates a component of the specified type and name, and adds it to the design document.</span></span></summary>
        <returns><span data-ttu-id="e0638-148">新创建的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-148">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-149">如果无法解析的类型实现的对象到<xref:System.ComponentModel.IComponent>，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e0638-149">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e0638-150">此方法创建组件，并将其添加到设计器的容器。</span><span class="sxs-lookup"><span data-stu-id="e0638-150">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0638-151">创建 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可封装事件序列以提高性能并启用撤消和重复支持功能。</span><span class="sxs-lookup"><span data-stu-id="e0638-151">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : unit -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0638-152">创建 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可封装事件序列以提高性能并启用撤消和重复支持功能。</span><span class="sxs-lookup"><span data-stu-id="e0638-152">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span></span></summary>
        <returns><span data-ttu-id="e0638-153"><see cref="T:System.ComponentModel.Design.DesignerTransaction" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-153">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span></span> <span data-ttu-id="e0638-154">在完成事务中的步骤后，应对此对象调用 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-154">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-155">此方法创建<xref:System.ComponentModel.Design.DesignerTransaction>可用于封装的一系列操作。</span><span class="sxs-lookup"><span data-stu-id="e0638-155">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="e0638-156">设计器事务可以提高性能、 减少闪烁引起的操作的过程中的多个更新并启用撤消的大多数操作。</span><span class="sxs-lookup"><span data-stu-id="e0638-156">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="e0638-157">冗长的操作涉及多个组件可以引发多个事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-157">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="e0638-158">这些事件可能导致副作用，如闪烁或性能下降。</span><span class="sxs-lookup"><span data-stu-id="e0638-158">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="e0638-159">当多个组件上一次操作或单个组件上设置多个属性时，可以通过执行这些更改的事务中来提高性能。</span><span class="sxs-lookup"><span data-stu-id="e0638-159">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="e0638-160">某些操作处理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，并仅当事务不处于正在进行时执行工作。</span><span class="sxs-lookup"><span data-stu-id="e0638-160">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="e0638-161">使用事务的详细信息，请参阅的文档<xref:System.ComponentModel.Design.DesignerTransaction>。</span><span class="sxs-lookup"><span data-stu-id="e0638-161">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member CreateTransaction : string -&gt; System.ComponentModel.Design.DesignerTransaction" Usage="iDesignerHost.CreateTransaction description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="e0638-162">新创建的事务的标题或说明。</span><span class="sxs-lookup"><span data-stu-id="e0638-162">A title or description for the newly created transaction.</span></span></param>
        <summary><span data-ttu-id="e0638-163">使用指定的事务说明创建 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />，它可封装事件序列以提高性能并启用撤消和重复支持功能。</span><span class="sxs-lookup"><span data-stu-id="e0638-163">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span></span></summary>
        <returns><span data-ttu-id="e0638-164">一个新的 <see cref="T:System.ComponentModel.Design.DesignerTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-164">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span></span> <span data-ttu-id="e0638-165">在完成事务中的步骤后，应对此对象调用 <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-165">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-166">此方法创建<xref:System.ComponentModel.Design.DesignerTransaction>可用于封装的一系列操作。</span><span class="sxs-lookup"><span data-stu-id="e0638-166">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="e0638-167">设计器事务可以提高性能、 减少闪烁引起的操作的过程中的多个更新并启用撤消的大多数操作。</span><span class="sxs-lookup"><span data-stu-id="e0638-167">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="e0638-168">冗长的操作涉及多个组件可以引发多个事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-168">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="e0638-169">这些事件可能导致副作用，如闪烁或性能下降。</span><span class="sxs-lookup"><span data-stu-id="e0638-169">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="e0638-170">当多个组件上一次操作或单个组件上设置多个属性时，可以通过执行这些更改的事务中来提高性能。</span><span class="sxs-lookup"><span data-stu-id="e0638-170">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="e0638-171">某些操作处理<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>和<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>事件，并仅当事务不处于正在进行时执行工作。</span><span class="sxs-lookup"><span data-stu-id="e0638-171">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="e0638-172">使用事务的详细信息，请参阅的文档<xref:System.ComponentModel.Design.DesignerTransaction>。</span><span class="sxs-lookup"><span data-stu-id="e0638-172">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-173">在停用此设计器时发生。</span><span class="sxs-lookup"><span data-stu-id="e0638-173">Occurs when this designer is deactivated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-174">不再显示之前，将停用一个设计器。</span><span class="sxs-lookup"><span data-stu-id="e0638-174">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member DestroyComponent : System.ComponentModel.IComponent -&gt; unit" Usage="iDesignerHost.DestroyComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="e0638-175">要销毁的组件。</span><span class="sxs-lookup"><span data-stu-id="e0638-175">The component to destroy.</span></span></param>
        <summary><span data-ttu-id="e0638-176">销毁指定组件并将其从设计器容器中移除。</span><span class="sxs-lookup"><span data-stu-id="e0638-176">Destroys the specified component and removes it from the designer container.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDesigner : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.IDesigner" Usage="iDesignerHost.GetDesigner component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="e0638-177">要为其检索设计器的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-177">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span></span></param>
        <summary><span data-ttu-id="e0638-178">获取包含指定组件的设计器实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-178">Gets the designer instance that contains the specified component.</span></span></summary>
        <returns><span data-ttu-id="e0638-179"><see cref="T:System.ComponentModel.Design.IDesigner" />；或者在指定组件没有设计器的情况下为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-179">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerHost.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="e0638-180">要加载的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="e0638-180">The name of the type to load.</span></span></param>
        <summary><span data-ttu-id="e0638-181">获取指定的完全限定类型名称的实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-181">Gets an instance of the specified, fully qualified type name.</span></span></summary>
        <returns><span data-ttu-id="e0638-182">指定类型名称的类型对象，或者在无法找到该类型的情况下为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-182">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTransaction : bool" Usage="System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-183">获取一个值，该值指示设计器宿主当前是否在事务中。</span><span class="sxs-lookup"><span data-stu-id="e0638-183">Gets a value indicating whether the designer host is currently in a transaction.</span></span></summary>
        <value><span data-ttu-id="e0638-184">如果事务正在进行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-184"><see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-185">在此设计器加载完文档时发生。</span><span class="sxs-lookup"><span data-stu-id="e0638-185">Occurs when this designer completes loading its document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-186">设计器加载完文档后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-186">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-187">获取一个值，该值指示设计器宿主当前是否正在加载文档。</span><span class="sxs-lookup"><span data-stu-id="e0638-187">Gets a value indicating whether the designer host is currently loading the document.</span></span></summary>
        <value><span data-ttu-id="e0638-188">如果设计器宿主当前正在加载文档，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e0638-188"><see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-189">获取用作当前设计的根组件的基类的实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-189">Gets the instance of the base class used as the root component for the current design.</span></span></summary>
        <value><span data-ttu-id="e0638-190">根组件类的实例。</span><span class="sxs-lookup"><span data-stu-id="e0638-190">The instance of the root component class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-191">此基类的类通常是<xref:System.Windows.Forms.Form>或<xref:System.Windows.Forms.UserControl>实例; 它定义为其用户的派生的类扩展的类。</span><span class="sxs-lookup"><span data-stu-id="e0638-191">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponentClassName : string" Usage="System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-192">获取所设计的类的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="e0638-192">Gets the fully qualified name of the class being designed.</span></span></summary>
        <value><span data-ttu-id="e0638-193">基组件类的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="e0638-193">The fully qualified name of the base component class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosed : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-194">添加 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e0638-194">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-195">关闭事务后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-195">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="e0638-196">事务有时会改变多个值。</span><span class="sxs-lookup"><span data-stu-id="e0638-196">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="e0638-197">事务方法提供了一种方法来防止性能和通过避免重复处理闪烁的问题。</span><span class="sxs-lookup"><span data-stu-id="e0638-197">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="e0638-198">这些方法将处理推迟到该事务已关闭后。</span><span class="sxs-lookup"><span data-stu-id="e0638-198">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberSignature Language="F#" Value="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " Usage="member this.TransactionClosing : System.ComponentModel.Design.DesignerTransactionCloseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-199">添加 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e0638-199">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-200">事务完成之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-200">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="e0638-201">事务有时会改变多个值。</span><span class="sxs-lookup"><span data-stu-id="e0638-201">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="e0638-202">事务方法提供了一种方法来防止性能和通过避免重复处理闪烁的问题。</span><span class="sxs-lookup"><span data-stu-id="e0638-202">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="e0638-203">这些方法将处理推迟到该事务已关闭后。</span><span class="sxs-lookup"><span data-stu-id="e0638-203">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionDescription : string" Usage="System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-204">获取当前事务的说明。</span><span class="sxs-lookup"><span data-stu-id="e0638-204">Gets the description of the current transaction.</span></span></summary>
        <value><span data-ttu-id="e0638-205">当前事务的说明。</span><span class="sxs-lookup"><span data-stu-id="e0638-205">A description of the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-206">说明是使用指定的最后一个描述<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="e0638-206">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpened : EventHandler " Usage="member this.TransactionOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-207">添加 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e0638-207">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-208">当事务已开始时，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-208">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="e0638-209">事务有时会改变多个值。</span><span class="sxs-lookup"><span data-stu-id="e0638-209">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="e0638-210">事务方法提供了一种方法来防止性能和通过避免重复处理闪烁的问题。</span><span class="sxs-lookup"><span data-stu-id="e0638-210">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="e0638-211">这些方法将处理推迟到该事务已关闭后。</span><span class="sxs-lookup"><span data-stu-id="e0638-211">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberSignature Language="F#" Value="member this.TransactionOpening : EventHandler " Usage="member this.TransactionOpening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0638-212">添加 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e0638-212">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0638-213">将要开始事务时，会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e0638-213">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="e0638-214">此方法允许设计器宿主客户端之前其他处理程序会收到通知事务已开始执行操作。</span><span class="sxs-lookup"><span data-stu-id="e0638-214">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="e0638-215">指定的处理程序调用仅的首次调用到<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>进行。</span><span class="sxs-lookup"><span data-stu-id="e0638-215">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="e0638-216">后续调用不会生成此事件之前被释放所有事务对象。</span><span class="sxs-lookup"><span data-stu-id="e0638-216">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>