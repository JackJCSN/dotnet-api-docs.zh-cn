<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d73892d14df1e5f7c75dc17365973724e89fdc4a" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898878" /></Metadata><TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMenuCommandService" />
  <TypeSignature Language="F#" Value="type IMenuCommandService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供的方法用于管理设计模式下可用的全局设计器谓词和菜单命令，以及显示某些类型的快捷菜单。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口提供的方法：  
  
-   查找、 调用、 添加和删除全局设计器谓词命令。  
  
-   查找、 调用、 添加和删除标准菜单命令。  
  
-   更改与标准菜单命令相关联的事件处理程序。  
  
-   显示与菜单关联的快捷菜单标准命令<xref:System.ComponentModel.Design.CommandID>。  
  
 设计器谓词表示在设计模式下的快捷菜单列出的自定义命令。 设计器谓词可以提供指定的文本标签。 每个设计器谓词自动分配有一个唯一<xref:System.ComponentModel.Design.CommandID>。 设计器可提供通过设计器谓词其<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>属性，但这些只有时是当前选定设计器的组件。 全局设计器谓词是可访问从设计模式下快捷菜单，而不考虑所选组件的设计器谓词命令。 此接口允许你管理的全局设计器谓词在设计模式下可用的集。  
  
 还可以添加全局设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法，并且你可以删除全局设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>方法。 您可以调用设计器谓词使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法，如果您知道<xref:System.ComponentModel.Design.CommandID>的谓词。 <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>此接口的属性包含的设计器谓词命令在快捷菜单中显示当前集。 此设计器谓词命令集包含的所有全局设计器谓词和任何当前所选组件的设计器提供任何设计器谓词。 选择或取消选择的组件与设计器设计器谓词命令产品/服务每次更新此集的谓词。  
  
 菜单命令仅限于的预定义的标准命令集。 在中定义的大多数预定义的标准命令<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>枚举。 您可以添加、 删除和调用菜单命令和搜索已添加到使用此接口的方法的菜单的菜单命令。  
  
 还可以添加标准菜单命令使用<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法，并删除标准菜单命令使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。 您可以将事件处理程序附加到预定义的标准菜单命令中的文档中详细介绍的过程<xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>方法。 您可以检索通过菜单命令<xref:System.ComponentModel.Design.CommandID>如果已添加到菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法。 可以调用菜单命令或通过设计器谓词命令<xref:System.ComponentModel.Design.CommandID>使用<xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>方法。  
  
> [!NOTE]
>  尝试添加具有一个已有的菜单命令<xref:System.ComponentModel.Design.CommandID>将引发<xref:System.InvalidOperationException>。 在添加菜单命令时，请务必检查它是否已菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用异常明智地处理。  
  
> [!NOTE]
>  菜单命令可以添加到菜单中，且具有其<xref:System.ComponentModel.Design.MenuCommand.Visible%2A>或<xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>属性设置为`false`。 如果看不到已添加的菜单的菜单命令，其中一个属性可能已设置为`false`。  
  
 可以显示包含在指定的位置使用的菜单命令的某些标准快捷菜单<xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法。 此方法的文档包含一个表，列出指定有效的菜单，然后显示的命令 Id。  
  
   
  
## Examples  
 此示例演示如何使用<xref:System.ComponentModel.Design.IMenuCommandService>添加<xref:System.ComponentModel.Design.MenuCommand>。  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.AddCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">要添加的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
        <summary>将指定的标准菜单命令添加到菜单中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.MenuCommands>并<xref:System.ComponentModel.Design.StandardCommands>枚举包含<xref:System.ComponentModel.Design.CommandID>标识符的预定义的标准命令和菜单命令已关联到特定菜单上的某个位置。  
  
> [!NOTE]
>  尝试添加具有一个已有的菜单命令<xref:System.ComponentModel.Design.CommandID>将引发<xref:System.InvalidOperationException>。 在添加菜单命令时，请务必检查它是否已菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法或使用异常明智地处理。  
  
 可以将事件处理程序附加到的预定义的菜单命令的以下过程：  
  
1.  如果菜单命令将其与事件处理程序链接已添加到菜单中，或位于<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，请考虑你是否想要更高版本，此菜单命令和是否想要调用从新的事件处理程序的当前事件处理程序。 如果你的代码可能会还原的菜单命令或事件处理程序的调用链，请务必将存储到某个位置的菜单命令的引用。  
  
2.  确保任何先前存在的菜单命令具有相同<xref:System.ComponentModel.Design.CommandID>已从菜单使用<xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>方法。  
  
3.  创建一个新<xref:System.ComponentModel.Design.MenuCommand>并指定事件处理程序中构造函数中，并使用<xref:System.ComponentModel.Design.CommandID>表示要添加的命令。 每个标准的菜单命令都具有预定义的菜单位置添加到相关联。 在中定义的受支持的命令 Id<xref:System.ComponentModel.Design.StandardCommands>和<xref:System.Windows.Forms.Design.MenuCommands>枚举。  
  
4.  如果你想要调用任何预先存在的事件处理程序的菜单命令，调用<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>处理菜单命令的调用事件的事件处理程序中的菜单已替换的菜单命令的方法。  
  
5.  如果您有兴趣还原已替换的预先存在的菜单命令的事件处理程序，添加已存储的预先存在的菜单命令后删除你创建的替换菜单命令。 您可能想要添加到此行为`Dispose`方法为你的类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">菜单上已存在指定 <see cref="T:System.ComponentModel.Design.CommandID" /> 的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member AddVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.AddVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">要添加的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
        <summary>将指定的设计器谓词添加到全局设计器谓词集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供设计器谓词的组件的设计人员应使用<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>属性及其设计器，而不是调用此方法。 此方法将添加可访问的右键单击快捷菜单中而不考虑当前所选组件的设计模式下的全局设计器谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="iMenuCommandService.FindCommand commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">要搜索的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
        <summary>搜索指定的命令 ID 并返回与之关联的菜单命令。</summary>
        <returns>与该命令 ID 相关联的 <see cref="T:System.ComponentModel.Design.MenuCommand" />，或者在未找到命令的情况下返回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberSignature Language="F#" Value="abstract member GlobalInvoke : System.ComponentModel.Design.CommandID -&gt; bool" Usage="iMenuCommandService.GlobalInvoke commandID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">要搜索和执行的命令的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
        <summary>调用与指定的命令 ID 匹配的菜单或设计器谓词命令。</summary>
        <returns>如果成功地找到并调用命令，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的菜单命令或使用设计器谓词<xref:System.ComponentModel.Design.CommandID>匹配指定<xref:System.ComponentModel.Design.CommandID>。 此方法首先搜索然后再继续搜索，如有必要，通过全局环境命令服务中包含的全局和活动提供设计器谓词在设计器谓词集合中。 如果找到了匹配的菜单命令或设计器谓词，则调用该命令。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCommand : System.ComponentModel.Design.MenuCommand -&gt; unit" Usage="iMenuCommandService.RemoveCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">要移除的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
        <summary>从菜单移除指定的标准菜单命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法移除指定<xref:System.ComponentModel.Design.MenuCommand>如果找到，则为。 此方法不会引发异常或返回值，如果指定<xref:System.ComponentModel.Design.MenuCommand>找不到。 使用<xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>方法，以确定是否<xref:System.ComponentModel.Design.MenuCommand>匹配指定<xref:System.ComponentModel.Design.CommandID>位于菜单。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberSignature Language="F#" Value="abstract member RemoveVerb : System.ComponentModel.Design.DesignerVerb -&gt; unit" Usage="iMenuCommandService.RemoveVerb verb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">要移除的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
        <summary>从全局设计器谓词的集合中移除指定的设计器谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果它在全局设计器谓词集合，此方法将删除指定的全局设计器谓词。 可以将设计器谓词添加到全局设计器谓词集合使用<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : System.ComponentModel.Design.CommandID * int * int -&gt; unit" Usage="iMenuCommandService.ShowContextMenu (menuID, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">要显示的快捷菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
        <param name="x">屏幕上的 x 坐标，菜单此处显示。</param>
        <param name="y">屏幕上的 y 坐标，菜单此处显示。</param>
        <summary>在指定位置显示指定的快捷菜单。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>方法可以显示任何以下 Visual Studio 快捷菜单包含指定点处的菜单命令：  
  
|菜单|CommandID|  
|----------|---------------|  
|显示容器的快捷菜单|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|组件栏中显示的快捷菜单|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|快捷菜单中选择的显示|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|为送纸器选择显示的快捷菜单|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 此方法还可以显示其他已注册的快捷菜单。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前可用的设计器谓词的集合。</summary>
        <value>包含当前可用的设计器谓词的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当前可用的设计器谓词集包括的所有全局设计器谓词，通过添加<xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>方法在此接口，并且各个设计器谓词，通过提供<xref:System.ComponentModel.Design.IDesigner.Verbs%2A>具体设计器的属性。 如果与设计器谓词的名称冲突的全局谓词名称，提供设计器设计器谓词优先。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>