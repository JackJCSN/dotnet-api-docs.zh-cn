<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="240f72dd2638187f7f384e3fa7c4053213d1ff96" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63899082" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c09d2-101">提供使设计器能够访问和筛选 <see cref="T:System.ComponentModel.TypeDescriptor" /> 字典的接口，它存储组件设计器可以向设计时环境公开的属性、特性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="c09d2-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-102"><xref:System.ComponentModel.Design.IDesignerFilter> 可使设计器筛选的属性、 属性和事件通过其关联的组件公开的描述符集<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="c09d2-103">此接口的方法名称开头`Pre`立即在名称开头的方法之前调用`Post`。</span><span class="sxs-lookup"><span data-stu-id="c09d2-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="c09d2-104">如果你想要添加属性、 事件或属性描述符，使用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c09d2-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="c09d2-105">如果你想要更改或删除属性、 事件或属性说明符，请使用<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c09d2-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c09d2-106">下面的示例演示的重写<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>，它到属性窗口将在设计器的属性，在设计时选择设计器的控件。</span><span class="sxs-lookup"><span data-stu-id="c09d2-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="c09d2-107">有关示例，请参阅<xref:System.Windows.Forms.Design.ControlDesigner>类的完整的设计器示例，使用<xref:System.ComponentModel.Design.IDesignerFilter>接口。</span><span class="sxs-lookup"><span data-stu-id="c09d2-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="c09d2-108">组件的类的 <see cref="T:System.Attribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="c09d2-109">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c09d2-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="c09d2-110">当在派生类中被重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中的项。</span><span class="sxs-lookup"><span data-stu-id="c09d2-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-111">此方法使您能够更改或移除项的字典中实现此接口的设计器关联的组件通过公开的特性<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-112">中的属性字典的键是属性的类型 Id。</span><span class="sxs-lookup"><span data-stu-id="c09d2-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="c09d2-113">类型的对象属于<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="c09d2-114">此方法后立即调用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="c09d2-115">属性的类型 ID 可以是任何对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="c09d2-116">默认情况下<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="c09d2-117">可以检查<xref:System.Attribute.TypeId%2A>是否与已知等同字典中的特性<xref:System.Attribute.TypeId%2A>属性来标识它，或使用<xref:System.Reflection>来标识自身的属性对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="c09d2-118">当属性具有相同的<xref:System.Attribute.TypeId%2A>新属性的现有或继承的属性添加到组件中，替换旧的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="c09d2-119">对于许多属性，相同类型的新属性将替换任何以前的类型的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="c09d2-120">但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地用于区分该属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="c09d2-121">例如，若要提供不同类型的同时处于活动状态的设计器的类型，例如<xref:System.ComponentModel.Design.IRootDesigner>和一个<xref:System.ComponentModel.Design.IDesigner>，则<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>用于唯一标识的属性和基本设计器类型。</span><span class="sxs-lookup"><span data-stu-id="c09d2-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="c09d2-122"><xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了在设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。</span><span class="sxs-lookup"><span data-stu-id="c09d2-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="c09d2-123">因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有相同类型作为对现有的基本设计器类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧属性将替换为新属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-124">可通过访问字典可以直接进行筛选<paramref name="attributes" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-125">在执行您自己的筛选后，如果您要重写此方法，调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="c09d2-126"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span><span class="sxs-lookup"><span data-stu-id="c09d2-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="c09d2-127">事件字典中的关键字是事件名。</span><span class="sxs-lookup"><span data-stu-id="c09d2-127">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="c09d2-128">当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中的项。</span><span class="sxs-lookup"><span data-stu-id="c09d2-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-129">此方法使您能够更改或移除项的字典中的事件，通过公开<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-130">中的事件字典的关键字是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="c09d2-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="c09d2-131">类型的对象属于<xref:System.ComponentModel.EventDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="c09d2-132">此方法后立即调用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-133">可通过访问字典可以直接进行筛选<paramref name="events" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-134">在执行您自己的筛选后，如果您要重写此方法，调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="c09d2-135"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="c09d2-136">属性字典中的关键字是属性名。</span><span class="sxs-lookup"><span data-stu-id="c09d2-136">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="c09d2-137">当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中的项。</span><span class="sxs-lookup"><span data-stu-id="c09d2-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-138">此方法使您能够更改或移除项的字典中的属性通过公开<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-139">属性的字典中的关键字是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="c09d2-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="c09d2-140">类型的对象属于<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="c09d2-141">此方法后立即调用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-142">可通过访问字典可以直接进行筛选<paramref name="properties" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-143">在执行您自己的筛选后，如果您要重写此方法，调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="c09d2-144">组件的类的 <see cref="T:System.Attribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="c09d2-145">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c09d2-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="c09d2-146">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中。</span><span class="sxs-lookup"><span data-stu-id="c09d2-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-147">此方法提供了一种方法将项添加到通过实现此接口的设计器关联的组件公开的特性的字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-148">中的属性字典的键是属性的类型 Id。</span><span class="sxs-lookup"><span data-stu-id="c09d2-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="c09d2-149">类型的对象属于<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="c09d2-150">立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="c09d2-151">属性的类型 ID 可以是任何对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="c09d2-152">默认情况下<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="c09d2-153">可以检查<xref:System.Attribute.TypeId%2A>是否与已知等同字典中的特性<xref:System.Attribute.TypeId%2A>属性来标识它，或使用<xref:System.Reflection>来标识自身的属性对象。</span><span class="sxs-lookup"><span data-stu-id="c09d2-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="c09d2-154">当属性具有相同的<xref:System.Attribute.TypeId%2A>新属性的现有或继承的属性添加到组件中，替换旧的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="c09d2-155">对于许多属性，相同类型的新属性将替换任何以前的类型的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="c09d2-156">但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地用于区分该属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="c09d2-157">例如，若要提供不同类型的同时处于活动状态的设计器的类型，例如<xref:System.ComponentModel.Design.IRootDesigner>和一个<xref:System.ComponentModel.Design.IDesigner>，则<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>用于唯一标识的属性和基本设计器类型。</span><span class="sxs-lookup"><span data-stu-id="c09d2-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="c09d2-158"><xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了在设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。</span><span class="sxs-lookup"><span data-stu-id="c09d2-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="c09d2-159">因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有相同类型作为对现有的基本设计器类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧属性将替换为新属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-160">可通过访问字典可以直接进行筛选<paramref name="attributes" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-161">在执行您自己的筛选后，如果您要重写此方法，调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="c09d2-162"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span><span class="sxs-lookup"><span data-stu-id="c09d2-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="c09d2-163">事件字典中的关键字是事件名。</span><span class="sxs-lookup"><span data-stu-id="c09d2-163">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="c09d2-164">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中。</span><span class="sxs-lookup"><span data-stu-id="c09d2-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-165">此方法提供了一种方法将项添加到设计器通过公开的事件字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-166">中的事件字典的关键字是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="c09d2-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="c09d2-167">类型的对象属于<xref:System.ComponentModel.EventDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="c09d2-168">立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-169">可以直接修改可通过访问字典<paramref name="events" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-170">如果您要重写此方法，在执行您自己的筛选之前调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="c09d2-171"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span><span class="sxs-lookup"><span data-stu-id="c09d2-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="c09d2-172">属性字典中的关键字是属性名。</span><span class="sxs-lookup"><span data-stu-id="c09d2-172">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="c09d2-173">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中。</span><span class="sxs-lookup"><span data-stu-id="c09d2-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c09d2-174">此方法提供了一种方法将项添加到设计器通过公开的属性的字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="c09d2-175">属性的字典中的关键字是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="c09d2-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="c09d2-176">类型的对象属于<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="c09d2-177">立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="c09d2-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c09d2-178">可以直接修改可通过访问字典<paramref name="properties" />参数，或也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="c09d2-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="c09d2-179">如果您要重写此方法，在执行您自己的筛选之前调用基实现。</span><span class="sxs-lookup"><span data-stu-id="c09d2-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>