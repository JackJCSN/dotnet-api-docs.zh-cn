<Type Name="Buffer" FullName="System.Buffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98e975feab1531ad9d651ea1b804d3d7f23b003d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70650909" /></Metadata><TypeSignature Language="C#" Value="public static class Buffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Buffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffer" />
  <TypeSignature Language="VB.NET" Value="Public Class Buffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Buffer abstract sealed" />
  <TypeSignature Language="F#" Value="type Buffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="414fa-101">操作基元类型的数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-101">Manipulates arrays of primitive types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-102"><xref:System.Buffer>仅影响基元类型的数组;此类不适用于对象。</span><span class="sxs-lookup"><span data-stu-id="414fa-102"><xref:System.Buffer> only affects arrays of primitive types; this class does not apply to objects.</span></span> <span data-ttu-id="414fa-103">每个基元类型都被视为一系列字节，而不考虑与基元类型关联的任何行为或限制。</span><span class="sxs-lookup"><span data-stu-id="414fa-103">Each primitive type is treated as a series of bytes without regard to any behavior or limitation associated with the primitive type.</span></span>  
  
 <span data-ttu-id="414fa-104"><xref:System.Buffer>提供将字节从一个基元类型数组复制到另一个基元类型数组的方法，从数组中获取一个字节，在数组中设置一个字节，并获取数组的长度。</span><span class="sxs-lookup"><span data-stu-id="414fa-104"><xref:System.Buffer> provides methods to copy bytes from one array of primitive types to another array of primitive types, get a byte from an array, set a byte in an array, and obtain the length of an array.</span></span> <span data-ttu-id="414fa-105">此类提供更好的性能，用于处理<xref:System.Array?displayProperty=nameWithType>类中类似方法之外的基元类型。</span><span class="sxs-lookup"><span data-stu-id="414fa-105">This class provides better performance for manipulating primitive types than similar methods in the <xref:System.Array?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="414fa-106"><xref:System.Buffer><xref:System.Boolean>适用于以下基元类型：、 <xref:System.UInt16> 、、、 <xref:System.UInt64> 、 <xref:System.Int16> <xref:System.Byte> <xref:System.Char> <xref:System.SByte> 、 <xref:System.UInt32> 、、、、  <xref:System.Int32> <xref:System.Int64> <xref:System.IntPtr>、 <xref:System.UIntPtr>、 <xref:System.Single>和。 <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="414fa-106"><xref:System.Buffer> is applicable to the following primitive types: <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.IntPtr>, <xref:System.UIntPtr>, <xref:System.Single>, and <xref:System.Double>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="414fa-107">下面的代码示例演示如何使用多个`Buffer`类方法。</span><span class="sxs-lookup"><span data-stu-id="414fa-107">The following code example illustrates the use of several `Buffer` class methods.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/buffer.cpp#1)]
 [!code-csharp[System.Buffer.BlockCopy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/buffer.cs#1)]
 [!code-vb[System.Buffer.BlockCopy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/buffer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockCopy">
      <MemberSignature Language="C#" Value="public static void BlockCopy (Array src, int srcOffset, Array dst, int dstOffset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlockCopy(class System.Array src, int32 srcOffset, class System.Array dst, int32 dstOffset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BlockCopy (src As Array, srcOffset As Integer, dst As Array, dstOffset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BlockCopy(Array ^ src, int srcOffset, Array ^ dst, int dstOffset, int count);" />
      <MemberSignature Language="F#" Value="static member BlockCopy : Array * int * Array * int * int -&gt; unit" Usage="System.Buffer.BlockCopy (src, srcOffset, dst, dstOffset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Array" />
        <Parameter Name="srcOffset" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Array" />
        <Parameter Name="dstOffset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src"><span data-ttu-id="414fa-108">源缓冲区。</span><span class="sxs-lookup"><span data-stu-id="414fa-108">The source buffer.</span></span></param>
        <param name="srcOffset"><span data-ttu-id="414fa-109"><paramref name="src" /> 中的字节偏移量，从零开始。</span><span class="sxs-lookup"><span data-stu-id="414fa-109">The zero-based byte offset into <paramref name="src" />.</span></span></param>
        <param name="dst"><span data-ttu-id="414fa-110">目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="414fa-110">The destination buffer.</span></span></param>
        <param name="dstOffset"><span data-ttu-id="414fa-111"><paramref name="dst" /> 中的字节偏移量，从零开始。</span><span class="sxs-lookup"><span data-stu-id="414fa-111">The zero-based byte offset into <paramref name="dst" />.</span></span></param>
        <param name="count"><span data-ttu-id="414fa-112">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-112">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="414fa-113">将指定数目的字节从起始于特定偏移量的源数组复制到起始于特定偏移量的目标数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-113">Copies a specified number of bytes from a source array starting at a particular offset to a destination array starting at a particular offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-114">此方法将`count`从开始`src`，从`srcOffset`  `dst` 开始复制个字节。 `dstOffset`</span><span class="sxs-lookup"><span data-stu-id="414fa-114">This method copies `count` bytes from `src`, beginning at `srcOffset`, to `dst`, beginning at `dstOffset`.</span></span> <span data-ttu-id="414fa-115">`srcOffset` 和 `dstOffset` 都是从零开始的; 也就是说，每个缓冲区中的第一个字节位于位置0，而不是位置1。</span><span class="sxs-lookup"><span data-stu-id="414fa-115">Both `srcOffset` and `dstOffset` are zero-based; that is, the first byte in each buffer is at position 0, not position 1.</span></span>  
  
 <span data-ttu-id="414fa-116">方法使用偏移量访问`src`参数数组中的字节，而不是编程构造（如索引或数组上限和下限数组界限）。 <xref:System.Buffer.BlockCopy%2A></span><span class="sxs-lookup"><span data-stu-id="414fa-116">The <xref:System.Buffer.BlockCopy%2A> method accesses the bytes in the `src` parameter array using offsets into memory, not programming constructs such as indexes or upper and lower array bounds.</span></span> <span data-ttu-id="414fa-117">例如，如果您的应用程序的编程语言中声明<xref:System.Int32>的数组的50下限为从零开始，然后将该数组和偏移量5传递<xref:System.Buffer.BlockCopy%2A>给方法，则该方法将访问的第一个数组元素是第二个数组的元素，该元素的索引为-49。</span><span class="sxs-lookup"><span data-stu-id="414fa-117">For example, if in the programming language of your application you declare an <xref:System.Int32> array with a zero-based lower bound of -50, and then pass the array and an offset of 5 to the <xref:System.Buffer.BlockCopy%2A> method, the first array element the method will access is the second element of the array, which is at index -49.</span></span> <span data-ttu-id="414fa-118">此外，首先访问数组元素49的哪个字节取决于正在执行应用程序的计算机的字节排序。</span><span class="sxs-lookup"><span data-stu-id="414fa-118">Furthermore, which byte of array element -49 is accessed first depends on the endianness of the computer that is executing your application.</span></span>  
  
 <span data-ttu-id="414fa-119">顾名思义， <xref:System.Buffer.BlockCopy%2A>方法会将字节块作为一个整体复制，而不是一次复制一个字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-119">As its name suggests, the <xref:System.Buffer.BlockCopy%2A> method copies a block of bytes as a whole, rather than copying one byte at a time.</span></span> <span data-ttu-id="414fa-120">因此，如果`src`和`dst`引用相同的数组 +  `count` `srcOffset`  +  `dstOffset` ，并且-1 范围内的范围与-1 重叠，则重叠的值`count`将字节复制到目标之前，不会覆盖这些字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-120">Therefore, if `src` and `dst` reference the same array, and the range from `srcOffset` + `count` -1 overlaps the range from `dstOffset` + `count` - 1, the values of the overlapping bytes are not overwritten before they are copied to the destination.</span></span> <span data-ttu-id="414fa-121">在下面的示例中，名`arr`为的数组中字节0-16 的值将复制到字节12-28。</span><span class="sxs-lookup"><span data-stu-id="414fa-121">In the following example, the values of bytes 0-16 in an array named `arr` are copied to bytes 12-28.</span></span> <span data-ttu-id="414fa-122">尽管存在重叠的范围，但源字节的值已成功复制。</span><span class="sxs-lookup"><span data-stu-id="414fa-122">Despite the overlapping range, the values of the source bytes are successfully copied.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/overlap1.cpp#3)]
 [!code-csharp[System.Buffer.BlockCopy#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/overlap1.cs#3)]
 [!code-vb[System.Buffer.BlockCopy#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/overlap1.vb#3)]  
  
 <span data-ttu-id="414fa-123">在下面的示例中，名`arr`为的数组中字节12-28 的值将复制到字节0-16。</span><span class="sxs-lookup"><span data-stu-id="414fa-123">In the following example, the values of bytes 12-28 in an array named `arr` are copied to bytes 0-16.</span></span> <span data-ttu-id="414fa-124">同样，无论重叠范围如何，都可以成功复制源字节的值。</span><span class="sxs-lookup"><span data-stu-id="414fa-124">Again, despite the overlapping range, the values of the source bytes are successfully copied.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/overlap1.cpp#4)]
 [!code-csharp[System.Buffer.BlockCopy#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/overlap1.cs#4)]
 [!code-vb[System.Buffer.BlockCopy#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/overlap1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="414fa-125">下面的示例使用<xref:System.Buffer.BlockCopy%2A>方法复制数组的区域。</span><span class="sxs-lookup"><span data-stu-id="414fa-125">The following example copies regions of arrays by using the <xref:System.Buffer.BlockCopy%2A> method.</span></span> <span data-ttu-id="414fa-126">对于每<xref:System.Buffer.BlockCopy%2A>个操作，它将源数组和目标数组同时作为值数组和字节序列列出。</span><span class="sxs-lookup"><span data-stu-id="414fa-126">For each <xref:System.Buffer.BlockCopy%2A> operation, it lists the source and destination arrays as both an array of values and as a sequence of bytes.</span></span> <span data-ttu-id="414fa-127">该示例说明了在使用<xref:System.Buffer.BlockCopy%2A>方法时考虑系统的字节排序的重要性：由于 Windows 系统不是字节序，因此基元数据类型的值的低序位字节优先于高阶字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-127">The example illustrates the importance of considering a system's endianness when working with the <xref:System.Buffer.BlockCopy%2A> method: Because Windows systems are little-endian, the lower-order bytes of a primitive data type's value precede the higher-order bytes.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/bcopy.cpp#2)]
 [!code-csharp[System.Buffer.BlockCopy#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/bcopy.cs#2)]
 [!code-vb[System.Buffer.BlockCopy#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/bcopy.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="414fa-128"><paramref name="src" /> 或 <paramref name="dst" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-128"><paramref name="src" /> or <paramref name="dst" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="414fa-129"><paramref name="src" /> 或 <paramref name="dst" /> 不是基元数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-129"><paramref name="src" /> or <paramref name="dst" /> is not an array of primitives.</span></span>  
  
<span data-ttu-id="414fa-130">- 或 -</span><span class="sxs-lookup"><span data-stu-id="414fa-130">-or-</span></span> 
<span data-ttu-id="414fa-131"><paramref name="src" /> 中的字节数小于 <paramref name="srcOffset" /> 加上<paramref name="count" /> 之和。</span><span class="sxs-lookup"><span data-stu-id="414fa-131">The number of bytes in <paramref name="src" /> is less than <paramref name="srcOffset" /> plus <paramref name="count" />.</span></span>  
  
<span data-ttu-id="414fa-132">- 或 -</span><span class="sxs-lookup"><span data-stu-id="414fa-132">-or-</span></span> 
<span data-ttu-id="414fa-133"><paramref name="dst" /> 中的字节数小于 <paramref name="dstOffset" /> 加上<paramref name="count" /> 之和。</span><span class="sxs-lookup"><span data-stu-id="414fa-133">The number of bytes in <paramref name="dst" /> is less than <paramref name="dstOffset" /> plus <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="414fa-134"><paramref name="srcOffset" />、<paramref name="dstOffset" /> 或 <paramref name="count" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="414fa-134"><paramref name="srcOffset" />, <paramref name="dstOffset" />, or <paramref name="count" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ByteLength">
      <MemberSignature Language="C#" Value="public static int ByteLength (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ByteLength(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.ByteLength(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ByteLength(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member ByteLength : Array -&gt; int" Usage="System.Buffer.ByteLength array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="414fa-135">一个数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-135">An array.</span></span></param>
        <summary><span data-ttu-id="414fa-136">返回指定数组中的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-136">Returns the number of bytes in the specified array.</span></span></summary>
        <returns><span data-ttu-id="414fa-137">数组中的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-137">The number of bytes in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="414fa-138">下面的代码示例演示如何使用`ByteLength`方法返回数组中的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-138">The following code example illustrates the use of the `ByteLength` method to return the number of bytes in an array.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/bytelength.cpp#1)]
 [!code-csharp[System.Buffer.Bytes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/bytelength.cs#1)]
 [!code-vb[System.Buffer.Bytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/bytelength.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="414fa-139"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-139"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="414fa-140"><paramref name="array" /> 不是基元。</span><span class="sxs-lookup"><span data-stu-id="414fa-140"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="414fa-141"><paramref name="array" />大于 2 GB。</span><span class="sxs-lookup"><span data-stu-id="414fa-141"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public static byte GetByte (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 GetByte(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.GetByte(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte GetByte(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member GetByte : Array * int -&gt; byte" Usage="System.Buffer.GetByte (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="414fa-142">一个数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-142">An array.</span></span></param>
        <param name="index"><span data-ttu-id="414fa-143">数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="414fa-143">A location in the array.</span></span></param>
        <summary><span data-ttu-id="414fa-144">检索指定数组中指定位置的字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-144">Retrieves the byte at the specified location in the specified array.</span></span></summary>
        <returns><span data-ttu-id="414fa-145">数组中指定位置的字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-145">The byte at the specified location in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-146">`GetByte`方法从数组中获取特定字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-146">The `GetByte` method gets a particular byte out of the array.</span></span> <span data-ttu-id="414fa-147">数组必须是基元数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-147">The array must be an array of primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="414fa-148">下面的代码示例使用`GetByte`方法在数组中的指定位置显示字节值。</span><span class="sxs-lookup"><span data-stu-id="414fa-148">The following code example displays the byte values at specified locations within arrays using the `GetByte` method.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/getbyte.cpp#3)]
 [!code-csharp[System.Buffer.Bytes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/getbyte.cs#3)]
 [!code-vb[System.Buffer.Bytes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/getbyte.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="414fa-149"><paramref name="array" /> 不是基元。</span><span class="sxs-lookup"><span data-stu-id="414fa-149"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="414fa-150"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-150"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="414fa-151"><paramref name="index" /> 为负或大于 <paramref name="array" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="414fa-151"><paramref name="index" /> is negative or greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="414fa-152"><paramref name="array" />大于 2 GB。</span><span class="sxs-lookup"><span data-stu-id="414fa-152"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemoryCopy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="414fa-153">复制内存块。</span><span class="sxs-lookup"><span data-stu-id="414fa-153">Copies a block of memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemoryCopy">
      <MemberSignature Language="C#" Value="public static void MemoryCopy (void* source, void* destination, long destinationSizeInBytes, long sourceBytesToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryCopy(void* source, void* destination, int64 destinationSizeInBytes, int64 sourceBytesToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryCopy(void* source, void* destination, long destinationSizeInBytes, long sourceBytesToCopy);" />
      <MemberSignature Language="F#" Value="static member MemoryCopy : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * int64 * int64 -&gt; unit" Usage="System.Buffer.MemoryCopy (source, destination, destinationSizeInBytes, sourceBytesToCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationSizeInBytes" Type="System.Int64" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBytesToCopy" Type="System.Int64" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="414fa-154">要复制的字节的地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-154">The address of the bytes to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="414fa-155">目标地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-155">The target address.</span></span></param>
        <param name="destinationSizeInBytes"><span data-ttu-id="414fa-156">目标内存块中可用的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-156">The number of bytes available in the destination memory block.</span></span></param>
        <param name="sourceBytesToCopy"><span data-ttu-id="414fa-157">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-157">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="414fa-158">将指定为长整型值的一些字节从内存中的一个地址复制到另一个地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-158">Copies a number of bytes specified as a long integer value from one address in memory to another.</span></span>  
  
 <span data-ttu-id="414fa-159">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="414fa-159">This API is not CLS-compliant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-160">此方法将`sourceBytesToCopy`字节从`source`指定的地址复制`destination`到指定的地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-160">This method copies `sourceBytesToCopy` bytes from the address specified by `source` to the address specified by `destination`.</span></span> <span data-ttu-id="414fa-161">如果缓冲区重叠，并且减号`destination` `source`之间的差异小于`sourceBytesToCopy`，则源块将按相反的顺序复制到目标块。</span><span class="sxs-lookup"><span data-stu-id="414fa-161">If the buffers overlap and the difference between `destination` minus `source` is less than `sourceBytesToCopy`, the source block is copied to the destination block in reverse order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="414fa-162"><paramref name="sourceBytesToCopy" /> 大于 <paramref name="destinationSizeInBytes" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-162"><paramref name="sourceBytesToCopy" /> is greater than <paramref name="destinationSizeInBytes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemoryCopy">
      <MemberSignature Language="C#" Value="public static void MemoryCopy (void* source, void* destination, ulong destinationSizeInBytes, ulong sourceBytesToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryCopy(void* source, void* destination, unsigned int64 destinationSizeInBytes, unsigned int64 sourceBytesToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryCopy(void* source, void* destination, System::UInt64 destinationSizeInBytes, System::UInt64 sourceBytesToCopy);" />
      <MemberSignature Language="F#" Value="static member MemoryCopy : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint64 * uint64 -&gt; unit" Usage="System.Buffer.MemoryCopy (source, destination, destinationSizeInBytes, sourceBytesToCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationSizeInBytes" Type="System.UInt64" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBytesToCopy" Type="System.UInt64" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="414fa-163">要复制的字节的地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-163">The address of the bytes to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="414fa-164">目标地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-164">The target address.</span></span></param>
        <param name="destinationSizeInBytes"><span data-ttu-id="414fa-165">目标内存块中可用的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-165">The number of bytes available in the destination memory block.</span></span></param>
        <param name="sourceBytesToCopy"><span data-ttu-id="414fa-166">要复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="414fa-166">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="414fa-167">将指定为无符号长整型值的一些字节从内存中的一个地址复制到另一个地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-167">Copies a number of bytes specified as an unsigned long integer value from one address in memory to another.</span></span>  
  
 <span data-ttu-id="414fa-168">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="414fa-168">This API is not CLS-compliant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-169">此方法将`sourceBytesToCopy`字节从`source`指定的地址复制`destination`到指定的地址。</span><span class="sxs-lookup"><span data-stu-id="414fa-169">This method copies `sourceBytesToCopy` bytes from the address specified by `source` to the address specified by `destination`.</span></span> <span data-ttu-id="414fa-170">如果缓冲区重叠，并且减号`destination` `source`之间的差异小于`sourceBytesToCopy`，则源块将按相反的顺序复制到目标块。</span><span class="sxs-lookup"><span data-stu-id="414fa-170">If the buffers overlap and the difference between `destination` minus `source` is less than `sourceBytesToCopy`, the source block is copied to the destination block in reverse order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="414fa-171"><paramref name="sourceBytesToCopy" /> 大于 <paramref name="destinationSizeInBytes" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-171"><paramref name="sourceBytesToCopy" /> is greater than <paramref name="destinationSizeInBytes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetByte">
      <MemberSignature Language="C#" Value="public static void SetByte (Array array, int index, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetByte(class System.Array array, int32 index, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetByte(Array ^ array, int index, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member SetByte : Array * int * byte -&gt; unit" Usage="System.Buffer.SetByte (array, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="414fa-172">一个数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-172">An array.</span></span></param>
        <param name="index"><span data-ttu-id="414fa-173">数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="414fa-173">A location in the array.</span></span></param>
        <param name="value"><span data-ttu-id="414fa-174">要分配的值。</span><span class="sxs-lookup"><span data-stu-id="414fa-174">A value to assign.</span></span></param>
        <summary><span data-ttu-id="414fa-175">将指定的值分配给指定数组中特定位置处的字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-175">Assigns a specified value to a byte at a particular location in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="414fa-176">`array`必须是基元数组。</span><span class="sxs-lookup"><span data-stu-id="414fa-176">`array` must be an array of primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="414fa-177">下面的代码示例使用`SetByte`方法将值分配给数组中特定位置处的字节。</span><span class="sxs-lookup"><span data-stu-id="414fa-177">The following code example assigns values to bytes at particular locations within arrays using the `SetByte` method.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/setbyte.cpp#2)]
 [!code-csharp[System.Buffer.Bytes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/setbyte.cs#2)]
 [!code-vb[System.Buffer.Bytes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/setbyte.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="414fa-178"><paramref name="array" /> 不是基元。</span><span class="sxs-lookup"><span data-stu-id="414fa-178"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="414fa-179"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="414fa-179"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="414fa-180"><paramref name="index" /> 为负或大于 <paramref name="array" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="414fa-180"><paramref name="index" /> is negative or greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="414fa-181"><paramref name="array" />大于 2 GB。</span><span class="sxs-lookup"><span data-stu-id="414fa-181"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
