<Type Name="Environment" FullName="System.Environment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2befc53c964784ef05f9a3c02e361d9e6aed9618" /><Meta Name="ms.sourcegitcommit" Value="61757d0366a172cdbc11436deb1c1ffa49d97238" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/28/2019" /><Meta Name="ms.locfileid" Value="67458488" /></Metadata><TypeSignature Language="C#" Value="public static class Environment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Environment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Environment" />
  <TypeSignature Language="VB.NET" Value="Public Class Environment" />
  <TypeSignature Language="C++ CLI" Value="public ref class Environment abstract sealed" />
  <TypeSignature Language="F#" Value="type Environment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f89e4-101">提供有关当前环境和平台的信息以及操作它们的方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-101">Provides information about, and means to manipulate, the current environment and platform.</span></span> <span data-ttu-id="f89e4-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="f89e4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-103">使用<xref:System.Environment>类来检索信息，如命令行参数，退出代码、 环境变量设置，内容的调用堆栈、 时间自上一次系统启动，并且公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-103">Use the <xref:System.Environment> class to retrieve information such as command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, and the version of the common language runtime.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-104">下面的示例演示如何显示有关当前环境的信息的列表。</span><span class="sxs-lookup"><span data-stu-id="f89e4-104">The following example demonstrates displays a list of information about the current environment.</span></span>  
  
 [!code-cpp[environment.class#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.class/CPP/env0.cpp#1)]
 [!code-csharp[environment.class#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.class/CS/env0.cs#1)]
 [!code-vb[environment.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.class/VB/env0.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public static string CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommandLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CommandLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string" Usage="System.Environment.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-105">获取该进程的命令行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-105">Gets the command line for this process.</span></span></summary>
        <value><span data-ttu-id="f89e4-106">包含命令行自变量的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-106">A string containing command-line arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-107">此属性提供程序名称和当前进程启动时在命令行上指定任何参数的访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-107">This property provides access to the program name and any arguments specified on the command line when the current process was started.</span></span>  
  
 <span data-ttu-id="f89e4-108">程序名称可以包含路径信息，但不要求必须这样做。</span><span class="sxs-lookup"><span data-stu-id="f89e4-108">The program name can  include path information, but is not required to do so.</span></span> <span data-ttu-id="f89e4-109">使用<xref:System.Environment.GetCommandLineArgs%2A>方法来检索命令行信息分析并存储在一个字符串数组中。</span><span class="sxs-lookup"><span data-stu-id="f89e4-109">Use the <xref:System.Environment.GetCommandLineArgs%2A> method to retrieve the command-line information parsed and stored in an array of strings.</span></span>  
  
 <span data-ttu-id="f89e4-110">为特定数目的字符; 未设置命令行缓冲区的最大大小它根据计算机运行的 Windows 操作系统而异。</span><span class="sxs-lookup"><span data-stu-id="f89e4-110">The maximum size of the command-line buffer is not set to a specific number of characters; it varies depending on the Windows operating system that is running on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-111">下面的示例显示了其自己的命令行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-111">The following example displays its own command line.</span></span>  
  
 [!code-cpp[environment.commandline#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.CommandLine/CPP/commandline.cpp#1)]
 [!code-csharp[environment.commandline#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.CommandLine/CS/commandline.cs#1)]
 [!code-vb[environment.commandline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.CommandLine/VB/commandline.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-112">对于到 PATH 环境变量进行读取访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-112">for read access to the PATH environment variable.</span></span> <span data-ttu-id="f89e4-113">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-113">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public static string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="System.Environment.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-114">获取或设置当前工作目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-114">Gets or sets the fully qualified path of the current working directory.</span></span></summary>
        <value><span data-ttu-id="f89e4-115">包含目录路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-115">A string containing a directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-116">根据定义，如果此过程以在根目录下的本地或网络驱动器，此属性的值是尾部反斜杠后跟的驱动器名称 (例如，"c:\\")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-116">By definition, if this process starts in the root directory of a local or network drive, the value of this property is the drive name followed by a trailing slash (for example, "C:\\").</span></span> <span data-ttu-id="f89e4-117">如果此过程开始时的子目录中，此属性的值是驱动器和子目录的路径，而无需尾部反斜杠 (例如，"C:\mySubDirectory")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-117">If this process starts in a subdirectory, the value of this property is the drive and subdirectory path, without a trailing slash (for example, "C:\mySubDirectory").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-118">下面的示例演示了如何设置<xref:System.Environment.CurrentDirectory%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-118">The following example demonstrates setting the <xref:System.Environment.CurrentDirectory%2A> property.</span></span>  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-119">已尝试设置为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-119">Attempted to set to an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-120">已尝试设置为 <see langword="null." /></span><span class="sxs-lookup"><span data-stu-id="f89e4-120">Attempted to set to <see langword="null." /></span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f89e4-121">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-121">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f89e4-122">已尝试设置一个找不到的本地路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-122">Attempted to set a local path that cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-123">调用方没有相应的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-123">The caller does not have the appropriate permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f89e4-124">用于写入到文件或在设置操作中的目录。</span><span class="sxs-lookup"><span data-stu-id="f89e4-124">for writing to files or directories in a set operation.</span></span> <span data-ttu-id="f89e4-125">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f89e4-126">用于访问在 get 操作中的路径本身中的信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-126">for access to the information in the path itself in a get operation.</span></span> <span data-ttu-id="f89e4-127">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-127">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentManagedThreadId">
      <MemberSignature Language="C#" Value="public static int CurrentManagedThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CurrentManagedThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentManagedThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentManagedThreadId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CurrentManagedThreadId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentManagedThreadId : int" Usage="System.Environment.CurrentManagedThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-128">获取当前托管线程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-128">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="f89e4-129">一个整数，表示此托管线程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-129">An integer that represents a unique identifier for this managed thread.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public static void Exit (int exitCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Exit(int32 exitCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.Exit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Exit (exitCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Exit(int exitCode);" />
      <MemberSignature Language="F#" Value="static member Exit : int -&gt; unit" Usage="System.Environment.Exit exitCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="exitCode"><span data-ttu-id="f89e4-130">返回到操作系统的退出代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-130">The exit code to return to the operating system.</span></span> <span data-ttu-id="f89e4-131">使用 0（零）指示处理已成功完成。</span><span class="sxs-lookup"><span data-stu-id="f89e4-131">Use 0 (zero) to indicate that the process completed successfully.</span></span></param>
        <summary><span data-ttu-id="f89e4-132">终止此进程，并将退出代码返回到操作系统。</span><span class="sxs-lookup"><span data-stu-id="f89e4-132">Terminates this process and returns an exit code to the operating system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-133">有关`exitCode`参数，使用非零数字表示出现错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-133">For the `exitCode` parameter, use a non-zero number to indicate an error.</span></span> <span data-ttu-id="f89e4-134">在您的应用程序，可以在枚举中定义你自己的错误代码和返回基于方案的相应的错误代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-134">In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</span></span> <span data-ttu-id="f89e4-135">例如，返回值为 1，表示所需的文件不存在，并且值为 2，以指示该文件是格式不正确。</span><span class="sxs-lookup"><span data-stu-id="f89e4-135">For example, return a value of 1 to indicate that the required file is not present, and a value of 2 to indicate that the file is in the wrong format.</span></span> <span data-ttu-id="f89e4-136">使用的 Windows 操作系统的退出代码的列表，请参阅[系统错误代码](https://msdn.microsoft.com/library/ms681381.aspx)Windows 文档中。</span><span class="sxs-lookup"><span data-stu-id="f89e4-136">For a list of exit codes used by the Windows operating system, see [System Error Codes](https://msdn.microsoft.com/library/ms681381.aspx) in the Windows documentation.</span></span>  
  
 <span data-ttu-id="f89e4-137">调用<xref:System.Environment.Exit%2A>方法不同于使用编程语言的`return`语句按以下方式：</span><span class="sxs-lookup"><span data-stu-id="f89e4-137">Calling the <xref:System.Environment.Exit%2A> method differs from using your programming language's `return` statement in the following ways:</span></span>  
  
-   <span data-ttu-id="f89e4-138"><xref:System.Environment.Exit%2A> 始终将终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="f89e4-138"><xref:System.Environment.Exit%2A> always terminates an application.</span></span> <span data-ttu-id="f89e4-139">使用`return`语句可能会终止应用程序，仅当它是在中使用的应用程序入口点，例如在`Main`方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-139">Using the `return` statement may terminate an application only if it is used in the application entry point, such as in the `Main` method.</span></span>  
  
-   <span data-ttu-id="f89e4-140"><xref:System.Environment.Exit%2A> 应用程序将立即终止，即使其他线程正在运行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-140"><xref:System.Environment.Exit%2A> terminates an application immediately, even if other threads are running.</span></span> <span data-ttu-id="f89e4-141">如果`return`中的应用程序入口点调用语句时，会导致应用程序只有在所有前台线程已都终止后终止。</span><span class="sxs-lookup"><span data-stu-id="f89e4-141">If the `return` statement is called in the application entry point, it causes an application to terminate only after all foreground threads have terminated.</span></span>  
  
-   <span data-ttu-id="f89e4-142"><xref:System.Environment.Exit%2A> 需要调用方有权调用非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-142"><xref:System.Environment.Exit%2A> requires the caller to have permission to call unmanaged code.</span></span> <span data-ttu-id="f89e4-143">`return`语句则不。</span><span class="sxs-lookup"><span data-stu-id="f89e4-143">The `return` statement does not.</span></span>  
  
-   <span data-ttu-id="f89e4-144">如果<xref:System.Environment.Exit%2A>从调用`try`或`catch`块中任何代码`finally`块不会执行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-144">If <xref:System.Environment.Exit%2A> is called from a `try` or `catch` block, the code in any `finally` block does not execute.</span></span> <span data-ttu-id="f89e4-145">如果`return`使用语句中的代码`finally`块会执行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-145">If the `return` statement is used, the code in the `finally` block does execute.</span></span>  
  
-   <span data-ttu-id="f89e4-146">如果<xref:System.Environment.Exit%2A>时，将调用中的代码[受约束的执行区域](~/docs/framework/performance/constrained-execution-regions.md)(CER) 正在运行，CER 不会完成执行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-146">If <xref:System.Environment.Exit%2A> is called when code in a [constrained execution region](~/docs/framework/performance/constrained-execution-regions.md) (CER) is running, the CER will not complete execution.</span></span> <span data-ttu-id="f89e4-147">如果`return`使用语句、 CER 完成执行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-147">If the `return` statement is used, the CER completes execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-148">调用方没有足够的安全权限来执行此函数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-148">The caller does not have sufficient security permission to perform this function.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f89e4-149">表示调用非托管的代码的能力。</span><span class="sxs-lookup"><span data-stu-id="f89e4-149">for the ability to call unmanaged code.</span></span> <span data-ttu-id="f89e4-150">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-150">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public static int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.Environment.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-151">获取或设置进程的退出代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-151">Gets or sets the exit code of the process.</span></span></summary>
        <value><span data-ttu-id="f89e4-152">包含退出代码的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-152">A 32-bit signed integer containing the exit code.</span></span> <span data-ttu-id="f89e4-153">默认值为 0（零），这指示已成功完成处理。</span><span class="sxs-lookup"><span data-stu-id="f89e4-153">The default value is 0 (zero), which indicates that the process completed successfully.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-154">如果`Main`方法将返回`void`，可以使用此属性设置将返回给调用环境的退出代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-154">If the `Main` method returns `void`, you can use this property to set the exit code that will be returned to the calling environment.</span></span> <span data-ttu-id="f89e4-155">如果`Main`不会返回`void`，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-155">If `Main` does not return `void`, this property is ignored.</span></span> <span data-ttu-id="f89e4-156">此属性的初始值为零。</span><span class="sxs-lookup"><span data-stu-id="f89e4-156">The initial value of this property is zero.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f89e4-157"><xref:System.Environment.ExitCode%2A>属性是一个有符号的 32 位整数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-157">The <xref:System.Environment.ExitCode%2A> property is a signed 32-bit integer.</span></span> <span data-ttu-id="f89e4-158">若要防止该属性返回退出代码为负，不应使用的值大于或等于 0x80000000。</span><span class="sxs-lookup"><span data-stu-id="f89e4-158">To prevent the property from returning a negative exit code, you should not use values greater than or equal to 0x80000000.</span></span>  
  
 <span data-ttu-id="f89e4-159">使用一个非零数字表示出现错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-159">Use a non-zero number to indicate an error.</span></span> <span data-ttu-id="f89e4-160">在您的应用程序，可以在枚举中定义你自己的错误代码和返回基于方案的相应的错误代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-160">In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</span></span> <span data-ttu-id="f89e4-161">例如，返回值为 1，表示所需的文件不存在和值为 2，以指示该文件是格式不正确。</span><span class="sxs-lookup"><span data-stu-id="f89e4-161">For example, return a value of 1 to indicate that the required file is not present and a value of 2 to indicate that the file is in the wrong format.</span></span> <span data-ttu-id="f89e4-162">使用的 Windows 操作系统的退出代码的列表，请参阅[系统错误代码](https://msdn.microsoft.com/library/ms681381\(v=vs.85\))Windows 文档中。</span><span class="sxs-lookup"><span data-stu-id="f89e4-162">For a list of exit codes used by the Windows operating system, see [System Error Codes](https://msdn.microsoft.com/library/ms681381\(v=vs.85\)) in the Windows documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-163">下面是一个简单的应用名为 Double.exe 提高一倍，作为命令行自变量传递给它一个整数值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-163">The following is a simple app named Double.exe that doubles an integer value passed to it as a command-line argument.</span></span> <span data-ttu-id="f89e4-164">值将分配到的错误代码<xref:System.Environment.ExitCode%2A>属性以指示错误条件。</span><span class="sxs-lookup"><span data-stu-id="f89e4-164">The value assigns error codes to the <xref:System.Environment.ExitCode%2A> property to indicate error conditions.</span></span> <span data-ttu-id="f89e4-165">请注意，必须添加对要成功编译该示例的 System.Numerics.dll 程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="f89e4-165">Note that you must add a reference to the System.Numerics.dll assembly to successfully compile the example.</span></span>  
  
 [!code-csharp[System.Environment.ExitCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double.cs#1)]
 [!code-vb[System.Environment.ExitCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double.vb#1)]  
  
 <span data-ttu-id="f89e4-166">该示例然后可以从批处理文件，如下所示，让其错误代码可以访问使用调用`ERRORLEVEL`命令。</span><span class="sxs-lookup"><span data-stu-id="f89e4-166">The example can then be invoked from a batch file such as the following, which makes its error codes accessible by using the `ERRORLEVEL` command.</span></span>  
  
```  
  
echo off  
Double.exe %1  
If errorlevel 1639 goto NoArg   
if errorlevel 534 goto Overflow  
if errorlevel 160 goto BadArg  
if errorlevel 0 echo Completed Successfully   
goto :EOF  
  
:NoArg  
echo Missing argument  
goto :EOF  
  
: Overflow  
echo Arithmetic overflow  
goto :EOF  
  
:BadArg  
echo Invalid argument  
goto :EOF  
  
```  
  
 <span data-ttu-id="f89e4-167">下图显示通过调用批处理文件产生的一些示例输出。</span><span class="sxs-lookup"><span data-stu-id="f89e4-167">The following shows some sample output produced by invoking the batch file.</span></span>  
  
```Output  
  
>getdouble 123>echo offResult: 246Completed Successfully>getdouble 5912323109093>echo offArithmetic overflow>getdouble>echo offMissing argument>getdouble "a string">echo offInvalid argument  
  
```  
  
 <span data-ttu-id="f89e4-168">请注意该代码对 Double.exe 是与以下示例中，函数相同，不同之处在于前者定义名为的入口点`Main`且没有返回值，而此示例定义名为的入口点`Main`返回一个整数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-168">Note that code for Double.exe is identical in function to the following example, except that the former defines an entry point named `Main` that has no return value, whereas this example defines an entry point named `Main` that returns an integer.</span></span>  
  
 [!code-csharp[System.Environment.ExitCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double1.cs#2)]
 [!code-vb[System.Environment.ExitCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static string ExpandEnvironmentVariables (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpandEnvironmentVariables(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.ExpandEnvironmentVariables(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpandEnvironmentVariables (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ExpandEnvironmentVariables(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member ExpandEnvironmentVariables : string -&gt; string" Usage="System.Environment.ExpandEnvironmentVariables name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f89e4-169">包含零个或多个环境变量名的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-169">A string containing the names of zero or more environment variables.</span></span> <span data-ttu-id="f89e4-170">每个环境变量都用百分号 (%) 引起来。</span><span class="sxs-lookup"><span data-stu-id="f89e4-170">Each environment variable is quoted with the percent sign character (%).</span></span></param>
        <summary><span data-ttu-id="f89e4-171">将嵌入到指定字符串中的每个环境变量的名称替换为该变量的值的等效字符串，然后返回结果字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-171">Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</span></span></summary>
        <returns><span data-ttu-id="f89e4-172">一个字符串，其中的每个环境变量均被替换为该变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-172">A string with each environment variable replaced by its value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-173">COM 互操作用于从操作系统检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-173">COM interop is used to retrieve the environment variables from the operating system.</span></span> <span data-ttu-id="f89e4-174">生成一个多个可能的异常; 如果由于 COM 错误而无法检索环境变量，用于说明失败的原因的 HRESULT也就是说，异常取决于相应的 HRESULT。</span><span class="sxs-lookup"><span data-stu-id="f89e4-174">If the environment variables cannot be retrieved due to a COM error, the HRESULT that explains the cause of the failure is used to generate one of several possible exceptions; that is, the exception depends on the HRESULT.</span></span> <span data-ttu-id="f89e4-175">有关如何处理 HRESULT 的详细信息，请参阅备注部分的<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-175">For more information about how the HRESULT is processed, see the Remarks section of the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f89e4-176">有关设置环境变量才会被替换。</span><span class="sxs-lookup"><span data-stu-id="f89e4-176">Replacement only occurs for environment variables that are set.</span></span> <span data-ttu-id="f89e4-177">例如，假设`name`是"MyENV = %myenv%"。</span><span class="sxs-lookup"><span data-stu-id="f89e4-177">For example, suppose `name` is "MyENV = %MyENV%".</span></span> <span data-ttu-id="f89e4-178">如果环境变量，MyENV，设置为 42，此方法返回"MyENV = 42"。</span><span class="sxs-lookup"><span data-stu-id="f89e4-178">If the environment variable, MyENV, is set to 42, this method returns "MyENV = 42".</span></span> <span data-ttu-id="f89e4-179">如果未设置 MyENV，不会发生更改;此方法返回"MyENV = %myenv%"。</span><span class="sxs-lookup"><span data-stu-id="f89e4-179">If MyENV is not set, no change occurs; this method returns "MyENV = %MyENV%".</span></span>  
  
 <span data-ttu-id="f89e4-180">返回值的大小被限制为 32 K。</span><span class="sxs-lookup"><span data-stu-id="f89e4-180">The size of the return value is limited to 32K.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-181">下面的示例演示如何获取系统驱动器和系统根变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-181">The following example shows how to obtain the system drive and system root variables.</span></span>  
  
 [!code-cpp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CPP/expandenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CS/expandenvironmentvariables.cs#1)]
 [!code-vb[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/VB/expandenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-182"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-182"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-183">它能够访问中的环境变量<paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-183">for the ability to access the environment variables in <paramref name="name" />.</span></span> <span data-ttu-id="f89e4-184">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-184">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="FailFast">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f89e4-185">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息和可选的异常信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-185">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and optional exception information in error reporting to Microsoft.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FailFast (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member FailFast : string -&gt; unit" Usage="System.Environment.FailFast message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f89e4-186">一条解释进程终止原因的消息；如果未提供解释，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-186">A message that explains why the process was terminated, or <see langword="null" /> if no explanation is provided.</span></span></param>
        <summary><span data-ttu-id="f89e4-187">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-187">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-188">此方法会终止进程，而无需运行任何活动`try` / `finally`块或终结器。</span><span class="sxs-lookup"><span data-stu-id="f89e4-188">This method terminates a process without running any active `try`/`finally` blocks or finalizers.</span></span>
  
 <span data-ttu-id="f89e4-189">`Environment.FailFast`方法写入`message`字符串保存到 Windows 应用程序事件日志中，创建你的应用程序的转储，然后终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="f89e4-189">The `Environment.FailFast` method writes the `message` string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</span></span> <span data-ttu-id="f89e4-190">`message`字符串也包含在向 Microsoft 报告错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-190">The `message` string is also included in error reporting to Microsoft.</span></span>  
  
 <span data-ttu-id="f89e4-191">使用`Environment.FailFast`方法而不是<xref:System.Environment.Exit%2A>方法终止你的应用程序，如果你的应用程序的状态损坏无法修复，并执行应用程序`try` / `finally`块和终结器将损坏程序资源。</span><span class="sxs-lookup"><span data-stu-id="f89e4-191">Use the `Environment.FailFast` method instead of the <xref:System.Environment.Exit%2A> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's `try`/`finally` blocks and finalizers will corrupt program resources.</span></span>  
  
 <span data-ttu-id="f89e4-192">信息是通过使用 Windows 错误报告报告给 Microsoft。</span><span class="sxs-lookup"><span data-stu-id="f89e4-192">Information is reported to Microsoft by using Windows Error Reporting.</span></span> <span data-ttu-id="f89e4-193">有关详细信息，请参阅[Windows 错误报告：入门](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-193">For more information, see [Windows Error Reporting: Getting Started](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx).</span></span>  

<span data-ttu-id="f89e4-194">调用`Environment.FailFast`方法来终止执行调试程序将引发在 Visual Studio 中运行的应用程序<xref:System.ExecutionEngineException>，并自动触发[fatalExecutionEngineError 托管调试助手 (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span><span class="sxs-lookup"><span data-stu-id="f89e4-194">Calling the `Environment.FailFast` method to terminate execution of an application running in the Visual Studio debugger throws an <xref:System.ExecutionEngineException> and automatically triggers the [fatalExecutionEngineError managed debugging assistant (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span></span>
  
## Examples  
 <span data-ttu-id="f89e4-195">下面的示例日志条目写入 Windows 应用程序事件日志，并终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="f89e4-195">The following example writes a log entry to the Windows Application event log and terminates the current process.</span></span>  
  
 [!code-csharp[environment.FailFast#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.FailFast/cs/ff.cs#1)]
 [!code-vb[environment.FailFast#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.FailFast/vb/ff.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="f89e4-196">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="f89e4-196">requires full trust for the immediate caller.</span></span> <span data-ttu-id="f89e4-197">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-197">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="static member FailFast : string * Exception -&gt; unit" Usage="System.Environment.FailFast (message, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f89e4-198">一条解释进程终止原因的消息；如果未提供解释，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-198">A message that explains why the process was terminated, or <see langword="null" /> if no explanation is provided.</span></span></param>
        <param name="exception"><span data-ttu-id="f89e4-199">一个异常，表示导致终止的错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-199">An exception that represents the error that caused the termination.</span></span> <span data-ttu-id="f89e4-200">通常这是 <see langword="catch" /> 块中的异常。</span><span class="sxs-lookup"><span data-stu-id="f89e4-200">This is typically the exception in a <see langword="catch" /> block.</span></span></param>
        <summary><span data-ttu-id="f89e4-201">向 Windows 的应用程序事件日志写入消息后立即终止进程，然后在发往 Microsoft 的错误报告中加入该消息和异常信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-201">Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-202">此方法会终止进程，而无需运行任何活动`try` / `finally`块或终结器。</span><span class="sxs-lookup"><span data-stu-id="f89e4-202">This method terminates the process without running any active `try`/`finally` blocks or finalizers.</span></span>  
  
 <span data-ttu-id="f89e4-203">`Environment.FailFast`方法写入`message`字符串保存到 Windows 应用程序事件日志中，创建你的应用程序的转储，然后终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="f89e4-203">The `Environment.FailFast` method writes the `message` string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</span></span>  
  
 <span data-ttu-id="f89e4-204">信息是通过使用 Windows 错误报告报告给 Microsoft。</span><span class="sxs-lookup"><span data-stu-id="f89e4-204">Information is reported to Microsoft by using Windows Error Reporting.</span></span> <span data-ttu-id="f89e4-205">有关详细信息，请参阅[Windows 错误报告：入门](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-205">For more information, see [Windows Error Reporting: Getting Started](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx).</span></span> <span data-ttu-id="f89e4-206">向 Microsoft 报告的错误包括`message`和`exception`提供了用于对错误分类的详细信息的信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-206">Error reporting to Microsoft includes `message` and `exception` information, which provides details used to classify the error.</span></span> <span data-ttu-id="f89e4-207">尽管`exception`是未处理，因为该进程将终止，仍获取引发该异常的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-207">Although `exception` is not handled because the process is terminated, the contextual information that raised the exception is still obtained.</span></span>  
  
 <span data-ttu-id="f89e4-208">如果`exception`是`null`，或者如果`exception`是不会引发，此方法的操作与相同<xref:System.Environment.FailFast%28System.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="f89e4-208">If `exception` is `null`, or if `exception` is not thrown, this method operates the same as the <xref:System.Environment.FailFast%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="f89e4-209">使用`Environment.FailFast`方法而不是<xref:System.Environment.Exit%2A>方法终止你的应用程序，如果你的应用程序的状态损坏无法修复，并执行应用程序`try` / `finally`块和终结器将损坏程序资源。</span><span class="sxs-lookup"><span data-stu-id="f89e4-209">Use the `Environment.FailFast` method instead of the <xref:System.Environment.Exit%2A> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's `try`/`finally` blocks and finalizers will corrupt program resources.</span></span>  

<span data-ttu-id="f89e4-210">调用`Environment.FailFast`方法来终止执行调试程序将引发在 Visual Studio 中运行的应用程序<xref:System.ExecutionEngineException>，并自动触发[fatalExecutionEngineError 托管调试助手 (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span><span class="sxs-lookup"><span data-stu-id="f89e4-210">Calling the `Environment.FailFast` method to terminate execution of an application running in the Visual Studio debugger throws an <xref:System.ExecutionEngineException> and automatically triggers the [fatalExecutionEngineError managed debugging assistant (MDA)](https://github.com/dotnet/docs/blob/master/docs/framework/debug-trace-profile/fatalexecutionengineerror-mda.md).</span></span>
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="f89e4-211">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="f89e4-211">requires full trust for the immediate caller.</span></span> <span data-ttu-id="f89e4-212">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-212">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCommandLineArgs">
      <MemberSignature Language="C#" Value="public static string[] GetCommandLineArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetCommandLineArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetCommandLineArgs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCommandLineArgs () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetCommandLineArgs();" />
      <MemberSignature Language="F#" Value="static member GetCommandLineArgs : unit -&gt; string[]" Usage="System.Environment.GetCommandLineArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f89e4-213">返回包含当前进程的命令行自变量的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="f89e4-213">Returns a string array containing the command-line arguments for the current process.</span></span></summary>
        <returns><span data-ttu-id="f89e4-214">字符串数组，其中的每个元素都包含一个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-214">An array of string where each element contains a command-line argument.</span></span> <span data-ttu-id="f89e4-215">第一个元素是可执行文件名，后面的零个或多个元素包含其余的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-215">The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-216">数组中的第一个元素包含正在执行的程序的文件名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-216">The first element in the array contains the file name of the executing program.</span></span> <span data-ttu-id="f89e4-217">未提供的文件的名称时，第一个元素是等于<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-217">If the file name is not available, the first element is equal to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f89e4-218">剩余的元素包含在命令行中输入的任何其他令牌。</span><span class="sxs-lookup"><span data-stu-id="f89e4-218">The remaining elements contain any additional tokens entered on the command line.</span></span>  
  
 <span data-ttu-id="f89e4-219">程序文件名称可以但不是需要，包含路径信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-219">The program file name can, but is not required to, include path information.</span></span>  
  
 <span data-ttu-id="f89e4-220">由空格分隔的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-220">Command line arguments are delimited by spaces.</span></span> <span data-ttu-id="f89e4-221">两个双引号 （"） 可用于参数中包含空格。</span><span class="sxs-lookup"><span data-stu-id="f89e4-221">You can use double quotation marks (") to include spaces within an argument.</span></span> <span data-ttu-id="f89e4-222">单引号 （'），但是，不提供此功能。</span><span class="sxs-lookup"><span data-stu-id="f89e4-222">The single quotation mark ('), however, does not provide this functionality.</span></span>  
  
 <span data-ttu-id="f89e4-223">如果两个或偶数个反斜杠后跟双引号，继续下一步的每个反斜杠对将被替换为一个反斜杠，并且删除双引号。</span><span class="sxs-lookup"><span data-stu-id="f89e4-223">If a double quotation mark follows two or an even number of backslashes, each proceeding backslash pair is replaced with one backslash and the double quotation mark is removed.</span></span> <span data-ttu-id="f89e4-224">如果双引号匹配后跟反斜杠，其中包括只是一个为奇数使用一个反斜杠替换为每个前面对并删除剩余的反斜杠;但是，在这种情况下双引号不会删除。</span><span class="sxs-lookup"><span data-stu-id="f89e4-224">If a double quotation mark follows an odd number of backslashes, including just one, each preceding pair is replaced with one backslash and the remaining backslash is removed; however, in this case the double quotation mark is not removed.</span></span>  
  
 <span data-ttu-id="f89e4-225">下表演示了如何命令行参数可以是分隔，并假定`MyApp`作为当前正在执行应用程序。</span><span class="sxs-lookup"><span data-stu-id="f89e4-225">The following table shows how command line arguments can be delimited, and assumes `MyApp` as the current executing application.</span></span>  
  
|<span data-ttu-id="f89e4-226">在命令行输入</span><span class="sxs-lookup"><span data-stu-id="f89e4-226">Input at the command line</span></span>|<span data-ttu-id="f89e4-227">生成命令行参数</span><span class="sxs-lookup"><span data-stu-id="f89e4-227">Resulting command line arguments</span></span>|  
|-------------------------------|--------------------------------------|  
|`MyApp alpha beta`|`MyApp, alpha, beta`|  
|`MyApp "alpha with spaces" "beta with spaces"`|`MyApp, alpha with spaces, beta with spaces`|  
|`MyApp 'alpha with spaces' beta`|`MyApp, 'alpha, with, spaces', beta`|  
|`MyApp \\\alpha \\\\"beta`|`MyApp, \\\alpha, \\beta`|  
|`MyApp \\\\\"alpha \"beta`|`MyApp, \\"alpha, "beta`|  
  
 <span data-ttu-id="f89e4-228">若要获取作为单个字符串的命令行，请使用<xref:System.Environment.CommandLine%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-228">To obtain the command line as a single string, use the <xref:System.Environment.CommandLine%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-229">以下示例显示应用程序的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-229">The following example displays the application's command line arguments.</span></span>  
  
 [!code-cpp[Environment.GetCommandLineArgs#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CPP/getcommandlineargs.cpp#1)]
 [!code-csharp[Environment.GetCommandLineArgs#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CS/getcommandlineargs.cs#1)]
 [!code-vb[Environment.GetCommandLineArgs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetCommandLineArgs/VB/getcommandlineargs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f89e4-230">系统不支持命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-230">The system does not support command-line arguments.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-231">对于到 PATH 环境变量进行读取访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-231">for read access to the PATH environment variable.</span></span> <span data-ttu-id="f89e4-232">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-232">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="P:System.Environment.CommandLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f89e4-233">检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-233">Retrieves the value of an environment variable.</span></span></summary>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string -&gt; string" Usage="System.Environment.GetEnvironmentVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f89e4-234">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-234">The name of the environment variable.</span></span></param>
        <summary><span data-ttu-id="f89e4-235">从当前进程检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-235">Retrieves the value of an environment variable from the current process.</span></span></summary>
        <returns><span data-ttu-id="f89e4-236"><paramref name="variable" /> 指定的环境变量的值；或者如果找不到环境变量，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-236">The value of the environment variable specified by <paramref name="variable" />, or <see langword="null" /> if the environment variable is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f89e4-237"><xref:System.Environment.GetEnvironmentVariable%28System.String%29>方法从当前进程的环境块检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-237">The <xref:System.Environment.GetEnvironmentVariable%28System.String%29> method retrieves an environment variable from the environment block of the current process only.</span></span> <span data-ttu-id="f89e4-238">它相当于调用<xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-238">It is equivalent to calling the <xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> 

<span data-ttu-id="f89e4-239">若要检索所有环境变量以及它们的值，请调用<xref:System.Environment.GetEnvironmentVariables%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-239">To retrieve all environment variables along with their values, call the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
<span data-ttu-id="f89e4-240">环境变量名称区分大小写 Linux 和 macOS 上，但在 Windows 上不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f89e4-240">Environment variable names are case-sensitive on Linux and macOS but are not case-sensitive on Windows.</span></span>  
 
### <a name="on-windows-systems"></a><span data-ttu-id="f89e4-241">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-241">On Windows systems</span></span>

 <span data-ttu-id="f89e4-242">在 Windows 系统上当前进程的环境块包括：</span><span class="sxs-lookup"><span data-stu-id="f89e4-242">On Windows systems, the environment block of the current process includes:</span></span>
 
- <span data-ttu-id="f89e4-243">由创建它的父进程提供给它的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-243">All environment variables that are provided to it by the parent process that created it.</span></span> <span data-ttu-id="f89e4-244">例如，从控制台窗口启动.NET 应用程序继承了所有控制台窗口的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-244">For example, a .NET application launched from a console window inherits all of the console window's environment variables.</span></span> 

  <span data-ttu-id="f89e4-245">如果没有父进程，而使用每台计算机和每个用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-245">If there is no parent process, per-machine and per-user environment variables are used instead.</span></span> <span data-ttu-id="f89e4-246">例如，新的控制台窗口具有它启动时定义的所有每台计算机和每个用户的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-246">For example, a new console window has all per-machine and per-user environment variables defined at the time it was launched.</span></span>

- <span data-ttu-id="f89e4-247">当进程运行时通过调用添加到 process 块的任何变量<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-247">Any variables added to the process block while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f89e4-248">在.NET 应用程序终止之前，将始终保留这些环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-248">These environment variables persist until the .NET application terminates.</span></span>  
  
<span data-ttu-id="f89e4-249">如果进程启动后创建了环境变量，可以使用此方法来检索已通过调用创建的变量<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值.<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-249">If environment variables are created after the process has started, you can use this method to retrieve only those variables that were created by calling the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of .<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="f89e4-250">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-250">On macOS and Linux systems</span></span>

<span data-ttu-id="f89e4-251">在 macOS 和 Linux 上，当前进程的环境块包括以下环境变量：</span><span class="sxs-lookup"><span data-stu-id="f89e4-251">On macOS and Linux, the environment block of the current proccess includes the following environment variables:</span></span>

- <span data-ttu-id="f89e4-252">由创建它的父进程提供给它的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-252">All environment variables that are provided to it by the parent process that created it.</span></span> <span data-ttu-id="f89e4-253">对于从 shell 启动.NET 应用程序，这包括在外壳程序中定义的所有环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-253">For .NET applications launched from a shell, this includes all environment variables defined in the shell.</span></span>

- <span data-ttu-id="f89e4-254">当进程运行时通过调用添加到 process 块的任何变量<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-254">Any variables added to the process block while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f89e4-255">在.NET 应用程序终止之前，将始终保留这些环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-255">These environment variables persist until the .NET application terminates.</span></span>  

<span data-ttu-id="f89e4-256">在 macOS 上.NET core 和 Linux 不支持每台计算机或每个用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-256">.NET Core on macOS and Linux does not support per-machine or per-user environment variables.</span></span>   
  
## Examples  
 <span data-ttu-id="f89e4-257">下面的示例使用<xref:System.Environment.GetEnvironmentVariable%2A>方法来检索`windir`环境变量，其中包含 Windows 目录的路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-257">The following example uses the <xref:System.Environment.GetEnvironmentVariable%2A> method to retrieve the `windir` environment variable, which contains the path of the Windows directory.</span></span>  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 <span data-ttu-id="f89e4-258">下面的示例尝试检索名为环境变量的值`Test1`从进程环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-258">The following example attempts to retrieve the value of an environment variable named `Test1` from the process environment block.</span></span> <span data-ttu-id="f89e4-259">如果不存在该变量，该示例将创建它，并检索其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-259">If the variable doesn't exist, the example creates its and retrieves its value.</span></span> <span data-ttu-id="f89e4-260">此示例显示变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-260">The example displays the value of the variable.</span></span> <span data-ttu-id="f89e4-261">如果该示例创建变量，它还会调用<xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29>方法的每个成员与<xref:System.EnvironmentVariableTarget>枚举，以建立可以仅从当前进程环境块检索到该变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-261">If the example created the variable, it also calls the <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> method with each member of the <xref:System.EnvironmentVariableTarget> enumeration to establish that the variable can be retrieved only from the current process environment block.</span></span> <span data-ttu-id="f89e4-262">最后，如果该示例创建变量，会将其删除。</span><span class="sxs-lookup"><span data-stu-id="f89e4-262">Finally, if the example created the variable, it deletes it.</span></span>  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-263"><paramref name="variable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-263"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-264">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-264">The caller does not have the required permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-265">它能够读取的值<paramref name="variable" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-265">for the ability to read the value of <paramref name="variable" />.</span></span> <span data-ttu-id="f89e4-266">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-266">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable, EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String, target As EnvironmentVariableTarget) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string * EnvironmentVariableTarget -&gt; string" Usage="System.Environment.GetEnvironmentVariable (variable, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f89e4-267">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-267">The name of an environment variable.</span></span></param>
        <param name="target"><span data-ttu-id="f89e4-268"><see cref="T:System.EnvironmentVariableTarget" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f89e4-268">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</span></span> <span data-ttu-id="f89e4-269">在基于 Unix 的系统上运行的 .NET Core 仅支持 <see cref="F:System.EnvironmentVariableTarget.Process" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-269">Only <see cref="F:System.EnvironmentVariableTarget.Process" /> is supported on .NET Core running on Unix-bases systems.</span></span></param>
        <summary><span data-ttu-id="f89e4-270">从当前进程或者从当前用户或本地计算机的 Windows 操作系统注册表项检索环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-270">Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</span></span></summary>
        <returns><span data-ttu-id="f89e4-271"><paramref name="variable" /> 和 <paramref name="target" /> 参数指定的环境变量的值；或者如果找不到环境变量，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-271">The value of the environment variable specified by the <paramref name="variable" /> and <paramref name="target" /> parameters, or <see langword="null" /> if the environment variable is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks 

<span data-ttu-id="f89e4-272">若要检索所有环境变量以及它们的值，请调用<xref:System.Environment.GetEnvironmentVariables%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-272">To retrieve all environment variables along with their values, call the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
<span data-ttu-id="f89e4-273">环境变量名称区分大小写 Linux 和 macOS 上，但在 Windows 上不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f89e4-273">Environment variable names are case-sensitive on Linux and macOS but are not case-sensitive on Windows.</span></span> 

### <a name="on-windows-systems"></a><span data-ttu-id="f89e4-274">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-274">On Windows systems</span></span>

<span data-ttu-id="f89e4-275">在 Windows，`target`参数指定是否从当前进程或当前用户或本地计算机的 Windows 操作系统注册表项检索环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-275">On Windows, the `target` parameter specifies whether the environment variable is retrieved from the current process or from the Windows operating system registry key for the current user or local machine.</span></span> <span data-ttu-id="f89e4-276">以及任何其他可用于创建.NET 进程的父进程的环境变量，每个用户和每台计算机的所有环境变量会自动都复制到当前进程的环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-276">All per-user and per-machine environment variables are automatically copied into the environment block of the current process, as are any other environment variables that are available to the parent process that created the .NET process.</span></span> <span data-ttu-id="f89e4-277">但是，环境变量添加到当前进程的环境块仅通过调用<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>仅过程的持续期间保留。</span><span class="sxs-lookup"><span data-stu-id="f89e4-277">However, environment variables added only to the environment block of the current process by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> persist only for the duration of the process.</span></span>  
  
### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="f89e4-278">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-278">On macOS and Linux systems</span></span>

<span data-ttu-id="f89e4-279">在 macOS 和 Linux 上`GetEnvironmentVariable(String, EnvironmentVariableTarget)`方法支持`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>仅。</span><span class="sxs-lookup"><span data-stu-id="f89e4-279">On macOS and Linux, the `GetEnvironmentVariable(String, EnvironmentVariableTarget)` method supports a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> only.</span></span> <span data-ttu-id="f89e4-280">使用调用`target`的值<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>或<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>不受支持，并返回`null`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-280">Calls with a `target` value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> are not supported and return `null`.</span></span> 

<span data-ttu-id="f89e4-281">每个进程环境变量为：</span><span class="sxs-lookup"><span data-stu-id="f89e4-281">Per-process environment variables are:</span></span>

- <span data-ttu-id="f89e4-282">这些继承自父进程，通常用于调用的 shell`dotnet.exe`或启动.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="f89e4-282">Those inherited from the parent process, typically the shell used to invoke `dotnet.exe` or to launch the .NET application.</span></span>

- <span data-ttu-id="f89e4-283">通过调用定义的那些<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-283">Those defined by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f89e4-284">这些环境变量保留仅直到`dotnet`进程或.NET 应用程序终止。</span><span class="sxs-lookup"><span data-stu-id="f89e4-284">These environment variables persist only until the `dotnet` process or the .NET application terminates.</span></span>   
  
## Examples

<span data-ttu-id="f89e4-285">下面的示例创建的环境变量<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>， <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>，和<xref:System.EnvironmentVariableTarget.Machine>目标时，将检查操作系统注册表是否包含用户和计算机环境变量，则删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-285">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="f89e4-286">因为.NET 在基于 Unix 的系统上不支持每个用户和每台计算机环境变量，仅<xref:System.Environment.SetEnvironmentVariable(System.String,System.String)>并<xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)>值为<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>成功存储环境变量指向进程环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-286">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>

[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-287"><paramref name="variable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-287"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-288"><paramref name="target" /> 不是有效的 <see cref="T:System.EnvironmentVariableTarget" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-288"><paramref name="target" /> is not a valid <see cref="T:System.EnvironmentVariableTarget" /> value.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-289">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-289">The caller does not have the required permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-290">它能够读取的值<paramref name="variable" />如果<paramref name="target" />是<see cref="F:System.EnvironmentVariableTarget.Process" />(关联枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />)，</span><span class="sxs-lookup"><span data-stu-id="f89e4-290">for the ability to read the value of <paramref name="variable" /> if <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> (Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />),</span></span> 
<span data-ttu-id="f89e4-291">or</span><span class="sxs-lookup"><span data-stu-id="f89e4-291">or</span></span> 
<span data-ttu-id="f89e4-292">对环境变量的完全访问权限如果<paramref name="target" />是<see cref="F:System.EnvironmentVariableTarget.User" />或<see cref="F:System.EnvironmentVariableTarget.Machine" />(关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-292">for full access to environment variables if <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> (Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />).</span></span></permission>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariables">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f89e4-293">检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-293">Retrieves all environment variable names and their values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables();" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : unit -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f89e4-294">从当前进程检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-294">Retrieves all environment variable names and their values from the current process.</span></span></summary>
        <returns><span data-ttu-id="f89e4-295">包含所有环境变量名及其值的字典；如果找不到任何环境变量，则返回空字典。</span><span class="sxs-lookup"><span data-stu-id="f89e4-295">A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-296">名称和环境变量的值存储在返回的键 / 值对为<xref:System.Collections.IDictionary>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-296">The names and values for the environment variables are stored as key-value pairs in the returned <xref:System.Collections.IDictionary>.</span></span>  
  
### <a name="on-windows-systems"></a><span data-ttu-id="f89e4-297">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-297">On Windows systems</span></span>

<span data-ttu-id="f89e4-298">在 Windows 系统上`GetEnvironmentVariables`方法将返回以下环境变量：</span><span class="sxs-lookup"><span data-stu-id="f89e4-298">On Windows systems, the `GetEnvironmentVariables` method returns the following environment variables:</span></span>
  
- <span data-ttu-id="f89e4-299">所有每台计算机创建的进程，以及它们的值时定义的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-299">All per-machine environment variables that are defined at the time the process is created, along with their values.</span></span>  
  
- <span data-ttu-id="f89e4-300">该过程将创建时定义的所有每用户环境变量，以及它们的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-300">All per-user environment variables that are defined at the time the process is created, along with their values.</span></span>  

- <span data-ttu-id="f89e4-301">继承自父进程从中启动或进程运行时添加到 process 块的.NET 应用程序的任何变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-301">Any variables inherited from the parent process from which the .NET application was launched or added to the process block while the process is running.</span></span> <span data-ttu-id="f89e4-302">当进程运行时通过调用添加环境变量<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29>方法或<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法替换`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-302">Environment variables are added while the process is running by calling either the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> method or the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="f89e4-303">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-303">On macOS and Linux systems</span></span>

<span data-ttu-id="f89e4-304">在 MacOS 和 Linux 上`GetEnvironmentVariables`方法检索的名称和值的继承自父进程启动的所有环境变量`dotnet`范围内定义过程或`dotnet`流程自身。</span><span class="sxs-lookup"><span data-stu-id="f89e4-304">On MacOS and Linux, the `GetEnvironmentVariables` method retrieves the name and value of all environment variables that are inherited from the parent process that launched the `dotnet` process or that are defined within the scope of the `dotnet` process itself.</span></span> <span data-ttu-id="f89e4-305">一次`dotnet`进程结束，这些后一种环境变量停止存在。</span><span class="sxs-lookup"><span data-stu-id="f89e4-305">Once the `dotnet` process ends, these latter environment variables cease to exist.</span></span> 

<span data-ttu-id="f89e4-306">在基于 Unix 的系统上运行的.NET core 不支持每台计算机或每个用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-306">.NET Core running on Unix-based systems does not support per-machine or per-user environment variables.</span></span>   
  
## Examples  
 <span data-ttu-id="f89e4-307">下面的示例演示<xref:System.Environment.GetEnvironmentVariables%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-307">The following example demonstrates the <xref:System.Environment.GetEnvironmentVariables%2A> method.</span></span>  
  
 [!code-cpp[Environment.GetEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CPP/getenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.GetEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CS/getenvironmentvariables.cs#1)]
 [!code-vb[Environment.GetEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetEnvironmentVariables/VB/getenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-308">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-308">The caller does not have the required permission to perform this operation.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="f89e4-309">缓冲区内存不足。</span><span class="sxs-lookup"><span data-stu-id="f89e4-309">The buffer is out of memory.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-310">它能够读取的名称和环境变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-310">for the ability to read the names and values of environment variables.</span></span> <span data-ttu-id="f89e4-311">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-311">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables (EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables(valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables (target As EnvironmentVariableTarget) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables(EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : EnvironmentVariableTarget -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f89e4-312"><see cref="T:System.EnvironmentVariableTarget" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f89e4-312">One of the <see cref="T:System.EnvironmentVariableTarget" /> values.</span></span> <span data-ttu-id="f89e4-313">在基于 Unix 的系统上运行的 .NET Core 仅支持 <see cxref="F:System.EnvironmentVariableTarget.Process" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-313">Only <see cxref="F:System.EnvironmentVariableTarget.Process" /> is supported on .NET Core running on Unix-based systems.</span></span></param>
        <summary><span data-ttu-id="f89e4-314">从当前进程或者从当前用户或本地计算机的 Windows 操作系统注册表项检索所有环境变量名及其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-314">Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</span></span></summary>
        <returns><span data-ttu-id="f89e4-315">包含 <paramref name="target" /> 参数所指定的源中所有环境变量名及其值的字典；否则，如果找不到任何环境变量，则返回空字典。</span><span class="sxs-lookup"><span data-stu-id="f89e4-315">A dictionary that contains all environment variable names and their values from the source specified by the <paramref name="target" /> parameter; otherwise, an empty dictionary if no environment variables are found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f89e4-316">名称和环境变量的值存储在返回的键/值对为<xref:System.Collections.IDictionary>对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-316">The names and values of the environment variables are stored as key/value pairs in the returned <xref:System.Collections.IDictionary> object.</span></span>  

### <a name="on-windows-systems"></a><span data-ttu-id="f89e4-317">在 Windows 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-317">On Windows systems</span></span>

<span data-ttu-id="f89e4-318">在 Windows 系统上`target`参数指定的源是当前进程、 当前用户的注册表项或在本地计算机的注册表项。</span><span class="sxs-lookup"><span data-stu-id="f89e4-318">On Windows systems, the `target` parameter specifies whether the source is the current process, the registry key for the current user, or the registry key for the local machine.</span></span>  

### <a name="on-macos-and-linux-systems"></a><span data-ttu-id="f89e4-319">在 macOS 和 Linux 系统上</span><span class="sxs-lookup"><span data-stu-id="f89e4-319">On macOS and Linux systems</span></span>

<span data-ttu-id="f89e4-320">在 macOS 和仅限 Linux 上`target`的值<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>支持。</span><span class="sxs-lookup"><span data-stu-id="f89e4-320">On macOS and Linux, only a `target` value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> is supported.</span></span> <span data-ttu-id="f89e4-321">每个进程环境变量继承自父进程 (通常 shell)，用于启动`dotnet`处理或作用域内定义`dotnet`流程自身。</span><span class="sxs-lookup"><span data-stu-id="f89e4-321">Per-process environment variables are inherited from the parent process (typically the shell) used to launch the `dotnet` process or are defined within the scope of the `dotnet` process itself.</span></span> <span data-ttu-id="f89e4-322">一次 dotnet 进程结束，这些后一种环境变量将不复存在。</span><span class="sxs-lookup"><span data-stu-id="f89e4-322">Once the dotnet process ends, these latter environment variables cease to exist.</span></span>  

<span data-ttu-id="f89e4-323">不支持每台计算机和每个用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-323">Per-machine and per-user environment variables are not supported.</span></span> <span data-ttu-id="f89e4-324">一个`target`的值<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>或<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="f89e4-324">A `target` value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> returns an empty array.</span></span>
  
## Examples

<span data-ttu-id="f89e4-325">下面的示例创建的环境变量<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>， <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>，和<xref:System.EnvironmentVariableTarget.Machine>目标时，将检查操作系统注册表是否包含用户和计算机环境变量，则删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-325">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="f89e4-326">因为.NET 在基于 Unix 的系统上不支持每个用户和每台计算机环境变量，仅<xref:System.Environment.SetEnvironmentVariable(System.String,System.String)>并<xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)>值为<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>成功存储环境变量指向进程环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-326">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>

[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-327">调用方不具有针对 <paramref name="target" /> 的指定值执行此操作的所需权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-327">The caller does not have the required permission to perform this operation for the specified value of <paramref name="target" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-328"><paramref name="target" /> 包含非法值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-328"><paramref name="target" /> contains an illegal value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-329">它能够读取的名称和环境变量的值，如果<paramref name="target" />是<see cref="F:System.EnvironmentVariableTarget.Process" />(关联枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />)，</span><span class="sxs-lookup"><span data-stu-id="f89e4-329">for the ability to read the names and values of environment variables if <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> (Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />),</span></span> 
<span data-ttu-id="f89e4-330">or</span><span class="sxs-lookup"><span data-stu-id="f89e4-330">or</span></span> 
<span data-ttu-id="f89e4-331">对环境变量的完全访问权限如果<paramref name="target" />是<see cref="F:System.EnvironmentVariableTarget.User" />或<see cref="F:System.EnvironmentVariableTarget.Machine" />(关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-331">for full access to environment variables if <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> (Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />).</span></span></permission>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFolderPath">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f89e4-332">获取由指定枚举标识的系统特殊文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-332">Gets the path to the system special folder that is identified by the specified enumeration.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder -&gt; string" Usage="System.Environment.GetFolderPath folder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="folder"><span data-ttu-id="f89e4-333">标识系统特殊文件夹的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="f89e4-333">One of enumeration values that identifies a system special folder.</span></span></param>
        <summary><span data-ttu-id="f89e4-334">获取由指定枚举标识的系统特殊文件夹的路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-334">Gets the path to the system special folder that is identified by the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="f89e4-335">如果指定的系统特殊文件夹实际存在于您的计算机上，则为到该文件夹的路径；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-335">The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</span></span>  
  
 <span data-ttu-id="f89e4-336">如果系统未创建文件夹、已删除现有文件夹，或者文件夹是不对应物理路径的虚拟目录（例如"我的电脑"），则该文件夹不会实际存在。</span><span class="sxs-lookup"><span data-stu-id="f89e4-336">A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-337">此方法检索系统特殊文件夹，如 Program Files、 程序、 系统或启动时，可用来访问公共信息的路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-337">This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</span></span> <span data-ttu-id="f89e4-338">特殊文件夹时设置的默认系统，或由用户显式安装的 Windows 版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-338">Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</span></span>  
  
 <span data-ttu-id="f89e4-339">`folder`参数指定要检索的特殊文件夹，并且必须为中的值之一<xref:System.Environment.SpecialFolder>枚举; 任何其他值将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f89e4-339">The `folder` parameter designates the special folder to retrieve and must be one of the values in the <xref:System.Environment.SpecialFolder> enumeration; any other value throws an exception.</span></span>  
  
 <span data-ttu-id="f89e4-340">有关特殊文件夹的详细信息，请参阅[CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664)值主题。</span><span class="sxs-lookup"><span data-stu-id="f89e4-340">For more information about special folders, see the [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) values topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-341">下面的示例演示如何使用<xref:System.Environment.GetFolderPath%2A>方法来返回并显示与关联的路径`folder`参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-341">The following example demonstrates how to use the <xref:System.Environment.GetFolderPath%2A> method to return and display the path associated with the `folder` parameter.</span></span>  
  
 [!code-cpp[Environment.GetFolderPath#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetFolderPath/CPP/getfolderpath.cpp#1)]
 [!code-csharp[Environment.GetFolderPath#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetFolderPath/CS/getfolderpath.cs#1)]
 [!code-vb[Environment.GetFolderPath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetFolderPath/VB/getfolderpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-342"><paramref name="folder" /> 不是 <see cref="T:System.Environment.SpecialFolder" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-342"><paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f89e4-343">不支持当前平台。</span><span class="sxs-lookup"><span data-stu-id="f89e4-343">The current platform is not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f89e4-344">用于访问路径本身中的信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-344">for access to the information in the path itself.</span></span> <span data-ttu-id="f89e4-345">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-345">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder, Environment.SpecialFolderOption option);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder, valuetype System.Environment/SpecialFolderOption option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder, option As Environment.SpecialFolderOption) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder, Environment::SpecialFolderOption option);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder * Environment.SpecialFolderOption -&gt; string" Usage="System.Environment.GetFolderPath (folder, option)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="option" Type="System.Environment+SpecialFolderOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="folder"><span data-ttu-id="f89e4-346">标识系统特殊文件夹的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="f89e4-346">One of the enumeration values that identifies a system special folder.</span></span></param>
        <param name="option"><span data-ttu-id="f89e4-347">指定用于访问特殊文件夹的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="f89e4-347">One of the enumeration values taht specifies options to use for accessing a special folder.</span></span></param>
        <summary><span data-ttu-id="f89e4-348">获取由指定枚举标识的系统特殊文件夹的路径，并使用用于访问特殊文件夹的指定选项。</span><span class="sxs-lookup"><span data-stu-id="f89e4-348">Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</span></span></summary>
        <returns><span data-ttu-id="f89e4-349">如果指定的系统特殊文件夹实际存在于您的计算机上，则为到该文件夹的路径；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-349">The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</span></span>  
  
 <span data-ttu-id="f89e4-350">如果系统未创建文件夹、已删除现有文件夹，或者文件夹是不对应物理路径的虚拟目录（例如"我的电脑"），则该文件夹不会实际存在。</span><span class="sxs-lookup"><span data-stu-id="f89e4-350">A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-351">此方法检索系统特殊文件夹，如 Program Files、 程序、 系统或启动时，可用来访问公共信息的路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-351">This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</span></span> <span data-ttu-id="f89e4-352">特殊文件夹时设置的默认系统，或由用户显式安装的 Windows 版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-352">Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</span></span>  
  
 <span data-ttu-id="f89e4-353">`folder`参数指定要检索的特殊文件夹，并且必须为中的值之一<xref:System.Environment.SpecialFolder>枚举; 任何其他值将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f89e4-353">The `folder` parameter designates the special folder to retrieve and must be one of the values in the <xref:System.Environment.SpecialFolder> enumeration; any other value throws an exception.</span></span>  
  
 <span data-ttu-id="f89e4-354">有关特殊文件夹的详细信息，请参阅[CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664)值主题。</span><span class="sxs-lookup"><span data-stu-id="f89e4-354">For more information about special folders, see the [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) values topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-355"><paramref name="folder" /> 不是 <see cref="T:System.Environment.SpecialFolder" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-355"><paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.</span></span>
<span data-ttu-id="f89e4-356">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-356">-or-</span></span>

<span data-ttu-id="f89e4-357"><paramref name="options" /> 不是 <see cref="T:System.Environment.SpecialFolderOption" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-357"><paramref name="options" /> is not a member of <see cref="T:System.Environment.SpecialFolderOption" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f89e4-358">不支持当前平台。</span><span class="sxs-lookup"><span data-stu-id="f89e4-358">The current platform is not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f89e4-359">用于访问路径本身中的信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-359">for access to the information in the path itself.</span></span> <span data-ttu-id="f89e4-360">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-360">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDrives">
      <MemberSignature Language="C#" Value="public static string[] GetLogicalDrives ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetLogicalDrives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetLogicalDrives" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLogicalDrives () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetLogicalDrives();" />
      <MemberSignature Language="F#" Value="static member GetLogicalDrives : unit -&gt; string[]" Usage="System.Environment.GetLogicalDrives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f89e4-361">返回包含当前计算机中的逻辑驱动器名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="f89e4-361">Returns an array of string containing the names of the logical drives on the current computer.</span></span></summary>
        <returns><span data-ttu-id="f89e4-362">字符串数组，其中的每个元素都包含逻辑驱动器名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-362">An array of strings where each element contains the name of a logical drive.</span></span> <span data-ttu-id="f89e4-363">例如，如果计算机的硬盘是第一个逻辑驱动器，则返回的第一个元素是“C:\\”。</span><span class="sxs-lookup"><span data-stu-id="f89e4-363">For example, if the computer's hard drive is the first logical drive, the first element returned is "C:\\".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f89e4-364">下面的示例演示如何显示当前的计算机使用的逻辑驱动器<xref:System.Environment.GetLogicalDrives%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-364">The following example shows how to display the logical drives of the current computer using the <xref:System.Environment.GetLogicalDrives%2A> method.</span></span>  
  
 [!code-cpp[Environment.GetLogicalDrives#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetLogicalDrives/CPP/getlogicaldrives.cpp#1)]
 [!code-csharp[Environment.GetLogicalDrives#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetLogicalDrives/CS/getlogicaldrives.cs#1)]
 [!code-vb[Environment.GetLogicalDrives#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetLogicalDrives/VB/getlogicaldrives.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f89e4-365">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="f89e4-365">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-366">调用方没有所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-366">The caller does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-367">此权限所保护的资源的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-367">for full access to the resource protected by this permission.</span></span> <span data-ttu-id="f89e4-368">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-368">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public static bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Environment.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Environment.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-369">获取一个值，该值指示当前的应用程序域是否正在卸载或者公共语言运行时 (CLR) 是否正在关闭。</span><span class="sxs-lookup"><span data-stu-id="f89e4-369">Gets a value that indicates whether the current application domain is being unloaded or the common language runtime (CLR) is shutting down.</span></span></summary>
        <value><span data-ttu-id="f89e4-370"><see langword="true" /> 如果当前的应用程序域正在卸载或者 CLR 正在关闭;否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-370"><see langword="true" /> if the current application domain is being unloaded or the CLR is shutting down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-371">**仅限.NET framework**:CLR 卸载应用程序域，它具有终结器方法，该应用程序域中的所有对象上运行终结器。</span><span class="sxs-lookup"><span data-stu-id="f89e4-371">**.NET Framework only**: When the CLR unloads an application domain, it runs the finalizers on all objects that have a finalizer method in that application domain.</span></span> <span data-ttu-id="f89e4-372">CLR 关闭时，它具有终结器方法的所有对象上启动终结器线程。</span><span class="sxs-lookup"><span data-stu-id="f89e4-372">When the CLR shuts down, it starts the finalizer thread on all objects that have a finalizer method.</span></span> <span data-ttu-id="f89e4-373"><xref:System.Environment.HasShutdownStarted%2A>属性返回`true`仅启动终结器线程后。</span><span class="sxs-lookup"><span data-stu-id="f89e4-373">The <xref:System.Environment.HasShutdownStarted%2A> property returns `true` only after the finalizer thread has been started.</span></span> <span data-ttu-id="f89e4-374">如果此属性返回`true`，可以确定是否正在卸载应用程序域或 CLR 本身正在通过调用关闭<xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-374">When the property returns `true`, you can determine whether an application domain is being unloaded or the CLR itself is shutting down by calling the <xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f89e4-375">此方法返回`true`如果称为终结器，因为应用程序域正在卸载或`false`如果 CLR 正在关闭。</span><span class="sxs-lookup"><span data-stu-id="f89e4-375">This method returns `true` if finalizers are called because the application domain is unloading or `false` if the CLR is shutting down.</span></span>  
  
 <span data-ttu-id="f89e4-376"><xref:System.Environment.HasShutdownStarted%2A>属性返回`false`终结器线程未启动。</span><span class="sxs-lookup"><span data-stu-id="f89e4-376">The <xref:System.Environment.HasShutdownStarted%2A> property returns `false` if the finalizer thread has not been started.</span></span>  
  
 <span data-ttu-id="f89e4-377">通过使用此属性，可以确定是否要访问终止代码中的静态变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-377">By using this property, you can determine whether to access static variables in your finalization code.</span></span> <span data-ttu-id="f89e4-378">如果应用程序域或 CLR 正在关闭，您不能可靠地访问具有完成方法并且由静态字段引用的任何对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-378">If either an application domain or the CLR is shutting down, you cannot reliably access any object that has a finalization method and that is referenced by a static field.</span></span> <span data-ttu-id="f89e4-379">这是因为这些对象可能被终结。</span><span class="sxs-lookup"><span data-stu-id="f89e4-379">This is because these objects may have already been finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsFinalizingForUnload" />
      </Docs>
    </Member>
    <Member MemberName="Is64BitOperatingSystem">
      <MemberSignature Language="C#" Value="public static bool Is64BitOperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitOperatingSystem" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitOperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitOperatingSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitOperatingSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitOperatingSystem : bool" Usage="System.Environment.Is64BitOperatingSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-380">确定当前操作系统是否为 64 位操作系统。</span><span class="sxs-lookup"><span data-stu-id="f89e4-380">Determines whether the current operating system is a 64-bit operating system.</span></span></summary>
        <value><span data-ttu-id="f89e4-381">如果操作系统为 64 位操作系统，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-381"><see langword="true" /> if the operating system is 64-bit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is64BitProcess">
      <MemberSignature Language="C#" Value="public static bool Is64BitProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitProcess" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitProcess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitProcess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitProcess : bool" Usage="System.Environment.Is64BitProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-382">确定当前进程是否为 64 位进程。</span><span class="sxs-lookup"><span data-stu-id="f89e4-382">Determines whether the current process is a 64-bit process.</span></span></summary>
        <value><span data-ttu-id="f89e4-383">如果进程为 64 位进程，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-383"><see langword="true" /> if the process is 64-bit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public static string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Environment.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-384">获取此本地计算机的 NetBIOS 名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-384">Gets the NetBIOS name of this local computer.</span></span></summary>
        <value><span data-ttu-id="f89e4-385">包含此计算机的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-385">A string containing the name of this computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-386">从注册表中读取名称时，将在系统启动时建立此计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-386">The name of this computer is established at system startup when the name is read from the registry.</span></span> <span data-ttu-id="f89e4-387">如果此计算机是群集中的节点，则返回节点的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-387">If this computer is a node in a cluster, the name of the node is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-388">以下示例显示运行的代码示例的计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-388">The following example displays the name of the computer that runs the code example.</span></span> <span data-ttu-id="f89e4-389">（计算机名称是示例输出中省略出于安全原因。）</span><span class="sxs-lookup"><span data-stu-id="f89e4-389">(The machine name is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[environment.machinename#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.MachineName/CPP/machinename.cpp#1)]
 [!code-csharp[environment.machinename#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.MachineName/CS/machinename.cs#1)]
 [!code-vb[environment.machinename#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.MachineName/VB/machinename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f89e4-390">无法获取此计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-390">The name of this computer cannot be obtained.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-391">用于读取 COMPUTERNAME 的环境变量的访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-391">for read access to the COMPUTERNAME environment variable.</span></span> <span data-ttu-id="f89e4-392">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-392">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public static string NewLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NewLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string" Usage="System.Environment.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-393">获取为此环境定义的换行字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-393">Gets the newline string defined for this environment.</span></span></summary>
        <value><span data-ttu-id="f89e4-394">对于非 Unix 平台为包含“\r\n”的字符串，对于 Unix 平台则为包含“\n”的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-394">A string containing "\r\n" for non-Unix platforms, or a string containing "\n" for Unix platforms.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-395">属性值<xref:System.Environment.NewLine%2A>是专门针对当前平台和.NET Framework 实现自定义一个常量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-395">The property value of <xref:System.Environment.NewLine%2A> is a constant customized specifically for the current platform and implementation of the .NET Framework.</span></span> <span data-ttu-id="f89e4-396">有关在属性值中的转义符的详细信息，请参阅[的字符转义](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-396">For more information about the escape characters in the property value, see [Character Escapes](~/docs/standard/base-types/character-escapes-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="f89e4-397">提供的功能<xref:System.Environment.NewLine%2A>通常是条款换行、 换行、 换行符、 回车符、 CRLF、 和行尾的含义。</span><span class="sxs-lookup"><span data-stu-id="f89e4-397">The functionality provided by <xref:System.Environment.NewLine%2A> is often what is meant by the terms newline, line feed, line break, carriage return, CRLF, and end of line.</span></span>  
  
 <span data-ttu-id="f89e4-398"><xref:System.Environment.NewLine%2A> 可以与特定于语言的换行符支持如转义字符 '\r' 和 '\n' Microsoft 中的结合使用C#和 C /C++，或`vbCrLf`Microsoft Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="f89e4-398"><xref:System.Environment.NewLine%2A> can be used in conjunction with language-specific newline support such as the escape characters '\r' and '\n' in Microsoft C# and C/C++, or `vbCrLf` in Microsoft Visual Basic.</span></span>  
  
 <span data-ttu-id="f89e4-399"><xref:System.Environment.NewLine%2A> 自动追加到处理的文本<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>和<xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-399"><xref:System.Environment.NewLine%2A> is automatically appended to text processed by the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-400">下面的示例显示三个行由换行符分隔。</span><span class="sxs-lookup"><span data-stu-id="f89e4-400">The following example displays three lines separated by newlines.</span></span>  
  
 [!code-cpp[environment.newline#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.NewLine/CPP/newline.cpp#1)]
 [!code-csharp[environment.newline#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.NewLine/CS/newline.cs#1)]
 [!code-vb[environment.newline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.NewLine/VB/newline.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public static OperatingSystem OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.OperatingSystem OSVersion" />
      <MemberSignature Language="DocId" Value="P:System.Environment.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSVersion As OperatingSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property OperatingSystem ^ OSVersion { OperatingSystem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : OperatingSystem" Usage="System.Environment.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.OperatingSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-401">获取包含当前平台标识符和版本号的 <see cref="T:System.OperatingSystem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-401">Gets an <see cref="T:System.OperatingSystem" /> object that contains the current platform identifier and version number.</span></span></summary>
        <value><span data-ttu-id="f89e4-402">一个包含平台标识符和版本号的对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-402">An object that contains the platform identifier and version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f89e4-403">`Environment.OSVersion`属性不提供可靠的方式来确定确切的操作系统和其版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-403">The `Environment.OSVersion` property does not provide a reliable way to identify the exact operating system and its version.</span></span> <span data-ttu-id="f89e4-404">因此，我们不建议使用此方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-404">Therefore, we do not recommend that you use this method.</span></span> <span data-ttu-id="f89e4-405">改为：</span><span class="sxs-lookup"><span data-stu-id="f89e4-405">Instead:</span></span> 

- <span data-ttu-id="f89e4-406">若要标识操作系统平台，请使用<xref:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-406">To identify the operating system platform, use the <xref:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform%2A?displayProperty=nameWithType> method.</span></span> 

- <span data-ttu-id="f89e4-407">避免编写依赖于报告的操作系统版本的代码。</span><span class="sxs-lookup"><span data-stu-id="f89e4-407">Avoid writing code that depends on a reported operating system version.</span></span> <span data-ttu-id="f89e4-408">相反，检查应用程序所需的功能的可用性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-408">Instead, check for the availability of the features that your application needs.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f89e4-409">此属性不能获得系统版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-409">This property was unable to obtain the system version.</span></span>  
  
<span data-ttu-id="f89e4-410">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-410">-or-</span></span> 
<span data-ttu-id="f89e4-411">获得的平台标识符不是 <see cref="T:System.PlatformID" />的成员</span><span class="sxs-lookup"><span data-stu-id="f89e4-411">The obtained platform identifier is not a member of <see cref="T:System.PlatformID" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessorCount">
      <MemberSignature Language="C#" Value="public static int ProcessorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ProcessorCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ProcessorCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessorCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ProcessorCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorCount : int" Usage="System.Environment.ProcessorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-412">获取当前计算机上的处理器数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-412">Gets the number of processors on the current machine.</span></span></summary>
        <value><span data-ttu-id="f89e4-413">指定当前计算机上处理器个数的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-413">The 32-bit signed integer that specifies the number of processors on the current machine.</span></span> <span data-ttu-id="f89e4-414">没有默认值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-414">There is no default.</span></span> <span data-ttu-id="f89e4-415">如果当前计算机包含多个处理器组，则此属性返回可用的逻辑处理器数以供公共语言运行时 (CLR) 使用。</span><span class="sxs-lookup"><span data-stu-id="f89e4-415">If the current machine contains multiple processor groups, this property returns the number of logical processors that are available for use by the common language runtime (CLR).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-416">有关处理器组和逻辑处理器的详细信息，请参阅[处理器组](https://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-416">For more information about processor groups and logical processors, see [Processor Groups](https://msdn.microsoft.com/library/windows/desktop/dd405503.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-417">下面的示例演示<xref:System.Environment.ProcessorCount%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-417">The following example demonstrates the <xref:System.Environment.ProcessorCount%2A> property.</span></span>  
  
 [!code-cpp[environment.processorcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.processorcount/CPP/pc.cpp#1)]
 [!code-csharp[environment.processorcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.processorcount/CS/pc.cs#1)]
 [!code-vb[environment.processorcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.processorcount/VB/pc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f89e4-418">创建、修改或删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-418">Creates, modifies, or deletes an environment variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f89e4-419">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-419">The name of an environment variable.</span></span></param>
        <param name="value"><span data-ttu-id="f89e4-420">要分配给 <paramref name="variable" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-420">A value to assign to <paramref name="variable" />.</span></span></param>
        <summary><span data-ttu-id="f89e4-421">创建、修改或删除当前进程中存储的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-421">Creates, modifies, or deletes an environment variable stored in the current process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-422">调用此方法相当于调用<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>值为重载<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>为`target`参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-422">Calling this method is equivalent to calling the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> overload with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> for the `target` argument.</span></span>  
  
 <span data-ttu-id="f89e4-423">如果`value`参数不为空 （请参阅删除环境变量在本部分中的空值的定义更高版本的讨论） 和命名的环境变量`variable`参数不存在，环境创建变量并将其分配的内容`value`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-423">If the `value` argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the `variable` parameter does not exist, the environment variable is created and assigned the contents of `value`.</span></span> <span data-ttu-id="f89e4-424">如果文件确实存在，将修改其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-424">If it does exist, its value is modified.</span></span> <span data-ttu-id="f89e4-425">由于在当前进程的环境块中定义的环境变量，不会保留在过程结束后。</span><span class="sxs-lookup"><span data-stu-id="f89e4-425">Because the environment variable is defined in the environment block of the current process only, it does not persist after the process has ended.</span></span>  
  
 <span data-ttu-id="f89e4-426">如果`variable`包含非初始十六进制零字符的零个字符将被视为环境变量名称，并将忽略所有后续字符之前的字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-426">If `variable` contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="f89e4-427">如果`value`包含非初始十六进制零字符的零个字符分配给环境变量并将忽略所有后续字符之前的字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-427">If `value` contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="f89e4-428">如果`value`为空，命名的环境变量`variable`存在，则删除该环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-428">If `value` is empty and the environment variable named by `variable` exists, the environment variable is deleted.</span></span> <span data-ttu-id="f89e4-429">如果`variable`不存在，会发生任何错误即使无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="f89e4-429">If `variable` does not exist, no error occurs even though the operation cannot be performed.</span></span> <span data-ttu-id="f89e4-430">`value` 被视为任何以下情况下为空：</span><span class="sxs-lookup"><span data-stu-id="f89e4-430">`value` is considered empty under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="f89e4-431">它是`null`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-431">It is `null`.</span></span>  
  
-   <span data-ttu-id="f89e4-432">它是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-432">It is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f89e4-433">它包含单个字符，其值为 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="f89e4-433">It consists of a single character whose value is U+0000.</span></span>  
  
## Examples

<span data-ttu-id="f89e4-434">下面的示例尝试检索名为环境变量的值`Test1`从进程环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-434">The following example attempts to retrieve the value of an environment variable named `Test1` from the process environment block.</span></span> <span data-ttu-id="f89e4-435">如果该变量不存在，此示例将创建变量，并检索其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-435">If the variable doesn't exist, the example creates the variable and retrieves its value.</span></span> <span data-ttu-id="f89e4-436">此示例显示变量的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-436">The example displays the value of the variable.</span></span> <span data-ttu-id="f89e4-437">适用于 Windows 系统上运行的.NET 实现，它还调用<xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29>方法的每个成员与<xref:System.EnvironmentVariableTarget>枚举，以建立可以仅从当前进程环境块检索到该变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-437">For .NET implementations running on Windows systems, it also calls the <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> method with each member of the <xref:System.EnvironmentVariableTarget> enumeration to establish that the variable can be retrieved only from the current process environment block.</span></span> <span data-ttu-id="f89e4-438">（在基于 Unix 的系统上的.NET 实现仅支持变量进程环境块中。）最后，如果该示例创建变量，会将其删除。</span><span class="sxs-lookup"><span data-stu-id="f89e4-438">(.NET implementations on Unix-based systems only support variables in the process environment block.) Finally, if the example created the variable, it deletes it.</span></span>  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-439"><paramref name="variable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-439"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-440"><paramref name="variable" /> 包含一个长度为零的字符串、一个初始十六进制零字符 (0x00) 或一个等号 ("=")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-440"><paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</span></span>  
  
<span data-ttu-id="f89e4-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f89e4-441">-or-</span></span> 
<span data-ttu-id="f89e4-442"><paramref name="variable" /> 或 <paramref name="value" /> 的长度大于或等于 32,767 个字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-442">The length of <paramref name="variable" /> or <paramref name="value" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="f89e4-443">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-443">-or-</span></span> 
<span data-ttu-id="f89e4-444">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="f89e4-444">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-445">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-445">The caller does not have the required permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-446">对环境变量的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-446">for full access to environment variables.</span></span> <span data-ttu-id="f89e4-447">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-447">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </Member>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value, EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String, target As EnvironmentVariableTarget)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string * EnvironmentVariableTarget -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f89e4-448">环境变量名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-448">The name of an environment variable.</span></span></param>
        <param name="value"><span data-ttu-id="f89e4-449">要分配给 <paramref name="variable" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-449">A value to assign to <paramref name="variable" />.</span></span></param>
        <param name="target"><span data-ttu-id="f89e4-450">一个用于指定环境变量的位置的枚举值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-450">One of the enumeration values that specifies the location of the environment variable.</span></span></param>
        <summary><span data-ttu-id="f89e4-451">创建、修改或删除当前进程中或者为当前用户或本地计算机保留的 Windows 操作系统注册表项中存储的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-451">Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f89e4-452"><xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法可让你定义适用于当前进程的环境变量 (<xref:System.EnvironmentVariableTarget.Process>值)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-452">The <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method lets you define an environment variable that is available to the current process (the <xref:System.EnvironmentVariableTarget.Process> value).</span></span> <span data-ttu-id="f89e4-453">仅在进程结束前，持久保存所独有的当前进程环境块的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-453">Environment variables that are unique to the current process environment block persist only until the process ends.</span></span>

<span data-ttu-id="f89e4-454">此外，在仅，Windows 系统上<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>方法允许您定义是可用于的计算机运行的所有进程的环境变量 (<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>值) 和由用户运行的所有进程 (<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>值)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-454">In addition, on Windows systems only, the <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method lets you define an environment variable that is available to all processes that run on a machine (the <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> value) and to all processes run by a user (the <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> value).</span></span> <span data-ttu-id="f89e4-455">每台计算机和每个用户环境变量会复制到当前进程的环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-455">Per-machine and per-user environment variables are copied into the environment block of the current process.</span></span>  
 
<span data-ttu-id="f89e4-456">在 macOS 和 Linux 系统上的.NET Core 上, 调用<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29>具有值的方法<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>或<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>将被忽略。</span><span class="sxs-lookup"><span data-stu-id="f89e4-456">On .NET Core on macOS and Linux systems, calls to the  <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> method with a value of <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> are ignored.</span></span> 
  
 <span data-ttu-id="f89e4-457">如果`value`参数不为空 （请参阅删除环境变量在本部分中的空值的定义更高版本的讨论） 和命名的环境变量`variable`参数不存在，环境创建变量并将其分配的内容`value`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-457">If the `value` argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the `variable` argument does not exist, the environment variable is created and assigned the contents of `value`.</span></span>  <span data-ttu-id="f89e4-458">如果文件确实存在，将修改其值。</span><span class="sxs-lookup"><span data-stu-id="f89e4-458">If it does exist, its value is modified.</span></span>  
  
 <span data-ttu-id="f89e4-459">如果`variable`包含非初始十六进制零字符的零个字符将被视为环境变量名称，并将忽略所有后续字符之前的字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-459">If `variable` contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="f89e4-460">如果`value`包含非初始十六进制零字符的零个字符分配给环境变量并将忽略所有后续字符之前的字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-460">If `value` contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</span></span>  
  
 <span data-ttu-id="f89e4-461">如果`value`为空，命名的环境变量`variable`存在，则删除该环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-461">If `value` is empty and the environment variable named by `variable` exists, the environment variable is deleted.</span></span> <span data-ttu-id="f89e4-462">`value` 被视为任何以下情况下为空：</span><span class="sxs-lookup"><span data-stu-id="f89e4-462">`value` is considered empty under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="f89e4-463">它是`null`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-463">It is `null`.</span></span>  
  
-   <span data-ttu-id="f89e4-464">它是<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f89e4-464">It is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f89e4-465">它包含单个字符，其值为 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="f89e4-465">It consists of a single character whose value is U+0000.</span></span>  
  
 <span data-ttu-id="f89e4-466">如果`variable`不存在，不会出现错误但无法执行该操作。</span><span class="sxs-lookup"><span data-stu-id="f89e4-466">If `variable` does not exist, no error occurs although the operation cannot be performed.</span></span> <span data-ttu-id="f89e4-467">要小心`target`是<xref:System.EnvironmentVariableTarget.Machine>，因为意外删除会影响整个本地计算机，而不仅仅是当前进程或用户的环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-467">Be careful when `target` is <xref:System.EnvironmentVariableTarget.Machine>, because you can accidentally delete an environment variable that affects your entire local machine, not just the current process or user.</span></span>  

### <a name="environmentvariabletargetmachine-and-environmentvariabletargetuser-on-windows-systems"></a><span data-ttu-id="f89e4-468">EnvironmentVariableTarget.Machine 和 Windows 系统上的 EnvironmentVariableTarget.User</span><span class="sxs-lookup"><span data-stu-id="f89e4-468">EnvironmentVariableTarget.Machine and EnvironmentVariableTarget.User on Windows systems</span></span>

<span data-ttu-id="f89e4-469">如果`target`是<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>，环境变量存储在本地计算机的注册表 HKEY_CURRENT_USER\Environment 项中。</span><span class="sxs-lookup"><span data-stu-id="f89e4-469">If `target` is <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, the environment variable is stored in the HKEY_CURRENT_USER\Environment key of the local computer's registry.</span></span> <span data-ttu-id="f89e4-470">它也会复制到的文件资源管理器以当前用户身份运行的实例。</span><span class="sxs-lookup"><span data-stu-id="f89e4-470">It is also copied to instances of File Explorer that are running as the current user.</span></span> <span data-ttu-id="f89e4-471">然后在用户从文件资源管理器启动任何新进程继承该环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-471">The environment variable is then inherited by any new processes that the user launches from File Explorer.</span></span>  
  
 <span data-ttu-id="f89e4-472">同样，如果`target`是<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>，环境变量存储在本地计算机的注册表的 HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment 密钥。</span><span class="sxs-lookup"><span data-stu-id="f89e4-472">Similarly, if `target` is <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, the environment variable is stored in the HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment key of the local computer's registry.</span></span> <span data-ttu-id="f89e4-473">它也会复制到文件资源管理器的所有实例。</span><span class="sxs-lookup"><span data-stu-id="f89e4-473">It is also copied to all instances of File Explorer.</span></span> <span data-ttu-id="f89e4-474">然后从文件资源管理器启动任何新进程继承该环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-474">The environment variable is then inherited by any new processes that are launched from File Explorer.</span></span>  
  
 <span data-ttu-id="f89e4-475">如果`target`是<xref:System.EnvironmentVariableTarget.User>或<xref:System.EnvironmentVariableTarget.Machine>，其他应用程序将通过 Windows 通知设置操作的`WM_SETTINGCHANGE`消息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-475">If `target` is <xref:System.EnvironmentVariableTarget.User> or <xref:System.EnvironmentVariableTarget.Machine>, other applications are notified of the set operation by a Windows `WM_SETTINGCHANGE` message.</span></span>  
  
 <span data-ttu-id="f89e4-476">如果`target`是<xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>或<xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>，我们建议的长度`value`小于 2048年个字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-476">If `target` is <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> or <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, we recommend that the length of `value` be less than 2048 characters.</span></span>  
  
## Examples

<span data-ttu-id="f89e4-477">下面的示例创建的环境变量<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>， <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>，和<xref:System.EnvironmentVariableTarget.Machine>目标时，将检查操作系统注册表是否包含用户和计算机环境变量，则删除环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-477">The following example creates environment variables for the <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, and <xref:System.EnvironmentVariableTarget.Machine> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</span></span> <span data-ttu-id="f89e4-478">因为.NET 在基于 Unix 的系统上不支持每个用户和每台计算机环境变量，仅<xref:System.Environment.SetEnvironmentVariable(System.String,System.String)>并<xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)>值为<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>成功存储环境变量指向进程环境块。</span><span class="sxs-lookup"><span data-stu-id="f89e4-478">Because .NET on Unix-based systems does not support per-user and per-machine environment variables, only <xref:System.Environment.SetEnvironmentVariable(System.String,System.String)> and <xref:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)> with a value of <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> successfully store an environment variable to the process environment block.</span></span>
  
[!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs)]
[!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f89e4-479"><paramref name="variable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-479"><paramref name="variable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f89e4-480"><paramref name="variable" /> 包含一个长度为零的字符串、一个初始十六进制零字符 (0x00) 或一个等号 ("=")。</span><span class="sxs-lookup"><span data-stu-id="f89e4-480"><paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</span></span>  
  
<span data-ttu-id="f89e4-481">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-481">-or-</span></span> 
<span data-ttu-id="f89e4-482"><paramref name="variable" /> 的长度大于或等于 32,767 个字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-482">The length of <paramref name="variable" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="f89e4-483">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f89e4-483">-or-</span></span> 
 <span data-ttu-id="f89e4-484"><paramref name="target" /> 不是 <see cref="T:System.EnvironmentVariableTarget" /> 枚举的一个成员。</span><span class="sxs-lookup"><span data-stu-id="f89e4-484"><paramref name="target" /> is not a member of the <see cref="T:System.EnvironmentVariableTarget" /> enumeration.</span></span>  
  
<span data-ttu-id="f89e4-485">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-485">-or-</span></span> 
 <span data-ttu-id="f89e4-486"><paramref name="target" /> 为 <see cref="F:System.EnvironmentVariableTarget.Machine" /> 或 <see cref="F:System.EnvironmentVariableTarget.User" />，且 <paramref name="variable" /> 的长度大于或等于 255。</span><span class="sxs-lookup"><span data-stu-id="f89e4-486"><paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Machine" /> or <see cref="F:System.EnvironmentVariableTarget.User" />, and the length of <paramref name="variable" /> is greater than or equal to 255.</span></span>  
  
<span data-ttu-id="f89e4-487">或</span><span class="sxs-lookup"><span data-stu-id="f89e4-487">-or-</span></span> 
 <span data-ttu-id="f89e4-488"><paramref name="target" /> 为 <see cref="F:System.EnvironmentVariableTarget.Process" /> ，且 <paramref name="value" /> 的长度大于或等于 32767 个字符。</span><span class="sxs-lookup"><span data-stu-id="f89e4-488"><paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> and the length of <paramref name="value" /> is greater than or equal to 32,767 characters.</span></span>  
  
<span data-ttu-id="f89e4-489">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f89e4-489">-or-</span></span> 
<span data-ttu-id="f89e4-490">执行此操作期间出错。</span><span class="sxs-lookup"><span data-stu-id="f89e4-490">An error occurred during the execution of this operation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f89e4-491">调用方没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-491">The caller does not have the required permission to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-492">对环境变量的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-492">for full access to environment variables.</span></span> <span data-ttu-id="f89e4-493">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-493">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public static string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Environment.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Environment.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-494">获取当前的堆栈跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-494">Gets current stack trace information.</span></span></summary>
        <value><span data-ttu-id="f89e4-495">包含堆栈跟踪信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-495">A string containing stack trace information.</span></span> <span data-ttu-id="f89e4-496">此值可为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-496">This value can be <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-497"><xref:System.Environment.StackTrace%2A>属性列表中按时间顺序逆序方法调用、 即，首先，描述最新的方法调用和每个方法调用堆栈上列出的堆栈跟踪信息的一行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-497">The <xref:System.Environment.StackTrace%2A> property lists method calls in reverse chronological order, that is, the most recent method call is described first, and one line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="f89e4-498">但是，<xref:System.Environment.StackTrace%2A>属性可能不报告任意多个方法调用按预期由于优化期间发生代码转换。</span><span class="sxs-lookup"><span data-stu-id="f89e4-498">However, the <xref:System.Environment.StackTrace%2A> property might not report as many method calls as expected due to code transformations that occur during optimization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f89e4-499">由类的堆栈跟踪信息的层次结构视图，使用<xref:System.Diagnostics.StackTrace>类。</span><span class="sxs-lookup"><span data-stu-id="f89e4-499">For a hierarchical view of the stack trace information by class, use the <xref:System.Diagnostics.StackTrace> class.</span></span>  
  
 <span data-ttu-id="f89e4-500"><xref:System.Environment.StackTrace%2A>属性设置为每个方法调用的堆栈跟踪信息的格式，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f89e4-500">The <xref:System.Environment.StackTrace%2A> property formats the stack trace information for each method call as follows:</span></span>  
  
 <span data-ttu-id="f89e4-501">"在`FullClassName`。`MethodName`(`MethodParams`) 中`FileName`： 行`LineNumber`"</span><span class="sxs-lookup"><span data-stu-id="f89e4-501">"at `FullClassName`.`MethodName`(`MethodParams`) in `FileName` :line `LineNumber` "</span></span>  
  
 <span data-ttu-id="f89e4-502">"At"文本前面的三个空格，并且如果调试符号不可用，则省略"in"以开始将整个子字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-502">The literal "at" is preceded by three spaces, and the entire substring starting with "in" is omitted if debug symbols are not available.</span></span> <span data-ttu-id="f89e4-503">将占位符`FullClassName`， `MethodName`， `MethodParams`， `FileName`，和`LineNumber`、 将替换为实际值和定义，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f89e4-503">The placeholders, `FullClassName`, `MethodName`, `MethodParams`, `FileName`, and `LineNumber`, are replaced by actual values, and are defined as follows:</span></span>  
  
 <span data-ttu-id="f89e4-504">FullClassName</span><span class="sxs-lookup"><span data-stu-id="f89e4-504">FullClassName</span></span>  
 <span data-ttu-id="f89e4-505">类，包括命名空间的完整名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-505">The full name of the class, including the namespace.</span></span>  
  
 `MethodName`  
 <span data-ttu-id="f89e4-506">方法的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-506">The name of the method.</span></span>  
  
 `MethodParams`  
 <span data-ttu-id="f89e4-507">参数类型/名称对的列表。</span><span class="sxs-lookup"><span data-stu-id="f89e4-507">The list of parameter type/name pairs.</span></span> <span data-ttu-id="f89e4-508">每个对用逗号分隔 （"，"）。</span><span class="sxs-lookup"><span data-stu-id="f89e4-508">Each pair is separated by a comma (",").</span></span> <span data-ttu-id="f89e4-509">如果省略此信息`MethodName`不带任何参数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-509">This information is omitted if `MethodName` takes no parameters.</span></span>  
  
 `FileName`  
 <span data-ttu-id="f89e4-510">文件的源的名称，其中`MethodName`方法声明。</span><span class="sxs-lookup"><span data-stu-id="f89e4-510">The name of the source file where the `MethodName` method is declared.</span></span> <span data-ttu-id="f89e4-511">如果调试符号不可用，则省略此信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-511">This information is omitted if debug symbols are not available.</span></span>  
  
 `LineNumber`  
 <span data-ttu-id="f89e4-512">中的行数`FileName`，其中包含从源代码`MethodName`是调用堆栈上的指令。</span><span class="sxs-lookup"><span data-stu-id="f89e4-512">The number of the line in `FileName` that contains the source code from `MethodName` for the instruction that is on the call stack.</span></span> <span data-ttu-id="f89e4-513">如果调试符号不可用，则省略此信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-513">This information is omitted if debug symbols are not available.</span></span>  
  
 <span data-ttu-id="f89e4-514"><xref:System.Environment.NewLine%2A?displayProperty=nameWithType>字符串终止的堆栈跟踪的每个行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-514">The <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> string terminates each line of the stack trace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-515">下面的示例演示<xref:System.Environment.StackTrace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-515">The following example demonstrates the <xref:System.Environment.StackTrace%2A> property.</span></span>  
  
 [!code-cpp[environment.stacktrace#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.StackTrace/CPP/stacktrace.cpp#1)]
 [!code-csharp[environment.stacktrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.StackTrace/CS/stacktrace.cs#1)]
 [!code-vb[environment.stacktrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.StackTrace/VB/stacktrace.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-516">用于对受权限保护的资源的完全访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-516">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="f89e4-517">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-517">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SystemDirectory">
      <MemberSignature Language="C#" Value="public static string SystemDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SystemDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SystemDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemDirectory : string" Usage="System.Environment.SystemDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-518">获取系统目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="f89e4-518">Gets the fully qualified path of the system directory.</span></span></summary>
        <value><span data-ttu-id="f89e4-519">包含目录路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-519">A string containing a directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-520">返回的示例是值的"C:\WinNT\System32"的字符串。</span><span class="sxs-lookup"><span data-stu-id="f89e4-520">An example of the value returned is the string "C:\WinNT\System32".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-521">以下示例显示运行的代码示例的计算机的系统目录。</span><span class="sxs-lookup"><span data-stu-id="f89e4-521">The following example displays the system directory of the computer that runs the code example.</span></span> <span data-ttu-id="f89e4-522">（系统目录是示例输出中省略出于安全原因。）</span><span class="sxs-lookup"><span data-stu-id="f89e4-522">(The system directory is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[environment.systemdirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.SystemDirectory/CPP/systemdirectory.cpp#1)]
 [!code-csharp[environment.systemdirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.SystemDirectory/CS/systemdirectory.cs#1)]
 [!code-vb[environment.systemdirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.SystemDirectory/VB/systemdirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f89e4-523">用于访问路径本身中的信息。</span><span class="sxs-lookup"><span data-stu-id="f89e4-523">for access to the information in the path itself.</span></span> <span data-ttu-id="f89e4-524">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-524">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SystemPageSize">
      <MemberSignature Language="C#" Value="public static int SystemPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SystemPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SystemPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemPageSize : int" Usage="System.Environment.SystemPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-525">获取操作系统的内存页的字节数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-525">Gets the number of bytes in the operating system's memory page.</span></span></summary>
        <value><span data-ttu-id="f89e4-526">系统内存页中的字节数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-526">The number of bytes in the system memory page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-527">确定是否使用此信息很有用<xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType>选项时使用的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="f89e4-527">This information can be useful when determining whether to use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType> option when you work with memory-mapped files.</span></span>  
  
 <span data-ttu-id="f89e4-528">在 Windows 中，此值是`dwPageSize`中的成员`SYSTEM_INFO`结构。</span><span class="sxs-lookup"><span data-stu-id="f89e4-528">In Windows, this value is the `dwPageSize` member in the `SYSTEM_INFO` structure.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-529">用于访问系统和用户环境变量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-529">for access to system and user environment variables.</span></span> <span data-ttu-id="f89e4-530">相关联的异常：</span><span class="sxs-lookup"><span data-stu-id="f89e4-530">Associated exception:</span></span> 
 <see cref="P:System.Security.SecurityException.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TickCount">
      <MemberSignature Language="C#" Value="public static int TickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 TickCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.TickCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int TickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TickCount : int" Usage="System.Environment.TickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-531">获取系统启动后经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-531">Gets the number of milliseconds elapsed since the system started.</span></span></summary>
        <value><span data-ttu-id="f89e4-532">一个 32 位带符号整数，它包含自上次启动计算机以来所经过的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="f89e4-532">A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-533">此属性的值派生自系统计时器，并存储为 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-533">The value of this property is derived from the system timer and is stored as a 32-bit signed integer.</span></span> <span data-ttu-id="f89e4-534">注意，因为它派生自系统计时器的分辨率<xref:System.Environment.TickCount%2A>属性仅限于系统计时器，它通常在 10 到 16 毫秒为单位的范围的解决方法。</span><span class="sxs-lookup"><span data-stu-id="f89e4-534">Note that, because it is derived from the system timer, the resolution of the <xref:System.Environment.TickCount%2A> property is limited to the resolution of the system timer, which is typically in the range of 10 to 16 milliseconds.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f89e4-535">因为的值<xref:System.Environment.TickCount%2A>属性值是 32 位带符号的整数，如果系统连续，运行<xref:System.Environment.TickCount%2A>从零到将递增<xref:System.Int32.MaxValue?displayProperty=nameWithType>大约 24.9 天，然后跳转到<xref:System.Int32.MinValue?displayProperty=nameWithType>，这是负号，然后递增到下一步 24.9 几天的零。</span><span class="sxs-lookup"><span data-stu-id="f89e4-535">Because the value of the <xref:System.Environment.TickCount%2A> property value is a 32-bit signed integer, if the system runs continuously, <xref:System.Environment.TickCount%2A> will increment from zero to <xref:System.Int32.MaxValue?displayProperty=nameWithType> for approximately 24.9 days, then jump to <xref:System.Int32.MinValue?displayProperty=nameWithType>, which is a negative number, then increment back to zero during the next 24.9 days.</span></span> <span data-ttu-id="f89e4-536">可以通过调用 Windows 来解决此问题[GetTickCount](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx)函数，它将重置为零大约 49.7 天，或通过调用[GetTickCount64](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx)函数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-536">You can work around this issue by calling the Windows [GetTickCount](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx) function, which resets to zero after approximately 49.7 days, or by calling the [GetTickCount64](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx) function.</span></span>  
  
 <span data-ttu-id="f89e4-537"><xref:System.Environment.TickCount%2A> 不同于<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>属性，它是 0001 年 1 月 1 日，12:00 am 起经过的 100 纳秒间隔数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-537"><xref:System.Environment.TickCount%2A> is different from the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property, which is the number of 100-nanosecond intervals that have elapsed since 1/1/0001, 12:00am.</span></span>  
  
 <span data-ttu-id="f89e4-538">使用<xref:System.DateTime.Now%2A?displayProperty=nameWithType>属性来获取当前本地日期和时间在此计算机上的。</span><span class="sxs-lookup"><span data-stu-id="f89e4-538">Use the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to obtain the current local date and time on this computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-539">下面的示例演示如何检索返回值的正值范围<xref:System.Environment.TickCount%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-539">The following example demonstrates how to retrieve the positive range of values returned by the <xref:System.Environment.TickCount%2A> property.</span></span> <span data-ttu-id="f89e4-540"><xref:System.Environment.TickCount%2A>属性之间循环<xref:System.Int32.MinValue?displayProperty=nameWithType>，这是负数，和<xref:System.Int32.MaxValue?displayProperty=nameWithType>49.8 天一次。</span><span class="sxs-lookup"><span data-stu-id="f89e4-540">The <xref:System.Environment.TickCount%2A> property cycles between <xref:System.Int32.MinValue?displayProperty=nameWithType>, which is a negative number, and <xref:System.Int32.MaxValue?displayProperty=nameWithType> once every 49.8 days.</span></span> <span data-ttu-id="f89e4-541">此代码示例会删除符号位，以生成一个非负数字，周期介于零和<xref:System.Int32.MaxValue>24.9 天。</span><span class="sxs-lookup"><span data-stu-id="f89e4-541">This code sample removes the sign bit to yield a nonnegative number that cycles between zero and <xref:System.Int32.MaxValue> once every 24.9 days.</span></span>  
  
 [!code-cpp[environment.tickcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.TickCount/CPP/tickcount.cpp#1)]
 [!code-csharp[environment.tickcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.TickCount/CS/tickcount.cs#1)]
 [!code-vb[environment.tickcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.TickCount/VB/tickcount.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickCount64">
      <MemberSignature Language="C#" Value="public static long TickCount64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 TickCount64" />
      <MemberSignature Language="DocId" Value="P:System.Environment.TickCount64" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TickCount64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long TickCount64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TickCount64 : int64" Usage="System.Environment.TickCount64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDomainName">
      <MemberSignature Language="C#" Value="public static string UserDomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserDomainName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserDomainName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserDomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserDomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserDomainName : string" Usage="System.Environment.UserDomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-542">获取与当前用户关联的网络域名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-542">Gets the network domain name associated with the current user.</span></span></summary>
        <value><span data-ttu-id="f89e4-543">与当前用户关联的网络域名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-543">The network domain name associated with the current user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-544">用户的域帐户凭据的格式为用户的域名称\\字符和用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-544">The domain account credentials for a user are formatted as the user's domain name, the '\\' character, and user name.</span></span> <span data-ttu-id="f89e4-545">使用<xref:System.Environment.UserDomainName%2A>属性来获取用户的域名，而无需用户名称和<xref:System.Environment.UserName%2A>属性来获取不包含域名称的用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-545">Use the <xref:System.Environment.UserDomainName%2A> property to obtain the user's domain name without the user name, and the <xref:System.Environment.UserName%2A> property to obtain the user name without the domain name.</span></span>  <span data-ttu-id="f89e4-546">例如，如果用户的域名和用户名是 CORPORATENETWORK\john，<xref:System.Environment.UserDomainName%2A>属性将返回"企业网络"。</span><span class="sxs-lookup"><span data-stu-id="f89e4-546">For example, if a user's domain name and user name are CORPORATENETWORK\john, the <xref:System.Environment.UserDomainName%2A> property returns "CORPORATENETWORK".</span></span>  
  
 <span data-ttu-id="f89e4-547"><xref:System.Environment.UserDomainName%2A>属性首先尝试获取当前用户的 Windows 帐户名的域名称组件。</span><span class="sxs-lookup"><span data-stu-id="f89e4-547">The <xref:System.Environment.UserDomainName%2A> property first attempts to get the domain name component of the Windows account name for the current user.</span></span> <span data-ttu-id="f89e4-548">如果该尝试失败，此属性尝试获取由提供的用户名相关联的域名<xref:System.Environment.UserName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f89e4-548">If that attempt fails, this property attempts to get the domain name associated with the user name provided by the <xref:System.Environment.UserName%2A> property.</span></span> <span data-ttu-id="f89e4-549">如果该尝试失败，因为在主计算机未加入到域，则返回主机计算机名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-549">If that attempt fails because the host computer is not joined to a domain, then the host computer name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f89e4-550">操作系统不支持检索网络域名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-550">The operating system does not support retrieving the network domain name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f89e4-551">无法检索的网络域名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-551">The network domain name cannot be retrieved.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-552">USERDOMAIN 环境变量对的读取权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-552">for read access to the USERDOMAIN environment variable.</span></span> <span data-ttu-id="f89e4-553">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-553">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="P:System.Environment.UserName" />
      </Docs>
    </Member>
    <Member MemberName="UserInteractive">
      <MemberSignature Language="C#" Value="public static bool UserInteractive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UserInteractive" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserInteractive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserInteractive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UserInteractive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInteractive : bool" Usage="System.Environment.UserInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-554">获取一个值，用以指示当前进程是否在用户交互模式中运行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-554">Gets a value indicating whether the current process is running in user interactive mode.</span></span></summary>
        <value><span data-ttu-id="f89e4-555">如果当前进程在用户交互模式中运行，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f89e4-555"><see langword="true" /> if the current process is running in user interactive mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-556"><xref:System.Environment.UserInteractive%2A>属性报告`false`Windows 进程或运行不通过用户界面的 IIS 这样的服务。</span><span class="sxs-lookup"><span data-stu-id="f89e4-556">The <xref:System.Environment.UserInteractive%2A> property reports `false` for a Windows process or a service like IIS that runs without a user interface.</span></span> <span data-ttu-id="f89e4-557">如果此属性为`false`、 不显示模式对话框或消息框，因为没有图形用户界面要与之交互的用户。</span><span class="sxs-lookup"><span data-stu-id="f89e4-557">If this property is `false`, do not display modal dialogs or message boxes because there is no graphical user interface for the user to interact with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-558">以下示例显示是否在当前进程在用户交互模式下运行。</span><span class="sxs-lookup"><span data-stu-id="f89e4-558">The following example displays whether the current process is running in user interactive mode.</span></span>  
  
 [!code-cpp[Environment.UserInteractive#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserInteractive/CPP/userinteractive.cpp#1)]
 [!code-csharp[Environment.UserInteractive#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserInteractive/CS/userinteractive.cs#1)]
 [!code-vb[Environment.UserInteractive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserInteractive/VB/userinteractive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Environment.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-559">获取当前已登录到操作系统的人员的用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-559">Gets the user name of the person who is currently logged on to the operating system.</span></span></summary>
        <value><span data-ttu-id="f89e4-560">登录到操作系统的用户的用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-560">The user name of the person who is logged on to the operating system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-561">可以使用<xref:System.Environment.UserName%2A>属性来标识系统和应用程序安全性或访问时，在当前线程上的用户。</span><span class="sxs-lookup"><span data-stu-id="f89e4-561">You can use the <xref:System.Environment.UserName%2A> property to identify the user on the current thread, to the system and application for security or access purposes.</span></span> <span data-ttu-id="f89e4-562">它还可以用于自定义每个用户的特定应用程序。</span><span class="sxs-lookup"><span data-stu-id="f89e4-562">It can also be used to customize a particular application for each user.</span></span>  
 
 <span data-ttu-id="f89e4-563">在 Windows 上<xref:System.Environment.UserName%2A>属性包装了对 Windows 的调用[GetUserName](https://msdn.microsoft.com/library/windows/desktop/ms724432.aspx)函数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-563">On Windows the <xref:System.Environment.UserName%2A> property wraps a call to the Windows [GetUserName](https://msdn.microsoft.com/library/windows/desktop/ms724432.aspx) function.</span></span> <span data-ttu-id="f89e4-564">用户的域帐户凭据的格式为用户的域名称\\字符和用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-564">The domain account credentials for a user are formatted as the user's domain name, the '\\' character, and user name.</span></span> <span data-ttu-id="f89e4-565">使用<xref:System.Environment.UserDomainName%2A>属性来获取用户的域名和<xref:System.Environment.UserName%2A>属性来获取用户名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-565">Use the <xref:System.Environment.UserDomainName%2A> property to obtain the user's domain name and the <xref:System.Environment.UserName%2A> property to obtain the user name.</span></span>  
 
 <span data-ttu-id="f89e4-566">在 Unix 平台上<xref:System.Environment.UserName%2A>属性包装调用`getpwuid_r`函数。</span><span class="sxs-lookup"><span data-stu-id="f89e4-566">On Unix platforms the <xref:System.Environment.UserName%2A> property wraps a call to the `getpwuid_r` function.</span></span>
 
 <span data-ttu-id="f89e4-567">如果 ASP.NET 应用程序在开发环境中，运行<xref:System.Environment.UserName%2A>属性返回当前用户的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-567">If an ASP.NET application runs in a development environment, the <xref:System.Environment.UserName%2A> property returns the name of the current user.</span></span> <span data-ttu-id="f89e4-568">在已发布的 ASP.NET 应用程序中，此属性返回 （例如默认应用程序池） 的应用程序池帐户的名称。</span><span class="sxs-lookup"><span data-stu-id="f89e4-568">In a published ASP.NET application, this property returns the name of the application pool account (such as Default AppPool).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-569">下面的示例显示启动当前线程的人员的用户名。</span><span class="sxs-lookup"><span data-stu-id="f89e4-569">The following example displays the user name of the person who started the current thread.</span></span>  
  
 [!code-cpp[Environment.UserName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserName/CPP/username.cpp#1)]
 [!code-csharp[Environment.UserName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserName/CS/username.cs#1)]
 [!code-vb[Environment.UserName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserName/VB/username.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-570">用于读取 USERNAME 的环境变量的访问。</span><span class="sxs-lookup"><span data-stu-id="f89e4-570">for read access to the USERNAME environment variable.</span></span> <span data-ttu-id="f89e4-571">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-571">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
        <altmember cref="P:System.Environment.UserDomainName" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public static Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Version" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Environment.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-572">获取一个 <see cref="T:System.Version" /> 对象，该对象描述公共语言运行时的主版本、次版本、内部版本和修订号。</span><span class="sxs-lookup"><span data-stu-id="f89e4-572">Gets a <see cref="T:System.Version" /> object that describes the major, minor, build, and revision numbers of the common language runtime.</span></span></summary>
        <value><span data-ttu-id="f89e4-573">用于显示公共语言运行时版本的对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-573">An object that displays the version of the common language runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f89e4-574">对于 .NET Framework 版本 4、4.5、4.5.1 和 4.5.2，<xref:System.Environment.Version%2A?displayProperty=nameWithType> 属性返回字符串表现形式具有窗体 `4.0.30319.xxxxx` 的 <xref:System.Version> 对象。</span><span class="sxs-lookup"><span data-stu-id="f89e4-574">For the .NET Framework Versions 4, 4.5, 4.5.1, and 4.5.2, the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property returns a <xref:System.Version> object whose string representation has the form `4.0.30319.xxxxx`.</span></span> <span data-ttu-id="f89e4-575">对于.NET Framework 4.6 和更高版本，它具有窗体`4.0.30319.42000`。</span><span class="sxs-lookup"><span data-stu-id="f89e4-575">For the .NET Framework 4.6 and later versions, it has the form `4.0.30319.42000`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f89e4-576">有关[!INCLUDE[net_v45](~/includes/net-v45-md.md)]和更高版本，我们不建议使用<xref:System.Environment.Version%2A>属性来检测运行时; 的版本相反，您可以通过查询注册表来确定公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-576">For the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later, we do not recommend using the <xref:System.Environment.Version%2A> property to detect the version of the runtime; instead, you can determine the version of the common language runtime by querying the registry.</span></span> <span data-ttu-id="f89e4-577">有关详细信息，请参阅[如何：确定已安装的 .NET Framework 版本](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-577">For more information, see [How to: Determine Which .NET Framework Versions Are Installed](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md).</span></span>  
  
 <span data-ttu-id="f89e4-578">有关与每个版本的.NET Framework 一起安装的公共语言运行时版本的详细信息，请参阅[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="f89e4-578">For more information about the version of the common language runtime that is installed with each version of the .NET Framework, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f89e4-579">下面的示例显示公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="f89e4-579">The following example displays the version of the common language runtime.</span></span> <span data-ttu-id="f89e4-580">（省略了版本为安全起见，示例输出中。）</span><span class="sxs-lookup"><span data-stu-id="f89e4-580">(The version is omitted from the example output for security reasons.)</span></span>  
  
 [!code-cpp[Environment.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.Version/CPP/version.cpp#1)]
 [!code-csharp[Environment.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.Version/CS/version.cs#1)]
 [!code-vb[Environment.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.Version/VB/version.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public static long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Environment.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="System.Environment.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f89e4-581">获取映射到进程上下文的物理内存量。</span><span class="sxs-lookup"><span data-stu-id="f89e4-581">Gets the amount of physical memory mapped to the process context.</span></span></summary>
        <value><span data-ttu-id="f89e4-582">一个 64 位带符号整数，包含映射到进程上下文的物理内存字节的数目。</span><span class="sxs-lookup"><span data-stu-id="f89e4-582">A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f89e4-583">下面的示例显示的计算机运行的代码示例的工作集的大小。</span><span class="sxs-lookup"><span data-stu-id="f89e4-583">The following example displays the size of the working set of the computer that runs the code example.</span></span>  
  
 [!code-cpp[Environment.WorkingSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.WorkingSet/CPP/workingset.cpp#1)]
 [!code-csharp[Environment.WorkingSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.WorkingSet/CS/workingset.cs#1)]
 [!code-vb[Environment.WorkingSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.WorkingSet/VB/workingset.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f89e4-584">此权限所保护的资源的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="f89e4-584">for full access to the resource protected by this permission.</span></span> <span data-ttu-id="f89e4-585">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f89e4-585">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
