<Type Name="Uri" FullName="System.Uri">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e4cd85d200995497251ec30e82b6fcf62e362f1" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66818856" /></Metadata><TypeSignature Language="C#" Value="public class Uri : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Uri extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Uri" />
  <TypeSignature Language="VB.NET" Value="Public Class Uri&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Uri : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Uri = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="83204-101">提供统一资源标识符 (URI) 的对象表示形式和对 URI 各部分的轻松访问。</span><span class="sxs-lookup"><span data-stu-id="83204-101">Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-102">URI 是可用于在 intranet 或 Internet 上的应用程序资源的简洁表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-102">A URI is a compact representation of a resource available to your application on the intranet or Internet.</span></span> <span data-ttu-id="83204-103"><xref:System.Uri>类定义的属性和方法来处理 Uri，包括分析、 比较和合并。</span><span class="sxs-lookup"><span data-stu-id="83204-103">The <xref:System.Uri> class defines the properties and methods for handling URIs, including parsing, comparing, and combining.</span></span> <span data-ttu-id="83204-104"><xref:System.Uri>类属性是只读的; 若要创建一个可修改的对象，使用<xref:System.UriBuilder>类。</span><span class="sxs-lookup"><span data-stu-id="83204-104">The <xref:System.Uri> class properties are read-only; to create a modifiable object, use the <xref:System.UriBuilder> class.</span></span>  
  
 <span data-ttu-id="83204-105">相对 Uri (例如，"/ new/index.htm")，以便它们绝对必须展开相对于基 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-105">Relative URIs (for example, "/new/index.htm") must be expanded with respect to a base URI so that they are absolute.</span></span> <span data-ttu-id="83204-106"><xref:System.Uri.MakeRelative%2A>方法提供要转换为在必要时的相对 Uri 的绝对 Uri。</span><span class="sxs-lookup"><span data-stu-id="83204-106">The <xref:System.Uri.MakeRelative%2A> method is provided to convert absolute URIs to relative URIs when necessary.</span></span>  
  
 <span data-ttu-id="83204-107"><xref:System.Uri>构造函数字符串是否格式正确的 URI，包括方案标识符未转义 URI 字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-107">The <xref:System.Uri> constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.</span></span>  
  
 <span data-ttu-id="83204-108"><xref:System.Uri>属性返回规范化数据表示形式中转义的编码，其中包含所有字符 Unicode 值大于 127 替换为其十六进制等效项。</span><span class="sxs-lookup"><span data-stu-id="83204-108">The <xref:System.Uri> properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents.</span></span> <span data-ttu-id="83204-109">为使采用规范格式的 URI<xref:System.Uri>构造函数将执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="83204-109">To put the URI in canonical form, the <xref:System.Uri> constructor performs the following steps:</span></span>  
  
-   <span data-ttu-id="83204-110">将 URI 方案转换为小写。</span><span class="sxs-lookup"><span data-stu-id="83204-110">Converts the URI scheme to lowercase.</span></span>  
  
-   <span data-ttu-id="83204-111">将主机名转换为小写。</span><span class="sxs-lookup"><span data-stu-id="83204-111">Converts the host name to lowercase.</span></span>  
  
-   <span data-ttu-id="83204-112">如果主机名是 IPv6 地址，则使用规范的 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="83204-112">If the host name is an IPv6 address, the canonical IPv6 address is used.</span></span> <span data-ttu-id="83204-113">删除 ScopeId 和其他可选的 IPv6 数据。</span><span class="sxs-lookup"><span data-stu-id="83204-113">ScopeId and other optional IPv6 data are removed.</span></span>  
  
-   <span data-ttu-id="83204-114">删除默认值和空的端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-114">Removes default and empty port numbers.</span></span>
  
-   <span data-ttu-id="83204-115">将隐式文件路径，而无需 file:// 方案 (例如，"C:\my\file") 转换为显式文件路径的 file:// 方案。</span><span class="sxs-lookup"><span data-stu-id="83204-115">Converts implicit file paths without the file:// scheme (for example, "C:\my\file") to explicit file paths with the file:// scheme.</span></span>
  
-   <span data-ttu-id="83204-116">没有保留的用途的转义的字符 （也称为百分比编码八位字节） 为解码状态 （也称为进行转义的情况）。</span><span class="sxs-lookup"><span data-stu-id="83204-116">Escaped characters (also known as percent-encoded octets) that don't have a reserved purpose are decoded (also known as being unescaped).</span></span> <span data-ttu-id="83204-117">这些非保留的字符包括大写和小写字母 (%41-%5a 和 %61-%7a)、 小数位数 （%30-%39)、 连字符 (%2d)、 句点 (%2e) 下划线 (%5f) 和颚化符 (%7e)。</span><span class="sxs-lookup"><span data-stu-id="83204-117">These unreserved characters include uppercase and lowercase letters (%41-%5A and %61-%7A), decimal digits (%30-%39), hyphen (%2D), period (%2E), underscore (%5F), and tilde (%7E).</span></span>

-   <span data-ttu-id="83204-118">Canonicalizes 路径的分层 Uri 由压缩序列如 /。 /.../，和 / / （是否转义序列）。</span><span class="sxs-lookup"><span data-stu-id="83204-118">Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, and // (whether or not the sequence is escaped).</span></span> <span data-ttu-id="83204-119">请注意，有不压缩这些序列的一些方案。</span><span class="sxs-lookup"><span data-stu-id="83204-119">Note that there are some schemes for which these sequences are not compacted.</span></span>
  
-   <span data-ttu-id="83204-120">用于分层 Uri 时，如果主机未终止以正斜杠 （/），则添加一个。</span><span class="sxs-lookup"><span data-stu-id="83204-120">For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.</span></span>  
  
-   <span data-ttu-id="83204-121">默认情况下，根据 RFC 2396 转义的 URI 中的任何保留的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-121">By default, any reserved characters in the URI are escaped in accordance with RFC 2396.</span></span> <span data-ttu-id="83204-122">此行为更改如果国际资源标识符或国际域名分析启用了在 URI 中的保留字符进行转义根据 RFC 3986 和 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-122">This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.</span></span>

 <span data-ttu-id="83204-123">作为某些方案、 点段和空段的构造函数中的规范化的一部分 (/。 /.../，和 / /) 压缩的 （即，删除了）。</span><span class="sxs-lookup"><span data-stu-id="83204-123">As part of canonicalization in the constructor for some schemes, dot-segments and empty segments (/./, /../, and //) are compacted (in other words, they are removed).</span></span> <span data-ttu-id="83204-124">URI 将为其压缩这些序列的方案包括 http、 https、 tcp、 net.pipe 和 net.tcp。</span><span class="sxs-lookup"><span data-stu-id="83204-124">The schemes for which URI will compact these sequences include http, https, tcp, net.pipe, and net.tcp.</span></span> <span data-ttu-id="83204-125">对于其他方案，这些序列不会进行压缩。</span><span class="sxs-lookup"><span data-stu-id="83204-125">For some other schemes, these sequences are not compacted.</span></span> <span data-ttu-id="83204-126">下面是在实践中的此压缩外观。</span><span class="sxs-lookup"><span data-stu-id="83204-126">Here's how this compacting looks in practice.</span></span>
  
```  
var uri = new Uri("http://myUrl/../.."); // http scheme, unescaped
OR
var uri = new Uri("http://myUrl/%2E%2E/%2E%2E"); // http scheme, escaped
OR
var uri = new Uri("ftp://myUrl/../.."); // ftp scheme, unescaped
OR
var uri = new Uri("ftp://myUrl/%2E%2E/%2E%2E"); // ftp scheme, escaped

Console.WriteLine(uri.AbsoluteUri);  
Console.WriteLine(uri.PathAndQuery);  
```  
  
 <span data-ttu-id="83204-127">此代码执行时，它返回以下输出，如有必要进行非转义，然后压缩的转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-127">When this code is executed, it returns the following output, with the escaped sequences unescaped if necessary and then compacted.</span></span>

```  
http://myUrl/  
/  
```  
  
 <span data-ttu-id="83204-128">可以将转换的内容<xref:System.Uri>类从与可读的 URI 引用通过使用编码的转义 URI 引用<xref:System.Uri.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="83204-128">You can transform the contents of the <xref:System.Uri> class from an escape encoded URI reference to a readable URI reference by using the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="83204-129">请注意，可能仍保留的某些字符进行转义的输出中<xref:System.Uri.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="83204-129">Note that some reserved characters might still be escaped in the output of the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="83204-130">这是为了支持从返回的值的 URI 的明确重新构造<xref:System.Uri.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="83204-130">This is to support unambiguous reconstruction of a URI from the value returned by <xref:System.Uri.ToString%2A>.</span></span>  
  
 <span data-ttu-id="83204-131">某些 Uri 包含片段标识符和/或查询。</span><span class="sxs-lookup"><span data-stu-id="83204-131">Some URIs include a fragment identifier or a query or both.</span></span> <span data-ttu-id="83204-132">片断标识符是任何文本，跟在数字符号 （#），不包括数字符号;片段文本存储在<xref:System.Uri.Fragment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="83204-132">A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <xref:System.Uri.Fragment%2A> property.</span></span> <span data-ttu-id="83204-133">查询信息是遵循 URI; 中为问号 （？） 的任何文本查询文本将存储在<xref:System.Uri.Query%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="83204-133">Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <xref:System.Uri.Query%2A> property.</span></span>  
  
 <span data-ttu-id="83204-134">.NET Framework 版本 1.1 中，如果构造函数指定的字符串包含未知的方案中和"c:\\"，Uri 类插入"/ /"冒号后面。</span><span class="sxs-lookup"><span data-stu-id="83204-134">In the .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and "c:\\", the Uri class inserts "//" after the colon.</span></span> <span data-ttu-id="83204-135">例如，URI`xyz:c:\abc`转换为`xyz://c:/abc`。</span><span class="sxs-lookup"><span data-stu-id="83204-135">For example, the URI `xyz:c:\abc` is converted to `xyz://c:/abc`.</span></span> <span data-ttu-id="83204-136">在.NET Framework 2.0 版中，此行为已被删除，并且示例字符串转换为`xyz:c:/abc`。</span><span class="sxs-lookup"><span data-stu-id="83204-136">In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to `xyz:c:/abc`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83204-137">URI 类支持 IPv4 协议的两个四组表示法和冒号十六进制的 IPv6 协议中使用的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="83204-137">The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol.</span></span> <span data-ttu-id="83204-138">请记住将 IPv6 地址括在方括号内，如下所示 http://[::1]。</span><span class="sxs-lookup"><span data-stu-id="83204-138">Remember to enclose the IPv6 address in square brackets, as in http://[::1].</span></span>  
  
## <a name="international-resource-identifier-support"></a><span data-ttu-id="83204-139">国际资源标识符支持</span><span class="sxs-lookup"><span data-stu-id="83204-139">International Resource Identifier Support</span></span>  
 <span data-ttu-id="83204-140">Web 地址通常表示使用统一资源标识符构成的一组非常有限的字符：</span><span class="sxs-lookup"><span data-stu-id="83204-140">Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:</span></span>  
  
-   <span data-ttu-id="83204-141">英文字母表中的大小写 ASCII 字母。</span><span class="sxs-lookup"><span data-stu-id="83204-141">Upper and lower case ASCII letters from the English alphabet.</span></span>  
  
-   <span data-ttu-id="83204-142">从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="83204-142">Digits from 0 to 9.</span></span>  
  
-   <span data-ttu-id="83204-143">少量的其他 ASCII 符号。</span><span class="sxs-lookup"><span data-stu-id="83204-143">A small number of other ASCII symbols.</span></span>  
  
 <span data-ttu-id="83204-144">Uri 的规范记录在 RFC 2396、 RFC 2732、 RFC 3986 和 RFC 3987 发布 Internet 工程任务组 (IETF) 中。</span><span class="sxs-lookup"><span data-stu-id="83204-144">The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).</span></span>  
  
 <span data-ttu-id="83204-145">随着 Internet 的发展，越来越需要使用英语以外的语言识别资源。</span><span class="sxs-lookup"><span data-stu-id="83204-145">With the growth of the Internet, there is a growing need to identify resources using languages other than English.</span></span> <span data-ttu-id="83204-146">标识符满足了这种需求，并且使得非 ASCII 字符（Unicode 中的字符/ISO 10646 字符集）被称为国际资源标识符（IRI）。</span><span class="sxs-lookup"><span data-stu-id="83204-146">Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs).</span></span> <span data-ttu-id="83204-147">IETF 发布的 RFC 3987 记录了 IRI 的规格。</span><span class="sxs-lookup"><span data-stu-id="83204-147">The specifications for IRIs are documented in RFC 3987 published by IETF.</span></span> <span data-ttu-id="83204-148">使用 IRI 允许 URL 包含 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="83204-148">Using IRIs allows a URL to contain Unicode characters.</span></span>  
  
 <span data-ttu-id="83204-149">现有<xref:System.Uri>类进行了扩展在.NET Framework 3.5 版，3.0 SP1 和 2.0 SP1 提供 IRI 支持根据 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-149">The existing <xref:System.Uri> class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987.</span></span> <span data-ttu-id="83204-150">除非他们专门启用 IRI，.NET Framework 版本 4.5 之前的版本中的用户不会从.NET Framework 2.0 行为的任何更改。</span><span class="sxs-lookup"><span data-stu-id="83204-150">Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="83204-151">这确保了 NET Framework 以前版本的应用程序兼容性。</span><span class="sxs-lookup"><span data-stu-id="83204-151">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="83204-152">若要启用 IRI 支持，则需要以下更改：</span><span class="sxs-lookup"><span data-stu-id="83204-152">To enable support for IRI, the following change is required:</span></span>  
  
-   <span data-ttu-id="83204-153">指定是否对域名应用国际化域名 (IDN) 分析以及是否应该应用 IRI 分析规则。</span><span class="sxs-lookup"><span data-stu-id="83204-153">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="83204-154">这可以实现*machine.config*中或在*app.config*文件。</span><span class="sxs-lookup"><span data-stu-id="83204-154">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="83204-155">例如，添加以下代码：</span><span class="sxs-lookup"><span data-stu-id="83204-155">For example, add the following:</span></span>  
  
    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="83204-156">.NET Framework 4.5 和更高版本的用户始终拥有启用 IRI。</span><span class="sxs-lookup"><span data-stu-id="83204-156">Users of .NET Framework 4.5 and newer always have IRI enabled.</span></span> <span data-ttu-id="83204-157">IRI 分析不能更改使用 *.config*文件。</span><span class="sxs-lookup"><span data-stu-id="83204-157">IRI parsing cannot be changed using a *.config* file.</span></span>  
  
 <span data-ttu-id="83204-158">启用 IDN 可以将域名中所有 Unicode 标签转换成标签的 Punycode 等同项。</span><span class="sxs-lookup"><span data-stu-id="83204-158">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="83204-159">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-159">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="83204-160">这样是为了支持 Internet 上的 DNS 服务器，因为大部分 DNS 服务器仅支持 ASCII 字符（参见 RFC 3940）。</span><span class="sxs-lookup"><span data-stu-id="83204-160">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="83204-161">启用 IRI 和 IDN 会影响 <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="83204-161">Enabling IRI and IDN affects the value of the <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="83204-162">启用 IRI 和 IDN 还可能更改 <xref:System.Uri.Equals%2A>、<xref:System.Uri.OriginalString%2A>、<xref:System.Uri.GetComponents%2A> 和 <xref:System.Uri.IsWellFormedOriginalString%2A> 方法的行为。</span><span class="sxs-lookup"><span data-stu-id="83204-162">Enabling IRI and IDN can also change the behavior of the <xref:System.Uri.Equals%2A>, <xref:System.Uri.OriginalString%2A>, <xref:System.Uri.GetComponents%2A>, and <xref:System.Uri.IsWellFormedOriginalString%2A> methods.</span></span>  
  
 <span data-ttu-id="83204-163">有三个可能的 IDN 值具体取决于使用的 DNS 服务器：</span><span class="sxs-lookup"><span data-stu-id="83204-163">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
-   <span data-ttu-id="83204-164">启用 idn = All</span><span class="sxs-lookup"><span data-stu-id="83204-164">idn enabled = All</span></span>  
  
     <span data-ttu-id="83204-165">此值会将所有 Unicode 域名转换为它们的 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="83204-165">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
-   <span data-ttu-id="83204-166">启用 idn = AllExceptIntranet</span><span class="sxs-lookup"><span data-stu-id="83204-166">idn enabled = AllExceptIntranet</span></span>  
  
     <span data-ttu-id="83204-167">此值会将不在使用 Punycode 等效项 （IDN 名称） 在本地 Intranet 上的所有 Unicode 域名都转换。</span><span class="sxs-lookup"><span data-stu-id="83204-167">This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="83204-168">在这种情况下若要处理本地 Intranet 上的国际化名称，用于 Intranet 的 DNS 服务器应该支持 Unicode 名称解析。</span><span class="sxs-lookup"><span data-stu-id="83204-168">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.</span></span>  
  
-   <span data-ttu-id="83204-169">启用 idn = 无</span><span class="sxs-lookup"><span data-stu-id="83204-169">idn enabled = None</span></span>  
  
     <span data-ttu-id="83204-170">此值不会将任何 Unicode 域名转换为使用 Punycode。</span><span class="sxs-lookup"><span data-stu-id="83204-170">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="83204-171">这是默认值是与.NET Framework 2.0 行为一致。</span><span class="sxs-lookup"><span data-stu-id="83204-171">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="83204-172">当启用 IRI 分析 (iriParsing 启用 = `true`) 根据 RFC 3986 和 RFC 3987 中的最新 IRI 规则执行规范化和字符检查。</span><span class="sxs-lookup"><span data-stu-id="83204-172">When IRI parsing is enabled (iriParsing enabled = `true`) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="83204-173">禁用 IRI 分析后，规范化和字符检查会根据 RFC 2396 和 RFC 2732 （对执行 IPv6 文本）。</span><span class="sxs-lookup"><span data-stu-id="83204-173">When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  <span data-ttu-id="83204-174">在.NET Framework 版本 4.5 之前的版本中，默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="83204-174">In versions of the .NET Framework before version 4.5, the default value is `false`.</span></span> <span data-ttu-id="83204-175">在.NET Framework 4.5 和更高版本中，默认值是`true`，并且不能由中设置修改的 IRI 分析的启用的状态 *.config*文件。</span><span class="sxs-lookup"><span data-stu-id="83204-175">In .NET Framework version 4.5 and newer, the default value is `true`, and the enabled state of IRI parsing cannot be modified by settings in a *.config* file.</span></span>  
  
 <span data-ttu-id="83204-176">IRI 和 IDN 中处理<xref:System.Uri>还可以使用控制类<xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>， <xref:System.Configuration.IdnElement?displayProperty=nameWithType>，和<xref:System.Configuration.UriSection?displayProperty=nameWithType>配置设置类。</span><span class="sxs-lookup"><span data-stu-id="83204-176">IRI and IDN processing in the <xref:System.Uri> class can also be controlled using the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>, <xref:System.Configuration.IdnElement?displayProperty=nameWithType>, and <xref:System.Configuration.UriSection?displayProperty=nameWithType> configuration setting classes.</span></span> <span data-ttu-id="83204-177"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 设置启用或禁用 <xref:System.Uri> 类中的 IRI 处理。</span><span class="sxs-lookup"><span data-stu-id="83204-177">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting enables or disables IRI processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="83204-178"><xref:System.Configuration.IdnElement?displayProperty=nameWithType> 设置启用或禁用 <xref:System.Uri> 类中的 IDN 处理。</span><span class="sxs-lookup"><span data-stu-id="83204-178">The <xref:System.Configuration.IdnElement?displayProperty=nameWithType> setting enables or disables IDN processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="83204-179"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 也可间接控制 IDN。</span><span class="sxs-lookup"><span data-stu-id="83204-179">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting also indirectly controls IDN.</span></span> <span data-ttu-id="83204-180">必须启用 IRI 处理才能进行 IDN 处理。</span><span class="sxs-lookup"><span data-stu-id="83204-180">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="83204-181">如果禁用 IRI，IDN 处理将被设置为默认值，这时 NET Framework 2.0 行为用于兼容性，并且 IDN 名称不可用。</span><span class="sxs-lookup"><span data-stu-id="83204-181">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="83204-182">配置设置<xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>并<xref:System.Configuration.IdnElement?displayProperty=nameWithType>将读取一次时第一个<xref:System.Uri?displayProperty=nameWithType>构造类。</span><span class="sxs-lookup"><span data-stu-id="83204-182">The configuration setting for the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> and <xref:System.Configuration.IdnElement?displayProperty=nameWithType> will be read once when the first <xref:System.Uri?displayProperty=nameWithType> class is constructed.</span></span> <span data-ttu-id="83204-183">忽略时间后更改为默认设置。</span><span class="sxs-lookup"><span data-stu-id="83204-183">Changes to configuration settings after that time are ignored.</span></span>  
  
 <span data-ttu-id="83204-184"><xref:System.GenericUriParser?displayProperty=nameWithType> 类已得到扩展，允许创建支持 IRI 和 IDN 的自定义分析。</span><span class="sxs-lookup"><span data-stu-id="83204-184">The <xref:System.GenericUriParser?displayProperty=nameWithType> class has also been extended to allow creating a customizable parser that supports IRI and IDN.</span></span> <span data-ttu-id="83204-185">通过将枚举中可用值的按位组合传递给 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 构造函数 <xref:System.GenericUriParser?displayProperty=nameWithType> 来指定 <xref:System.GenericUriParser?displayProperty=nameWithType> 对象的行为。</span><span class="sxs-lookup"><span data-stu-id="83204-185">The behavior of a <xref:System.GenericUriParser?displayProperty=nameWithType> object is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to the <xref:System.GenericUriParser?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="83204-186"><xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> 类型表示分析程序支持 RFC 3987 中为国际资源标识符 (IRI) 指定的分析规则。</span><span class="sxs-lookup"><span data-stu-id="83204-186">The <xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI).</span></span> <span data-ttu-id="83204-187">是否使用 IRI 由前面讨论的配置值指定。</span><span class="sxs-lookup"><span data-stu-id="83204-187">Whether IRI is used is dictated by the configuration values previously discussed.</span></span>  
  
 <span data-ttu-id="83204-188"><xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> 类型表示分析程序支持主机名的国际化域名 (IDN) 分析。</span><span class="sxs-lookup"><span data-stu-id="83204-188">The <xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names.</span></span> <span data-ttu-id="83204-189">是否使用 IDN 由前面讨论的配置值指定。</span><span class="sxs-lookup"><span data-stu-id="83204-189">Whether IDN is used is dictated by the configuration values previously discussed.</span></span>  
  
## <a name="implicit-file-path-support"></a><span data-ttu-id="83204-190">隐式文件路径支持</span><span class="sxs-lookup"><span data-stu-id="83204-190">Implicit File Path Support</span></span>
 <span data-ttu-id="83204-191"><xref:System.Uri> 此外可以用于表示本地文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="83204-191"><xref:System.Uri> can also be used to represent local file system paths.</span></span> <span data-ttu-id="83204-192">这些路径可以表示*显式*file:// 方案开头的 Uri 中并*隐式*中没有的 file:// 方案的 Uri。</span><span class="sxs-lookup"><span data-stu-id="83204-192">These paths can be represented *explicitly* in URIs that begin with the file:// scheme, and *implicitly* in URIs that do not have the file:// scheme.</span></span> <span data-ttu-id="83204-193">作为一个具体示例，以下两个 Uri 都是有效，并表示相同的文件路径：</span><span class="sxs-lookup"><span data-stu-id="83204-193">As a concrete example, the following two URIs are both valid, and represent the same file path:</span></span>
```csharp
Uri uri1 = new Uri("C:/test/path/file.txt") // Implicit file path.
Uri uri2 = new Uri("file:///C:/test/path/file.txt") // Explicit file path.
```
 <span data-ttu-id="83204-194">这些隐式文件路径不符合 URI 规范，因此应避免在可能的情况。</span><span class="sxs-lookup"><span data-stu-id="83204-194">These implicit file paths are not compliant with the URI specification and so should be avoided when possible.</span></span> <span data-ttu-id="83204-195">如果使用基于 Unix 的系统上的.NET Core，隐式文件路径尤其是有问题，由于可以隐式的绝对文件路径是*无法区分*从相对路径。</span><span class="sxs-lookup"><span data-stu-id="83204-195">When using .NET Core on Unix-based systems, implicit file paths can be especially problematic, because an absolute implicit file path is *indistinguishable* from a relative path.</span></span> <span data-ttu-id="83204-196">时就可能出现，这种多义性<xref:System.Uri>默认为解释为绝对 URI 的路径。</span><span class="sxs-lookup"><span data-stu-id="83204-196">When such ambiguity is present, <xref:System.Uri> default to interpreting the path as an absolute URI.</span></span>
  
## <a name="performance-considerations"></a><span data-ttu-id="83204-197">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="83204-197">Performance Considerations</span></span>  
 <span data-ttu-id="83204-198">如果使用 \*Web.config \* 处理 Uri，如果其方案标识符使用了非标准所需的文件，其中包含 Uri 来初始化应用程序、 其他时间。</span><span class="sxs-lookup"><span data-stu-id="83204-198">If you use a \*Web.config \*file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard.</span></span> <span data-ttu-id="83204-199">在这种情况下，当需要 Uri 时，不是在启动时初始化应用程序的受影响的部分。</span><span class="sxs-lookup"><span data-stu-id="83204-199">In such a case, initialize the affected parts of your application when the URIs are needed, not at start time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-200">下面的示例创建的实例<xref:System.Uri>类，并使用它来创建<xref:System.Net.WebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-200">The following example creates an instance of the <xref:System.Uri> class and uses it to create a <xref:System.Net.WebRequest> instance.</span></span>  
  
 [!code-cpp[Classic Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="83204-201">出于安全考虑，您的应用程序时应小心接受<see cref="T:System.Uri" />来自不受信任的源和使用的实例<paramref name="dontEscape" />设置为<see langword="true" />。可以通过调用检查有效性的 URI 字符串<see cref="M:System.Uri.IsWellFormedOriginalString" />方法。</span><span class="sxs-lookup"><span data-stu-id="83204-201">Because of security concerns, your application should use caution when accepting <see cref="T:System.Uri" /> instances from untrusted sources and with <paramref name="dontEscape" /> set to <see langword="true" />.You can check a URI string for validity by calling the <see cref="M:System.Uri.IsWellFormedOriginalString" /> method.</span></span></para></block>
    <altmember cref="T:System.Configuration.IdnElement" />
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="P:System.Uri.DnsSafeHost" />
    <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
    <altmember cref="M:System.Uri.IsWellFormedOriginalString" />
    <altmember cref="T:System.UriBuilder" />
    <related type="Article" href="https://msdn.microsoft.com/library/35883fe9-2d09-4d8b-80ca-cf23a941e459"><span data-ttu-id="83204-202">对 2.0 版中的 System.Uri 命名空间的更改</span><span class="sxs-lookup"><span data-stu-id="83204-202">Changes to the System.Uri namespace in Version 2.0</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e994c3-3535-4aff-8e1b-b69be22e9a22"><span data-ttu-id="83204-203">中 System.UriSystem.Uri 国际资源标识符支持</span><span class="sxs-lookup"><span data-stu-id="83204-203">International Resource Identifier Support in System.UriSystem.Uri</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/index.md"><span data-ttu-id="83204-204">.NET Framework 中的网络编程</span><span class="sxs-lookup"><span data-stu-id="83204-204">Network Programming in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83204-205">初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-205">Initializes a new instance of the <see cref="T:System.Uri" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new Uri : string -&gt; Uri" Usage="new System.Uri uriString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="83204-206">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-206">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="83204-207">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="83204-207">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="83204-208">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="83204-208">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <summary><span data-ttu-id="83204-209">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-209">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-210">此构造函数创建<xref:System.Uri>从 URI 字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-210">This constructor creates a <xref:System.Uri> instance from a URI string.</span></span> <span data-ttu-id="83204-211">它分析 URI，将其放入规范格式，并使任何所需的转义编码。</span><span class="sxs-lookup"><span data-stu-id="83204-211">It parses the URI, puts it in canonical format, and makes any required escape encodings.</span></span>  
  
 <span data-ttu-id="83204-212">此构造函数不能确保<xref:System.Uri>指的是可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="83204-212">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
 <span data-ttu-id="83204-213">此构造函数将假定`string`参数引用的绝对 URI，它是等效于调用<xref:System.Uri.%23ctor%2A>构造函数与<xref:System.UriKind>设置为<xref:System.UriKind.Absolute>。</span><span class="sxs-lookup"><span data-stu-id="83204-213">This constructor assumes that the `string` parameter references an absolute URI and is equivalent to calling the <xref:System.Uri.%23ctor%2A> constructor with <xref:System.UriKind> set to <xref:System.UriKind.Absolute>.</span></span> <span data-ttu-id="83204-214">如果`string`传递给构造函数的参数是一个相对 URI，此构造函数将引发<xref:System.UriFormatException>。</span><span class="sxs-lookup"><span data-stu-id="83204-214">If the `string` parameter passed to the constructor is a relative URI, this constructor will throw a <xref:System.UriFormatException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-215">下面的示例创建<xref:System.Uri>实例的 uri"http://www.contoso.com/"。</span><span class="sxs-lookup"><span data-stu-id="83204-215">The following example creates a <xref:System.Uri> instance with the URI "http://www.contoso.com/".</span></span>  
  
 [!code-cpp[Classic Uri.Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-216"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-216"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-217">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-217">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block><span data-ttu-id="83204-218">
          <paramref name="uriString" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="83204-218">
          <paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="83204-219">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-219">-or-</span></span> 
<span data-ttu-id="83204-220"><paramref name="uriString" /> 中指定的方案格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83204-220">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="83204-221">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="83204-221">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="83204-222">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-222">-or-</span></span> 
 <span data-ttu-id="83204-223"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-223"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-224">-or-</span></span> 
<span data-ttu-id="83204-225"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-225">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-226">-or-</span></span> 
<span data-ttu-id="83204-227"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-227">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-228">-or-</span></span> 
<span data-ttu-id="83204-229"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-229">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-230">-or-</span></span> 
<span data-ttu-id="83204-231"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-231">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-232">-or-</span></span> 
<span data-ttu-id="83204-233"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="83204-233">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-234">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-234">-or-</span></span> 
<span data-ttu-id="83204-235"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-235">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-236">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-236">-or-</span></span> 
<span data-ttu-id="83204-237"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-237">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-238">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-238">-or-</span></span> 
<span data-ttu-id="83204-239"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-239">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-240">-or-</span></span> 
<span data-ttu-id="83204-241"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-241">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="83204-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-242">-or-</span></span> 
<span data-ttu-id="83204-243"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-243">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Uri(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new Uri : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Uri" Usage="new System.Uri (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="83204-244"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的实例，包含序列化新的 <see cref="T:System.Uri" /> 实例所需的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-244">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="83204-245"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的实例，包含与新的 <see cref="T:System.Uri" /> 实例关联的序列化流的源。</span><span class="sxs-lookup"><span data-stu-id="83204-245">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <summary><span data-ttu-id="83204-246">从 <see cref="T:System.Uri" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-246">Initializes a new instance of the <see cref="T:System.Uri" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-247">此构造函数实现<xref:System.Runtime.Serialization.ISerializable>接口<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-247">This constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-248"><paramref name="serializationInfo" /> 参数包含 <see langword="null" /> URI。</span><span class="sxs-lookup"><span data-stu-id="83204-248">The <paramref name="serializationInfo" /> parameter contains a <see langword="null" /> URI.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-249"><paramref name="serializationInfo" /> 参数包含一个为空的 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-249">The <paramref name="serializationInfo" /> parameter contains a URI that is empty.</span></span>  
  
<span data-ttu-id="83204-250">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-250">-or-</span></span> 
<span data-ttu-id="83204-251">指定的方案形式不正确。</span><span class="sxs-lookup"><span data-stu-id="83204-251">The scheme specified is not correctly formed.</span></span> <span data-ttu-id="83204-252">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="83204-252">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="83204-253">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-253">-or-</span></span> 
<span data-ttu-id="83204-254">该 URI 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-254">The URI contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-255">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-255">-or-</span></span> 
<span data-ttu-id="83204-256">URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-256">The password specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="83204-257">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-257">-or-</span></span> 
<span data-ttu-id="83204-258">URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-258">The host name specified in URI is not valid.</span></span>  
  
<span data-ttu-id="83204-259">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-259">-or-</span></span> 
<span data-ttu-id="83204-260">URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-260">The file name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="83204-261">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-261">-or-</span></span> 
<span data-ttu-id="83204-262">URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-262">The user name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="83204-263">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-263">-or-</span></span> 
<span data-ttu-id="83204-264">URI 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="83204-264">The host or authority name specified in the URI cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-265">-or-</span></span> 
<span data-ttu-id="83204-266">URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-266">The port number specified in the URI is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-267">-or-</span></span> 
<span data-ttu-id="83204-268">URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-268">The length of URI exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-269">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-269">-or-</span></span> 
<span data-ttu-id="83204-270">URI 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-270">The length of the scheme specified in the URI exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-271">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-271">-or-</span></span> 
<span data-ttu-id="83204-272">URI 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-272">There is an invalid character sequence in the URI.</span></span>  
  
<span data-ttu-id="83204-273">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-273">-or-</span></span> 
<span data-ttu-id="83204-274">URI 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-274">The MS-DOS path specified in the URI must start with c:\\\\.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="83204-275">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="83204-275">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, bool dontEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : string * bool -&gt; Uri" Usage="new System.Uri (uriString, dontEscape)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dontEscape" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="83204-276">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-276">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="83204-277">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="83204-277">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="83204-278">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="83204-278">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="dontEscape"><span data-ttu-id="83204-279">如果 <paramref name="uriString" /> 已完全转义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-279"><see langword="true" /> if <paramref name="uriString" /> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="83204-280">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例，并对字符转义进行显式控制。</span><span class="sxs-lookup"><span data-stu-id="83204-280">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-281">此构造函数创建<xref:System.Uri>从 URI 字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-281">This constructor creates a <xref:System.Uri> instance from a URI string.</span></span> <span data-ttu-id="83204-282">它分析 URI，并将其放入规范格式。</span><span class="sxs-lookup"><span data-stu-id="83204-282">It parses the URI and puts it in canonical format.</span></span>  
  
 <span data-ttu-id="83204-283">`dontEscape`参数控制是否保留的字符将转换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-283">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="83204-284">此参数应设置为`true`仅当确定已转义的 URI 中的所有保留的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-284">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="83204-285">将值设置为`true`为完全未转义的 URI 会导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="83204-285">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="83204-286">强烈建议始终将此参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="83204-286">It is strongly recommended that you always set this parameter to `false`.</span></span>  
  
 <span data-ttu-id="83204-287">如果`dontEscape`设置为`false`，构造函数通过检查的转义任何保留的字符百分比 （%） 的所有匹配项后跟一个有效的转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-287">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="83204-288">如果百分号后面的字符序列不是有效的百分比是替换为 25%。</span><span class="sxs-lookup"><span data-stu-id="83204-288">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="83204-289">此构造函数不能确保<xref:System.Uri>指的是可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="83204-289">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-290">下面的示例创建<xref:System.Uri>uri 实例http://www.contoso.com/Hello%20World.htm。</span><span class="sxs-lookup"><span data-stu-id="83204-290">The following example creates a <xref:System.Uri> instance for the URI http://www.contoso.com/Hello%20World.htm.</span></span> <span data-ttu-id="83204-291">因为包含的 URI 完全转义，而是采用规范格式`dontEscape`参数可以设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="83204-291">Because the contained URI is completely escaped and is in canonical form, the `dontEscape` parameter can be set to `true`.</span></span>  
  
 [!code-cpp[Classic Uri.Uri1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-292"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-292"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-293"><paramref name="uriString" /> 为空或只包含空格。</span><span class="sxs-lookup"><span data-stu-id="83204-293"><paramref name="uriString" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="83204-294">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-294">-or-</span></span> 
<span data-ttu-id="83204-295">在 <paramref name="uriString" /> 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="83204-295">The scheme specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-296">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-296">-or-</span></span> 
 <span data-ttu-id="83204-297"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-297"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-298">-or-</span></span> 
<span data-ttu-id="83204-299"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-299">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-300">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-300">-or-</span></span> 
<span data-ttu-id="83204-301"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-301">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-302">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-302">-or-</span></span> 
<span data-ttu-id="83204-303"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-303">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-304">-or-</span></span> 
<span data-ttu-id="83204-305"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-305">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-306">-or-</span></span> 
<span data-ttu-id="83204-307"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="83204-307">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-308">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-308">-or-</span></span> 
<span data-ttu-id="83204-309"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-309">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-310">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-310">-or-</span></span> 
<span data-ttu-id="83204-311"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-311">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-312">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-312">-or-</span></span> 
<span data-ttu-id="83204-313"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-313">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-314">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-314">-or-</span></span> 
<span data-ttu-id="83204-315"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-315">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="83204-316">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-316">-or-</span></span> 
<span data-ttu-id="83204-317"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-317">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.UriKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="new Uri : string * UriKind -&gt; Uri" Usage="new System.Uri (uriString, uriKind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="83204-318">标识将由 <see cref="T:System.Uri" /> 实例表示的资源的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-318">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="83204-319">请注意，必须用括号将字符串形式的 IPv6 地址括起来。</span><span class="sxs-lookup"><span data-stu-id="83204-319">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="83204-320">例如，“http://[2607:f8b0:400d:c06::69]”。</span><span class="sxs-lookup"><span data-stu-id="83204-320">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="uriKind"><span data-ttu-id="83204-321">指定 URI 字符串是相对 URI、绝对 URI 还是不确定。</span><span class="sxs-lookup"><span data-stu-id="83204-321">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></param>
        <summary><span data-ttu-id="83204-322">用指定的 URI 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-322">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span> <span data-ttu-id="83204-323">此构造函数允许指定 URI 字符串是相对 URI、绝对 URI 还是不确定。</span><span class="sxs-lookup"><span data-stu-id="83204-323">This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-324">相对和绝对 Uri 具有不同限制它们的格式。</span><span class="sxs-lookup"><span data-stu-id="83204-324">Relative and absolute URIs have different restrictions on their format.</span></span> <span data-ttu-id="83204-325">例如，一个相对 URI 不需要的方案或证书颁发机构。</span><span class="sxs-lookup"><span data-stu-id="83204-325">For example, a relative URI does not require a scheme or an authority.</span></span> <span data-ttu-id="83204-326">在指定的值`uriKind`中传递的 URI 的类型必须匹配`uriString`。</span><span class="sxs-lookup"><span data-stu-id="83204-326">The value you specify in `uriKind` must match the type of URI passed in `uriString`.</span></span> <span data-ttu-id="83204-327">但是，如果<xref:System.UriKind.RelativeOrAbsolute>URI 字符串可以相对或绝对的指定。</span><span class="sxs-lookup"><span data-stu-id="83204-327">However, if <xref:System.UriKind.RelativeOrAbsolute> is specified, the URI string can be relative or absolute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83204-328"><paramref name="uriKind" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="83204-328"><paramref name="uriKind" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-329"><paramref name="uriString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-329"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-330">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-330">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block><span data-ttu-id="83204-331">
          <paramref name="uriString" /> 包含相对 URI，而 <paramref name="uriKind" /> 为 <see cref="F:System.UriKind.Absolute" />。</span><span class="sxs-lookup"><span data-stu-id="83204-331">
          <paramref name="uriString" /> contains a relative URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Absolute" />.</span></span>  
  
<span data-ttu-id="83204-332">or</span><span class="sxs-lookup"><span data-stu-id="83204-332">or</span></span> 
 <span data-ttu-id="83204-333"><paramref name="uriString" /> 包含绝对 URI，而 <paramref name="uriKind" /> 为 <see cref="F:System.UriKind.Relative" />。</span><span class="sxs-lookup"><span data-stu-id="83204-333"><paramref name="uriString" /> contains an absolute URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Relative" />.</span></span>  
  
<span data-ttu-id="83204-334">or</span><span class="sxs-lookup"><span data-stu-id="83204-334">or</span></span> 
 <span data-ttu-id="83204-335"><paramref name="uriString" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="83204-335"><paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="83204-336">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-336">-or-</span></span> 
<span data-ttu-id="83204-337"><paramref name="uriString" /> 中指定的方案格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83204-337">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="83204-338">请参阅 <see cref="M:System.Uri.CheckSchemeName(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="83204-338">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="83204-339">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-339">-or-</span></span> 
 <span data-ttu-id="83204-340"><paramref name="uriString" /> 包含过多斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-340"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-341">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-341">-or-</span></span> 
<span data-ttu-id="83204-342"><paramref name="uriString" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-342">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-343">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-343">-or-</span></span> 
<span data-ttu-id="83204-344"><paramref name="uriString" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-344">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-345">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-345">-or-</span></span> 
<span data-ttu-id="83204-346"><paramref name="uriString" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-346">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-347">-or-</span></span> 
<span data-ttu-id="83204-348"><paramref name="uriString" /> 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-348">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-349">-or-</span></span> 
<span data-ttu-id="83204-350"><paramref name="uriString" /> 中指定的主机名或证书颁发机构名称不能以反斜杠结尾。</span><span class="sxs-lookup"><span data-stu-id="83204-350">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-351">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-351">-or-</span></span> 
<span data-ttu-id="83204-352"><paramref name="uriString" /> 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-352">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-353">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-353">-or-</span></span> 
<span data-ttu-id="83204-354"><paramref name="uriString" /> 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-354">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-355">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-355">-or-</span></span> 
<span data-ttu-id="83204-356"><paramref name="uriString" /> 中指定的方案的长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-356">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-357">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-357">-or-</span></span> 
<span data-ttu-id="83204-358"><paramref name="uriString" /> 中存在无效的字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-358">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="83204-359">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-359">-or-</span></span> 
<span data-ttu-id="83204-360"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-360">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="83204-361">基 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-361">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="83204-362">要添加到基 URI 的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-362">The relative URI to add to the base URI.</span></span></param>
        <summary><span data-ttu-id="83204-363">根据指定的基 URI 和相对 URI 字符串，初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-363">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base URI and relative URI string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-364">此构造函数创建<xref:System.Uri>通过组合实例`baseUri`和`relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-364">This constructor creates a <xref:System.Uri> instance by combining the `baseUri` and the `relativeUri`.</span></span> <span data-ttu-id="83204-365">如果`relativeUri`是绝对的 URI （包含一种方案、 主机名和 （可选） 端口号），<xref:System.Uri>实例创建仅使用`relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-365">If `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="83204-366">如果`baseUri`具有相对部分 (如`/api`)，则必须以斜杠，终止的相对部分 (如`/api/`)，如果的相对部分`baseUri`将被保留在构造<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-366">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="83204-367">此外，如果`relativeUri`以斜线，开头，则它将替换任何相对一部分 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="83204-367">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>

 <span data-ttu-id="83204-368">此构造函数不能确保<xref:System.Uri>指的是可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="83204-368">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-369">下面的示例创建的新实例<xref:System.Uri>类的组合的相对 Uri http://www.contoso.com catalog/shownew.htm 以构成绝对 URI 和http://www.contoso.com/catalog/shownew.htm。</span><span class="sxs-lookup"><span data-stu-id="83204-369">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and catalog/shownew.htm to form the absolute URI http://www.contoso.com/catalog/shownew.htm.</span></span>  
  
 [!code-cpp[Classic Uri.Uri3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-370"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-370"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-371"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-371"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-372">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-372">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>
<span data-ttu-id="83204-373">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="83204-373">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="83204-374">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-374">-or-</span></span> 
<span data-ttu-id="83204-375">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="83204-375">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-376">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-376">-or-</span></span> 
<span data-ttu-id="83204-377">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-377">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-378">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-378">-or-</span></span> 
<span data-ttu-id="83204-379">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-379">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-380">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-380">-or-</span></span> 
<span data-ttu-id="83204-381">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-381">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-382">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-382">-or-</span></span> 
<span data-ttu-id="83204-383">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-383">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-384">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-384">-or-</span></span> 
<span data-ttu-id="83204-385">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-385">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-386">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-386">-or-</span></span> 
<span data-ttu-id="83204-387">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="83204-387">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-388">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-388">-or-</span></span> 
<span data-ttu-id="83204-389">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-389">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-390">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-390">-or-</span></span> 
<span data-ttu-id="83204-391">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-391">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-392">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-392">-or-</span></span> 
<span data-ttu-id="83204-393">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-393">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-394">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-394">-or-</span></span> 
<span data-ttu-id="83204-395">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-395">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="83204-396">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-396">-or-</span></span> 
<span data-ttu-id="83204-397"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-397">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, Uri relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, class System.Uri relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, Uri ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * Uri -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="83204-398">作为新 <see cref="T:System.Uri" /> 实例的基的绝对 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-398">An absolute <see cref="T:System.Uri" /> that is the base for the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="83204-399">与 <see cref="T:System.Uri" /> 组合的相对 <paramref name="baseUri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-399">A relative <see cref="T:System.Uri" /> instance that is combined with <paramref name="baseUri" />.</span></span></param>
        <summary><span data-ttu-id="83204-400">根据指定的基 <see cref="T:System.Uri" /> 实例和相对 <see cref="T:System.Uri" /> 实例的组合，初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="83204-400">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the combination of a specified base <see cref="T:System.Uri" /> instance and a relative <see cref="T:System.Uri" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-401">此构造函数创建一个新<xref:System.Uri>实例通过组合绝对<xref:System.Uri>实例， `baseUri`，使用相对<xref:System.Uri>实例， `relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-401">This constructor creates a new <xref:System.Uri> instance by combining an absolute <xref:System.Uri> instance, `baseUri`, with a relative <xref:System.Uri> instance, `relativeUri`.</span></span> <span data-ttu-id="83204-402">如果`relativeUri`是绝对<xref:System.Uri>（包含一种方案、 主机名和 （可选） 端口号） 的实例，<xref:System.Uri>仅使用创建实例`relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-402">If `relativeUri` is an absolute <xref:System.Uri> instance (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="83204-403">如果`baseUri`具有相对部分 (如`/api`)，则必须以斜杠，终止的相对部分 (如`/api/`)，如果的相对部分`baseUri`将被保留在构造<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-403">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="83204-404">此外，如果`relativeUri`以斜线，开头，则它将替换任何相对一部分 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="83204-404">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>
 
 <span data-ttu-id="83204-405">此构造函数不能确保<xref:System.Uri>指的是可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="83204-405">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-406">此示例创建一个绝对<xref:System.Uri>实例， `absoluteUri`，且是相对<xref:System.Uri>实例， `relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-406">This example creates an absolute <xref:System.Uri> instance, `absoluteUri`, and a relative <xref:System.Uri> instance, `relativeUri`.</span></span> <span data-ttu-id="83204-407">一个新<xref:System.Uri>实例， `combinedUri`，然后创建从这两个实例。</span><span class="sxs-lookup"><span data-stu-id="83204-407">A new <xref:System.Uri> instance, `combinedUri`, is then created from these two instances.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#2)]
 [!code-csharp[NCLUriEnhancements#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#2)]
 [!code-vb[NCLUriEnhancements#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83204-408"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-408"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-409"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-409"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-410"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-410"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-411">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-411">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>
<span data-ttu-id="83204-412">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="83204-412">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="83204-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-413">-or-</span></span> 
<span data-ttu-id="83204-414">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="83204-414">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-415">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-415">-or-</span></span> 
<span data-ttu-id="83204-416">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-416">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-417">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-417">-or-</span></span> 
<span data-ttu-id="83204-418">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-418">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-419">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-419">-or-</span></span> 
<span data-ttu-id="83204-420">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-420">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-421">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-421">-or-</span></span> 
<span data-ttu-id="83204-422">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-422">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-423">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-423">-or-</span></span> 
<span data-ttu-id="83204-424">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-424">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-425">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-425">-or-</span></span> 
<span data-ttu-id="83204-426">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="83204-426">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-427">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-427">-or-</span></span> 
<span data-ttu-id="83204-428">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-428">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-429">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-429">-or-</span></span> 
<span data-ttu-id="83204-430">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-430">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-431">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-431">-or-</span></span> 
<span data-ttu-id="83204-432">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-432">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-433">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-433">-or-</span></span> 
<span data-ttu-id="83204-434">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-434">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="83204-435">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-435">-or-</span></span> 
<span data-ttu-id="83204-436"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-436">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri, bool dontEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string * bool -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri, dontEscape)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dontEscape" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="83204-437">基 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-437">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="83204-438">要添加到基 URI 的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-438">The relative URI to add to the base URI.</span></span></param>
        <param name="dontEscape"><span data-ttu-id="83204-439">如果 <paramref name="uriString" /> 已完全转义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-439"><see langword="true" /> if <paramref name="uriString" /> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="83204-440">根据指定的基 URI 和相对 URI，初始化 <see cref="T:System.Uri" /> 类的新实例，并对字符转义进行显式控制。</span><span class="sxs-lookup"><span data-stu-id="83204-440">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base and relative URIs, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-441">此构造函数创建<xref:System.Uri>通过组合实例`baseUri`和`relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-441">This constructor creates a <xref:System.Uri> instance by combining `baseUri` and `relativeUri`.</span></span> <span data-ttu-id="83204-442">如果 URI 中传递`relativeUri`是绝对的 URI （包含一种方案、 主机名和 （可选） 端口号），<xref:System.Uri>实例创建仅使用`relativeUri`。</span><span class="sxs-lookup"><span data-stu-id="83204-442">If the URI passed in `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
  
 <span data-ttu-id="83204-443">`dontEscape`参数控制是否保留的字符将转换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-443">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="83204-444">此参数应设置为`true`仅当确定已转义的 URI 中的所有保留的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-444">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="83204-445">将值设置为`true`为完全未转义的 URI 会导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="83204-445">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="83204-446">强烈建议始终将此参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="83204-446">It is strongly recommended that you always set this parameter to `false`.</span></span> <span data-ttu-id="83204-447">如果`dontEscape`设置为`false`，构造函数通过检查的转义任何保留的字符百分比 （%） 的所有匹配项后跟一个有效的转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-447">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="83204-448">如果百分号后面的字符序列不是有效的百分比是替换为 25%。</span><span class="sxs-lookup"><span data-stu-id="83204-448">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="83204-449">此构造函数不能确保<xref:System.Uri>指的是可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="83204-449">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-450">下面的示例创建的新实例<xref:System.Uri>类的组合的相对 Urihttp://www.contoso.com和 Hello%20World.htm 以构成绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-450">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and Hello%20World.htm to form an absolute URI.</span></span>  
  
 [!code-cpp[Classic Uri.Uri4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-451"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-451"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-452"><paramref name="baseUri" /> 不是绝对的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-452"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-453">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 为空或仅包含空格。</span><span class="sxs-lookup"><span data-stu-id="83204-453">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="83204-454">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-454">-or-</span></span> 
<span data-ttu-id="83204-455">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="83204-455">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-456">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-456">-or-</span></span> 
<span data-ttu-id="83204-457">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 包含过多的斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-457">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="83204-458">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-458">-or-</span></span> 
<span data-ttu-id="83204-459">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="83204-459">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-460">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-460">-or-</span></span> 
<span data-ttu-id="83204-461">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-461">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-462">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-462">-or-</span></span> 
<span data-ttu-id="83204-463">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-463">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-464">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-464">-or-</span></span> 
<span data-ttu-id="83204-465">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的用户名无效。</span><span class="sxs-lookup"><span data-stu-id="83204-465">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="83204-466">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-466">-or-</span></span> 
<span data-ttu-id="83204-467">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的主机名或证书颁发机构名称不能以反斜杠终止。</span><span class="sxs-lookup"><span data-stu-id="83204-467">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="83204-468">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-468">-or-</span></span> 
<span data-ttu-id="83204-469">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的端口号无效或无法分析。</span><span class="sxs-lookup"><span data-stu-id="83204-469">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="83204-470">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-470">-or-</span></span> 
<span data-ttu-id="83204-471">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 的长度超过 65519 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-471">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="83204-472">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-472">-or-</span></span> 
<span data-ttu-id="83204-473">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中指定的方案长度超过 1023 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-473">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="83204-474">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-474">-or-</span></span> 
<span data-ttu-id="83204-475">通过组合 <paramref name="baseUri" /> 和 <paramref name="relativeUri" /> 而构成的 URI 中存在无效字符序列。</span><span class="sxs-lookup"><span data-stu-id="83204-475">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="83204-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="83204-476">-or-</span></span> 
<span data-ttu-id="83204-477"><paramref name="uriString" /> 中指定的 MS-DOS 路径必须以 c:\\\\ 开头。</span><span class="sxs-lookup"><span data-stu-id="83204-477">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="83204-478">出于安全考虑，您的应用程序不应调用此构造函数用于 URI 字符串来自不受信任的源和使用<paramref name="dontEscape" />设置为<see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="83204-478">Because of security concerns, your application should not call this constructor with URI strings from untrusted sources and with <paramref name="dontEscape" /> set to <see langword="true" />.</span></span> <span data-ttu-id="83204-479">或者，可以通过调用检查有效性的 URI 字符串<see cref="M:System.Uri.IsWellFormedOriginalString" />方法之前调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="83204-479">Alternately, you can check a URI string for validity by calling the <see cref="M:System.Uri.IsWellFormedOriginalString" /> method prior to calling this constructor.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public string AbsolutePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsolutePath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsolutePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsolutePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsolutePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsolutePath : string" Usage="System.Uri.AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-480">获取 URI 的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="83204-480">Gets the absolute path of the URI.</span></span></summary>
        <value><span data-ttu-id="83204-481">包含资源的绝对路径的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-481">A <see cref="T:System.String" /> containing the absolute path to the resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-482"><xref:System.Uri.AbsolutePath%2A>属性包含服务器用来解析请求信息的路径信息。</span><span class="sxs-lookup"><span data-stu-id="83204-482">The <xref:System.Uri.AbsolutePath%2A> property contains the path information that the server uses to resolve requests for information.</span></span> <span data-ttu-id="83204-483">通常这是服务器的文件系统上所需的信息的路径，尽管它也可能表明应用程序或脚本，则服务器必须运行提供的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-483">Typically this is the path to the desired information on the server's file system, although it also can indicate the application or script the server must run to provide the information.</span></span>  
  
 <span data-ttu-id="83204-484">路径信息不包括方案、 主机名或 URI 查询部分。</span><span class="sxs-lookup"><span data-stu-id="83204-484">The path information does not include the scheme, host name, or query portion of the URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-485">以下示例向控制台写入路径 /catalog/shownew.htm。</span><span class="sxs-lookup"><span data-stu-id="83204-485">The following example writes the path /catalog/shownew.htm to the console.</span></span>  
  
 [!code-cpp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.AbsolutePath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-486">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-486">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteUri">
      <MemberSignature Language="C#" Value="public string AbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsoluteUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsoluteUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsoluteUri : string" Usage="System.Uri.AbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-487">获取绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-487">Gets the absolute URI.</span></span></summary>
        <value><span data-ttu-id="83204-488">包含整个 URI 的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-488">A <see cref="T:System.String" /> containing the entire URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-489"><xref:System.Uri.AbsoluteUri%2A>属性包含整个 URI 存储在<xref:System.Uri>实例，包括所有片段和查询字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-489">The <xref:System.Uri.AbsoluteUri%2A> property includes the entire URI stored in the <xref:System.Uri> instance, including all fragments and query strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-490">下面的示例的完整内容写入<xref:System.Uri>实例到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-490">The following example writes the complete contents of the <xref:System.Uri> instance to the console.</span></span> <span data-ttu-id="83204-491">在示例中所示，http://www.contoso.com/catalog/shownew.htm?date=today写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-491">In the example shown, http://www.contoso.com/catalog/shownew.htm?date=today is written to the console.</span></span>  
  
 [!code-cpp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-492">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-492">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Authority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string" Usage="System.Uri.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-493">获取服务器的域名系统 (DNS) 主机名或 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-493">Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</span></span></summary>
        <value><span data-ttu-id="83204-494">包含此实例所表示的 URI 的证书颁发机构部分的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-494">A <see cref="T:System.String" /> containing the authority component of the URI represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-495"><xref:System.Uri.Authority%2A>属性通常是服务器 DNS 主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="83204-495">The <xref:System.Uri.Authority%2A> property is typically a server DNS host name or IP address.</span></span> <span data-ttu-id="83204-496">此属性可能包括服务端口号，如果它不同于默认端口为 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-496">This property might include the service port number if it differs from the default port for the URI.</span></span> <span data-ttu-id="83204-497">如果<xref:System.Uri.Authority%2A>组件包含保留的字符，这些转义中此属性返回的字符串值。</span><span class="sxs-lookup"><span data-stu-id="83204-497">If the <xref:System.Uri.Authority%2A> component contains reserved characters, these are escaped in the string value returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-498">下面的示例将主机名 (`www.contoso.com`) 和端口号 (8080) 到控制台的服务器。</span><span class="sxs-lookup"><span data-stu-id="83204-498">The following example writes the host name (`www.contoso.com`) and port number (8080) of the server to the console.</span></span>  
  
 [!code-cpp[Classic Uri.Authority Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Authority Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Authority Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Authority Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Authority Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Authority Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-499">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-499">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Canonicalize">
      <MemberSignature Language="C#" Value="protected virtual void Canonicalize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Canonicalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Canonicalize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Canonicalize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Canonicalize();" />
      <MemberSignature Language="F#" Value="abstract member Canonicalize : unit -&gt; unit&#xA;override this.Canonicalize : unit -&gt; unit" Usage="uri.Canonicalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-500">将内部存储的 URI 转换为规范化格式。</span><span class="sxs-lookup"><span data-stu-id="83204-500">Converts the internally stored URI to canonical form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-501">在内部存储 URI 的规范版本。</span><span class="sxs-lookup"><span data-stu-id="83204-501">Stores the canonical version of the URI internally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-502">此实例代表一个相对 URI，而此方法仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-502">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-503">URI 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="83204-503">The URI is incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckHostName">
      <MemberSignature Language="C#" Value="public static UriHostNameType CheckHostName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.UriHostNameType CheckHostName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckHostName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckHostName (name As String) As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UriHostNameType CheckHostName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CheckHostName : string -&gt; UriHostNameType" Usage="System.Uri.CheckHostName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83204-504">要验证的主机名。</span><span class="sxs-lookup"><span data-stu-id="83204-504">The host name to validate.</span></span> <span data-ttu-id="83204-505">可以是 IPv4 或 IPv6 地址或 Internet 主机名。</span><span class="sxs-lookup"><span data-stu-id="83204-505">This can be an IPv4 or IPv6 address or an Internet host name.</span></span></param>
        <summary><span data-ttu-id="83204-506">确定指定的主机名是否为有效的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="83204-506">Determines whether the specified host name is a valid DNS name.</span></span></summary>
        <returns><span data-ttu-id="83204-507">指示主机名类型的 <see cref="T:System.UriHostNameType" />。</span><span class="sxs-lookup"><span data-stu-id="83204-507">A <see cref="T:System.UriHostNameType" /> that indicates the type of the host name.</span></span> <span data-ttu-id="83204-508">如果无法确定主机名的类型，或者主机名为 <see langword="null" /> 或零长度字符串，则此方法返回 <see cref="F:System.UriHostNameType.Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="83204-508">If the type of the host name cannot be determined or if the host name is <see langword="null" /> or a zero-length string, this method returns <see cref="F:System.UriHostNameType.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-509"><xref:System.Uri.CheckHostName%2A>方法检查提供的主机名是否满足有效的 Internet 主机名称的要求。</span><span class="sxs-lookup"><span data-stu-id="83204-509">The <xref:System.Uri.CheckHostName%2A> method checks that the host name provided meets the requirements for a valid Internet host name.</span></span> <span data-ttu-id="83204-510">但是，它不执行主机名查找来验证主机存在。</span><span class="sxs-lookup"><span data-stu-id="83204-510">It does not, however, perform a host-name lookup to verify the existence of the host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-511">以下示例检查主机名是否有效。</span><span class="sxs-lookup"><span data-stu-id="83204-511">The following example checks whether the host name is valid.</span></span>  
  
 [!code-cpp[Classic Uri.CheckHostName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.CheckHostName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.CheckHostName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSchemeName">
      <MemberSignature Language="C#" Value="public static bool CheckSchemeName (string schemeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckSchemeName(string schemeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSchemeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckSchemeName (schemeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckSchemeName(System::String ^ schemeName);" />
      <MemberSignature Language="F#" Value="static member CheckSchemeName : string -&gt; bool" Usage="System.Uri.CheckSchemeName schemeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="83204-512">要验证的方案名。</span><span class="sxs-lookup"><span data-stu-id="83204-512">The scheme name to validate.</span></span></param>
        <summary><span data-ttu-id="83204-513">确定指定的方案名是否有效。</span><span class="sxs-lookup"><span data-stu-id="83204-513">Determines whether the specified scheme name is valid.</span></span></summary>
        <returns><span data-ttu-id="83204-514">一个 <see cref="T:System.Boolean" /> 值。如果方案名有效，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-514">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the scheme name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-515">此方法检查默认情况下根据 RFC 2396 有效性的方案名称。</span><span class="sxs-lookup"><span data-stu-id="83204-515">This method checks the scheme name for validity according to RFC 2396 by default.</span></span> <span data-ttu-id="83204-516">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，此方法将检查根据 RFC 3986 的有效性的方案名称。</span><span class="sxs-lookup"><span data-stu-id="83204-516">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986.</span></span> <span data-ttu-id="83204-517">方案名称必须以字母开头，并且必须包含字母、 数字和字符"。"，"+"或"-"。</span><span class="sxs-lookup"><span data-stu-id="83204-517">The scheme name must begin with a letter and must contain only letters, digits, and the characters ".", "+", or "-".</span></span>  
  
 <span data-ttu-id="83204-518">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-518">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-519">下面的示例创建<xref:System.Uri>实例，并检查的方案名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="83204-519">The following example creates a <xref:System.Uri> instance and checks whether the scheme name is valid.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecurity">
      <MemberSignature Language="C#" Value="protected virtual void CheckSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CheckSecurity ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CheckSecurity();" />
      <MemberSignature Language="F#" Value="abstract member CheckSecurity : unit -&gt; unit&#xA;override this.CheckSecurity : unit -&gt; unit" Usage="uri.CheckSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-520">调用此方法不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="83204-520">Calling this method has no effect.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Uri uri1, class System.Uri uri2, valuetype System.UriComponents partsToCompare, valuetype System.UriFormat compareFormat, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (uri1 As Uri, uri2 As Uri, partsToCompare As UriComponents, compareFormat As UriFormat, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Uri ^ uri1, Uri ^ uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Uri * Uri * UriComponents * UriFormat * StringComparison -&gt; int" Usage="System.Uri.Compare (uri1, uri2, partsToCompare, compareFormat, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="partsToCompare" Type="System.UriComponents" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compareFormat" Type="System.UriFormat" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="83204-521">第一个 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-521">The first <see cref="T:System.Uri" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="83204-522">第二个 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-522">The second <see cref="T:System.Uri" />.</span></span></param>
        <param name="partsToCompare"><span data-ttu-id="83204-523"><see cref="T:System.UriComponents" /> 值的按位组合，它指定要比较的 <paramref name="uri1" /> 和 <paramref name="uri2" /> 的部分。</span><span class="sxs-lookup"><span data-stu-id="83204-523">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies the parts of <paramref name="uri1" /> and <paramref name="uri2" /> to compare.</span></span></param>
        <param name="compareFormat"><span data-ttu-id="83204-524"><see cref="T:System.UriFormat" /> 值中的一个，它指定在比较 URI 部分时使用的字符转义。</span><span class="sxs-lookup"><span data-stu-id="83204-524">One of the <see cref="T:System.UriFormat" /> values that specifies the character escaping used when the URI components are compared.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="83204-525"><see cref="T:System.StringComparison" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="83204-525">One of the <see cref="T:System.StringComparison" /> values.</span></span></param>
        <summary><span data-ttu-id="83204-526">使用指定的比较规则比较两个 URI 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="83204-526">Compares the specified parts of two URIs using the specified comparison rules.</span></span></summary>
        <returns><span data-ttu-id="83204-527">一个 <see cref="T:System.Int32" /> 值，指示进行比较的 <see cref="T:System.Uri" /> 部分之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="83204-527">An <see cref="T:System.Int32" /> value that indicates the lexical relationship between the compared <see cref="T:System.Uri" /> components.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="83204-528">值</span><span class="sxs-lookup"><span data-stu-id="83204-528">Value</span></span> 
 </term><description> <span data-ttu-id="83204-529">含义</span><span class="sxs-lookup"><span data-stu-id="83204-529">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="83204-530">小于零</span><span class="sxs-lookup"><span data-stu-id="83204-530">Less than zero</span></span> 
 </term><description><span data-ttu-id="83204-531"><paramref name="uri1" /> 小于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="83204-531"><paramref name="uri1" /> is less than <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="83204-532">零</span><span class="sxs-lookup"><span data-stu-id="83204-532">Zero</span></span> 
 </term><description><span data-ttu-id="83204-533"><paramref name="uri1" /> 等于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="83204-533"><paramref name="uri1" /> equals <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="83204-534">大于零</span><span class="sxs-lookup"><span data-stu-id="83204-534">Greater than zero</span></span> 
 </term><description><span data-ttu-id="83204-535"><paramref name="uri1" /> 大于 <paramref name="uri2" />。</span><span class="sxs-lookup"><span data-stu-id="83204-535"><paramref name="uri1" /> is greater than <paramref name="uri2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-536">如果这两个`uri1`并`uri2`是`null`，此方法返回 0。</span><span class="sxs-lookup"><span data-stu-id="83204-536">If both `uri1` and `uri2` are `null`, this method returns 0.</span></span> <span data-ttu-id="83204-537">在比较 URI 值时，相对 URI 始终是，不会早于绝对 URI 和一个非 null URI 始终是大于 null URI。</span><span class="sxs-lookup"><span data-stu-id="83204-537">When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI.</span></span> <span data-ttu-id="83204-538">情况下，这两`uri1`并`uri2`不是`null`和相对 Uri 或绝对 Uri 时，<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType>方法执行比较。</span><span class="sxs-lookup"><span data-stu-id="83204-538">For cases where both `uri1` and `uri2` are not `null` and are both relative URIs or both absolute URIs, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method performs the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83204-539"><paramref name="comparisonType" /> 不是有效的 <see cref="T:System.StringComparison" /> 值。</span><span class="sxs-lookup"><span data-stu-id="83204-539"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DnsSafeHost">
      <MemberSignature Language="C#" Value="public string DnsSafeHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsSafeHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.DnsSafeHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DnsSafeHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DnsSafeHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsSafeHost : string" Usage="System.Uri.DnsSafeHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-540">获得可安全用于 DNS 解析的未转义主机名（如必要）。</span><span class="sxs-lookup"><span data-stu-id="83204-540">Gets a host name that, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value><span data-ttu-id="83204-541">一个<see cref="T:System.String" />，其中包含适用于 DNS 解析; 或原始主机字符串格式的 URI 主机部分，如果已适用于解析。</span><span class="sxs-lookup"><span data-stu-id="83204-541">A <see cref="T:System.String" /> that contains the host part of the URI in a format suitable for DNS resolution; or the original host string, if it is already suitable for resolution.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-542">对于 IPv6 地址，删除方括号 ([]) 和<xref:System.Net.IPAddress.ScopeId%2A>设置属性，如果构造此实例中时指定了。</span><span class="sxs-lookup"><span data-stu-id="83204-542">For IPv6 addresses, the brackets ([]) are removed and the <xref:System.Net.IPAddress.ScopeId%2A> property is set, if one was specified when this instance was constructed.</span></span>

<span data-ttu-id="83204-543">如果已转义的字符串用于构造此实例 （例如，"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm")，然后 DnsSafeHost 返回已转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-543">If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then DnsSafeHost returns an escaped string.</span></span> <span data-ttu-id="83204-544">Unescape 从返回任何转义的字符串`DnsSafeHost`之前使用该字符串进行 DNS 解析 （参阅示例）。</span><span class="sxs-lookup"><span data-stu-id="83204-544">Unescape any escaped string returned from `DnsSafeHost` before using that string for DNS resolution (see the Example).</span></span> <span data-ttu-id="83204-545">如果使用无效的非转义的字符串来构造此实例 （例如，"http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm")，然后 DnsSafeHost 返回未转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-545">If you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then DnsSafeHost returns an unescaped string.</span></span>
  
 <span data-ttu-id="83204-546"><xref:System.Uri.DnsSafeHost%2A>属性是依赖于配置设置，如本主题后面所述。</span><span class="sxs-lookup"><span data-stu-id="83204-546">The <xref:System.Uri.DnsSafeHost%2A> property is dependent on configuration settings, as discussed later in this topic.</span></span> <span data-ttu-id="83204-547">Windows 应用商店应用程序，这可能会导致不一致的结果使用时不能更改配置设置<xref:System.Uri.DnsSafeHost%2A>。</span><span class="sxs-lookup"><span data-stu-id="83204-547">Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using <xref:System.Uri.DnsSafeHost%2A>.</span></span> <span data-ttu-id="83204-548"><xref:System.Uri.IdnHost%2A>属性提供对使用的首选备用<xref:System.Uri.DnsSafeHost%2A>，因为<xref:System.Uri.IdnHost%2A>保证始终是安全的无论何种当前 DNS *app.config*可能设置。</span><span class="sxs-lookup"><span data-stu-id="83204-548">The <xref:System.Uri.IdnHost%2A> property is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  
  
 <span data-ttu-id="83204-549"><xref:System.Uri.DnsSafeHost%2A>属性已得到扩展，在.NET Framework 3.5 版，3.0 SP1 和 2.0 SP1 提供国际资源标识符 (IRI) 支持根据的 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-549">The <xref:System.Uri.DnsSafeHost%2A> property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987.</span></span> <span data-ttu-id="83204-550">除非当前用户专门启用 IRI，否则他们看不到任何 NET Framework 2.0 行为的改变。</span><span class="sxs-lookup"><span data-stu-id="83204-550">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="83204-551">这确保了 NET Framework 以前版本的应用程序兼容性。</span><span class="sxs-lookup"><span data-stu-id="83204-551">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="83204-552">若要启用 IRI 支持，以下两项更改是必需的：</span><span class="sxs-lookup"><span data-stu-id="83204-552">To enable support for IRI, the following two changes are required:</span></span>  
  
1.  <span data-ttu-id="83204-553">添加下面的代码行*machine.config* .NET Framework 2.0 目录下的文件</span><span class="sxs-lookup"><span data-stu-id="83204-553">Add the following line to the *machine.config* file under the .NET Framework 2.0 directory</span></span>  
  
     <span data-ttu-id="83204-554">\<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span><span class="sxs-lookup"><span data-stu-id="83204-554">\<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span></span>  
  
2.  <span data-ttu-id="83204-555">指定是否对域名应用国际化域名 (IDN) 分析以及是否应该应用 IRI 分析规则。</span><span class="sxs-lookup"><span data-stu-id="83204-555">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="83204-556">这可以实现*machine.config*中或在*app.config*文件。</span><span class="sxs-lookup"><span data-stu-id="83204-556">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="83204-557">例如，添加以下代码：</span><span class="sxs-lookup"><span data-stu-id="83204-557">For example, add the following:</span></span>  
  
    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="83204-558">启用 IDN 可以将域名中所有 Unicode 标签转换成标签的 Punycode 等同项。</span><span class="sxs-lookup"><span data-stu-id="83204-558">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="83204-559">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-559">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="83204-560">这样是为了支持 Internet 上的 DNS 服务器，因为大部分 DNS 服务器仅支持 ASCII 字符（参见 RFC 3940）。</span><span class="sxs-lookup"><span data-stu-id="83204-560">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="83204-561">启用 IDN 只会影响的值<xref:System.Uri.DnsSafeHost%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="83204-561">Enabling IDN only affects the value of the <xref:System.Uri.DnsSafeHost%2A> property.</span></span>  
  
 <span data-ttu-id="83204-562">有三个可能的 IDN 值具体取决于使用的 DNS 服务器：</span><span class="sxs-lookup"><span data-stu-id="83204-562">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
-   <span data-ttu-id="83204-563">启用 idn = All</span><span class="sxs-lookup"><span data-stu-id="83204-563">idn enabled = All</span></span>  
  
     <span data-ttu-id="83204-564">此值会将所有 Unicode 域名转换为它们的 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="83204-564">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
-   <span data-ttu-id="83204-565">启用 idn = AllExceptIntranet</span><span class="sxs-lookup"><span data-stu-id="83204-565">idn enabled = AllExceptIntranet</span></span>  
  
     <span data-ttu-id="83204-566">此值会将所有外部 Unicode 域名转换为使用 Punycode 等效项（IDN 名称）。</span><span class="sxs-lookup"><span data-stu-id="83204-566">This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="83204-567">在这种情况下，若要处理本地 Intranet 上的国际化名称，用于 Intranet 的 DNS 服务器应该支持 Unicode 名称。</span><span class="sxs-lookup"><span data-stu-id="83204-567">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</span></span>  
  
-   <span data-ttu-id="83204-568">启用 idn = 无</span><span class="sxs-lookup"><span data-stu-id="83204-568">idn enabled = None</span></span>  
  
     <span data-ttu-id="83204-569">此值不会将任何 Unicode 域名转换为使用 Punycode。</span><span class="sxs-lookup"><span data-stu-id="83204-569">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="83204-570">这是默认值是与.NET Framework 2.0 行为一致。</span><span class="sxs-lookup"><span data-stu-id="83204-570">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="83204-571">启用 IRI 分析 (iriParsing 启用 = `true`) 将执行规范化和字符检查根据最新 IRI 规则在 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-571">Enabling IRI parsing (iriParsing enabled = `true`) will do normalization and character checking according to the latest IRI rules in RFC 3987.</span></span> <span data-ttu-id="83204-572">默认值是`false`，将执行规范化和字符检查根据 RFC 2396 和 RFC 2732 （适用于 IPv6 文本）。</span><span class="sxs-lookup"><span data-stu-id="83204-572">The default value is `false` and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  
  
 <span data-ttu-id="83204-573">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-573">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-574">下面的示例创建<xref:System.Uri>从字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-574">The following example creates a <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="83204-575">它阐释了如何从返回的值之间的差异<xref:System.Uri.Host%2A>，其中返回的主机名或地址的 URI 中指定，并且从返回的值<xref:System.Uri.DnsSafeHost%2A>，这会返回可安全用于 DNS 解析中的地址。</span><span class="sxs-lookup"><span data-stu-id="83204-575">It illustrates the difference between the value returned from <xref:System.Uri.Host%2A>, which returns the host name or address specified in the URI, and the value returned from <xref:System.Uri.DnsSafeHost%2A>, which returns an address that is safe to use in DNS resolution.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#4)]
 [!code-csharp[NCLUriEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#4)]
 [!code-vb[NCLUriEnhancements#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#4)]  

 <span data-ttu-id="83204-576">如备注中所述，它在解决前 unescape 的主机名。</span><span class="sxs-lookup"><span data-stu-id="83204-576">As explained in Remarks, unescape the host name before resolving it.</span></span> <span data-ttu-id="83204-577">可以使用<xref:System.Uri.UnescapeDataString%2A>方法以取消转义主机名，并且您可以通过调用来解决它<xref:System.Net.Dns.GetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="83204-577">You can use the <xref:System.Uri.UnescapeDataString%2A> method to unescape the host name, and you can resolve it by calling the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-578">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-578">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uri.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="83204-579">与当前实例相比较的 <see cref="T:System.Uri" /> 实例或 URI 标识符。</span><span class="sxs-lookup"><span data-stu-id="83204-579">The <see cref="T:System.Uri" /> instance or a URI identifier to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="83204-580">比较两个 <see cref="T:System.Uri" /> 实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="83204-580">Compares two <see cref="T:System.Uri" /> instances for equality.</span></span></summary>
        <returns><span data-ttu-id="83204-581">一个 <see cref="T:System.Boolean" /> 值。如果两个实例表示相同的 URI，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-581">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the two instances represent the same URI; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-582"><xref:System.Uri.Equals%2A>方法比较两个实例而不考虑用户信息 (<xref:System.Uri.UserInfo%2A>) 和片段 (<xref:System.Uri.Fragment%2A>) 可能包含的部件。</span><span class="sxs-lookup"><span data-stu-id="83204-582">The <xref:System.Uri.Equals%2A> method compares the two instances without regard to user information (<xref:System.Uri.UserInfo%2A>) and fragment (<xref:System.Uri.Fragment%2A>) parts that they might contain.</span></span> <span data-ttu-id="83204-583">例如，给定 Urihttp://www.contoso.com/index.htm#search并http://user:password@www.contoso.com/index.htm，则<xref:System.Uri.Equals%2A>方法将返回`true`。</span><span class="sxs-lookup"><span data-stu-id="83204-583">For example, given the URIs http://www.contoso.com/index.htm#search and http://user:password@www.contoso.com/index.htm, the <xref:System.Uri.Equals%2A> method would return `true`.</span></span>  
  
 <span data-ttu-id="83204-584">如果一个<xref:System.Uri>实例格式使用 Unicode 主机名和`comparand`参数包含<xref:System.Uri>实例或使用有等效的 Punycode 主机名，则主机名格式正确的标识符<xref:System.Uri.Equals%2A>返回`true`启用仅在国际资源标识符 (IRI) 和国际化域名 (IDN) 支持。</span><span class="sxs-lookup"><span data-stu-id="83204-584">If one <xref:System.Uri> instance is formed with a Unicode host name and `comparand` parameter contains a <xref:System.Uri> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then <xref:System.Uri.Equals%2A> returns `true` only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled.</span></span> <span data-ttu-id="83204-585">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-585">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="83204-586">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-586">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83204-587">在.NET framework 1.0 和 1.1，<xref:System.Uri.Query%2A>也被忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-587">In the .NET Framework versions 1.0 and 1.1, the <xref:System.Uri.Query%2A> is also ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83204-588"><xref:System.Uri.Equals%2A>可以在派生类中重写方法; 的恶意实体可以修改该方法，请谨慎使用。</span><span class="sxs-lookup"><span data-stu-id="83204-588">The <xref:System.Uri.Equals%2A> method can be overridden in a derived class; use caution as a malicious entity could modify the method.</span></span> <span data-ttu-id="83204-589">不应使用此方法来执行安全检查，除非你知道此实例来自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="83204-589">You should not use this method to perform security checks unless you know that this instance came from a trusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-590">此示例创建两个<xref:System.Uri>实例从字符串并将它们，以确定它们是否表示相同的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="83204-590">This example creates two <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="83204-591">`address1` 并`address2`是相同，因为<xref:System.Uri.Fragment%2A>部分此比较将被忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-591">`address1` and `address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="83204-592">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-592">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#8)]
 [!code-csharp[NCLUriExamples#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#8)]
 [!code-vb[NCLUriExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="83204-593">若要防止部分受信任的代码派生自<see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-593">to prevent partially trusted code from deriving from <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="83204-594">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />。</span><span class="sxs-lookup"><span data-stu-id="83204-594">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="protected virtual void Escape ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Escape() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Escape" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Escape ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Escape();" />
      <MemberSignature Language="F#" Value="abstract member Escape : unit -&gt; unit&#xA;override this.Escape : unit -&gt; unit" Usage="uri.Escape " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-595">将路径部分中的任何不安全字符或保留字符转换为对应的十六进制字符表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-595">Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-596">从构造函数传来的 URI 无效。</span><span class="sxs-lookup"><span data-stu-id="83204-596">The URI passed from the constructor is invalid.</span></span> <span data-ttu-id="83204-597">如果 URI 字符太多或 URI 是相对的，则会发生这种异常。</span><span class="sxs-lookup"><span data-stu-id="83204-597">This exception can occur if a URI has too many characters or the URI is relative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeDataString">
      <MemberSignature Language="C#" Value="public static string EscapeDataString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeDataString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeDataString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeDataString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeDataString : string -&gt; string" Usage="System.Uri.EscapeDataString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="83204-598">要转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-598">The string to escape.</span></span></param>
        <summary><span data-ttu-id="83204-599">将字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-599">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="83204-600">一个 <see cref="T:System.String" />，包含 <paramref name="stringToEscape" /> 的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-600">A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-601">默认情况下，<xref:System.Uri.EscapeDataString%2A>方法将 RFC 2396 非保留字符除外的所有字符都转换为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-601">By default, the <xref:System.Uri.EscapeDataString%2A> method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation.</span></span> <span data-ttu-id="83204-602">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，<xref:System.Uri.EscapeDataString%2A>方法的所有字符转换，除了 RFC 3986 非保留的字符，为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-602">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeDataString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="83204-603">转义之前，所有 Unicode 字符都转换为 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="83204-603">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="83204-604">此方法假定`stringToEscape`中有任何转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-604">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="83204-605">默认情况下，根据 RFC 2396 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-605">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="83204-606">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，根据 RFC 3986 和 RFC 3987 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-606">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="83204-607">请参阅有关的保留和非保留字符定义这些 Rfc。</span><span class="sxs-lookup"><span data-stu-id="83204-607">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="83204-608">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-608">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-609"><paramref name="stringToEscape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-609"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-610">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-610">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>  
  
 <span data-ttu-id="83204-611"><paramref name="stringToEscape" /> 的长度超过 32766 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-611">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeString">
      <MemberSignature Language="C#" Value="protected static string EscapeString (string str);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string EscapeString(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EscapeString (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ EscapeString(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member EscapeString : string -&gt; string" Usage="System.Uri.EscapeString str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="83204-612">要转换为它的转义表示形式的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-612">The string to transform to its escaped representation.</span></span></param>
        <summary><span data-ttu-id="83204-613">将字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-613">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="83204-614">字符串的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-614">The escaped representation of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-615"><xref:System.Uri.EscapeString%2A>方法将 RFC 2396 保留字符和字符值大于 127 的所有字符转换为十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-615">The <xref:System.Uri.EscapeString%2A> method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation.</span></span> <span data-ttu-id="83204-616">转义之前，所有 Unicode 字符都转换为 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="83204-616">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="83204-617">默认情况下，根据 RFC 2396 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-617">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="83204-618">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，根据 RFC 3986 和 RFC 3987 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-618">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="83204-619">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-619">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeUriString">
      <MemberSignature Language="C#" Value="public static string EscapeUriString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeUriString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeUriString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeUriString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeUriString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeUriString : string -&gt; string" Usage="System.Uri.EscapeUriString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="83204-620">要转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-620">The string to escape.</span></span></param>
        <summary><span data-ttu-id="83204-621">将 URI 字符串转换为它的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-621">Converts a URI string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="83204-622">一个 <see cref="T:System.String" />，包含 <paramref name="stringToEscape" /> 的转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-622">A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-623">使用<xref:System.Uri.EscapeUriString%2A>方法以准备要进行的参数未转义的 URI 字符串<xref:System.Uri.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="83204-623">Use the <xref:System.Uri.EscapeUriString%2A> method to prepare an unescaped URI string to be a parameter to the <xref:System.Uri.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="83204-624">默认情况下，<xref:System.Uri.EscapeUriString%2A>方法将 RFC 2396 非保留字符以外的所有字符都转换为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-624">By default, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="83204-625">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，<xref:System.Uri.EscapeUriString%2A>方法的所有字符转换，除了 RFC 3986 非保留的字符，为其十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-625">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="83204-626">转义之前，所有 Unicode 字符都转换为 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="83204-626">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="83204-627">此方法假定`stringToEscape`中有任何转义序列。</span><span class="sxs-lookup"><span data-stu-id="83204-627">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="83204-628">默认情况下，根据 RFC 2396 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-628">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="83204-629">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，根据 RFC 3986 和 RFC 3987 转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-629">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="83204-630">请参阅有关的保留和非保留字符定义这些 Rfc。</span><span class="sxs-lookup"><span data-stu-id="83204-630">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="83204-631">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-631">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-632"><paramref name="stringToEscape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-632"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="83204-633">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="83204-633">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>  
  
 <span data-ttu-id="83204-634"><paramref name="stringToEscape" /> 的长度超过 32766 个字符。</span><span class="sxs-lookup"><span data-stu-id="83204-634">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Fragment" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Fragment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fragment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Fragment { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fragment : string" Usage="System.Uri.Fragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-635">获取转义 URI 片段。</span><span class="sxs-lookup"><span data-stu-id="83204-635">Gets the escaped URI fragment.</span></span></summary>
        <value><span data-ttu-id="83204-636">一个包含任意 URI 片段信息的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-636">A <see cref="T:System.String" /> that contains any URI fragment information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-637"><xref:System.Uri.Fragment%2A>属性获取后片段标记 （#） 的 URI，包括片段标记本身中的所有文本。</span><span class="sxs-lookup"><span data-stu-id="83204-637">The <xref:System.Uri.Fragment%2A> property gets any text following a fragment marker (#) in the URI, including the fragment marker itself.</span></span> <span data-ttu-id="83204-638">给定 URI http://www.contoso.com/index.htm#main，则<xref:System.Uri.Fragment%2A>属性将返回 #main。</span><span class="sxs-lookup"><span data-stu-id="83204-638">Given the URI http://www.contoso.com/index.htm#main, the <xref:System.Uri.Fragment%2A> property would return #main.</span></span>  
  
 <span data-ttu-id="83204-639"><xref:System.Uri.Fragment%2A>属性不在任何被视为<xref:System.Uri.Equals%2A>比较。</span><span class="sxs-lookup"><span data-stu-id="83204-639">The <xref:System.Uri.Fragment%2A> property is not considered in any <xref:System.Uri.Equals%2A> comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-640">下面的示例创建<xref:System.Uri>实例并将片段信息输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-640">The following example creates a <xref:System.Uri> instance and writes the fragment information to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-641">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-641">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromHex">
      <MemberSignature Language="C#" Value="public static int FromHex (char digit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FromHex(char digit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.FromHex(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHex (digit As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FromHex(char digit);" />
      <MemberSignature Language="F#" Value="static member FromHex : char -&gt; int" Usage="System.Uri.FromHex digit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="digit"><span data-ttu-id="83204-642">要转换的十六进制数字（0-9、a-f、A-F）。</span><span class="sxs-lookup"><span data-stu-id="83204-642">The hexadecimal digit (0-9, a-f, A-F) to convert.</span></span></param>
        <summary><span data-ttu-id="83204-643">获取十六进制数字的十进制值。</span><span class="sxs-lookup"><span data-stu-id="83204-643">Gets the decimal value of a hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="83204-644">一个 <see cref="T:System.Int32" /> 值，包含与指定的十六进制数字对应的介于 0 到 15 之间的数字。</span><span class="sxs-lookup"><span data-stu-id="83204-644">An <see cref="T:System.Int32" /> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-645"><xref:System.Uri.FromHex%2A>方法将转换的字符所表示的十六进制数字 (0-9、 a-f、 A-F) 为十进制值 (0 到 15)。</span><span class="sxs-lookup"><span data-stu-id="83204-645">The <xref:System.Uri.FromHex%2A> method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15).</span></span> <span data-ttu-id="83204-646">如果`digit`不是有效的十六进制数字，<xref:System.ArgumentException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="83204-646">If `digit` is not a valid hexadecimal digit, an <xref:System.ArgumentException> exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-647">下面的示例确定字符是否为十六进制字符，是否是，则会将对应的十进制值写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-647">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83204-648"><paramref name="digit" /> 不是有效的十六进制数字（0-9、a-f、A-F）。</span><span class="sxs-lookup"><span data-stu-id="83204-648"><paramref name="digit" /> is not a valid hexadecimal digit (0-9, a-f, A-F).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetComponents">
      <MemberSignature Language="C#" Value="public string GetComponents (UriComponents components, UriFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetComponents(valuetype System.UriComponents components, valuetype System.UriFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponents (components As UriComponents, format As UriFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetComponents(UriComponents components, UriFormat format);" />
      <MemberSignature Language="F#" Value="member this.GetComponents : UriComponents * UriFormat -&gt; string" Usage="uri.GetComponents (components, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="components" Type="System.UriComponents" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.UriFormat" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="components"><span data-ttu-id="83204-649"><see cref="T:System.UriComponents" /> 值的按位组合，它指定当前实例中要返回到调用方的部分。</span><span class="sxs-lookup"><span data-stu-id="83204-649">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies which parts of the current instance to return to the caller.</span></span></param>
        <param name="format"><span data-ttu-id="83204-650"><see cref="T:System.UriFormat" /> 值中的一个，它控制如何转义特殊字符。</span><span class="sxs-lookup"><span data-stu-id="83204-650">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped.</span></span></param>
        <summary><span data-ttu-id="83204-651">使用特殊字符的指定转义，获取当前实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="83204-651">Gets the specified components of the current instance using the specified escaping for special characters.</span></span></summary>
        <returns><span data-ttu-id="83204-652">一个包含这些部分的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-652">A <see cref="T:System.String" /> that contains the components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-653"><xref:System.UriComponents.Query>， <xref:System.UriComponents.Fragment>， <xref:System.UriComponents.Scheme>， <xref:System.UriComponents.UserInfo>， <xref:System.UriComponents.Host>， <xref:System.UriComponents.Port>，和<xref:System.UriComponents.Path>组件不包含分隔符。</span><span class="sxs-lookup"><span data-stu-id="83204-653">The <xref:System.UriComponents.Query>, <xref:System.UriComponents.Fragment>, <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.UserInfo>, <xref:System.UriComponents.Host>, <xref:System.UriComponents.Port>, and <xref:System.UriComponents.Path> components do not include the delimiter.</span></span> <span data-ttu-id="83204-654">你可以组合<xref:System.UriComponents.KeepDelimiter>任何这些值来获取具有分隔符的值 （使用按位 OR 运算符） 的标志。</span><span class="sxs-lookup"><span data-stu-id="83204-654">You can combine the <xref:System.UriComponents.KeepDelimiter> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter.</span></span> <span data-ttu-id="83204-655">对于所有其他<xref:System.UriComponents>值和的值组合，分隔符会包括在返回的值。</span><span class="sxs-lookup"><span data-stu-id="83204-655">For all other <xref:System.UriComponents> values, and combinations of values, the delimiters are included in the returned value.</span></span>  
  
 <span data-ttu-id="83204-656">组件是它们在 URI 中显示的顺序返回。</span><span class="sxs-lookup"><span data-stu-id="83204-656">The components are returned in the order that they appear in the URI.</span></span> <span data-ttu-id="83204-657">例如，如果<xref:System.UriComponents.Scheme>指定，则它显示在最前面。</span><span class="sxs-lookup"><span data-stu-id="83204-657">For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.</span></span>  
  
 <span data-ttu-id="83204-658">在中启用国际资源标识符 (IRI) 和国际化域名 (IDN) 支持后，返回的字符数<xref:System.String>会增加。</span><span class="sxs-lookup"><span data-stu-id="83204-658">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <xref:System.String> increases.</span></span> <span data-ttu-id="83204-659">用于支持 IRI Punycode 名称只能包含 ASCII 字符，并且始终以 xn--前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-659">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="83204-660">启用 IRI 和 IDN，正确处理 Unicode 代理项字符<xref:System.Uri.GetComponents%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="83204-660">When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the <xref:System.Uri.GetComponents%2A> method.</span></span>  
  
 <span data-ttu-id="83204-661">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-661">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83204-662">如果<xref:System.Uri.GetComponents%2A>与调用方法`format`设置为<xref:System.UriFormat.Unescaped>，不能使用返回的值作为参数<xref:System.Uri.%23ctor%2A>构造函数创建等效<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-662">If the <xref:System.Uri.GetComponents%2A> method is called with `format` set to <xref:System.UriFormat.Unescaped> , you cannot use the return value as an argument to a <xref:System.Uri.%23ctor%2A> constructor to create an equivalent <xref:System.Uri>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-663"><paramref name="components" /> 不是有效 <see cref="T:System.UriComponents" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="83204-663"><paramref name="components" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-664">当前 <see cref="T:System.Uri" /> 不是绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-664">The current <see cref="T:System.Uri" /> is not an absolute URI.</span></span> <span data-ttu-id="83204-665">相对 URI 不能和此方法一起使用。</span><span class="sxs-lookup"><span data-stu-id="83204-665">Relative URIs cannot be used with this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uri.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-666">获取 URI 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="83204-666">Gets the hash code for the URI.</span></span></summary>
        <returns><span data-ttu-id="83204-667">一个 <see cref="T:System.Int32" />，其中包含为此 URI 生成的哈希值。</span><span class="sxs-lookup"><span data-stu-id="83204-667">An <see cref="T:System.Int32" /> containing the hash value generated for this URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-668">下面的示例创建<xref:System.Uri>实例，并向控制台进行写入的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="83204-668">The following example creates a <xref:System.Uri> instance and writes the hash code to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeftPart">
      <MemberSignature Language="C#" Value="public string GetLeftPart (UriPartial part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLeftPart(valuetype System.UriPartial part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetLeftPart(System.UriPartial)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLeftPart (part As UriPartial) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLeftPart(UriPartial part);" />
      <MemberSignature Language="F#" Value="member this.GetLeftPart : UriPartial -&gt; string" Usage="uri.GetLeftPart part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.UriPartial" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="83204-669"><see cref="T:System.UriPartial" /> 值之一，指定要返回的 URI 部分的结尾。</span><span class="sxs-lookup"><span data-stu-id="83204-669">One of the <see cref="T:System.UriPartial" /> values that specifies the end of the URI portion to return.</span></span></param>
        <summary><span data-ttu-id="83204-670">获取 <see cref="T:System.Uri" /> 实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="83204-670">Gets the specified portion of a <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="83204-671">一个 <see cref="T:System.String" />，其中包含 <see cref="T:System.Uri" /> 实例的指定部分。</span><span class="sxs-lookup"><span data-stu-id="83204-671">A <see cref="T:System.String" /> that contains the specified portion of the <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-672"><xref:System.Uri.GetLeftPart%2A>方法返回一个包含与指定的部分结束的 URI 字符串的最左侧部分字符串`part`。</span><span class="sxs-lookup"><span data-stu-id="83204-672">The <xref:System.Uri.GetLeftPart%2A> method returns a string containing the leftmost portion of the URI string, ending with the portion specified by `part`.</span></span>  
  
 <span data-ttu-id="83204-673"><xref:System.Uri.GetLeftPart%2A> 在以下情况下包括分隔符：</span><span class="sxs-lookup"><span data-stu-id="83204-673"><xref:System.Uri.GetLeftPart%2A> includes delimiters in the following cases:</span></span>  
  
-   <span data-ttu-id="83204-674"><xref:System.UriPartial.Scheme> 包括方案分隔符。</span><span class="sxs-lookup"><span data-stu-id="83204-674"><xref:System.UriPartial.Scheme> includes the scheme delimiter.</span></span>  
  
-   <span data-ttu-id="83204-675"><xref:System.UriPartial.Authority> 不包括路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="83204-675"><xref:System.UriPartial.Authority> does not include the path delimiter.</span></span>  
  
-   <span data-ttu-id="83204-676"><xref:System.UriPartial.Path> 最多的查询或片段的分隔符的原始 URI 中包括任何分隔符。</span><span class="sxs-lookup"><span data-stu-id="83204-676"><xref:System.UriPartial.Path> includes any delimiters in the original URI up to the query or fragment delimiter.</span></span>  
  
-   <span data-ttu-id="83204-677"><xref:System.UriPartial.Query> 包括<xref:System.UriPartial.Path>，加上查询和其分隔符。</span><span class="sxs-lookup"><span data-stu-id="83204-677"><xref:System.UriPartial.Query> includes the <xref:System.UriPartial.Path>, plus the query and its delimiter.</span></span>  
  
 <span data-ttu-id="83204-678">下面的示例演示将 URI 和调用的结果<xref:System.Uri.GetLeftPart%2A>与<xref:System.UriPartial.Scheme>， <xref:System.UriPartial.Authority>， <xref:System.UriPartial.Path>，或<xref:System.UriPartial.Query>。</span><span class="sxs-lookup"><span data-stu-id="83204-678">The following examples show a URI and the results of calling <xref:System.Uri.GetLeftPart%2A> with <xref:System.UriPartial.Scheme>, <xref:System.UriPartial.Authority>, <xref:System.UriPartial.Path>, or <xref:System.UriPartial.Query>.</span></span>  
  
|<span data-ttu-id="83204-679">URI</span><span class="sxs-lookup"><span data-stu-id="83204-679">URI</span></span>|<span data-ttu-id="83204-680">方案</span><span class="sxs-lookup"><span data-stu-id="83204-680">Scheme</span></span>|<span data-ttu-id="83204-681">颁发机构</span><span class="sxs-lookup"><span data-stu-id="83204-681">Authority</span></span>|<span data-ttu-id="83204-682">路径</span><span class="sxs-lookup"><span data-stu-id="83204-682">Path</span></span>|<span data-ttu-id="83204-683">查询</span><span class="sxs-lookup"><span data-stu-id="83204-683">Query</span></span>|  
|---------|------------|---------------|----------|-----------|  
|http://www.contoso.com/index.htm?date=today|<span data-ttu-id="83204-684">http://</span><span class="sxs-lookup"><span data-stu-id="83204-684">http://</span></span>|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm?date=today|  
|http://www.contoso.com/index.htm#main|<span data-ttu-id="83204-685">http://</span><span class="sxs-lookup"><span data-stu-id="83204-685">http://</span></span>|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm|  
|<span data-ttu-id="83204-686">mailto:user@contoso.com?subject=uri</span><span class="sxs-lookup"><span data-stu-id="83204-686">mailto:user@contoso.com?subject=uri</span></span>|<span data-ttu-id="83204-687">mailto:</span><span class="sxs-lookup"><span data-stu-id="83204-687">mailto:</span></span>|mailto:user@contoso.com|<span data-ttu-id="83204-688">mailto:user@contoso.com?subject=uri</span><span class="sxs-lookup"><span data-stu-id="83204-688">mailto:user@contoso.com?subject=uri</span></span>|<span data-ttu-id="83204-689">\<none></span><span class="sxs-lookup"><span data-stu-id="83204-689">\<none></span></span>|  
|nntp://news.contoso.com/123456@contoso.com|<span data-ttu-id="83204-690">nntp://</span><span class="sxs-lookup"><span data-stu-id="83204-690">nntp://</span></span>|<span data-ttu-id="83204-691">nntp://news.contoso.com</span><span class="sxs-lookup"><span data-stu-id="83204-691">nntp://news.contoso.com</span></span>|nntp://news.contoso.com/123456@contoso.com|nntp://news.contoso.com/123456@contoso.com|  
|news:123456@contoso.com|<span data-ttu-id="83204-692">新闻：</span><span class="sxs-lookup"><span data-stu-id="83204-692">news:</span></span>|news:123456@contoso.com|news:123456@contoso.com|<span data-ttu-id="83204-693">\<none></span><span class="sxs-lookup"><span data-stu-id="83204-693">\<none></span></span>|  
|<span data-ttu-id="83204-694">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="83204-694">file://server/filename.ext</span></span>|<span data-ttu-id="83204-695">file://</span><span class="sxs-lookup"><span data-stu-id="83204-695">file://</span></span>|<span data-ttu-id="83204-696">file://server</span><span class="sxs-lookup"><span data-stu-id="83204-696">file://server</span></span>|<span data-ttu-id="83204-697">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="83204-697">file://server/filename.ext</span></span>|<span data-ttu-id="83204-698">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="83204-698">file://server/filename.ext</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="83204-699">下面的示例创建<xref:System.Uri>实例并将路径输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-699">The following example creates a <xref:System.Uri> instance and writes the path to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-700">当前 <see cref="T:System.Uri" /> 实例不是绝对实例。</span><span class="sxs-lookup"><span data-stu-id="83204-700">The current <see cref="T:System.Uri" /> instance is not an absolute instance.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="83204-701">指定的 <paramref name="part" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="83204-701">The specified <paramref name="part" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="member this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="uri.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="83204-702">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象包含序列化 <see cref="T:System.Uri" /> 所需的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-702">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="83204-703">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象包含与<see cref="T:System.Uri" /> 关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="83204-703">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="83204-704">返回序列化当前实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="83204-704">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="83204-705">若要使用序列化方法。</span><span class="sxs-lookup"><span data-stu-id="83204-705">to use serialization methods.</span></span> <span data-ttu-id="83204-706">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="83204-706">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HexEscape">
      <MemberSignature Language="C#" Value="public static string HexEscape (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HexEscape(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexEscape(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexEscape (character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HexEscape(char character);" />
      <MemberSignature Language="F#" Value="static member HexEscape : char -&gt; string" Usage="System.Uri.HexEscape character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="83204-707">要转换为十六进制表示形式的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-707">The character to convert to hexadecimal representation.</span></span></param>
        <summary><span data-ttu-id="83204-708">将指定的字符转换为它的等效十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="83204-708">Converts a specified character into its hexadecimal equivalent.</span></span></summary>
        <returns><span data-ttu-id="83204-709">指定字符的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-709">The hexadecimal representation of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-710">以下示例将字符转换为其十六进制等效值，并将其写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-710">The following example converts a character to its hexadecimal equivalent and writes it to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-711"><paramref name="character" /> 大于 255。</span><span class="sxs-lookup"><span data-stu-id="83204-711"><paramref name="character" /> is greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HexUnescape">
      <MemberSignature Language="C#" Value="public static char HexUnescape (string pattern, ref int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char HexUnescape(string pattern, int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexUnescape(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexUnescape (pattern As String, ByRef index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char HexUnescape(System::String ^ pattern, int % index);" />
      <MemberSignature Language="F#" Value="static member HexUnescape : string *  -&gt; char" Usage="System.Uri.HexUnescape (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="index" Type="System.Int32" RefType="ref" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="83204-712">字符的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-712">The hexadecimal representation of a character.</span></span></param>
        <param name="index"><span data-ttu-id="83204-713"><paramref name="pattern" /> 中字符的十六进制表示形式开始的位置。</span><span class="sxs-lookup"><span data-stu-id="83204-713">The location in <paramref name="pattern" /> where the hexadecimal representation of a character begins.</span></span></param>
        <summary><span data-ttu-id="83204-714">将字符的指定十六进制表示形式转换为字符。</span><span class="sxs-lookup"><span data-stu-id="83204-714">Converts a specified hexadecimal representation of a character to the character.</span></span></summary>
        <returns><span data-ttu-id="83204-715">用十六进制编码表示的位于 <paramref name="index" /> 的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-715">The character represented by the hexadecimal encoding at position <paramref name="index" />.</span></span> <span data-ttu-id="83204-716">如果位于 <paramref name="index" /> 的字符不是用十六进制编码的，则返回位于 <paramref name="index" /> 的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-716">If the character at <paramref name="index" /> is not hexadecimal encoded, the character at <paramref name="index" /> is returned.</span></span> <span data-ttu-id="83204-717"><paramref name="index" /> 的值递增以指向跟在返回的字符后面的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-717">The value of <paramref name="index" /> is incremented to point to the character following the one returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-718">下面的代码示例确定字符是否为十六进制编码，是否是这样，则会将等效的字符写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-718">The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]
 [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]
 [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="83204-719"><paramref name="index" /> 小于 0，或大于等于 <paramref name="pattern" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="83204-719"><paramref name="index" /> is less than 0 or greater than or equal to the number of characters in <paramref name="pattern" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Uri.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-720">获取此实例的主机部分。</span><span class="sxs-lookup"><span data-stu-id="83204-720">Gets the host component of this instance.</span></span></summary>
        <value><span data-ttu-id="83204-721">一个包含主机名的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-721">A <see cref="T:System.String" /> that contains the host name.</span></span> <span data-ttu-id="83204-722">这通常是服务器的 DNS 主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="83204-722">This is usually the DNS host name or IP address of the server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-723">与不同<xref:System.Uri.Authority%2A>属性，此属性的值不包括端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-723">Unlike the <xref:System.Uri.Authority%2A> property, this property value does not include the port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-724">下面的示例将主机名 (`www.contoso.com`) 到控制台的服务器。</span><span class="sxs-lookup"><span data-stu-id="83204-724">The following example writes the host name (`www.contoso.com`) of the server to the console.</span></span>  
  
 [!code-cpp[Classic Uri.Host Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Host Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Host Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Host Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Host Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Host Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-725">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-725">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HostNameType">
      <MemberSignature Language="C#" Value="public UriHostNameType HostNameType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriHostNameType HostNameType" />
      <MemberSignature Language="DocId" Value="P:System.Uri.HostNameType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostNameType As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property UriHostNameType HostNameType { UriHostNameType get(); };" />
      <MemberSignature Language="F#" Value="member this.HostNameType : UriHostNameType" Usage="System.Uri.HostNameType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-726">获取 URI 中指定的主机名的类型。</span><span class="sxs-lookup"><span data-stu-id="83204-726">Gets the type of the host name specified in the URI.</span></span></summary>
        <value><span data-ttu-id="83204-727"><see cref="T:System.UriHostNameType" /> 枚举的一个成员。</span><span class="sxs-lookup"><span data-stu-id="83204-727">A member of the <see cref="T:System.UriHostNameType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-728">下面的示例创建<xref:System.Uri>实例并将事件写入<xref:System.Uri.HostNameType%2A>到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-728">The following example creates a <xref:System.Uri> instance and writes the <xref:System.Uri.HostNameType%2A> to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-729">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-729">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IdnHost">
      <MemberSignature Language="C#" Value="public string IdnHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdnHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IdnHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdnHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IdnHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IdnHost : string" Usage="System.Uri.IdnHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-730">RFC 3490 根据需要使用 Punycode，符合主机的国际域名要求。</span><span class="sxs-lookup"><span data-stu-id="83204-730">The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</span></span> <span data-ttu-id="83204-731">该字符串在不进行转义的情况下（如必要）可安全用于 DNS 解析。</span><span class="sxs-lookup"><span data-stu-id="83204-731">This string, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value><span data-ttu-id="83204-732">主机名，采用根据标准 IDN Punycode 格式。</span><span class="sxs-lookup"><span data-stu-id="83204-732">The hostname, formatted with Punycode according to the IDN standard.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-733">需要 Punycode 窗体中的域名的较低级别网络协议用于提供此属性。</span><span class="sxs-lookup"><span data-stu-id="83204-733">This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form.</span></span> <span data-ttu-id="83204-734">如果你的代码不需要该特定的格式，使用<xref:System.Uri.Host%2A>主机名。</span><span class="sxs-lookup"><span data-stu-id="83204-734">If your code does not require that specific format, use <xref:System.Uri.Host%2A> for the hostname.</span></span>  
  
 <span data-ttu-id="83204-735">已弃用<xref:System.Uri.DnsSafeHost%2A>属性是依赖于*app.config*设置，Windows 应用商店应用程序不能更改。</span><span class="sxs-lookup"><span data-stu-id="83204-735">The deprecated <xref:System.Uri.DnsSafeHost%2A> property is dependent on *app.config* settings, which cannot be changed by Windows Store applications.</span></span> <span data-ttu-id="83204-736">作为使用首选替代方法提供 IdnHost <xref:System.Uri.DnsSafeHost%2A>，因为<xref:System.Uri.IdnHost%2A>保证始终是安全的无论何种当前 DNS *app.config*可能设置。</span><span class="sxs-lookup"><span data-stu-id="83204-736">IdnHost is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  

 <span data-ttu-id="83204-737">如果已转义的字符串用于构造此实例 （例如，"http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm")，然后 IdnHost 返回已转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-737">If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then IdnHost returns an escaped string.</span></span> <span data-ttu-id="83204-738">应取消之前进行 DNS 解析中使用该字符串从 IdnHost 返回任何已转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-738">You should unescape any escaped string returned from IdnHost before using that string for DNS resolution.</span></span> <span data-ttu-id="83204-739">请注意，如果您使用了无效非转义的字符串将构造此实例 （例如，"http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm")，然后 IdnHost 返回未转义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-739">Be aware that if you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then IdnHost returns an unescaped string.</span></span>


 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbsoluteUri">
      <MemberSignature Language="C#" Value="public bool IsAbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbsoluteUri As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbsoluteUri { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbsoluteUri : bool" Usage="System.Uri.IsAbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-740">获取一个值，该值指示 <see cref="T:System.Uri" /> 实例是否为绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-740">Gets whether the <see cref="T:System.Uri" /> instance is absolute.</span></span></summary>
        <value><span data-ttu-id="83204-741">一个 <see cref="T:System.Boolean" /> 值。如果 <see langword="true" /> 实例是绝对 URI，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-741">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> instance is absolute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-742">此属性是`true`如果在字符串或<xref:System.Uri>传递到构造函数的实例可以解析为绝对<xref:System.Uri>实例，其中包含一种方案、 一个颁发机构和的路径。</span><span class="sxs-lookup"><span data-stu-id="83204-742">This property is `true` if the string or <xref:System.Uri> instance that was passed into the constructor can be parsed as an absolute <xref:System.Uri> instance, which contains a scheme, an authority, and a path.</span></span> <span data-ttu-id="83204-743">否则为<xref:System.Uri>实例被视为相对和可能会省略方案或其他 URI 组件。</span><span class="sxs-lookup"><span data-stu-id="83204-743">Otherwise, the <xref:System.Uri> instance is treated as relative and might omit the scheme or other URI components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBadFileSystemCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsBadFileSystemCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsBadFileSystemCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBadFileSystemCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsBadFileSystemCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsBadFileSystemCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsBadFileSystemCharacter : char -&gt; bool&#xA;override this.IsBadFileSystemCharacter : char -&gt; bool" Usage="uri.IsBadFileSystemCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="83204-744">要测试的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="83204-744">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="83204-745">获取一个值，该值指示字符是否在文件系统名称中无效。</span><span class="sxs-lookup"><span data-stu-id="83204-745">Gets whether a character is invalid in a file system name.</span></span></summary>
        <returns><span data-ttu-id="83204-746">如果指定的字符无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-746"><see langword="true" /> if the specified character is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-747">根据 NTFS 文件系统的规则分析字符。</span><span class="sxs-lookup"><span data-stu-id="83204-747">The character is analyzed according to the rules for the NTFS file system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseOf">
      <MemberSignature Language="C#" Value="public bool IsBaseOf (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBaseOf(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBaseOf(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBaseOf(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.IsBaseOf : Uri -&gt; bool" Usage="uri.IsBaseOf uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="83204-748">要测试的指定 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-748">The specified <see cref="T:System.Uri" /> instance to test.</span></span></param>
        <summary><span data-ttu-id="83204-749">确定当前的 <see cref="T:System.Uri" /> 实例是否为指定 <see cref="T:System.Uri" /> 实例的基。</span><span class="sxs-lookup"><span data-stu-id="83204-749">Determines whether the current <see cref="T:System.Uri" /> instance is a base of the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="83204-750">如果当前 <see langword="true" /> 实例是 <see cref="T:System.Uri" /> 的基，则为 <paramref name="uri" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-750"><see langword="true" /> if the current <see cref="T:System.Uri" /> instance is a base of <paramref name="uri" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-751"><xref:System.Uri.IsBaseOf%2A> 用于比较当前<xref:System.Uri>实例与指定<xref:System.Uri>来确定此 URI 是否为指定的基础<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-751"><xref:System.Uri.IsBaseOf%2A> is used to compare the current <xref:System.Uri> instance to a specified <xref:System.Uri> to determine whether this URI is a base for the specified <xref:System.Uri>.</span></span> <span data-ttu-id="83204-752">当比较两个<xref:System.Uri>对象，以确定基本关系，用户信息 (<xref:System.Uri.UserInfo%2A>) 则不会评估。</span><span class="sxs-lookup"><span data-stu-id="83204-752">When comparing two <xref:System.Uri> objects to determine a base relationship, the user information (<xref:System.Uri.UserInfo%2A>) is not evaluated.</span></span> <span data-ttu-id="83204-753">在比较两个 Uri （uri1 和 uri2） 时，如果当你忽略 uri2 中的所有内容后的最后一个斜杠 （/），两个 Uri 同时 uri1 就是 uri2 的基。</span><span class="sxs-lookup"><span data-stu-id="83204-753">When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical.</span></span> <span data-ttu-id="83204-754">使用http://host/path/path/file?query作为基 URI，下表显示了，无论它是其他 Uri 的基础。</span><span class="sxs-lookup"><span data-stu-id="83204-754">Using http://host/path/path/file?query as the base URI, the following table shows whether it is a base for other URIs.</span></span>  
  
|<span data-ttu-id="83204-755">URI</span><span class="sxs-lookup"><span data-stu-id="83204-755">URI</span></span>|<span data-ttu-id="83204-756">http://host/path/path/file?query 是基项</span><span class="sxs-lookup"><span data-stu-id="83204-756">http://host/path/path/file?query is base of</span></span>|  
|---------|------------------------------------------------------|  
|http://host/path/path/file/|<span data-ttu-id="83204-757">是</span><span class="sxs-lookup"><span data-stu-id="83204-757">yes</span></span>|  
|http://host/path/path/#fragment|<span data-ttu-id="83204-758">是</span><span class="sxs-lookup"><span data-stu-id="83204-758">yes</span></span>|  
|<span data-ttu-id="83204-759">http://host/path/path/MoreDir/"</span><span class="sxs-lookup"><span data-stu-id="83204-759">http://host/path/path/MoreDir/"</span></span>|<span data-ttu-id="83204-760">是</span><span class="sxs-lookup"><span data-stu-id="83204-760">yes</span></span>|  
|http://host/path/path/OtherFile?Query|<span data-ttu-id="83204-761">是</span><span class="sxs-lookup"><span data-stu-id="83204-761">yes</span></span>|  
|http://host/path/path/|<span data-ttu-id="83204-762">是</span><span class="sxs-lookup"><span data-stu-id="83204-762">yes</span></span>|  
|http://host/path/path/file|<span data-ttu-id="83204-763">是</span><span class="sxs-lookup"><span data-stu-id="83204-763">yes</span></span>|  
|http://host/path/path|<span data-ttu-id="83204-764">否</span><span class="sxs-lookup"><span data-stu-id="83204-764">no</span></span>|  
|http://host/path/path?query|<span data-ttu-id="83204-765">否</span><span class="sxs-lookup"><span data-stu-id="83204-765">no</span></span>|  
|http://host/path/path#Fragment|<span data-ttu-id="83204-766">否</span><span class="sxs-lookup"><span data-stu-id="83204-766">no</span></span>|  
|http://host/path/path2/|<span data-ttu-id="83204-767">否</span><span class="sxs-lookup"><span data-stu-id="83204-767">no</span></span>|  
<span data-ttu-id="83204-768">://host/path/path2/MoreDir</span><span class="sxs-lookup"><span data-stu-id="83204-768">://host/path/path2/MoreDir</span></span>|<span data-ttu-id="83204-769">否</span><span class="sxs-lookup"><span data-stu-id="83204-769">no</span></span>|  
|http://host/path/File|<span data-ttu-id="83204-770">否</span><span class="sxs-lookup"><span data-stu-id="83204-770">no</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="83204-771">此示例将创建<xref:System.Uri>实例，它表示基础<xref:System.Uri>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-771">This example creates a <xref:System.Uri> instance that represents a base <xref:System.Uri> instance.</span></span> <span data-ttu-id="83204-772">然后，创建第二个<xref:System.Uri>从字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-772">It then creates a second <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="83204-773">它将调用<xref:System.Uri.IsBaseOf%2A>以确定基本实例是否为第二个实例的基。</span><span class="sxs-lookup"><span data-stu-id="83204-773">It calls <xref:System.Uri.IsBaseOf%2A> to determine whether the base instance is the base of the second instance.</span></span> <span data-ttu-id="83204-774">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-774">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#6)]
 [!code-csharp[NCLUriEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#6)]
 [!code-vb[NCLUriEnhancements#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-775"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-775"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPort">
      <MemberSignature Language="C#" Value="public bool IsDefaultPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPort" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsDefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultPort : bool" Usage="System.Uri.IsDefaultPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-776">获取一个值，该值指示 URI 的端口值是否为此方案的默认值。</span><span class="sxs-lookup"><span data-stu-id="83204-776">Gets whether the port value of the URI is the default for this scheme.</span></span></summary>
        <value><span data-ttu-id="83204-777">一个 <see cref="T:System.Boolean" /> 值。如果 <see langword="true" /> 属性中的值是此方案的默认端口，则该值为 <see cref="P:System.Uri.Port" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-777">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the value in the <see cref="P:System.Uri.Port" /> property is the default port for this scheme; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-778">下面的示例创建<xref:System.Uri>实例，并检查它是否使用默认端口。</span><span class="sxs-lookup"><span data-stu-id="83204-778">The following example creates a <xref:System.Uri> instance and checks whether it uses the default port.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-779">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-779">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsExcludedCharacter">
      <MemberSignature Language="C#" Value="protected static bool IsExcludedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsExcludedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsExcludedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsExcludedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool IsExcludedCharacter(char character);" />
      <MemberSignature Language="F#" Value="static member IsExcludedCharacter : char -&gt; bool" Usage="System.Uri.IsExcludedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="83204-780">要测试的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="83204-780">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="83204-781">获取一个值，该值指示是否应该转义指定的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-781">Gets whether the specified character should be escaped.</span></span></summary>
        <returns><span data-ttu-id="83204-782">一个 <see cref="T:System.Boolean" /> 值。如果应该转义指定的字符，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-782">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the specified character should be escaped; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public bool IsFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFile" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFile : bool" Usage="System.Uri.IsFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-783">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否为文件 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-783">Gets a value indicating whether the specified <see cref="T:System.Uri" /> is a file URI.</span></span></summary>
        <value><span data-ttu-id="83204-784">一个 <see cref="T:System.Boolean" /> 值。如果 <see langword="true" /> 是文件 URI，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-784">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> is a file URI; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-785"><xref:System.Uri.IsFile%2A>属性是`true`时<xref:System.Uri.Scheme%2A>属性等于<xref:System.Uri.UriSchemeFile>。</span><span class="sxs-lookup"><span data-stu-id="83204-785">The <xref:System.Uri.IsFile%2A> property is `true` when the <xref:System.Uri.Scheme%2A> property equals <xref:System.Uri.UriSchemeFile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-786">下面的示例创建<xref:System.Uri>实例，并确定它是否为文件 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-786">The following example creates a <xref:System.Uri> instance and determines whether it is a file URI.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-787">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-787">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsHexDigit">
      <MemberSignature Language="C#" Value="public static bool IsHexDigit (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexDigit(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexDigit (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexDigit(char character);" />
      <MemberSignature Language="F#" Value="static member IsHexDigit : char -&gt; bool" Usage="System.Uri.IsHexDigit character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="83204-788">要验证的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-788">The character to validate.</span></span></param>
        <summary><span data-ttu-id="83204-789">确定指定的字符是否为有效的十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="83204-789">Determines whether a specified character is a valid hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="83204-790">如果字符是有效的十六进制数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-790"><see langword="true" /> if the character is a valid hexadecimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-791">十六进制数字为 0 到 9 的数字和字母 A-F 或 a-f。</span><span class="sxs-lookup"><span data-stu-id="83204-791">Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-792">下面的示例确定字符是否为十六进制字符，是否是，则会将对应的十进制值写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-792">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHexEncoding">
      <MemberSignature Language="C#" Value="public static bool IsHexEncoding (string pattern, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexEncoding(string pattern, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexEncoding(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexEncoding (pattern As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexEncoding(System::String ^ pattern, int index);" />
      <MemberSignature Language="F#" Value="static member IsHexEncoding : string * int -&gt; bool" Usage="System.Uri.IsHexEncoding (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="83204-793">要检查的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-793">The string to check.</span></span></param>
        <param name="index"><span data-ttu-id="83204-794">检查十六进制编码的 <paramref name="pattern" /> 中的位置。</span><span class="sxs-lookup"><span data-stu-id="83204-794">The location in <paramref name="pattern" /> to check for hexadecimal encoding.</span></span></param>
        <summary><span data-ttu-id="83204-795">确定字符串中的一个字符是否为十六进制编码。</span><span class="sxs-lookup"><span data-stu-id="83204-795">Determines whether a character in a string is hexadecimal encoded.</span></span></summary>
        <returns><span data-ttu-id="83204-796">一个 <see cref="T:System.Boolean" /> 值。如果 <see langword="true" /> 在指定位置进行了十六进制编码，则该值为 <paramref name="pattern" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-796">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if <paramref name="pattern" /> is hexadecimal encoded at the specified location; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-797"><xref:System.Uri.IsHexEncoding%2A>方法检查十六进制编码，其中"hex"遵循模式遵循"%hexhex"在字符串中，为数字 0 到 9 或从 A 到 F （不区分大小写） 以字母。</span><span class="sxs-lookup"><span data-stu-id="83204-797">The <xref:System.Uri.IsHexEncoding%2A> method checks for hexadecimal encoding that follows the pattern "%hexhex" in a string, where "hex" is a digit from 0 to 9 or a letter from A-F (case-insensitive).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-798">下面的代码示例确定字符是否为十六进制编码，是否是这样，则会将等效的字符写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-798">The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]
 [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]
 [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoopback">
      <MemberSignature Language="C#" Value="public bool IsLoopback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsLoopback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoopback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoopback : bool" Usage="System.Uri.IsLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-799">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否引用了本地主机。</span><span class="sxs-lookup"><span data-stu-id="83204-799">Gets whether the specified <see cref="T:System.Uri" /> references the local host.</span></span></summary>
        <value><span data-ttu-id="83204-800">一个 <see cref="T:System.Boolean" /> 值。如果此 <see langword="true" /> 引用了本地主机，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-800">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if this <see cref="T:System.Uri" /> references the local host; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-801"><xref:System.Uri.IsLoopback%2A> 返回`true`如果创建此实例时指定的 URI 为 127.0.0.1，环回，或 localhost，或者如果 URI 未指定主机信息 (例如，file:///c:Dir/file.txt)。</span><span class="sxs-lookup"><span data-stu-id="83204-801"><xref:System.Uri.IsLoopback%2A> returns `true` if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt).</span></span> <span data-ttu-id="83204-802">所有其他 Uri 返回`false`。</span><span class="sxs-lookup"><span data-stu-id="83204-802">All other URIs return `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-803">下面的示例创建<xref:System.Uri>实例，并确定它是否引用本地主机。</span><span class="sxs-lookup"><span data-stu-id="83204-803">The following example creates a <xref:System.Uri> instance and determines whether it references a local host.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-804">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-804">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReservedCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsReservedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReservedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsReservedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReservedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReservedCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsReservedCharacter : char -&gt; bool&#xA;override this.IsReservedCharacter : char -&gt; bool" Usage="uri.IsReservedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="83204-805">要测试的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="83204-805">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="83204-806">获取一个值，该值指示指定的字符是否为保留字符。</span><span class="sxs-lookup"><span data-stu-id="83204-806">Gets whether the specified character is a reserved character.</span></span></summary>
        <returns><span data-ttu-id="83204-807">一个 <see cref="T:System.Boolean" /> 值。如果指定的字符是保留字符，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-807">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the specified character is a reserved character otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnc">
      <MemberSignature Language="C#" Value="public bool IsUnc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnc" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsUnc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnc { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnc : bool" Usage="System.Uri.IsUnc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-808">获取一个值，该值指示指定的 <see cref="T:System.Uri" /> 是否为统一命名约定 (UNC) 路径。</span><span class="sxs-lookup"><span data-stu-id="83204-808">Gets whether the specified <see cref="T:System.Uri" /> is a universal naming convention (UNC) path.</span></span></summary>
        <value><span data-ttu-id="83204-809">一个 <see cref="T:System.Boolean" /> 值。如果 <see langword="true" /> 是 UNC 路径，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-809">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> is a UNC path; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-810"><xref:System.Uri.IsUnc%2A>属性是`true`如果指定<xref:System.Uri>实例是 UNC 路径 (如\\\server\folder 或 file://server/folder)。</span><span class="sxs-lookup"><span data-stu-id="83204-810">The <xref:System.Uri.IsUnc%2A> property is `true` if the specified <xref:System.Uri> instance is a UNC path (such as \\\server\folder or file://server/folder).</span></span> <span data-ttu-id="83204-811">此属性始终返回`true`如果 URI 具有 file:// 方案和指定的主机组件。</span><span class="sxs-lookup"><span data-stu-id="83204-811">This property always returns `true` if the URI has the file:// scheme and specifies a host component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-812">下面的示例创建<xref:System.Uri>实例，并确定它是否是 UNC 路径。</span><span class="sxs-lookup"><span data-stu-id="83204-812">The following example creates a <xref:System.Uri> instance and determines whether it is a UNC path.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-813">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-813">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedOriginalString">
      <MemberSignature Language="C#" Value="public bool IsWellFormedOriginalString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWellFormedOriginalString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedOriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWellFormedOriginalString () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWellFormedOriginalString();" />
      <MemberSignature Language="F#" Value="member this.IsWellFormedOriginalString : unit -&gt; bool" Usage="uri.IsWellFormedOriginalString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-814">指示用于构造此 <see cref="T:System.Uri" /> 的字符串是否格式良好，以及它是否不需要进一步转义。</span><span class="sxs-lookup"><span data-stu-id="83204-814">Indicates whether the string used to construct this <see cref="T:System.Uri" /> was well-formed and is not required to be further escaped.</span></span></summary>
        <returns><span data-ttu-id="83204-815">如果该字符串格式正确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-815"><see langword="true" /> if the string was well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-816">默认情况下是根据 RFC 2396 和 RFC 2732 格式正确，认为该字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-816">The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default.</span></span> <span data-ttu-id="83204-817">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，该字符串被视为可根据 RFC 3986 和 RFC 3987 格式正确</span><span class="sxs-lookup"><span data-stu-id="83204-817">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987</span></span>  
  
 <span data-ttu-id="83204-818">将认为该字符串格式很差，并导致此方法返回 false，如果发生以下情况。</span><span class="sxs-lookup"><span data-stu-id="83204-818">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.</span></span>  
  
|<span data-ttu-id="83204-819">Error</span><span class="sxs-lookup"><span data-stu-id="83204-819">Error</span></span>|<span data-ttu-id="83204-820">示例</span><span class="sxs-lookup"><span data-stu-id="83204-820">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="83204-821">未正确转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-821">The string is not correctly escaped.</span></span>|<span data-ttu-id="83204-822">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) 名称</span><span class="sxs-lookup"><span data-stu-id="83204-822">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name</span></span>|  
|<span data-ttu-id="83204-823">字符串是绝对<xref:System.Uri>，表示隐式文件<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-823">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|<span data-ttu-id="83204-824">c:\\\directory\filename</span><span class="sxs-lookup"><span data-stu-id="83204-824">c:\\\directory\filename</span></span>|  
|<span data-ttu-id="83204-825">该字符串是缺少斜杠之前路径的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-825">The string is an absolute URI that is missing a slash before the path.</span></span>|<span data-ttu-id="83204-826">file://c:/directory/filename</span><span class="sxs-lookup"><span data-stu-id="83204-826">file://c:/directory/filename</span></span>|  
|<span data-ttu-id="83204-827">字符串包含非转义反斜杠，即使它们被视为正斜杠。</span><span class="sxs-lookup"><span data-stu-id="83204-827">The string contains unescaped backslashes even if they are treated as forward slashes.</span></span>|<span data-ttu-id="83204-828">http:\\\host/path/file</span><span class="sxs-lookup"><span data-stu-id="83204-828">http:\\\host/path/file</span></span>|  
|<span data-ttu-id="83204-829">该字符串表示层次结构的绝对<xref:System.Uri>，并且不包含"://"。</span><span class="sxs-lookup"><span data-stu-id="83204-829">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://".</span></span>|<span data-ttu-id="83204-830">www.contoso.com/path/file</span><span class="sxs-lookup"><span data-stu-id="83204-830">www.contoso.com/path/file</span></span>|  
|<span data-ttu-id="83204-831">分析器<xref:System.Uri.Scheme%2A?displayProperty=nameWithType>指示原始字符串不是格式正确。</span><span class="sxs-lookup"><span data-stu-id="83204-831">The parser for the <xref:System.Uri.Scheme%2A?displayProperty=nameWithType> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="83204-832">此示例依赖于 URI 的方案。</span><span class="sxs-lookup"><span data-stu-id="83204-832">The example depends on the scheme of the URI.</span></span>|  
  
 <span data-ttu-id="83204-833">默认情况下，该字符串用于构造此<xref:System.Uri>被视为格式正确，符合 RFC 2396 和 RFC 2732。</span><span class="sxs-lookup"><span data-stu-id="83204-833">By default, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 2396 and RFC 2732.</span></span>  
  
 <span data-ttu-id="83204-834">当启用时国际资源标识符 (IRI) 和国际化域名 (IDN) 支持，用于构造此字符串<xref:System.Uri>被视为格式正确，符合 RFC 3986 和 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-834">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="83204-835">用于支持 IRI Punycode 名称只能包含 ASCII 字符，并且始终以 xn--前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-835">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="83204-836">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-836">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://www.ietf.org/"><span data-ttu-id="83204-837">Internet 工程任务组 (IETF)</span><span class="sxs-lookup"><span data-stu-id="83204-837">Internet Engineering Task Force (IETF)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedUriString">
      <MemberSignature Language="C#" Value="public static bool IsWellFormedUriString (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWellFormedUriString(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWellFormedUriString(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="static member IsWellFormedUriString : string * UriKind -&gt; bool" Usage="System.Uri.IsWellFormedUriString (uriString, uriKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="83204-838">用于尝试构造 <see cref="T:System.Uri" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-838">The string used to attempt to construct a <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="83204-839"><see cref="T:System.Uri" /> 中的 <paramref name="uriString" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="83204-839">The type of the <see cref="T:System.Uri" /> in <paramref name="uriString" />.</span></span></param>
        <summary><span data-ttu-id="83204-840">通过尝试用字符串构造一个 URI 来指示字符串是否为格式良好的，并确保字符串不需要进一步转义。</span><span class="sxs-lookup"><span data-stu-id="83204-840">Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</span></span></summary>
        <returns><span data-ttu-id="83204-841">如果该字符串格式正确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-841"><see langword="true" /> if the string was well-formed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-842">默认情况下在版本 4.5 之前的.NET 版本中，该字符串被视为格式正确，符合 RFC 2396 和 RFC 2732。</span><span class="sxs-lookup"><span data-stu-id="83204-842">In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732.</span></span> <span data-ttu-id="83204-843">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，则认为该字符串是格式正确，符合 RFC 3986 和 RFC 3987。</span><span class="sxs-lookup"><span data-stu-id="83204-843">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="83204-844">从.NET 4.5 开始，始终认为字符串的格式正确的根据 RFC 3986 和 RFC 3987，该值指示是否 IRI 或 IDN 启用。</span><span class="sxs-lookup"><span data-stu-id="83204-844">Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled.</span></span> <span data-ttu-id="83204-845">但是，请注意，此选项仅适用于面向.NET 4.5 的应用，或更高版本。</span><span class="sxs-lookup"><span data-stu-id="83204-845">Note, however, that this is only true for apps that target .NET 4.5 or later.</span></span> <span data-ttu-id="83204-846">面向.NET 4.0 的应用调用兼容性代码和体验的旧 (4.5 版本之前的) 行为。</span><span class="sxs-lookup"><span data-stu-id="83204-846">Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.</span></span>  
  
 <span data-ttu-id="83204-847">则认为字符串的格式很差，并导致此方法返回 false，如果出现任何以下条件</span><span class="sxs-lookup"><span data-stu-id="83204-847">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur</span></span>  
  
|<span data-ttu-id="83204-848">Error</span><span class="sxs-lookup"><span data-stu-id="83204-848">Error</span></span>|<span data-ttu-id="83204-849">示例</span><span class="sxs-lookup"><span data-stu-id="83204-849">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="83204-850">未正确转义字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-850">The string is not correctly escaped.</span></span>|<span data-ttu-id="83204-851">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) 名称</span><span class="sxs-lookup"><span data-stu-id="83204-851">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name</span></span>|  
|<span data-ttu-id="83204-852">字符串是绝对<xref:System.Uri>，表示隐式文件<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="83204-852">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|<span data-ttu-id="83204-853">c:\\\directory\filename</span><span class="sxs-lookup"><span data-stu-id="83204-853">c:\\\directory\filename</span></span>|  
|<span data-ttu-id="83204-854">该字符串是缺少斜杠之前路径的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-854">The string is an absolute URI that is missing a slash before the path.</span></span>|<span data-ttu-id="83204-855">file://c:/directory/filename</span><span class="sxs-lookup"><span data-stu-id="83204-855">file://c:/directory/filename</span></span>|  
|<span data-ttu-id="83204-856">该字符串包含非转义反斜杠，即使将被视为正斜杠</span><span class="sxs-lookup"><span data-stu-id="83204-856">The string contains unescaped backslashes even if they will be treated as forward slashes</span></span>|<span data-ttu-id="83204-857">http:\\\host/path/file</span><span class="sxs-lookup"><span data-stu-id="83204-857">http:\\\host/path/file</span></span>|  
|<span data-ttu-id="83204-858">该字符串表示层次结构的绝对<xref:System.Uri>，并且不包含"://"</span><span class="sxs-lookup"><span data-stu-id="83204-858">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://"</span></span>|<span data-ttu-id="83204-859">www.contoso.com/path/file</span><span class="sxs-lookup"><span data-stu-id="83204-859">www.contoso.com/path/file</span></span>|  
|<span data-ttu-id="83204-860">分析器<xref:System.Uri.Scheme%2A>指示原始字符串不是格式正确。</span><span class="sxs-lookup"><span data-stu-id="83204-860">The parser for the <xref:System.Uri.Scheme%2A> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="83204-861">此示例依赖于 URI 的方案。</span><span class="sxs-lookup"><span data-stu-id="83204-861">The example depends on the scheme of the URI.</span></span>|  
|<span data-ttu-id="83204-862">从.NET 4.5 中，用冒号的相对 Uri (:) 不考虑其第一个段中格式正确。</span><span class="sxs-lookup"><span data-stu-id="83204-862">Beginning with .NET 4.5, relative URIs with a colon (':') in their first segment are not considered well-formed.</span></span>|<span data-ttu-id="83204-863">2013.05.29_14:33:41</span><span class="sxs-lookup"><span data-stu-id="83204-863">2013.05.29_14:33:41</span></span>|  
  
 <span data-ttu-id="83204-864">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-864">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://www.ietf.org/"><span data-ttu-id="83204-865">Internet 工程任务组 (IETF)</span><span class="sxs-lookup"><span data-stu-id="83204-865">Internet Engineering Task Force (IETF)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LocalPath">
      <MemberSignature Language="C#" Value="public string LocalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalPath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.LocalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalPath : string" Usage="System.Uri.LocalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-866">获取文件名的本地操作系统表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-866">Gets a local operating-system representation of a file name.</span></span></summary>
        <value><span data-ttu-id="83204-867">一个 <see cref="T:System.String" />，包含文件名的本地操作系统表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-867">A <see cref="T:System.String" /> that contains the local operating-system representation of a file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-868">返回此属性的值未转义。</span><span class="sxs-lookup"><span data-stu-id="83204-868">The value returned by this property is unescaped.</span></span> <span data-ttu-id="83204-869">如果路径被识别为 Windows 文件路径，所有正斜杠 （/） 替换为反斜杠 (\\)。</span><span class="sxs-lookup"><span data-stu-id="83204-869">If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (\\).</span></span>  
  
 <span data-ttu-id="83204-870">Uri`file://computer/file.ext`的绝对路径`/file.ext`的本地路径是`\\computer\file.ext`。</span><span class="sxs-lookup"><span data-stu-id="83204-870">For the URI `file://computer/file.ext`, the absolute path is `/file.ext` and the local path is `\\computer\file.ext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-871">下面的示例创建<xref:System.Uri>实例，并向控制台进行写入的本地路径。</span><span class="sxs-lookup"><span data-stu-id="83204-871">The following example creates a <xref:System.Uri> instance and writes the local path to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-872">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-872">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public string MakeRelative (Uri toUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRelative(class System.Uri toUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelative(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRelative (toUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeRelative(Uri ^ toUri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelative : Uri -&gt; string" Usage="uri.MakeRelative toUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="toUri"><span data-ttu-id="83204-873">与当前 URI 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-873">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="83204-874">确定两个 <see cref="T:System.Uri" /> 实例之间的差异。</span><span class="sxs-lookup"><span data-stu-id="83204-874">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="83204-875">如果此 URI 实例与 <paramref name="toUri" /> 的主机名和方案相同，则此方法返回一个表示相对 URI 的 <see cref="T:System.String" />。若将此相对 URI 追加到当前 URI 实例，就可以得到 <paramref name="toUri" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="83204-875">If the hostname and scheme of this URI instance and <paramref name="toUri" /> are the same, then this method returns a <see cref="T:System.String" /> that represents a relative URI that, when appended to the current URI instance, yields the <paramref name="toUri" /> parameter.</span></span>  
  
<span data-ttu-id="83204-876">如果主机名或方案不同，则此方法返回一个表示 <see cref="T:System.String" /> 参数的 <paramref name="toUri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-876">If the hostname or scheme is different, then this method returns a <see cref="T:System.String" /> that represents the <paramref name="toUri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-877">下表显示了 URI 实例， `toUri`，并调用的结果<xref:System.Uri.MakeRelative%2A>。</span><span class="sxs-lookup"><span data-stu-id="83204-877">The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelative%2A>.</span></span>  
  
|<span data-ttu-id="83204-878">当前 URI 实例</span><span class="sxs-lookup"><span data-stu-id="83204-878">Current URI instance</span></span>|`toUri`|<span data-ttu-id="83204-879">返回值</span><span class="sxs-lookup"><span data-stu-id="83204-879">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|http://www.contoso.com/|http://www.contoso.com/test/test.htm|<span data-ttu-id="83204-880">test/test.htm</span><span class="sxs-lookup"><span data-stu-id="83204-880">test/test.htm</span></span>|  
|http://www.contoso.com/test1/|http://www.contoso.com/|<span data-ttu-id="83204-881">../</span><span class="sxs-lookup"><span data-stu-id="83204-881">../</span></span>|  
|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  
|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|<span data-ttu-id="83204-882">test1/test1.txt</span><span class="sxs-lookup"><span data-stu-id="83204-882">test1/test1.txt</span></span>|  
  
 <span data-ttu-id="83204-883">用户信息，如果存在在 URI 中，则忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-883">User information, if present in the URI, is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-884">下面的示例创建 2<xref:System.Uri>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-884">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="83204-885">中的路径信息的差异写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-885">The difference in the path information is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]
 [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]
 [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-886"><paramref name="toUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-886"><paramref name="toUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-887">此实例代表一个相对 URI，而此方法仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-887">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelativeUri">
      <MemberSignature Language="C#" Value="public Uri MakeRelativeUri (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri MakeRelativeUri(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelativeUri(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ MakeRelativeUri(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelativeUri : Uri -&gt; Uri" Usage="uri.MakeRelativeUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="83204-888">与当前 URI 进行比较的 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-888">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="83204-889">确定两个 <see cref="T:System.Uri" /> 实例之间的差异。</span><span class="sxs-lookup"><span data-stu-id="83204-889">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="83204-890">如果此 URI 实例与 <paramref name="uri" /> 的主机名和方案相同，则此方法返回一个相对 <see cref="T:System.Uri" />。若将此相对 URI 追加到当前 URI 实例，就可以得到 <paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-890">If the hostname and scheme of this URI instance and <paramref name="uri" /> are the same, then this method returns a relative <see cref="T:System.Uri" /> that, when appended to the current URI instance, yields <paramref name="uri" />.</span></span>  
  
<span data-ttu-id="83204-891">如果主机名或方案不同，则此方法返回一个表示 <see cref="T:System.Uri" /> 参数的 <paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-891">If the hostname or scheme is different, then this method returns a <see cref="T:System.Uri" /> that represents the <paramref name="uri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-892">下表显示了 URI 实例， `toUri`，并调用的结果<xref:System.Uri.MakeRelativeUri%2A>。</span><span class="sxs-lookup"><span data-stu-id="83204-892">The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelativeUri%2A>.</span></span>  
  
|<span data-ttu-id="83204-893">当前 URI 实例</span><span class="sxs-lookup"><span data-stu-id="83204-893">Current URI instance</span></span>|`toUri`|<span data-ttu-id="83204-894">返回值</span><span class="sxs-lookup"><span data-stu-id="83204-894">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|http://www.contoso.com/|http://www.contoso.com/test/test.htm|<span data-ttu-id="83204-895">test/test.htm</span><span class="sxs-lookup"><span data-stu-id="83204-895">test/test.htm</span></span>|  
|http://www.contoso.com/test1/|http://www.contoso.com/|<span data-ttu-id="83204-896">../</span><span class="sxs-lookup"><span data-stu-id="83204-896">../</span></span>|  
|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  
|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|<span data-ttu-id="83204-897">test1/test1.txt</span><span class="sxs-lookup"><span data-stu-id="83204-897">test1/test1.txt</span></span>|  
  
 <span data-ttu-id="83204-898">用户信息，如果存在在 URI 中，则忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-898">User information, if present in the URI, is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-899">下面的示例创建 2<xref:System.Uri>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-899">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="83204-900">中的路径信息的差异写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-900">The difference in the path information is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]
 [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]
 [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-901"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-901"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-902">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-902">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Equality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Uri * Uri -&gt; bool" Usage="uri1 = uri2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="83204-903">要与 <see cref="T:System.Uri" /> 比较的 <paramref name="uri2" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-903">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri2" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="83204-904">要与 <see cref="T:System.Uri" /> 比较的 <paramref name="uri1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-904">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri1" />.</span></span></param>
        <summary><span data-ttu-id="83204-905">确定两个 <see cref="T:System.Uri" /> 实例是否具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="83204-905">Determines whether two <see cref="T:System.Uri" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="83204-906">一个 <see cref="T:System.Boolean" /> 值。如果这两个 <see langword="true" /> 实例是等效的，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-906">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-907">此重载使用<xref:System.Uri.Equals%2A>方法，以确定是否两个<xref:System.Uri>实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="83204-907">This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are equivalent.</span></span> <span data-ttu-id="83204-908"><xref:System.Uri.UserInfo%2A> 和<xref:System.Uri.Fragment%2A>内容进行这种比较时被忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-908"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-909">此示例创建三个<xref:System.Uri>实例从字符串并将它们，以确定它们是否表示相同的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="83204-909">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="83204-910">`Address1` 并`Address2`是相同，因为<xref:System.Uri.Fragment%2A>部分此比较将被忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-910">`Address1` and `Address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="83204-911">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-911">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]
 [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]
 [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Inequality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Uri * Uri -&gt; bool" Usage="System.Uri.op_Inequality (uri1, uri2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uri2" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="83204-912">要与 <see cref="T:System.Uri" /> 比较的 <paramref name="uri2" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-912">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri2" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="83204-913">要与 <see cref="T:System.Uri" /> 比较的 <paramref name="uri1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="83204-913">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri1" />.</span></span></param>
        <summary><span data-ttu-id="83204-914">确定两个 <see cref="T:System.Uri" /> 实例是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="83204-914">Determines whether two <see cref="T:System.Uri" /> instances do not have the same value.</span></span></summary>
        <returns><span data-ttu-id="83204-915">一个 <see cref="T:System.Boolean" /> 值。如果两个 <see langword="true" /> 实例不相等，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-915">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the two <see cref="T:System.Uri" /> instances are not equal; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="83204-916">如果两者中任意一个参数为 <see langword="null" />，则此方法返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="83204-916">If either parameter is <see langword="null" />, this method returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-917">此重载使用<xref:System.Uri.Equals%2A>方法，以确定是否两个<xref:System.Uri>实例是否不相等。</span><span class="sxs-lookup"><span data-stu-id="83204-917">This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are not equivalent.</span></span> <span data-ttu-id="83204-918"><xref:System.Uri.UserInfo%2A> 和<xref:System.Uri.Fragment%2A>内容进行这种比较时被忽略。</span><span class="sxs-lookup"><span data-stu-id="83204-918"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-919">此示例创建三个<xref:System.Uri>实例从字符串并将它们，以确定它们是否表示相同的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="83204-919">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="83204-920">`Address2` 并`Address3`是不相同，因为`Address3`包含<xref:System.Uri.Query%2A>中未找到`Address2`。</span><span class="sxs-lookup"><span data-stu-id="83204-920">`Address2` and `Address3` are not the same because `Address3` contains a <xref:System.Uri.Query%2A> that is not found in `Address2`.</span></span> <span data-ttu-id="83204-921">结果将写入控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-921">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]
 [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]
 [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Uri.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Uri.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-922">获取传递给 <see cref="T:System.Uri" /> 构造函数的原始 URI 字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-922">Gets the original URI string that was passed to the <see cref="T:System.Uri" /> constructor.</span></span></summary>
        <value><span data-ttu-id="83204-923">包含构造此实例时指定的同一 URI，则为 <see cref="T:System.String" />；否则，为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="83204-923">A <see cref="T:System.String" /> containing the exact URI specified when this instance was constructed; otherwise, <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-924">如果向构造函数指定的 URI 包含前导或尾随空格，将保留这些空格。</span><span class="sxs-lookup"><span data-stu-id="83204-924">If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.</span></span>  
  
 <span data-ttu-id="83204-925">此属性返回的值与不同<xref:System.Uri.ToString%2A>和<xref:System.Uri.AbsoluteUri%2A>。</span><span class="sxs-lookup"><span data-stu-id="83204-925">The value returned by this property differs from <xref:System.Uri.ToString%2A> and <xref:System.Uri.AbsoluteUri%2A>.</span></span> <span data-ttu-id="83204-926"><xref:System.Uri.ToString%2A> 返回 URI 的规范地非转义的形式。</span><span class="sxs-lookup"><span data-stu-id="83204-926"><xref:System.Uri.ToString%2A> returns the canonically unescaped form of the URI.</span></span> <span data-ttu-id="83204-927"><xref:System.Uri.AbsoluteUri%2A> 返回 URI 的规范化转义的形式。</span><span class="sxs-lookup"><span data-stu-id="83204-927"><xref:System.Uri.AbsoluteUri%2A> returns the canonically escaped form of the URI.</span></span>  
  
 <span data-ttu-id="83204-928">如果启用了国际资源标识符 (IRI) 和国际化域名 (IDN) 支持，<xref:System.Uri.OriginalString%2A>返回原始的非正常化的字符串使用 Punycode 主机名，如果其中一个用于初始化<xref:System.Uri>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-928">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, <xref:System.Uri.OriginalString%2A> returns the original non normalized string with Punycode host name if one was used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="83204-929">Punycode 名称只包含 ASCII 字符，并且始终以 xn-- 前缀开头。</span><span class="sxs-lookup"><span data-stu-id="83204-929">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="83204-930">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-930">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 <span data-ttu-id="83204-931">当<xref:System.Uri>序列化对象，<xref:System.Uri.OriginalString%2A>不会保留。</span><span class="sxs-lookup"><span data-stu-id="83204-931">When a <xref:System.Uri> object is serialized, the <xref:System.Uri.OriginalString%2A> is not preserved.</span></span> <span data-ttu-id="83204-932">序列化过程使用完全转义和规范化<xref:System.Uri.AbsoluteUri%2A>属性序列化时。</span><span class="sxs-lookup"><span data-stu-id="83204-932">The serialization process uses the fully escaped and canonicalized <xref:System.Uri.AbsoluteUri%2A> property when serializing.</span></span> <span data-ttu-id="83204-933">有关<xref:System.Uri>，其中包含 IPv6 地址，会包含 IPv6 地址和范围 ID 中的序列化<xref:System.Uri>对象。</span><span class="sxs-lookup"><span data-stu-id="83204-933">For a <xref:System.Uri> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <xref:System.Uri> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-934">下面的示例创建一个新<xref:System.Uri>从字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-934">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="83204-935">它阐释了如何从返回的值之间的差异<xref:System.Uri.OriginalString%2A>，它返回传递的字符串到构造函数中，并通过调用<xref:System.Uri.ToString%2A>，它返回字符串的规范格式。</span><span class="sxs-lookup"><span data-stu-id="83204-935">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#3)]
 [!code-csharp[NCLUriEnhancements#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#3)]
 [!code-vb[NCLUriEnhancements#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-936">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-936">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected virtual void Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Parse ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; unit&#xA;override this.Parse : unit -&gt; unit" Usage="uri.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-937">分析当前实例的 URI 以确保它包含有效 URI 所需的所有部分。</span><span class="sxs-lookup"><span data-stu-id="83204-937">Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="83204-938">从构造函数传来的 URI 无效。</span><span class="sxs-lookup"><span data-stu-id="83204-938">The Uri passed from the constructor is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathAndQuery">
      <MemberSignature Language="C#" Value="public string PathAndQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathAndQuery" />
      <MemberSignature Language="DocId" Value="P:System.Uri.PathAndQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathAndQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathAndQuery { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathAndQuery : string" Usage="System.Uri.PathAndQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-939">获取用问号 (?) 分隔的 <see cref="P:System.Uri.AbsolutePath" /> 和 <see cref="P:System.Uri.Query" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="83204-939">Gets the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</span></span></summary>
        <value><span data-ttu-id="83204-940">一个 <see cref="T:System.String" />，它包含用问号 (?) 分隔的 <see cref="P:System.Uri.AbsolutePath" /> 和 <see cref="P:System.Uri.Query" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="83204-940">A <see cref="T:System.String" /> that contains the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-941"><xref:System.Uri.PathAndQuery%2A>属性包含在服务器和与请求一起发送的查询信息上的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="83204-941">The <xref:System.Uri.PathAndQuery%2A> property contains the absolute path on the server and the query information sent with the request.</span></span> <span data-ttu-id="83204-942">它等同于串联<xref:System.Uri.AbsolutePath%2A>和<xref:System.Uri.Query%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="83204-942">It is identical to concatenating the <xref:System.Uri.AbsolutePath%2A> and <xref:System.Uri.Query%2A> properties.</span></span>  
  
 <span data-ttu-id="83204-943"><xref:System.Uri.PathAndQuery%2A>属性根据 RFC 2396 转义默认情况下。</span><span class="sxs-lookup"><span data-stu-id="83204-943">The <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="83204-944">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，<xref:System.Uri.PathAndQuery%2A>根据 RFC 3986 和 RFC 3987 转义属性。</span><span class="sxs-lookup"><span data-stu-id="83204-944">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="83204-945">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-945">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-946">下面的示例编写的 URI 路径 (/ catalog/shownew.htm) 和查询 (date = today) 到控制台的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-946">The following example writes the URI path (/catalog/shownew.htm) and query (date= today) information to the console.</span></span>  
  
 [!code-cpp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.PathAndQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-947">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-947">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.Uri.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-948">获取此 URI 的端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-948">Gets the port number of this URI.</span></span></summary>
        <value><span data-ttu-id="83204-949">一个包含此 URI 的端口号的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="83204-949">An <see cref="T:System.Int32" /> value that contains the port number for this URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-950">端口号定义联系的 URI 中引用的服务器使用的协议端口。</span><span class="sxs-lookup"><span data-stu-id="83204-950">The port number defines the protocol port used for contacting the server referenced in the URI.</span></span> <span data-ttu-id="83204-951">如果端口未指定的 URI，一部分<xref:System.Uri.Port%2A>属性返回的默认值为协议。</span><span class="sxs-lookup"><span data-stu-id="83204-951">If a port is not specified as part of the URI, the <xref:System.Uri.Port%2A> property returns the default value for the protocol.</span></span> <span data-ttu-id="83204-952">如果没有默认端口号，则此属性将返回-1。</span><span class="sxs-lookup"><span data-stu-id="83204-952">If there is no default port number, this property returns -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-953">以下示例向控制台写入 URI 的端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-953">The following example writes the URI port number to the console.</span></span> <span data-ttu-id="83204-954">在这种情况下，值为 HTTP，端口 80 的默认端口号。</span><span class="sxs-lookup"><span data-stu-id="83204-954">In this case, the value is the default port number for HTTP, port 80.</span></span>  
  
 [!code-cpp[Classic Uri.Port Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Port Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Port Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Port Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Port Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Port Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-955">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-955">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public string Query { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Query" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Query" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Query As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Query { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Query : string" Usage="System.Uri.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-956">获取指定 URI 中包括的任何查询信息。</span><span class="sxs-lookup"><span data-stu-id="83204-956">Gets any query information included in the specified URI.</span></span></summary>
        <value><span data-ttu-id="83204-957">一个<see cref="T:System.String" />，包含指定 URI 中包括的任何查询信息。</span><span class="sxs-lookup"><span data-stu-id="83204-957">A <see cref="T:System.String" /> that contains any query information included in the specified URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-958"><xref:System.Uri.Query%2A>属性包含在 URI 中包括的任何查询信息。</span><span class="sxs-lookup"><span data-stu-id="83204-958">The <xref:System.Uri.Query%2A> property contains any query information included in the URI.</span></span> <span data-ttu-id="83204-959">查询信息由问号 （？） 分隔的路径信息，并将继续执行到 URI 的末尾。</span><span class="sxs-lookup"><span data-stu-id="83204-959">Query information is separated from the path information by a question mark (?) and continues to the end of the URI.</span></span> <span data-ttu-id="83204-960">返回的查询信息包括前导问号。</span><span class="sxs-lookup"><span data-stu-id="83204-960">The query information returned includes the leading question mark.</span></span>  
  
 <span data-ttu-id="83204-961">默认情况下，查询信息转义根据 RFC 2396。</span><span class="sxs-lookup"><span data-stu-id="83204-961">The query information is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="83204-962">如果启用了国际资源标识符 (Iri) 或国际化域名 (IDN) 分析，根据 RFC 3986 和 RFC 3987 转义查询信息。</span><span class="sxs-lookup"><span data-stu-id="83204-962">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="83204-963">IRI 支持的详细信息，请参阅备注部分<xref:System.Uri>类。</span><span class="sxs-lookup"><span data-stu-id="83204-963">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-964">下面的示例将查询？ date = today 到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-964">The following example writes the query ?date= today to the console.</span></span>  
  
 [!code-cpp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#2)]
 [!code-vb[Classic Uri.PathAndQuery Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-965">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-965">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.Uri.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-966">获取此 URI 的方案名称。</span><span class="sxs-lookup"><span data-stu-id="83204-966">Gets the scheme name for this URI.</span></span></summary>
        <value><span data-ttu-id="83204-967">一个 <see cref="T:System.String" />，包含此 URI 的方案（已转换为小写形式）。</span><span class="sxs-lookup"><span data-stu-id="83204-967">A <see cref="T:System.String" /> that contains the scheme for this URI, converted to lowercase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-968"><xref:System.Uri.Scheme%2A>属性返回用于初始化的方案<xref:System.Uri>实例。</span><span class="sxs-lookup"><span data-stu-id="83204-968">The <xref:System.Uri.Scheme%2A> property returns the scheme used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="83204-969">此属性不指示方案用来初始化<xref:System.Uri>实例已识别出。</span><span class="sxs-lookup"><span data-stu-id="83204-969">This property does not indicate that the scheme used to initialize the <xref:System.Uri> instance was recognized.</span></span>  
  
 <span data-ttu-id="83204-970">下表显示了返回的某些可能值的示例<xref:System.Uri.Scheme%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="83204-970">The following table shows examples of some possible values returned by the <xref:System.Uri.Scheme%2A> property.</span></span>  
  
|<span data-ttu-id="83204-971">方案</span><span class="sxs-lookup"><span data-stu-id="83204-971">Scheme</span></span>|<span data-ttu-id="83204-972">描述</span><span class="sxs-lookup"><span data-stu-id="83204-972">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="83204-973">文件</span><span class="sxs-lookup"><span data-stu-id="83204-973">file</span></span>|<span data-ttu-id="83204-974">资源是本地计算机上的文件。</span><span class="sxs-lookup"><span data-stu-id="83204-974">The resource is a file on the local computer.</span></span>|  
|<span data-ttu-id="83204-975">ftp</span><span class="sxs-lookup"><span data-stu-id="83204-975">ftp</span></span>|<span data-ttu-id="83204-976">通过 FTP 访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-976">The resource is accessed through FTP.</span></span>|  
|<span data-ttu-id="83204-977">gopher</span><span class="sxs-lookup"><span data-stu-id="83204-977">gopher</span></span>|<span data-ttu-id="83204-978">通过 Gopher 协议访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-978">The resource is accessed through the Gopher protocol.</span></span>|  
|<span data-ttu-id="83204-979">http</span><span class="sxs-lookup"><span data-stu-id="83204-979">http</span></span>|<span data-ttu-id="83204-980">通过 HTTP 访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-980">The resource is accessed through HTTP.</span></span>|  
|<span data-ttu-id="83204-981">https</span><span class="sxs-lookup"><span data-stu-id="83204-981">https</span></span>|<span data-ttu-id="83204-982">通过 SSL 加密的 HTTP 访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-982">The resource is accessed through SSL-encrypted HTTP.</span></span>|  
|<span data-ttu-id="83204-983">ldap</span><span class="sxs-lookup"><span data-stu-id="83204-983">ldap</span></span>|<span data-ttu-id="83204-984">通过 LDAP 协议访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-984">The resource is accessed through the LDAP protocol.</span></span>|  
|<span data-ttu-id="83204-985">mailto</span><span class="sxs-lookup"><span data-stu-id="83204-985">mailto</span></span>|<span data-ttu-id="83204-986">资源是电子邮件地址，并通过 SMTP 协议访问。</span><span class="sxs-lookup"><span data-stu-id="83204-986">The resource is an email address and accessed through the SMTP protocol.</span></span>|  
|<span data-ttu-id="83204-987">net.pipe</span><span class="sxs-lookup"><span data-stu-id="83204-987">net.pipe</span></span>|<span data-ttu-id="83204-988">通过命名管道访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-988">The resource is accessed through a named pipe.</span></span>|  
|<span data-ttu-id="83204-989">net.tcp</span><span class="sxs-lookup"><span data-stu-id="83204-989">net.tcp</span></span>|<span data-ttu-id="83204-990">从 TCP 终结点访问该资源。</span><span class="sxs-lookup"><span data-stu-id="83204-990">The resource is accessed from TCP endpoint.</span></span>|  
|<span data-ttu-id="83204-991">news</span><span class="sxs-lookup"><span data-stu-id="83204-991">news</span></span>|<span data-ttu-id="83204-992">通过采用 NNTP 协议访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-992">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="83204-993">nntp</span><span class="sxs-lookup"><span data-stu-id="83204-993">nntp</span></span>|<span data-ttu-id="83204-994">通过采用 NNTP 协议访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-994">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="83204-995">telnet</span><span class="sxs-lookup"><span data-stu-id="83204-995">telnet</span></span>|<span data-ttu-id="83204-996">通过 TELNET 协议访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-996">The resource is accessed through the TELNET protocol.</span></span>|  
|<span data-ttu-id="83204-997">uuid</span><span class="sxs-lookup"><span data-stu-id="83204-997">uuid</span></span>|<span data-ttu-id="83204-998">通过与服务通信的唯一 UUID 终结点名称访问资源。</span><span class="sxs-lookup"><span data-stu-id="83204-998">The resource is accessed through a unique UUID endpoint name for communicating with a service.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="83204-999">以下示例向控制台写入的方案名称 (http) http://www.contoso.com/ URI。</span><span class="sxs-lookup"><span data-stu-id="83204-999">The following example writes the scheme name (http) to the console for the http://www.contoso.com/ URI.</span></span>  
  
 [!code-cpp[Classic Uri.Scheme Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Scheme Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Scheme Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Scheme Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-1000">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-1000">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemeDelimiter">
      <MemberSignature Language="C#" Value="public static readonly string SchemeDelimiter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SchemeDelimiter" />
      <MemberSignature Language="DocId" Value="F:System.Uri.SchemeDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SchemeDelimiter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SchemeDelimiter;" />
      <MemberSignature Language="F#" Value=" staticval mutable SchemeDelimiter : string" Usage="System.Uri.SchemeDelimiter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1001">指定将通讯协议方案同 URI 的地址部分分开的字符。</span><span class="sxs-lookup"><span data-stu-id="83204-1001">Specifies the characters that separate the communication protocol scheme from the address portion of the URI.</span></span> <span data-ttu-id="83204-1002">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1002">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1003">下面的示例创建一个由字符串<xref:System.Uri.UriSchemeHttp>， <xref:System.Uri.SchemeDelimiter>，和地址。</span><span class="sxs-lookup"><span data-stu-id="83204-1003">The following example creates a string from <xref:System.Uri.UriSchemeHttp>, <xref:System.Uri.SchemeDelimiter>, and an address.</span></span> <span data-ttu-id="83204-1004">一个<xref:System.Uri>然后从字符串创建实例。</span><span class="sxs-lookup"><span data-stu-id="83204-1004">A <xref:System.Uri> instance is then created from the string.</span></span>  
  
 [!code-cpp[NCLUriExamples#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#17)]
 [!code-csharp[NCLUriExamples#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#17)]
 [!code-vb[NCLUriExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public string[] Segments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Segments" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Segments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Segments { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Segments : string[]" Usage="System.Uri.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1005">获取包含构成指定 URI 的路径段的数组。</span><span class="sxs-lookup"><span data-stu-id="83204-1005">Gets an array containing the path segments that make up the specified URI.</span></span></summary>
        <value><span data-ttu-id="83204-1006">一个 <see cref="T:System.String" /> 数组，包含构成指定 URI 的路径段。</span><span class="sxs-lookup"><span data-stu-id="83204-1006">A <see cref="T:System.String" /> array that contains the path segments that make up the specified URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1007"><xref:System.Uri.Segments%2A>属性返回包含"段"（子字符串） 构成的 URI 的绝对路径的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="83204-1007">The <xref:System.Uri.Segments%2A> property returns an array of strings containing the "segments" (substrings) that form the URI's absolute path.</span></span> <span data-ttu-id="83204-1008">第一个段被通过分析从其第一个字符的绝对路径，直到达到斜杠 （/） 或路径的末尾。</span><span class="sxs-lookup"><span data-stu-id="83204-1008">The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path.</span></span> <span data-ttu-id="83204-1009">每增加一个段后前一段开始于第一个字符下, 一步斜杠或路径的末尾终止。</span><span class="sxs-lookup"><span data-stu-id="83204-1009">Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path.</span></span> <span data-ttu-id="83204-1010">（一个 URI 的绝对路径包含的所有内容之后的主机和端口和之前的查询和片段。）</span><span class="sxs-lookup"><span data-stu-id="83204-1010">(A URI's absolute path contains everything after the host and port and before the query and fragment.)</span></span>  
  
 <span data-ttu-id="83204-1011">下面的示例显示两个 Uri 的绝对路径和段。</span><span class="sxs-lookup"><span data-stu-id="83204-1011">The following example shows the absolute path and segments for two URIs.</span></span> <span data-ttu-id="83204-1012">第二个示例说明了，片段和查询不是绝对路径的一部分，因而不是段。</span><span class="sxs-lookup"><span data-stu-id="83204-1012">The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.</span></span>  
  
 <span data-ttu-id="83204-1013">绝对 URI:</span><span class="sxs-lookup"><span data-stu-id="83204-1013">Absolute URI:</span></span>  
 http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm  
  
 <span data-ttu-id="83204-1014">绝对路径：</span><span class="sxs-lookup"><span data-stu-id="83204-1014">Absolute path:</span></span>  
 <span data-ttu-id="83204-1015">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="83204-1015">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="83204-1016">段：</span><span class="sxs-lookup"><span data-stu-id="83204-1016">Segments:</span></span>  
 - /
 - <span data-ttu-id="83204-1017">章节 /</span><span class="sxs-lookup"><span data-stu-id="83204-1017">Chapters/</span></span>
 - <span data-ttu-id="83204-1018">第 1 章 /</span><span class="sxs-lookup"><span data-stu-id="83204-1018">Chapter1/</span></span>
 - <span data-ttu-id="83204-1019">部分 /</span><span class="sxs-lookup"><span data-stu-id="83204-1019">Sections/</span></span>
 - <span data-ttu-id="83204-1020">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="83204-1020">Section1.htm</span></span>  
  
 <span data-ttu-id="83204-1021">绝对 URI:</span><span class="sxs-lookup"><span data-stu-id="83204-1021">Absolute URI:</span></span>  
 http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO  
  
 <span data-ttu-id="83204-1022">绝对路径：</span><span class="sxs-lookup"><span data-stu-id="83204-1022">Absolute path:</span></span>  
 <span data-ttu-id="83204-1023">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="83204-1023">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="83204-1024">段：</span><span class="sxs-lookup"><span data-stu-id="83204-1024">Segments:</span></span>  
 - /
 - <span data-ttu-id="83204-1025">章节 /</span><span class="sxs-lookup"><span data-stu-id="83204-1025">Chapters/</span></span>
 - <span data-ttu-id="83204-1026">第 1 章 /</span><span class="sxs-lookup"><span data-stu-id="83204-1026">Chapter1/</span></span>
 - <span data-ttu-id="83204-1027">部分 /</span><span class="sxs-lookup"><span data-stu-id="83204-1027">Sections/</span></span>
 - <span data-ttu-id="83204-1028">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="83204-1028">Section1.htm</span></span>  
  
 <span data-ttu-id="83204-1029">请注意因为的绝对路径以 / 开头，第一个段包含它和其他任何内容。</span><span class="sxs-lookup"><span data-stu-id="83204-1029">Note that because the absolute path starts with a '/', the first segment contains it and nothing else.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1030">下面的示例创建<xref:System.Uri>实例 3 段，并在屏幕上显示的段。</span><span class="sxs-lookup"><span data-stu-id="83204-1030">The following example creates a <xref:System.Uri> instance with 3 segments and displays the segments on the screen.</span></span>  
  
 [!code-cpp[NCLUriExamples#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#5)]
 [!code-csharp[NCLUriExamples#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#5)]
 [!code-vb[NCLUriExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-1031">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-1031">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="83204-1032">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象包含序列化 <see cref="T:System.Uri" /> 所需的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-1032">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="83204-1033">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象包含与<see cref="T:System.Uri" /> 关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="83204-1033">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="83204-1034">返回序列化当前实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="83204-1034">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="83204-1035">若要使用序列化方法。</span><span class="sxs-lookup"><span data-stu-id="83204-1035">to use serialization methods.</span></span> <span data-ttu-id="83204-1036">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1036">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uri.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83204-1037">获取指定的 <see cref="T:System.Uri" /> 实例的规范化字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-1037">Gets a canonical string representation for the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="83204-1038">一个 <see cref="T:System.String" /> 实例，它包含 <see cref="T:System.Uri" /> 实例的非转义规范化表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-1038">A <see cref="T:System.String" /> instance that contains the unescaped canonical representation of the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="83204-1039">除了 #、? 和 %，所有字符均为非转义字符。</span><span class="sxs-lookup"><span data-stu-id="83204-1039">All characters are unescaped except #, ?, and %.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1040">端口是方案的默认端口时，此方法返回的字符串不包含端口的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-1040">The string returned by this method does not contain port information when the port is the default port for the scheme.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="83204-1041">返回的字符串<xref:System.Uri.ToString%2A>方法可能包含控制字符，可能会损坏的控制台应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="83204-1041">The string returned by the <xref:System.Uri.ToString%2A> method may contain control characters, which can corrupt the state of a console application.</span></span> <span data-ttu-id="83204-1042">可以使用<xref:System.Uri.GetComponents%2A>方法替换<xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType>格式从返回的字符串中删除的控制字符。</span><span class="sxs-lookup"><span data-stu-id="83204-1042">You can use the <xref:System.Uri.GetComponents%2A> method with the <xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType> format to remove control characters from the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1043">下面的示例创建一个新<xref:System.Uri>从字符串的实例。</span><span class="sxs-lookup"><span data-stu-id="83204-1043">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="83204-1044">它阐释了如何从返回的值之间的差异<xref:System.Uri.OriginalString%2A>，它返回传递的字符串到构造函数中，并通过调用<xref:System.Uri.ToString%2A>，它返回字符串的规范格式。</span><span class="sxs-lookup"><span data-stu-id="83204-1044">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  
  
 [!code-cpp[NCLUriExamples#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#7)]
 [!code-csharp[NCLUriExamples#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#7)]
 [!code-vb[NCLUriExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="83204-1045">若要防止部分受信任的代码派生自<see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1045">to prevent partially trusted code from deriving from <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="83204-1046">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1046">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryCreate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83204-1047">创建一个新的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1047">Creates a new <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="83204-1048">在无法创建 <see cref="T:System.Uri" /> 时不引发异常。</span><span class="sxs-lookup"><span data-stu-id="83204-1048">Does not throw an exception if the <see cref="T:System.Uri" /> cannot be created.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string uriString, valuetype System.UriKind uriKind, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ uriString, UriKind uriKind, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * UriKind *  -&gt; bool" Usage="System.Uri.TryCreate (uriString, uriKind, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="uriKind" Type="System.UriKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="83204-1049">表示 <see cref="T:System.String" /> 的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1049">The <see cref="T:System.String" /> representing the <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="83204-1050">URI 的类型。</span><span class="sxs-lookup"><span data-stu-id="83204-1050">The type of the Uri.</span></span></param>
        <param name="result"><span data-ttu-id="83204-1051">此方法返回时，包含构造的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1051">When this method returns, contains the constructed <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="83204-1052">使用指定的 <see cref="T:System.Uri" /> 实例和 <see cref="T:System.String" /> 创建一个新的 <see cref="T:System.UriKind" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1052">Creates a new <see cref="T:System.Uri" /> using the specified <see cref="T:System.String" /> instance and a <see cref="T:System.UriKind" />.</span></span></summary>
        <returns><span data-ttu-id="83204-1053">一个 <see cref="T:System.Boolean" /> 值。如果成功创建了 <see langword="true" />，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1053">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1054">如果此方法返回`true`，新<xref:System.Uri>处于`result`。</span><span class="sxs-lookup"><span data-stu-id="83204-1054">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, string relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As String, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, System::String ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * string *  -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="83204-1055">基本 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1055">The base <see cref="T:System.Uri" />.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="83204-1056">要添加到基 <see cref="T:System.Uri" /> 的相对 <see cref="T:System.String" />（表示为 <see cref="T:System.Uri" />）。</span><span class="sxs-lookup"><span data-stu-id="83204-1056">The relative <see cref="T:System.Uri" />, represented as a <see cref="T:System.String" />, to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="83204-1057">此方法返回时，包含从 <see cref="T:System.Uri" /> 和 <paramref name="baseUri" /> 构造的 <paramref name="relativeUri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1057">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span> <span data-ttu-id="83204-1058">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="83204-1058">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83204-1059">使用指定基和相对 <see cref="T:System.Uri" /> 实例创建一个新的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1059">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.String" /> instances.</span></span></summary>
        <returns><span data-ttu-id="83204-1060">一个 <see cref="T:System.Boolean" /> 值。如果成功创建了 <see langword="true" />，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1060">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1061">如果此方法返回`true`，新<xref:System.Uri>处于`result`。</span><span class="sxs-lookup"><span data-stu-id="83204-1061">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As Uri, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, Uri ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * Uri *  -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="relativeUri" Type="System.Uri" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Uri" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="83204-1062">基本 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1062">The base <see cref="T:System.Uri" />.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="83204-1063">要添加到基 <see cref="T:System.Uri" /> 的相对 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1063">The relative <see cref="T:System.Uri" /> to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="83204-1064">此方法返回时，包含从 <see cref="T:System.Uri" /> 和 <paramref name="baseUri" /> 构造的 <paramref name="relativeUri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1064">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span> <span data-ttu-id="83204-1065">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="83204-1065">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83204-1066">使用指定基和相对 <see cref="T:System.Uri" /> 实例创建一个新的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1066">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="83204-1067">一个 <see cref="T:System.Boolean" /> 值。如果成功创建了 <see langword="true" />，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1067">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1068">如果此方法返回`true`，新<xref:System.Uri>处于`result`。</span><span class="sxs-lookup"><span data-stu-id="83204-1068">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 <span data-ttu-id="83204-1069">此方法构造快照的 URI，将其放入规范格式，并对其进行验证。</span><span class="sxs-lookup"><span data-stu-id="83204-1069">This method constructs the URI, puts it in canonical form, and validates it.</span></span> <span data-ttu-id="83204-1070">发生未经处理的异常时，此方法将捕获它。</span><span class="sxs-lookup"><span data-stu-id="83204-1070">If an unhandled exception occurs, this method catches it.</span></span> <span data-ttu-id="83204-1071">如果你想要创建<xref:System.Uri>get 异常使用其中一个<xref:System.Uri.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="83204-1071">If you want to create a <xref:System.Uri> and get exceptions use one of the <xref:System.Uri.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-1072"><paramref name="baseUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1072"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="protected virtual string Unescape (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string Unescape(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Unescape (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ Unescape(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Unescape : string -&gt; string&#xA;override this.Unescape : string -&gt; string" Usage="uri.Unescape path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="83204-1073">要转换的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1073">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="83204-1074">转换指定的字符串，方法是将任何转义序列替换为相应的未转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-1074">Converts the specified string by replacing any escape sequences with their unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="83204-1075">一个 <see cref="T:System.String" />，包含 <paramref name="path" /> 参数的非转义值。</span><span class="sxs-lookup"><span data-stu-id="83204-1075">A <see cref="T:System.String" /> that contains the unescaped value of the <paramref name="path" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapeDataString">
      <MemberSignature Language="C#" Value="public static string UnescapeDataString (string stringToUnescape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnescapeDataString(string stringToUnescape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.UnescapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnescapeDataString (stringToUnescape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UnescapeDataString(System::String ^ stringToUnescape);" />
      <MemberSignature Language="F#" Value="static member UnescapeDataString : string -&gt; string" Usage="System.Uri.UnescapeDataString stringToUnescape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToUnescape" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stringToUnescape"><span data-ttu-id="83204-1076">要恢复原义的字符串。</span><span class="sxs-lookup"><span data-stu-id="83204-1076">The string to unescape.</span></span></param>
        <summary><span data-ttu-id="83204-1077">将字符串转换为它的非转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-1077">Converts a string to its unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="83204-1078">一个 <see cref="T:System.String" />，包含 <paramref name="stringToUnescape" /> 的非转义表示形式。</span><span class="sxs-lookup"><span data-stu-id="83204-1078">A <see cref="T:System.String" /> that contains the unescaped representation of <paramref name="stringToUnescape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1079">应谨慎使用此方法。</span><span class="sxs-lookup"><span data-stu-id="83204-1079">You should use this method with care.</span></span> <span data-ttu-id="83204-1080">非转义已被以前未转义的字符串可能会导致二义性和错误。</span><span class="sxs-lookup"><span data-stu-id="83204-1080">Unescaping a string that has been previously unescaped can lead to ambiguities and errors.</span></span>  
  
 <span data-ttu-id="83204-1081">许多 Web 浏览器到加号转义 Uri 内的空格 （"+"） 字符;但是，UnescapeDataString 方法不会不加上字符组成将转换为空格因为此行为不是标准跨所有 URI 方案。</span><span class="sxs-lookup"><span data-stu-id="83204-1081">Many Web browsers escape spaces inside of URIs into plus ("+") characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1082">下面的代码示例恢复原义使用 URI，并将任何加号字符 （"+"） 为空格。</span><span class="sxs-lookup"><span data-stu-id="83204-1082">The following code example unescapes a URI, and then converts any plus characters ("+") into spaces.</span></span>  
  
 [!code-csharp[NCLUriExamples#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="83204-1083"><paramref name="stringToUnescape" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1083"><paramref name="stringToUnescape" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Uri.EscapeDataString(System.String)" />
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFile">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFile" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFile;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFile : string" Usage="System.Uri.UriSchemeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1084">指定 URI 是指向文件的指针。</span><span class="sxs-lookup"><span data-stu-id="83204-1084">Specifies that the URI is a pointer to a file.</span></span> <span data-ttu-id="83204-1085">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1085">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1086">在.NET Framework 1.1 版中，"`file:///path`"URI 已转换成"`file:/path`"。</span><span class="sxs-lookup"><span data-stu-id="83204-1086">In .NET Framework version 1.1, a "`file:///path`" URI was translated to "`file:/path`".</span></span> <span data-ttu-id="83204-1087">已为版本 2.0 已更正此问题。</span><span class="sxs-lookup"><span data-stu-id="83204-1087">This has been corrected for version 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1088">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeFile>。</span><span class="sxs-lookup"><span data-stu-id="83204-1088">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFile>.</span></span>  
  
 [!code-cpp[NCLUriExamples#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#10)]
 [!code-csharp[NCLUriExamples#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#10)]
 [!code-vb[NCLUriExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFtp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFtp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFtp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFtp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFtp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFtp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFtp : string" Usage="System.Uri.UriSchemeFtp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1089">指定通过文件传输协议 (FTP) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1089">Specifies that the URI is accessed through the File Transfer Protocol (FTP).</span></span> <span data-ttu-id="83204-1090">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1090">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1091">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeFtp>。</span><span class="sxs-lookup"><span data-stu-id="83204-1091">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFtp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#15)]
 [!code-csharp[NCLUriExamples#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#15)]
 [!code-vb[NCLUriExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeGopher">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeGopher;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeGopher" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeGopher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeGopher As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeGopher;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeGopher : string" Usage="System.Uri.UriSchemeGopher" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1092">指定通过 Gopher 协议访问 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1092">Specifies that the URI is accessed through the Gopher protocol.</span></span> <span data-ttu-id="83204-1093">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1093">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1094">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeGopher>。</span><span class="sxs-lookup"><span data-stu-id="83204-1094">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeGopher>.</span></span>  
  
 [!code-cpp[NCLUriExamples#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#14)]
 [!code-csharp[NCLUriExamples#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#14)]
 [!code-vb[NCLUriExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttp : string" Usage="System.Uri.UriSchemeHttp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1095">指定通过超文本传输协议 (HTTP) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1095">Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</span></span> <span data-ttu-id="83204-1096">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1096">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1097">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeHttp>。</span><span class="sxs-lookup"><span data-stu-id="83204-1097">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttps">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttps;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttps" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttps" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttps As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttps;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttps : string" Usage="System.Uri.UriSchemeHttps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1098">指定通过安全超文本传输协议 (HTTPS) 访问 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1098">Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</span></span> <span data-ttu-id="83204-1099">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1099">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1100">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeHttps>。</span><span class="sxs-lookup"><span data-stu-id="83204-1100">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttps>.</span></span>  
  
 [!code-cpp[NCLUriExamples#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#16)]
 [!code-csharp[NCLUriExamples#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#16)]
 [!code-vb[NCLUriExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeMailto">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeMailto;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeMailto" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeMailto" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeMailto As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeMailto;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeMailto : string" Usage="System.Uri.UriSchemeMailto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1101">指定 URI 是一个电子邮件地址，需通过简单邮件传输协议 (SMTP) 访问。</span><span class="sxs-lookup"><span data-stu-id="83204-1101">Specifies that the URI is an email address and is accessed through the Simple Mail Transport Protocol (SMTP).</span></span> <span data-ttu-id="83204-1102">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1102">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1103">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeMailto>。</span><span class="sxs-lookup"><span data-stu-id="83204-1103">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeMailto>.</span></span>  
  
 [!code-cpp[NCLUriExamples#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#11)]
 [!code-csharp[NCLUriExamples#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#11)]
 [!code-vb[NCLUriExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetPipe">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetPipe;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetPipe" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetPipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetPipe As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetPipe;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetPipe : string" Usage="System.Uri.UriSchemeNetPipe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1104">指明通过 Windows Communication Foundation (WCF) 使用的 NetPipe 方案访问该 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1104">Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="83204-1105">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1105">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetTcp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetTcp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetTcp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetTcp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetTcp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetTcp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetTcp : string" Usage="System.Uri.UriSchemeNetTcp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1106">指明通过 Windows Communication Foundation (WCF) 使用的 NetTcp 方案访问该 URI。</span><span class="sxs-lookup"><span data-stu-id="83204-1106">Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="83204-1107">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1107">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNews">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNews;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNews" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNews" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNews As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNews;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNews : string" Usage="System.Uri.UriSchemeNews" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1108">指定 URI 是 Internet 新闻组，而且可以通过 Network 新闻传输协议 (NNTP) 进行访问。</span><span class="sxs-lookup"><span data-stu-id="83204-1108">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="83204-1109">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1109">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83204-1110">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeNews>。</span><span class="sxs-lookup"><span data-stu-id="83204-1110">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNews>.</span></span>  
  
 [!code-cpp[NCLUriExamples#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#12)]
 [!code-csharp[NCLUriExamples#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#12)]
 [!code-vb[NCLUriExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNntp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNntp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNntp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNntp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNntp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNntp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNntp : string" Usage="System.Uri.UriSchemeNntp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1111">指定 URI 是 Internet 新闻组，而且可以通过 Network 新闻传输协议 (NNTP) 进行访问。</span><span class="sxs-lookup"><span data-stu-id="83204-1111">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="83204-1112">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="83204-1112">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1113">NNTP<xref:System.Uri>分析.NET Framework 中的错误版本 1.1 中已经得到更正。</span><span class="sxs-lookup"><span data-stu-id="83204-1113">The NNTP <xref:System.Uri> parsing errors in .NET Framework version 1.1 have been corrected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1114">下面的示例创建<xref:System.Uri>实例，并确定是否为方案<xref:System.Uri.UriSchemeNntp>。</span><span class="sxs-lookup"><span data-stu-id="83204-1114">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNntp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#13)]
 [!code-csharp[NCLUriExamples#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#13)]
 [!code-vb[NCLUriExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEscaped">
      <MemberSignature Language="C#" Value="public bool UserEscaped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserEscaped" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserEscaped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserEscaped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserEscaped { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEscaped : bool" Usage="System.Uri.UserEscaped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1115">指示 URI 字符串在创建 <see cref="T:System.Uri" /> 实例之前已被完全转义。</span><span class="sxs-lookup"><span data-stu-id="83204-1115">Indicates that the URI string was completely escaped before the <see cref="T:System.Uri" /> instance was created.</span></span></summary>
        <value><span data-ttu-id="83204-1116">一个 <see cref="T:System.Boolean" /> 值。如果在创建 <see langword="true" /> 实例时 <paramref name="dontEscape" /> 参数设置为 <see langword="true" />，则该值为 <see cref="T:System.Uri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83204-1116">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <paramref name="dontEscape" /> parameter was set to <see langword="true" /> when the <see cref="T:System.Uri" /> instance was created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1117"><xref:System.Uri.UserEscaped%2A>属性设置为`true`以指示使用的字符串来创建<xref:System.Uri>实例已被完全转义之前传递给构造函数; 这就是，则`dontEscape`构造函数调用的参数设置为`true`.</span><span class="sxs-lookup"><span data-stu-id="83204-1117">The <xref:System.Uri.UserEscaped%2A> property is set to `true` to indicate that the string used to create the <xref:System.Uri> instance was completely escaped before it was passed to the constructor; that is, the `dontEscape` parameter of the constructor call was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1118">下面的示例创建<xref:System.Uri>实例，并确定是否它已被完全转义时创建它。</span><span class="sxs-lookup"><span data-stu-id="83204-1118">The following example creates a <xref:System.Uri> instance and determines whether it was fully escaped when it was created.</span></span>  
  
 [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]
 [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]
 [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserInfo">
      <MemberSignature Language="C#" Value="public string UserInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserInfo" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInfo : string" Usage="System.Uri.UserInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83204-1119">获取用户名、密码或其他与指定 URI 关联的特定于用户的信息。</span><span class="sxs-lookup"><span data-stu-id="83204-1119">Gets the user name, password, or other user-specific information associated with the specified URI.</span></span></summary>
        <value><span data-ttu-id="83204-1120">一个 <see cref="T:System.String" />，包含与该 URI 关联的用户信息。</span><span class="sxs-lookup"><span data-stu-id="83204-1120">A <see cref="T:System.String" /> that contains the user information associated with the URI.</span></span> <span data-ttu-id="83204-1121">返回值不包括“@”字符，该字符是一个保留字符，用于分隔 URI 的用户信息部分。</span><span class="sxs-lookup"><span data-stu-id="83204-1121">The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83204-1122">返回此属性的值通常是中"用户名： 密码"的格式。</span><span class="sxs-lookup"><span data-stu-id="83204-1122">The value returned by this property is usually in the format "userName:password".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83204-1123">下面的示例创建<xref:System.Uri>实例并将用户信息输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="83204-1123">The following example creates a <xref:System.Uri> instance and writes the user information to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]
 [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]
 [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="83204-1124">此实例代表一个相对 URI，而此属性仅对绝对 URI 有效。</span><span class="sxs-lookup"><span data-stu-id="83204-1124">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>