<Type Name="UInt64" FullName="System.UInt64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cd6dd377cb151ecf4e7d8c4435bf803a4777818" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70372648" /></Metadata><TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e74a3-101">表示 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-101">Represents a 64-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-102"><xref:System.UInt64>值类型表示其值范围从0到18446744073709551615的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e74a3-103"><xref:System.UInt64>类型不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="e74a3-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="e74a3-104">符合 CLS 的替代类型为<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="e74a3-105"><xref:System.Int64>可以改为使用来替换<xref:System.UInt64> 0 到<xref:System.Int64.MaxValue>之间的值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="e74a3-106">有关 CLS 遵从性的详细信息，请参阅[语言独立性和与语言无关的组件](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="e74a3-107"><xref:System.UInt64>提供一些方法，用于比较此类型的实例，将实例的值转换为其字符串表示形式，并将数字的字符串表示形式转换为此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="e74a3-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e74a3-108">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-108">All members of this type are thread safe.</span></span> <span data-ttu-id="e74a3-109">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="e74a3-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="e74a3-110">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="e74a3-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int64" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="e74a3-111">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="e74a3-111">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="e74a3-112">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="e74a3-112">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e74a3-113">将此实例与指定的对象或 <see cref="T:System.UInt64" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-113">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e74a3-114">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-114">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e74a3-115">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-115">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="e74a3-116">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-116">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e74a3-117">返回值</span><span class="sxs-lookup"><span data-stu-id="e74a3-117">Return Value</span></span> 
 </term><description> <span data-ttu-id="e74a3-118">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-118">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e74a3-119">小于零</span><span class="sxs-lookup"><span data-stu-id="e74a3-119">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-120">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-120">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e74a3-121">零</span><span class="sxs-lookup"><span data-stu-id="e74a3-121">Zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-122">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-122">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e74a3-123">大于零</span><span class="sxs-lookup"><span data-stu-id="e74a3-123">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-124">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-124">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="e74a3-125">或</span><span class="sxs-lookup"><span data-stu-id="e74a3-125">-or-</span></span> 
 <span data-ttu-id="e74a3-126"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-126"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-127">的任何实例<xref:System.UInt64>，无论其值如何，都视为`null`大于。</span><span class="sxs-lookup"><span data-stu-id="e74a3-127">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="e74a3-128">`value`必须为`null`或的<xref:System.UInt64>实例; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e74a3-128">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-129">下面的代码示例演示<xref:System.UInt64.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-129">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e74a3-130"><paramref name="value" /> 不是 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-130"><paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e74a3-131">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-131">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="e74a3-132">将此实例与指定的 64 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-132">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="e74a3-133">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-133">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e74a3-134">返回值</span><span class="sxs-lookup"><span data-stu-id="e74a3-134">Return Value</span></span> 
 </term><description> <span data-ttu-id="e74a3-135">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-135">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e74a3-136">小于零</span><span class="sxs-lookup"><span data-stu-id="e74a3-136">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-137">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-137">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e74a3-138">零</span><span class="sxs-lookup"><span data-stu-id="e74a3-138">Zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-139">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-139">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e74a3-140">大于零</span><span class="sxs-lookup"><span data-stu-id="e74a3-140">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e74a3-141">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-141">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-142">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，且执行<xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType>方式略优于方法，因为它不必将`value`参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-142">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="e74a3-143">根据您的编程语言，可以编写一个<xref:System.UInt64.CompareTo%2A>方法，在此方法中，参数类型的位（比实例类型窄）。</span><span class="sxs-lookup"><span data-stu-id="e74a3-143">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="e74a3-144">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="e74a3-144">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="e74a3-145">例如，假设实例类型为<xref:System.Int32> ，而参数类型为。 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="e74a3-145">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="e74a3-146">Microsoft C#编译器生成指令，以将参数的值<xref:System.Int32>表示为对象，然后生成一个<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> <xref:System.Int32>方法，用于比较实例的值和<xref:System.Int32>参数。表达.</span><span class="sxs-lookup"><span data-stu-id="e74a3-146">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="e74a3-147">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="e74a3-147">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-148">下面的代码示例演示了多个值和引用<xref:System.UInt64.CompareTo%2A>类型的方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="e74a3-148">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e74a3-149">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt64" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="e74a3-149">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e74a3-150">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-150">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="e74a3-151">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-151">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e74a3-152">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt64" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-152"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e74a3-153">下面的示例演示<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-153">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e74a3-154">编译器重载决策可能会考虑两种<see cref="M:System.UInt64.Equals(System.UInt64)" />方法重载行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="e74a3-154">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="e74a3-155">如果定义了<paramref name="obj" />参数和 a <see cref="T:System.UInt64" />之间的隐式转换，并且参数未键入为<see cref="T:System.Object" />，则<see cref="M:System.UInt64.Equals(System.UInt64)" />编译器会执行隐式转换并调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-155">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="e74a3-156">否则， <see cref="M:System.UInt64.Equals(System.Object)" />它们调用方法，如果<see cref="T:System.UInt64" />其<paramref name="obj" />参数不<see langword="false" />是值，则总是返回。</span><span class="sxs-lookup"><span data-stu-id="e74a3-156">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="e74a3-157">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="e74a3-157">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="e74a3-158">对于<see cref="T:System.Byte" />、 <see cref="T:System.UInt16" />和<see langword="true" /> <see cref="M:System.UInt64.Equals(System.UInt64)" />值，第一次比较返回，这是因为编译器会自动执行扩大转换并调用方法，而第二次比较<see cref="T:System.UInt32" />返回<see langword="false" /> ，<see cref="M:System.UInt64.Equals(System.Object)" />因为编译器将调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-158">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="e74a3-159">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e74a3-159">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e74a3-160">要与此实例进行比较的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-160">A <see cref="T:System.UInt64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="e74a3-161">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-161">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns><span data-ttu-id="e74a3-162">如果 <see langword="true" /> 的值与此实例相同，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-162"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-163">此方法实现接口<xref:System.IEquatable%601?displayProperty=nameWithType> ，并且执行的<xref:System.UInt64.Equals%2A>效果略优于，因为`obj`无需将参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-163">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-164">下面的示例演示<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-164">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e74a3-165">编译器重载决策可能会考虑两种<see cref="M:System.UInt64.Equals(System.UInt64)" />方法重载行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="e74a3-165">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="e74a3-166">如果定义了<paramref name="obj" />参数和 a <see cref="T:System.UInt64" />之间的隐式转换，并且参数未键入为<see cref="T:System.Object" />，则<see cref="M:System.UInt64.Equals(System.UInt64)" />编译器会执行隐式转换并调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-166">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="e74a3-167">否则， <see cref="M:System.UInt64.Equals(System.Object)" />它们调用方法，如果<see cref="T:System.UInt64" />其<paramref name="obj" />参数不<see langword="false" />是值，则总是返回。</span><span class="sxs-lookup"><span data-stu-id="e74a3-167">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="e74a3-168">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="e74a3-168">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="e74a3-169">对于<see cref="T:System.Byte" />、 <see cref="T:System.UInt16" />和<see langword="true" /> <see cref="M:System.UInt64.Equals(System.UInt64)" />值，第一次比较返回，这是因为编译器会自动执行扩大转换并调用方法，而第二次比较<see cref="T:System.UInt32" />返回<see langword="false" /> ，<see cref="M:System.UInt64.Equals(System.Object)" />因为编译器将调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-169">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="e74a3-170">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e74a3-170">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e74a3-171">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e74a3-171">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="e74a3-172">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e74a3-172">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e74a3-173">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-173">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-174">枚举常数 <see cref="F:System.TypeCode.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-174">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint64" Usage="System.uint64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e74a3-175">表示 <see cref="T:System.UInt64" />的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-175">Represents the largest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="e74a3-176">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-176">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-177">此常量的值为 18446744073709551615;即十六进制0xFFFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="e74a3-177">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-178">下面的示例在执行<xref:System.UInt64.MinValue>类型<xref:System.UInt64.MaxValue>转换之前，使用和<xref:System.Double>字段来验证值是否在<xref:System.UInt64>类型的范围内。</span><span class="sxs-lookup"><span data-stu-id="e74a3-178">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="e74a3-179">这可以防止<xref:System.OverflowException>在运行时运行。</span><span class="sxs-lookup"><span data-stu-id="e74a3-179">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint64" Usage="System.uint64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e74a3-180">表示 <see cref="T:System.UInt64" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-180">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="e74a3-181">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-181">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-182">此常量的值为0。</span><span class="sxs-lookup"><span data-stu-id="e74a3-182">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-183">下面的示例在执行<xref:System.UInt64.MinValue>类型<xref:System.UInt64.MaxValue>转换之前，使用和<xref:System.Double>字段来验证值是否在<xref:System.UInt64>类型的范围内。</span><span class="sxs-lookup"><span data-stu-id="e74a3-183">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="e74a3-184">这可以防止<xref:System.OverflowException>在运行时运行。</span><span class="sxs-lookup"><span data-stu-id="e74a3-184">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e74a3-185">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-185">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint64" Usage="System.uint64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-186">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-186">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="e74a3-187">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-187">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e74a3-188">与 <paramref name="s" /> 中包含的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-188">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-189">`s`参数应为以下形式的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-189">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="e74a3-190">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-190">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-191">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-191">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-192">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-192">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-193">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-193">Element</span></span>|<span data-ttu-id="e74a3-194">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-194">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-195">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-195">*ws*</span></span>|<span data-ttu-id="e74a3-196">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-196">Optional white space.</span></span>|  
|<span data-ttu-id="e74a3-197">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-197">*sign*</span></span>|<span data-ttu-id="e74a3-198">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-198">An optional sign.</span></span> <span data-ttu-id="e74a3-199">有效的符号字符由当前区域性<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>的<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>和属性确定。</span><span class="sxs-lookup"><span data-stu-id="e74a3-199">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="e74a3-200">但负号符号只能与零一起使用;否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-200">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="e74a3-201">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-201">*digits*</span></span>|<span data-ttu-id="e74a3-202">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-202">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="e74a3-203">任何前导零都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="e74a3-203">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="e74a3-204">由`s`参数指定的字符串<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>使用样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="e74a3-204">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e74a3-205">它不能包含任何组分隔符或小数分隔符, 也不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="e74a3-205">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="e74a3-206">通过使用为当前系统区域性初始化的<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>对象中的格式设置信息来分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="e74a3-206">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="e74a3-207">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-207">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e74a3-208">若要通过使用特定区域性的格式设置信息分析字符串, 请使用<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-208">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-209">下面的示例使用<xref:System.UInt64.Parse%2A>方法分析字符串值的数组。</span><span class="sxs-lookup"><span data-stu-id="e74a3-209">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e74a3-210"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-210">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-211">参数 <paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="e74a3-211">The <paramref name="s" /> parameter is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e74a3-212">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-212">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-213">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-213">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint64" Usage="System.uint64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-214">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-214">A string that represents the number to convert.</span></span> <span data-ttu-id="e74a3-215">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="e74a3-215">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="e74a3-216">枚举值的按位组合，这些枚举值指定 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-216">A bitwise combination of the enumeration values that specifies the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="e74a3-217">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-217">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="e74a3-218">将指定样式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-218">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e74a3-219">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-219">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-220">参数定义`s`参数中允许的样式元素 (如空格、正号或负号符号、组分隔符符号或小数点符号), 以便分析操作成功。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-220">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e74a3-221">`style`必须是<xref:System.Globalization.NumberStyles>枚举中位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-221">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="e74a3-222">当包含十六进制值的字符串表示形式时, 此`s` 参数会使此方法重载非常有用,当表示的数字系统(十进制或十六进制)仅在运行时已知,或者当你`style` `s`要禁止在中`s`使用空格或符号符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-222">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="e74a3-223">根据的值`style` `s` , 参数可能包括以下元素:</span><span class="sxs-lookup"><span data-stu-id="e74a3-223">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-224">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-224">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-225">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-225">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-226">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>,则`s`参数可能包含以下元素:</span><span class="sxs-lookup"><span data-stu-id="e74a3-226">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-227">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-227">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-228">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-228">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-229">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-229">Element</span></span>|<span data-ttu-id="e74a3-230">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-230">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-231">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-231">*ws*</span></span>|<span data-ttu-id="e74a3-232">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-232">Optional white space.</span></span> <span data-ttu-id="e74a3-233">`s` `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>如果包含`style` 标志,则空格可以出现在的开头,如果包含标志,则可以在<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>的末尾出现空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-233">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e74a3-234">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-234">A culture-specific currency symbol.</span></span> <span data-ttu-id="e74a3-235">其在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>当前区域性的和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>属性定义。</span><span class="sxs-lookup"><span data-stu-id="e74a3-235">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="e74a3-236">如果`s` `style`包含标志,则当前区域性的货币符号可以出现在中。<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-236">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-237">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-237">*sign*</span></span>|<span data-ttu-id="e74a3-238">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-238">An optional sign.</span></span> <span data-ttu-id="e74a3-239">`s` `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>如果包含`style` 标志,则符号可以出现在的开头,如果包含标志,则它可以<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>出现在的结尾。</span><span class="sxs-lookup"><span data-stu-id="e74a3-239">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-240">如果包含`s` `style`标志,则可以在中使用括号来表示负值。<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-240">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-241">但负号符号只能与零一起使用;否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-241">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="e74a3-242">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-242">*digits*</span></span><br /><br /> <span data-ttu-id="e74a3-243">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-243">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="e74a3-244">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-244">*exponential_digits*</span></span>|<span data-ttu-id="e74a3-245">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-245">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="e74a3-246">对于*fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="e74a3-246">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="e74a3-247">*，*</span><span class="sxs-lookup"><span data-stu-id="e74a3-247">*,*</span></span>|<span data-ttu-id="e74a3-248">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-248">A culture-specific group separator symbol.</span></span> <span data-ttu-id="e74a3-249">如果`s` `style`包含标志,则当前区域性的组分隔符可以出现在中。<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-249">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-250">*.*</span><span class="sxs-lookup"><span data-stu-id="e74a3-250">*.*</span></span>|<span data-ttu-id="e74a3-251">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-251">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e74a3-252">如果`s` `style`包含标志,则当前区域性的小数点符号可以出现在中。<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-252">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-253">只有数字0才能作为小数位出现，以便分析操作成功;如果*fractional_digits*包含任何其他数字， <xref:System.FormatException>则会引发。</span><span class="sxs-lookup"><span data-stu-id="e74a3-253">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="e74a3-254">E</span><span class="sxs-lookup"><span data-stu-id="e74a3-254">E</span></span>|<span data-ttu-id="e74a3-255">"E" 或 "E" 字符, 指示值以指数 (科学型) 表示法表示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-255">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="e74a3-256">如果`s` 包含标志<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> , 则参数可以表示指数表示法中的数字。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-256">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-257">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-257">*hexdigits*</span></span>|<span data-ttu-id="e74a3-258">从0到 f 的十六进制数字序列, 或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="e74a3-258">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e74a3-259">无论`style`参数的值如何, 分析操作都将`s`忽略中的任何终止 NUL (U + 0000) 字符。</span><span class="sxs-lookup"><span data-stu-id="e74a3-259">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e74a3-260">只包含数字的字符串 (对应<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>于样式) 始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="e74a3-260">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="e74a3-261">大多数剩余<xref:System.Globalization.NumberStyles>成员控件可能存在但不需要存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-261">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="e74a3-262">下表指示各个<xref:System.Globalization.NumberStyles>成员如何影响可能出现在中`s`的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-262">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e74a3-263">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="e74a3-263">`NumberStyles` value</span></span>|<span data-ttu-id="e74a3-264">中允许`s`的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="e74a3-264">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="e74a3-265">仅限*数字*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-265">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="e74a3-266">小数点 (.) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-266">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="e74a3-267">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="e74a3-267">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="e74a3-268">开头`s`的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-268">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="e74a3-269">末尾`s`处的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-269">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="e74a3-270">开头`s`的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-270">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="e74a3-271">末尾`s`的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-271">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="e74a3-272">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-272">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="e74a3-273">组分隔符 (,) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-273">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="e74a3-274">货币符号 ($)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-274">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="e74a3-275">所有元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-275">All elements.</span></span> <span data-ttu-id="e74a3-276">但是, `s`不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-276">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="e74a3-277">开头或结尾`s`处的 ws 元素, 在的 `s`开头处进行签名, 然后是小数点 (*.*) 符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-277">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="e74a3-278">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-278">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="e74a3-279">、、组分隔符 (*、*) 和小数点 (.) 元素。 `ws` `sign`</span><span class="sxs-lookup"><span data-stu-id="e74a3-279">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="e74a3-280">所有元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-280">All elements.</span></span> <span data-ttu-id="e74a3-281">但是, `s`不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-281">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="e74a3-282">与其他<xref:System.Globalization.NumberStyles>值不同, 它们允许但不需要, 在中`s`存在特定样式元素, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>样式值意味着中`s`的单个数字字符始终解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="e74a3-282">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="e74a3-283">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="e74a3-283">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="e74a3-284">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-284">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="e74a3-285">只能与`style`参数组合的其他标志是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-285">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e74a3-286">(枚举包含复合数字样式, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>其中包含两个空白标志。) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="e74a3-286">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e74a3-287">如果`s`是十六进制数的字符串表示形式, 则它的前面不能有任何将其视为`0x`十六进制`&h`数的修饰 (如或)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-287">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="e74a3-288">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-288">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="e74a3-289">通过使用为当前系统区域性初始化的<xref:System.Globalization.NumberFormatInfo>对象中的格式设置信息来分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="e74a3-289">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="e74a3-290">若要指定其格式设置信息用于分析操作的区域性, 请调用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="e74a3-290">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-291">下面的示例尝试使用多<xref:System.Globalization.NumberStyles>个值分析字符串数组中的每个元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-291">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e74a3-292"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-292">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e74a3-293"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-293"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e74a3-294">或</span><span class="sxs-lookup"><span data-stu-id="e74a3-294">-or-</span></span> 
 <span data-ttu-id="e74a3-295"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-295"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-296">参数 <paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-296">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e74a3-297">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-297">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="e74a3-298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e74a3-298">-or-</span></span> 
 <span data-ttu-id="e74a3-299"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="e74a3-299"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-300">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-300">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-301">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-301">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="e74a3-302">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-302">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="e74a3-303">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-303">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e74a3-304">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-304">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-305">此<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法的重载通常用于将可以多种方式设置格式的文本转换<xref:System.UInt64>为值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-305">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="e74a3-306">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-306">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="e74a3-307">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="e74a3-307">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="e74a3-308">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="e74a3-308">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="e74a3-309">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-309">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-310">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-310">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-311">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-311">Element</span></span>|<span data-ttu-id="e74a3-312">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-312">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-313">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-313">*ws*</span></span>|<span data-ttu-id="e74a3-314">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-314">Optional white space.</span></span>|  
|<span data-ttu-id="e74a3-315">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-315">*sign*</span></span>|<span data-ttu-id="e74a3-316">可选正号或负号（如果`s`表示值零）。</span><span class="sxs-lookup"><span data-stu-id="e74a3-316">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="e74a3-317">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-317">*digits*</span></span>|<span data-ttu-id="e74a3-318">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-318">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="e74a3-319">使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式解释 s 参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-319">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e74a3-320">除了无符号整数值的十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-320">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="e74a3-321">（如果存在负号， `s`则必须表示值为零，否则方法将<xref:System.OverflowException>引发。）若要`s` <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>使用中提供的区域性特定格式设置信息显式定义样式元素，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-321">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="e74a3-322"><xref:System.IFormatProvider> <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>参数是一个实现，其方法返回一个对象，该对象提供有关格式的`s`区域性特定信息。 `provider`</span><span class="sxs-lookup"><span data-stu-id="e74a3-322">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e74a3-323">使用`provider`参数为分析操作提供自定义格式设置信息的方法有三种:</span><span class="sxs-lookup"><span data-stu-id="e74a3-323">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="e74a3-324">可以传递提供格式设置<xref:System.Globalization.NumberFormatInfo>信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-324">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="e74a3-325">（其实现<xref:System.IFormatProvider.GetFormat%2A>只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="e74a3-325">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="e74a3-326">可以传递一个<xref:System.Globalization.CultureInfo>对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="e74a3-326">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="e74a3-327">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-327">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="e74a3-328">可以传递自定义<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-328">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e74a3-329">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-329">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="e74a3-330">如果`provider` <xref:System.Globalization.NumberFormatInfo>为`null`，则使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-330">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-331">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e74a3-331">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="e74a3-332">它使用<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性返回的数组来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="e74a3-332">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="e74a3-333">然后，它将<xref:System.Globalization.CultureInfo>实例化对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-333">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="e74a3-334">然后，将属于该<xref:System.Globalization.CultureInfo>对象的<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> <xref:System.UInt64> <xref:System.Globalization.NumberFormatInfo>对象传递给方法，以将用户的输入转换为值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-334">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e74a3-335"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-335">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-336"><paramref name="s" /> 参数的样式不正确。</span><span class="sxs-lookup"><span data-stu-id="e74a3-336">The <paramref name="s" /> parameter is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e74a3-337">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-337">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-338">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-338">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As ULong" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-339">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-339">A string that represents the number to convert.</span></span> <span data-ttu-id="e74a3-340">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="e74a3-340">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="e74a3-341">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-341">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="e74a3-342">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-342">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="e74a3-343">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-343">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="e74a3-344">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-344">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="e74a3-345">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-345">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-346">参数定义`s`参数中允许的样式元素（如空格或正号或负号符号），以便分析操作成功。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-346">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e74a3-347">它必须是<xref:System.Globalization.NumberStyles>枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-347">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="e74a3-348">根据的值`style` `s` , 参数可能包括以下元素:</span><span class="sxs-lookup"><span data-stu-id="e74a3-348">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-349">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-349">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-350">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-350">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-351">如果`style`包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>,则`s`参数可能包括以下元素:</span><span class="sxs-lookup"><span data-stu-id="e74a3-351">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-352">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-352">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-353">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-353">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-354">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-354">Element</span></span>|<span data-ttu-id="e74a3-355">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-355">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-356">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-356">*ws*</span></span>|<span data-ttu-id="e74a3-357">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-357">Optional white space.</span></span> <span data-ttu-id="e74a3-358">`s` `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>如果包含`style` 标志，则空格可以出现在的开头，如果包含标志，则可以在<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>的末尾出现空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-358">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e74a3-359">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-359">A culture-specific currency symbol.</span></span> <span data-ttu-id="e74a3-360">其在字符串中的<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>位置由`provider`参数的<xref:System.IFormatProvider.GetFormat%2A>方法返回的<xref:System.Globalization.NumberFormatInfo>对象的属性定义。</span><span class="sxs-lookup"><span data-stu-id="e74a3-360">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="e74a3-361">如果`s` `style`包含标志,则货币符号可以出现在中。<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-361">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-362">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-362">*sign*</span></span>|<span data-ttu-id="e74a3-363">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-363">An optional sign.</span></span> <span data-ttu-id="e74a3-364">（ <xref:System.OverflowException> 如果`s`包含负号并表示非零数字，则方法将引发。）`s`如果`style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>包含标志，则符号可以出现在的开头，并且如果包含标志，则它可以显示的结尾。`s` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-364">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-365">如果包含`s` `style`标志,则可以在中使用括号来表示负值。<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-365">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-366">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-366">*digits*</span></span>|<span data-ttu-id="e74a3-367">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-367">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="e74a3-368">*.*</span><span class="sxs-lookup"><span data-stu-id="e74a3-368">*.*</span></span>|<span data-ttu-id="e74a3-369">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-369">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e74a3-370">如果`s` `style`包含标志,则当前区域性的小数点符号可以出现在中。<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-370">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-371">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-371">*fractional_digits*</span></span>|<span data-ttu-id="e74a3-372">`style` 如果<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>包含标志，则为数字0-9 的一个或多个匹配项，如果未出现，则为数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="e74a3-372">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="e74a3-373">仅当包含`s` `style`标志时, 小数位才能出现在中<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e74a3-373">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-374">E</span><span class="sxs-lookup"><span data-stu-id="e74a3-374">E</span></span>|<span data-ttu-id="e74a3-375">"E" 或 "E" 字符, 指示值以指数 (科学型) 表示法表示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-375">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="e74a3-376">如果`s` 包含标志<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> , 则参数可以表示指数表示法中的数字。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-376">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-377">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-377">*exponential_digits*</span></span>|<span data-ttu-id="e74a3-378">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-378">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="e74a3-379">如果`s` 包含标志<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> , 则参数可以表示指数表示法中的数字。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-379">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-380">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-380">*hexdigits*</span></span>|<span data-ttu-id="e74a3-381">从0到 f 的十六进制数字序列, 或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="e74a3-381">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e74a3-382">无论`style`参数的值如何, 分析操作都将`s`忽略中的任何终止 NUL (U + 0000) 字符。</span><span class="sxs-lookup"><span data-stu-id="e74a3-382">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e74a3-383">只包含十进制数字的字符串（对应<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>于样式）始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="e74a3-383">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="e74a3-384">大多数其余<xref:System.Globalization.NumberStyles>成员控件在此输入字符串中可能存在但并不需要存在的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-384">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="e74a3-385">下表指示各个<xref:System.Globalization.NumberStyles>成员如何影响可能出现在中`s`的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-385">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e74a3-386">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="e74a3-386">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="e74a3-387">中允许`s`的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="e74a3-387">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="e74a3-388">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-388">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="e74a3-389">小数点（*.*）和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-389">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="e74a3-390">但是，如果样式不包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志，则*fractional_digits*必须只包含一个或多个0位数<xref:System.OverflowException> ; 否则，将引发。</span><span class="sxs-lookup"><span data-stu-id="e74a3-390">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="e74a3-391">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="e74a3-391">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="e74a3-392">开头`s`的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-392">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="e74a3-393">末尾`s`处的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-393">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="e74a3-394">*数字*之前的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-394">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="e74a3-395">*数字*后的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-395">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="e74a3-396">用于指示负值的*位数*前后的括号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-396">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="e74a3-397">组分隔符 (*,*) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-397">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="e74a3-398">Currency (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-398">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="e74a3-399">如果使用`s`标志, 则必须是十六进制值。 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-399">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="e74a3-400">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="e74a3-400">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="e74a3-401">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-401">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="e74a3-402">可以与之组合的其他标志只能是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和。 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-402">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e74a3-403">(枚举包含复合数字样式, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>其中包含两个空白标志。) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="e74a3-403">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e74a3-404">如果参数是十六进制数的字符串表示形式，则它的前面不能有任何将其视为十六进制`0x`数`&h`的修饰（如或）。 `s`</span><span class="sxs-lookup"><span data-stu-id="e74a3-404">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="e74a3-405">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="e74a3-405">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="e74a3-406"><xref:System.IFormatProvider> <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>参数是一个实现，其方法返回一个对象，该对象提供有关格式的`s`区域性特定信息。 `provider`</span><span class="sxs-lookup"><span data-stu-id="e74a3-406">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e74a3-407">使用`provider`参数为分析操作提供自定义格式设置信息的方法有三种:</span><span class="sxs-lookup"><span data-stu-id="e74a3-407">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="e74a3-408">可以传递提供格式设置<xref:System.Globalization.NumberFormatInfo>信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-408">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="e74a3-409">（其实现<xref:System.IFormatProvider.GetFormat%2A>只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="e74a3-409">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="e74a3-410">可以传递一个<xref:System.Globalization.CultureInfo>对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="e74a3-410">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="e74a3-411">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-411">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="e74a3-412">可以传递自定义<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-412">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e74a3-413">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-413">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="e74a3-414">如果`provider`为`null` ,<xref:System.Globalization.NumberFormatInfo>则使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-414">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-415">下面的<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>示例使用方法将数字的各种字符串表示形式转换为64位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-415">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e74a3-416"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-416">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e74a3-417"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-417"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e74a3-418">或</span><span class="sxs-lookup"><span data-stu-id="e74a3-418">-or-</span></span> 
 <span data-ttu-id="e74a3-419"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-419"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-420">参数 <paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-420">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="e74a3-421">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-421">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="e74a3-422">或</span><span class="sxs-lookup"><span data-stu-id="e74a3-422">-or-</span></span> 
 <span data-ttu-id="e74a3-423"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="e74a3-423"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-424">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-424">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-425">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-425">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-426">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-426">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-427">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-427"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-428">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-428">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-429">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-429">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-430">建议的替代<xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-430">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-431">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-431">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-432">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-432">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-433">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-433">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-434">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-435">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-435">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-436">建议的替代<xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-436">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-437">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-437">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-438">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-438">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-439">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-439">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-440">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-441">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-441">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-442">建议的替代<xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-442">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-443">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-443">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-444">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="e74a3-444">This conversion is not supported.</span></span> <span data-ttu-id="e74a3-445">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-445">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-446">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="e74a3-446">This conversion is not supported.</span></span> <span data-ttu-id="e74a3-447">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-447">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e74a3-448">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="e74a3-448">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-449">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-449">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-450">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-450">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-451">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-451">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-452">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-452">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-453">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-453">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-454">建议的替代<xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-454">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-455">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-455">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-456">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-456">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-457">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-457">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-458">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-459">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-459">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-460">建议的替代<xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-460">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-461">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-461">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-462">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-462">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-463">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-463">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-464">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-465">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-465">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-466">建议的替代<xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-466">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-467">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-468">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-468">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-469">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-469">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-470">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-471">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-471">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-472">建议的替代<xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-472">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-473">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-474">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-474">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-475">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-475">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-476">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-477">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-477">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-478">建议的替代<xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-478">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-479">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-480">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-480">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-481">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-481">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-482">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-483">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-483">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-484">建议的替代<xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-484">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-485">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-486">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-486">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-487">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-487">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-488">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-489">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-489">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-490">建议的替代<xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-490">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e74a3-491">此 <see cref="T:System.UInt64" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="e74a3-491">The type to which to convert this <see cref="T:System.UInt64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="e74a3-492">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-492">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="e74a3-493">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-493">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-494">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-494">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-495">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-495">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-496">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-496">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-497">建议的替代项是调用`static` （`Shared`在 Visual Basic） <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-497">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-498">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-498">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-499">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-499">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-500">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-500">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-501">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-501">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-502">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-502">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-503">建议的替代<xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-503">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-504">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-504">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-505">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-505">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-506">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-506">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-507">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-507">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-508">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-508">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="e74a3-509">建议的替代<xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType>方法是调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-509">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-510">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-510">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="e74a3-511">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-511">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="e74a3-512">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="e74a3-512">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-513">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="e74a3-513">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e74a3-514">它只能在 <xref:System.UInt64> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e74a3-514">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e74a3-515">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-515">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e74a3-516">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-516">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="e74a3-517">此实例的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="e74a3-517">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-518">方法使用当前区域性<xref:System.UInt64>的<xref:System.Globalization.NumberFormatInfo>对象设置默认值（"G" 或 "常规"）格式的值的格式。 <xref:System.UInt64.ToString></span><span class="sxs-lookup"><span data-stu-id="e74a3-518">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="e74a3-519">如果要指定其他格式或区域性, 请使用<xref:System.UInt64.ToString%2A>方法的其他重载, 如下所示:</span><span class="sxs-lookup"><span data-stu-id="e74a3-519">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e74a3-520">使用格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-520">To use format</span></span>|<span data-ttu-id="e74a3-521">对于区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-521">For culture</span></span>|<span data-ttu-id="e74a3-522">使用重载</span><span class="sxs-lookup"><span data-stu-id="e74a3-522">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e74a3-523">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-523">Default ("G") format</span></span>|<span data-ttu-id="e74a3-524">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-524">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e74a3-525">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-525">A specific format</span></span>|<span data-ttu-id="e74a3-526">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-526">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="e74a3-527">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-527">A specific format</span></span>|<span data-ttu-id="e74a3-528">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-528">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-529">下面的示例使用默认<xref:System.UInt64> <xref:System.UInt64.ToString>方法显示一个值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-529">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="e74a3-530">它还显示使用某些标准格式说明符<xref:System.UInt64>生成的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-530">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="e74a3-531">这些示例使用 en-us 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-531">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e74a3-532">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-532">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint64.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e74a3-533">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-533">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e74a3-534">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-534">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="e74a3-535">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="e74a3-535">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-536">方法使用指定区域性<xref:System.UInt64>的<xref:System.Globalization.NumberFormatInfo>对象设置默认值（"G" 或 "常规"）格式的值的格式。 <xref:System.UInt64.ToString%28System.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-536">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="e74a3-537">如果要指定其他格式或当前区域性, 请使用<xref:System.UInt64.ToString%2A>方法的其他重载, 如下所示:</span><span class="sxs-lookup"><span data-stu-id="e74a3-537">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e74a3-538">使用格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-538">To use format</span></span>|<span data-ttu-id="e74a3-539">对于区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-539">For culture</span></span>|<span data-ttu-id="e74a3-540">使用重载</span><span class="sxs-lookup"><span data-stu-id="e74a3-540">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e74a3-541">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-541">Default ("G") format</span></span>|<span data-ttu-id="e74a3-542">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-542">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="e74a3-543">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-543">A specific format</span></span>|<span data-ttu-id="e74a3-544">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-544">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="e74a3-545">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-545">A specific format</span></span>|<span data-ttu-id="e74a3-546">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-546">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="e74a3-547">参数是一个<xref:System.IFormatProvider>实现。 `provider`</span><span class="sxs-lookup"><span data-stu-id="e74a3-547">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e74a3-548">其<xref:System.IFormatProvider.GetFormat%2A>方法返回一个<xref:System.Globalization.NumberFormatInfo>对象，该对象提供区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-548">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="e74a3-549">但是，在使用一般数值格式说明符<xref:System.Globalization.NumberFormatInfo> （"G"）进行格式设置时，不会使用的任何属性。</span><span class="sxs-lookup"><span data-stu-id="e74a3-549">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-550">下面的示例使用多个格式提供程序（包括一个用于固定区域性的格式提供程序）设置64位有符号整数值的格式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-550">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="e74a3-551">该示例的输出说明，无论格式提供程序是什么， <xref:System.UInt64.ToString%28System.IFormatProvider%29>方法返回的格式化字符串都是相同的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-551">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e74a3-552">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-552">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e74a3-553">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-553">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="e74a3-554">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-554">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="e74a3-555">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="e74a3-555">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-556">方法使用表示当前<xref:System.UInt64>区域性约定的<xref:System.Globalization.NumberFormatInfo>对象来设置指定格式的值的格式。 <xref:System.UInt64.ToString%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-556">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="e74a3-557">如果要使用默认格式（"G" 或 "常规"）或指定不同的区域性，请使用<xref:System.UInt64.ToString%2A>方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="e74a3-557">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e74a3-558">使用格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-558">To use format</span></span>|<span data-ttu-id="e74a3-559">对于区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-559">For culture</span></span>|<span data-ttu-id="e74a3-560">使用重载</span><span class="sxs-lookup"><span data-stu-id="e74a3-560">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e74a3-561">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-561">Default ("G") format</span></span>|<span data-ttu-id="e74a3-562">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-562">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="e74a3-563">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-563">Default ("G") format</span></span>|<span data-ttu-id="e74a3-564">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-564">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e74a3-565">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-565">A specific format</span></span>|<span data-ttu-id="e74a3-566">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-566">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="e74a3-567">参数可以是任何有效的[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，也可以是[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)的任意组合。 `format`</span><span class="sxs-lookup"><span data-stu-id="e74a3-567">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="e74a3-568">如果`format` <xref:System.UInt64>等于或为`null`，则当前对象的返回值用常规格式说明符（"G"）进行格式设置。 <xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-568">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="e74a3-569">如果`format`是其他任何值, 则该方法将<xref:System.FormatException>引发。</span><span class="sxs-lookup"><span data-stu-id="e74a3-569">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="e74a3-570">.NET Framework 提供了广泛的格式设置支持, 以下格式设置主题更详细地介绍了这些支持:</span><span class="sxs-lookup"><span data-stu-id="e74a3-570">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e74a3-571">有关数字格式说明符的详细信息, 请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-571">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e74a3-572">有关 .NET Framework 中的格式设置的详细信息, 请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-572">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e74a3-573">返回字符串的格式由当前区域性的<xref:System.Globalization.NumberFormatInfo>对象确定。</span><span class="sxs-lookup"><span data-stu-id="e74a3-573">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="e74a3-574">`format`根据参数，此对象控制输出字符串中的符号，如组分隔符和小数点符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-574">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="e74a3-575">若要为当前区域性以外的区域性提供格式设置信息, 请<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>调用重载。</span><span class="sxs-lookup"><span data-stu-id="e74a3-575">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-576">下面的示例通过使用每个标准格式字符串和一些自定义格式字符串来显示64位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-576">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-577"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e74a3-577">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e74a3-578">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-578">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="e74a3-579">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="e74a3-579">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e74a3-580">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-580">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="e74a3-581">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-581">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="e74a3-582">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-582">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="e74a3-583">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="e74a3-583">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-584">方法使用指定的<xref:System.UInt64>区域性的<xref:System.Globalization.NumberFormatInfo>对象设置指定格式的值的格式。 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-584">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="e74a3-585">如果要使用默认格式或区域性设置，请使用<xref:System.UInt64.ToString%2A>方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="e74a3-585">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="e74a3-586">使用格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-586">To use format</span></span>|<span data-ttu-id="e74a3-587">对于区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-587">For culture</span></span>|<span data-ttu-id="e74a3-588">使用重载</span><span class="sxs-lookup"><span data-stu-id="e74a3-588">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="e74a3-589">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-589">Default ("G") format</span></span>|<span data-ttu-id="e74a3-590">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-590">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="e74a3-591">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-591">Default ("G") format</span></span>|<span data-ttu-id="e74a3-592">特定区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-592">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="e74a3-593">特定格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-593">A specific format</span></span>|<span data-ttu-id="e74a3-594">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="e74a3-594">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="e74a3-595">参数可以是任何有效的[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，也可以是[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)的任意组合。 `format`</span><span class="sxs-lookup"><span data-stu-id="e74a3-595">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="e74a3-596">如果`format` <xref:System.UInt64>等于或为`null`，则当前对象的返回值用常规格式说明符（"G"）进行格式设置。 <xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-596">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="e74a3-597">如果`format`是其他任何值, 则该方法将<xref:System.FormatException>引发。</span><span class="sxs-lookup"><span data-stu-id="e74a3-597">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="e74a3-598">.NET Framework 提供了广泛的格式设置支持, 以下格式设置主题更详细地介绍了这些支持:</span><span class="sxs-lookup"><span data-stu-id="e74a3-598">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="e74a3-599">有关数字格式说明符的详细信息, 请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-599">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="e74a3-600">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-600">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="e74a3-601">参数是一个<xref:System.IFormatProvider>实现。 `provider`</span><span class="sxs-lookup"><span data-stu-id="e74a3-601">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e74a3-602">其<xref:System.IFormatProvider.GetFormat%2A>方法返回一个<xref:System.Globalization.NumberFormatInfo>对象, 该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-602">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="e74a3-603"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> <xref:System.Type> <xref:System.Globalization.NumberFormatInfo>调用方法时, 它`provider`调用参数的方法并向其传递一个表示类型的对象。 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-603">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="e74a3-604">然后， <xref:System.Globalization.NumberFormatInfo> <xref:System.UInt64>方法返回对象，该对象提供用于设置当前值的格式的信息，如组分隔符符号或小数点符号。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="e74a3-604">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="e74a3-605">使用`provider`参数为<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法提供格式设置信息的方法有三种:</span><span class="sxs-lookup"><span data-stu-id="e74a3-605">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="e74a3-606">可以传递一个<xref:System.Globalization.CultureInfo>对象, 该对象表示提供格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="e74a3-606">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="e74a3-607">其<xref:System.Globalization.CultureInfo.GetFormat%2A> 方法<xref:System.Globalization.NumberFormatInfo>返回对象, 该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-607">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="e74a3-608">可以传递提供数字格式<xref:System.Globalization.NumberFormatInfo>设置信息的实际对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-608">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="e74a3-609">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回自身。)</span><span class="sxs-lookup"><span data-stu-id="e74a3-609">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="e74a3-610">可以传递实现<xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-610">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="e74a3-611">它<xref:System.IFormatProvider.GetFormat%2A>的方法实例化并<xref:System.Globalization.NumberFormatInfo>返回提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-611">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="e74a3-612">如果`provider` <xref:System.Globalization.NumberFormatInfo>为`null`, 则返回的字符串的格式基于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-612">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-613">下面的示例使用标准数值格式说明符和多个特定<xref:System.Globalization.CultureInfo>的对象来显示32位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-613">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="e74a3-614"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e74a3-614">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e74a3-615">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="e74a3-615">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="e74a3-616">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="e74a3-616">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="e74a3-617">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="e74a3-617">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="e74a3-618">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="e74a3-618">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e74a3-619">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-619">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="e74a3-620">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-620">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-621">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-621">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="e74a3-622">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="e74a3-622">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="e74a3-623">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-623">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="e74a3-624">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e74a3-624">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="e74a3-625">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-625">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="e74a3-626">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-626">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="e74a3-627">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-627"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-628">方法与<xref:System.UInt64.Parse%28System.String%29>方法类似, 不同之处在于它不会在转换失败时引发异常。 <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-628">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="e74a3-629">此方法无需使用异常处理来测试<xref:System.FormatException> if `s`是否无效且无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="e74a3-629">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="e74a3-630">`s`参数应为以下形式的十进制数的字符串表示形式:</span><span class="sxs-lookup"><span data-stu-id="e74a3-630">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="e74a3-631">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-631">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-632">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-632">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-633">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-634">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-634">Element</span></span>|<span data-ttu-id="e74a3-635">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-636">*ws*</span></span>|<span data-ttu-id="e74a3-637">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-637">Optional white space.</span></span>|  
|<span data-ttu-id="e74a3-638">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-638">*sign*</span></span>|<span data-ttu-id="e74a3-639">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-639">An optional sign.</span></span> <span data-ttu-id="e74a3-640">有效的符号字符由当前区域性<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>的<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>和属性确定。</span><span class="sxs-lookup"><span data-stu-id="e74a3-640">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="e74a3-641">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-641">*digits*</span></span>|<span data-ttu-id="e74a3-642">十进制数字的序列, 范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="e74a3-642">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="e74a3-643">使用样式对`s` <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>参数进行解释。</span><span class="sxs-lookup"><span data-stu-id="e74a3-643">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="e74a3-644">除十进制数字外, 只允许使用前导符号和尾随空格。</span><span class="sxs-lookup"><span data-stu-id="e74a3-644">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="e74a3-645">若要显式定义具有可在中`s`存在的区域性特定格式设置信息的样式元素, 请<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-645">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e74a3-646">`s`参数指定的字符串不能包含任何组分隔符或小数分隔符，并且它不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="e74a3-646">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="e74a3-647">使用为当前系统区域性初始化的<xref:System.Globalization.NumberFormatInfo>对象中的格式设置信息分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="e74a3-647">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="e74a3-648">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-648">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e74a3-649">此重载将参数中的`s`所有数字解释为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-649">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="e74a3-650">若要分析十六进制数的字符串表示形式, 请改<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>为调用重载。</span><span class="sxs-lookup"><span data-stu-id="e74a3-650">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-651">下面的示例为字符串<xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>数组中的每个元素调用一次方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-651">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-652">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-652">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="e74a3-653">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="e74a3-653">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="e74a3-654">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="e74a3-654">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * uint64 -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e74a3-655">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="e74a3-655">A string that represents the number to convert.</span></span> <span data-ttu-id="e74a3-656">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="e74a3-656">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="e74a3-657">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="e74a3-657">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="e74a3-658">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-658">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="e74a3-659">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-659">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="e74a3-660">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="e74a3-660">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="e74a3-661">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-661">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="e74a3-662">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="e74a3-662">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="e74a3-663">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-663">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="e74a3-664">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-664">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="e74a3-665">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e74a3-665"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e74a3-666">方法与<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法类似, 不同之处在于它不会在转换失败时引发异常。 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29></span><span class="sxs-lookup"><span data-stu-id="e74a3-666">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="e74a3-667">此方法无需使用异常处理来测试<xref:System.FormatException> `s`是否无效, 并且无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="e74a3-667">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="e74a3-668">参数定义`s`参数中允许的样式元素 (如空格或正号或负号), 以便分析操作成功。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-668">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="e74a3-669">它必须是<xref:System.Globalization.NumberStyles>枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-669">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="e74a3-670">根据的值`style` `s` , 参数可能包括以下元素:</span><span class="sxs-lookup"><span data-stu-id="e74a3-670">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-671">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-671">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-672">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="e74a3-672">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="e74a3-673">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>， `s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="e74a3-673">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="e74a3-674">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="e74a3-674">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="e74a3-675">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="e74a3-675">The following table describes each element.</span></span>  
  
|<span data-ttu-id="e74a3-676">元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-676">Element</span></span>|<span data-ttu-id="e74a3-677">说明</span><span class="sxs-lookup"><span data-stu-id="e74a3-677">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="e74a3-678">*ws*</span><span class="sxs-lookup"><span data-stu-id="e74a3-678">*ws*</span></span>|<span data-ttu-id="e74a3-679">可选空白。</span><span class="sxs-lookup"><span data-stu-id="e74a3-679">Optional white space.</span></span> <span data-ttu-id="e74a3-680">`s` `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>如果包含`style` 标志,则可以在的开头出现空格;如果包含标志,<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="e74a3-680">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="e74a3-681">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-681">A culture-specific currency symbol.</span></span> <span data-ttu-id="e74a3-682">其在字符串中的<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>位置由`provider`参数<xref:System.IFormatProvider.GetFormat%2A>方法返回的<xref:System.Globalization.NumberFormatInfo>对象的属性定义。</span><span class="sxs-lookup"><span data-stu-id="e74a3-682">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="e74a3-683">如果`s` `style`包含标志,则货币符号可以出现在中。<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-683">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-684">*sign*</span><span class="sxs-lookup"><span data-stu-id="e74a3-684">*sign*</span></span>|<span data-ttu-id="e74a3-685">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-685">An optional sign.</span></span> <span data-ttu-id="e74a3-686">`s` `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>如果包含`style` 标志,则符号可以出现在的开头,如果包含标志,则它可以<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>出现在的结尾。</span><span class="sxs-lookup"><span data-stu-id="e74a3-686">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-687">如果包含`s` `style`标志,则可以在中使用括号来表示负值。<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-687">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="e74a3-688">但是，如果存在负号，则只能`s`表示值零，分析操作才能成功。</span><span class="sxs-lookup"><span data-stu-id="e74a3-688">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="e74a3-689">*digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-689">*digits*</span></span>|<span data-ttu-id="e74a3-690">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-690">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="e74a3-691">*，*</span><span class="sxs-lookup"><span data-stu-id="e74a3-691">*,*</span></span>|<span data-ttu-id="e74a3-692">区域性特定的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="e74a3-692">A culture-specific group separator.</span></span> <span data-ttu-id="e74a3-693">`provider` `s`如果包含<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志, 则所指定的区域性的组分隔符可以出现在中。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-693">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-694">*.*</span><span class="sxs-lookup"><span data-stu-id="e74a3-694">*.*</span></span>|<span data-ttu-id="e74a3-695">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-695">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="e74a3-696">`provider` `s`如果包含<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志, 则指定的区域性的小数点符号可以出现在中。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-696">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-697">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-697">*fractional_digits*</span></span>|<span data-ttu-id="e74a3-698">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="e74a3-698">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="e74a3-699">仅当包含`s` `style`标志时, 小数位才能出现在中<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e74a3-699">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-700">E</span><span class="sxs-lookup"><span data-stu-id="e74a3-700">E</span></span>|<span data-ttu-id="e74a3-701">"E" 或 "E" 字符, 指示值以指数 (科学型) 表示法表示。</span><span class="sxs-lookup"><span data-stu-id="e74a3-701">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="e74a3-702">如果`s` 包含标志<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> , 则参数可以表示指数表示法中的数字。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-702">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-703">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-703">*exponential_digits*</span></span>|<span data-ttu-id="e74a3-704">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-704">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="e74a3-705">如果`s` 包含标志<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> , 则参数可以表示指数表示法中的数字。 `style`</span><span class="sxs-lookup"><span data-stu-id="e74a3-705">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="e74a3-706">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="e74a3-706">*hexdigits*</span></span>|<span data-ttu-id="e74a3-707">从0到 f 的十六进制数字序列, 或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="e74a3-707">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="e74a3-708">无论`style`参数的值如何, 分析操作都将`s`忽略中的任何终止 NUL (U + 0000) 字符。</span><span class="sxs-lookup"><span data-stu-id="e74a3-708">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="e74a3-709">只包含十进制数字的字符串 (对应<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>于标志) 始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="e74a3-709">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="e74a3-710">大多数其余<xref:System.Globalization.NumberStyles>成员控件在此输入字符串中可能存在但并不需要存在的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-710">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="e74a3-711">下表指示各个<xref:System.Globalization.NumberStyles>成员如何影响可能出现在中`s`的元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-711">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="e74a3-712">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="e74a3-712">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="e74a3-713">除了数字以外, 还允许在值中使用元素</span><span class="sxs-lookup"><span data-stu-id="e74a3-713">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="e74a3-714">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-714">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="e74a3-715">小数点（*.*）和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-715">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="e74a3-716">但是， *fractional_digits*必须只包含一个或多个0位数字，否则该方法`false`将返回。</span><span class="sxs-lookup"><span data-stu-id="e74a3-716">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="e74a3-717">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="e74a3-717">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="e74a3-718">如果`s`表示指数表示法中的数字, 则它不能包含非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="e74a3-718">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="e74a3-719">开头`s`的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-719">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="e74a3-720">末尾`s`处的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-720">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="e74a3-721">*数字*前面的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-721">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="e74a3-722">*数字*后的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-722">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="e74a3-723">用括号括起零数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-723">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="e74a3-724">组分隔符 (*,*) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-724">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="e74a3-725">Currency (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-725">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="e74a3-726">所有元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-726">All elements.</span></span> <span data-ttu-id="e74a3-727">但是, `s`不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="e74a3-727">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="e74a3-728">开头或结尾`s`处的 ws 元素, 在的 `s`开头处进行签名, 然后是小数点 (*.*) 符号。</span><span class="sxs-lookup"><span data-stu-id="e74a3-728">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="e74a3-729">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-729">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="e74a3-730">*Ws*、 *sign*、group 分隔符 (*,*) 和小数点 (*.*) 元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-730">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="e74a3-731">所有元素。</span><span class="sxs-lookup"><span data-stu-id="e74a3-731">All elements.</span></span> <span data-ttu-id="e74a3-732">但是, `s`不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="e74a3-732">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="e74a3-733">如果使用`s`标志, 则必须是十六进制值。 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e74a3-733">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="e74a3-734">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="e74a3-734">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="e74a3-735">前缀（如 "0x"）不受支持，导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-735">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="e74a3-736">中`style`可以存在的唯一其他标志是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e74a3-736">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e74a3-737">(枚举具有复合样式, <xref:System.Globalization.NumberStyles.HexNumber>其中包含两个空白标志。) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="e74a3-737">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e74a3-738">如果`s`是十六进制数的字符串表示形式, 则它的前面不能有任何将其视为`0x`十六进制`&h`数的修饰 (如或)。</span><span class="sxs-lookup"><span data-stu-id="e74a3-738">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="e74a3-739">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="e74a3-739">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="e74a3-740">参数是一个<xref:System.IFormatProvider>实现。 `provider`</span><span class="sxs-lookup"><span data-stu-id="e74a3-740">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="e74a3-741">其<xref:System.IFormatProvider.GetFormat%2A>方法返回一个<xref:System.Globalization.NumberFormatInfo>对象, 该对象提供有关格式的`s`区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-741">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="e74a3-742">`provider`参数可以是以下任一项:</span><span class="sxs-lookup"><span data-stu-id="e74a3-742">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="e74a3-743">一个<xref:System.Globalization.CultureInfo>对象, 该对象表示提供格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="e74a3-743">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="e74a3-744">其<xref:System.Globalization.CultureInfo.GetFormat%2A> 方法<xref:System.Globalization.NumberFormatInfo>返回对象, 该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="e74a3-744">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="e74a3-745">提供数字格式设置信息的对象。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="e74a3-745">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="e74a3-746">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回自身。)</span><span class="sxs-lookup"><span data-stu-id="e74a3-746">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="e74a3-747">实现<xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-747">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="e74a3-748">它<xref:System.IFormatProvider.GetFormat%2A>的方法实例化并<xref:System.Globalization.NumberFormatInfo>返回提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-748">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="e74a3-749">如果`provider`为`null` ,<xref:System.Globalization.NumberFormatInfo>则使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="e74a3-749">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e74a3-750">下面的示例使用多<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>个不同的字符串和<xref:System.Globalization.NumberStyles>值调用方法。</span><span class="sxs-lookup"><span data-stu-id="e74a3-750">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e74a3-751"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e74a3-751"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="e74a3-752">或</span><span class="sxs-lookup"><span data-stu-id="e74a3-752">-or-</span></span> 
 <span data-ttu-id="e74a3-753"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="e74a3-753"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="e74a3-754">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="e74a3-754">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
