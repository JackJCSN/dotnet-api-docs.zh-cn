<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bf451b8541aca8287122e907ef14581b84b66f0" /><Meta Name="ms.sourcegitcommit" Value="c0d26d62819c57b5ce36925856e8e5fe5b61a19b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/08/2019" /><Meta Name="ms.locfileid" Value="67623806" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e3142-101">A class that represents a Uniform Resource Identifier (URI) template.</span><span class="sxs-lookup"><span data-stu-id="e3142-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-102">使用 URI 模板，可以定义一组结构相似的 URI。</span><span class="sxs-lookup"><span data-stu-id="e3142-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="e3142-103">模板由两部分组成，即路径和查询。</span><span class="sxs-lookup"><span data-stu-id="e3142-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="e3142-104">路径由一系列由斜杠 (/) 分隔的段组成。</span><span class="sxs-lookup"><span data-stu-id="e3142-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="e3142-105">每个段都可以具有文本值、变量值（书写在大括号 [{ }] 内，且被限制为仅与一个段的内容匹配）或必须出现在路径末端的通配符（书写为星号 [\*]，与“路径的其余部分”匹配）。</span><span class="sxs-lookup"><span data-stu-id="e3142-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="e3142-106">查询表达式可以完全省略。</span><span class="sxs-lookup"><span data-stu-id="e3142-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="e3142-107">如果出现表达式，则它指定一组无序的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="e3142-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="e3142-108">查询表达式的元素可以是文本对 (?x=2)，也可以是变量对 (?x={val})。</span><span class="sxs-lookup"><span data-stu-id="e3142-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="e3142-109">不允许使用不成对的值。</span><span class="sxs-lookup"><span data-stu-id="e3142-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="e3142-110">下面的示例演示有效的模板字符串：</span><span class="sxs-lookup"><span data-stu-id="e3142-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="e3142-111">"weather/WA/Seattle"</span><span class="sxs-lookup"><span data-stu-id="e3142-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="e3142-112">"weather/{state}/{city}"</span><span class="sxs-lookup"><span data-stu-id="e3142-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="e3142-113">"weather/\*"</span><span class="sxs-lookup"><span data-stu-id="e3142-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="e3142-114">"weather/{state}/{city}?forecast=today</span><span class="sxs-lookup"><span data-stu-id="e3142-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="e3142-115">"weather/{state}/{city}?forecast={day}</span><span class="sxs-lookup"><span data-stu-id="e3142-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="e3142-116">前面的 URI 模板可用于组织天气预报。</span><span class="sxs-lookup"><span data-stu-id="e3142-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="e3142-117">括在大括号中的段都是变量，其他都是文本。</span><span class="sxs-lookup"><span data-stu-id="e3142-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="e3142-118">您可以使用实际的值替换变量，将 <xref:System.UriTemplate> 实例转换成 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="e3142-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="e3142-119">例如，使用模板“weather/{state}/{city}”，在变量“{state}”和“{city}”中输入值，便会得到“weather/WA/Seattle”。</span><span class="sxs-lookup"><span data-stu-id="e3142-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="e3142-120">你可以调用 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> 来测试给定的候选 URI 是否与给定的 URI 模板匹配。</span><span class="sxs-lookup"><span data-stu-id="e3142-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="e3142-121">也可以调用 <xref:System.UriTemplate> 或 <xref:System.Uri> 来使用 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 实例根据一组变量值创建 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="e3142-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-122">下面的代码演示如何创建 <xref:System.UriTemplate> 实例，并将其绑定和匹配到候选 URI。</span><span class="sxs-lookup"><span data-stu-id="e3142-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3142-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span><span class="sxs-lookup"><span data-stu-id="e3142-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="e3142-124">The template.</span><span class="sxs-lookup"><span data-stu-id="e3142-124">The template.</span></span></param>
        <summary><span data-ttu-id="e3142-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span><span class="sxs-lookup"><span data-stu-id="e3142-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3142-126">下面的示例演示如何调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="e3142-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="e3142-127">The template string.</span><span class="sxs-lookup"><span data-stu-id="e3142-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="e3142-128">A value that specifies whether trailing slash "/" characters should be ignored.</span><span class="sxs-lookup"><span data-stu-id="e3142-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="e3142-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span><span class="sxs-lookup"><span data-stu-id="e3142-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-130">当 `ignoreTrailingSlash` 设置为 `true` 时，如果将候选 URI 与模板匹配，将忽略模板末尾处的尾部正斜杠。</span><span class="sxs-lookup"><span data-stu-id="e3142-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="e3142-131">例如，如模板`http://www.microsoft.com/customer/`与以下候选 Uri 相匹配：</span><span class="sxs-lookup"><span data-stu-id="e3142-131">For example, a template such as `http://www.microsoft.com/customer/` would match the following candidate URIs:</span></span>  
  
- `http://www.microsoft.com/customer/`  
- `http://www.microsoft.com/customer`  
- `http://www.microsoft.com/customer/?wsdl`  
- `http://www.microsoft.com/customer?wsdl`
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="e3142-132">The template string.</span><span class="sxs-lookup"><span data-stu-id="e3142-132">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="e3142-133">A dictionary that contains a list of default values for the template parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-133">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="e3142-134">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span><span class="sxs-lookup"><span data-stu-id="e3142-134">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="e3142-135">The template string.</span><span class="sxs-lookup"><span data-stu-id="e3142-135">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="e3142-136"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3142-136"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="e3142-137">A dictionary that contains a list of default values for the template parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="e3142-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span><span class="sxs-lookup"><span data-stu-id="e3142-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3142-139">Creates a new URI from the template and the collection of parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-139">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-140">The base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-140">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="e3142-141">A dictionary that contains a collection of parameter name/value pairs.</span><span class="sxs-lookup"><span data-stu-id="e3142-141">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="e3142-142">Creates a new URI from the template and the collection of parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-142">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="e3142-143">A URI.</span><span class="sxs-lookup"><span data-stu-id="e3142-143">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-144">[IDictionary\<字符串、 字符串 >](xref:System.Collections.Generic.IDictionary%602)参数包含参数名称和值对的集合。</span><span class="sxs-lookup"><span data-stu-id="e3142-144">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="e3142-145">将参数与模板中的变量匹配时使用区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="e3142-145">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3142-146">传递给此方法的名称/值集合必须包含每个模板变量的键值。</span><span class="sxs-lookup"><span data-stu-id="e3142-146">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="e3142-147">与模板变量不匹配的额外名称/值对会追加到最终 URI 的查询字符串之后。</span><span class="sxs-lookup"><span data-stu-id="e3142-147">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e3142-148">您可以在名称/值对中传入文本，以阻止生成的 URI 与用于生成它的模板匹配。</span><span class="sxs-lookup"><span data-stu-id="e3142-148">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="e3142-149">此类文本包括“/”、“..”、“\*”、“{”和“}”等。</span><span class="sxs-lookup"><span data-stu-id="e3142-149">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-150">The base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-150">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="e3142-151">The parameter values.</span><span class="sxs-lookup"><span data-stu-id="e3142-151">The parameter values.</span></span></param>
        <summary><span data-ttu-id="e3142-152">Creates a new URI from the template and the collection of parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-152">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="e3142-153">A new instance.</span><span class="sxs-lookup"><span data-stu-id="e3142-153">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-154"><xref:System.Collections.Specialized.NameValueCollection> 参数包含参数名称/值对的集合。</span><span class="sxs-lookup"><span data-stu-id="e3142-154">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="e3142-155">将参数与模板中的变量匹配时使用区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="e3142-155">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="e3142-156">传入此集合中的值都会经过转义。</span><span class="sxs-lookup"><span data-stu-id="e3142-156">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3142-157">传递给 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 的名称/值集合必须包含每个模板变量的键值。</span><span class="sxs-lookup"><span data-stu-id="e3142-157">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="e3142-158">与模板变量不匹配的额外名称/值对会追加到最终 URI 的查询字符串之后。</span><span class="sxs-lookup"><span data-stu-id="e3142-158">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3142-159">您可以在名称/值对中传入文本，以阻止生成的 URI 与用于生成它的模板匹配。</span><span class="sxs-lookup"><span data-stu-id="e3142-159">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="e3142-160">此类文本包括“/”、“..”、“\*”、“{”和“}”等。</span><span class="sxs-lookup"><span data-stu-id="e3142-160">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-161">下面的示例演示如何调用 <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="e3142-161">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-162">A URI that contains the base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-162">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="e3142-163">A dictionary that contains a collection of parameter name/value pairs.</span><span class="sxs-lookup"><span data-stu-id="e3142-163">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="e3142-164"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3142-164"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e3142-165">Creates a new URI from the template and the collection of parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-165">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="e3142-166">A URI.</span><span class="sxs-lookup"><span data-stu-id="e3142-166">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-167">The base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-167">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="e3142-168">A collection of parameter name/value pairs.</span><span class="sxs-lookup"><span data-stu-id="e3142-168">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="e3142-169"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3142-169"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e3142-170">Creates a new URI from the template and the collection of parameters.</span><span class="sxs-lookup"><span data-stu-id="e3142-170">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="e3142-171">A URI.</span><span class="sxs-lookup"><span data-stu-id="e3142-171">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-172">A <see cref="T:System.Uri" /> that contains the base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-172">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="e3142-173">The parameter values.</span><span class="sxs-lookup"><span data-stu-id="e3142-173">The parameter values.</span></span></param>
        <summary><span data-ttu-id="e3142-174">Creates a new URI from the template and an array of parameter values.</span><span class="sxs-lookup"><span data-stu-id="e3142-174">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="e3142-175">A new <see cref="T:System.Uri" /> instance.</span><span class="sxs-lookup"><span data-stu-id="e3142-175">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-176">参数值按位置从左至右绑定。</span><span class="sxs-lookup"><span data-stu-id="e3142-176">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="e3142-177">第一个参数值会替换在模板中找到的第一个变量，第二个参数值会替换第二个变量，依此类推。</span><span class="sxs-lookup"><span data-stu-id="e3142-177">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="e3142-178">传递给此方法的变量都会经过转义。</span><span class="sxs-lookup"><span data-stu-id="e3142-178">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3142-179">传入值参数的参数个数必须与模板中的变量个数相符。</span><span class="sxs-lookup"><span data-stu-id="e3142-179">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="e3142-180">如果不符，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="e3142-180">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3142-181">您可以在参数值数组中传入文本，以阻止生成的 URI 与用于生成它的模板匹配。</span><span class="sxs-lookup"><span data-stu-id="e3142-181">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="e3142-182">此类文本包括“/”、“.”、“..”、“\*”、“{”和“}”等。</span><span class="sxs-lookup"><span data-stu-id="e3142-182">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="e3142-183">下面的代码对此进行了演示。</span><span class="sxs-lookup"><span data-stu-id="e3142-183">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="e3142-184">下面的示例演示如何调用 <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="e3142-184">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3142-185">Gets a collection of name/value pairs for any default parameter values.</span><span class="sxs-lookup"><span data-stu-id="e3142-185">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="e3142-186">一个泛型字典。</span><span class="sxs-lookup"><span data-stu-id="e3142-186">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3142-187">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span><span class="sxs-lookup"><span data-stu-id="e3142-187">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="e3142-188"><see langword="true" /> 如果尾部正斜杠"/"应忽略，否则<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e3142-188"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e3142-189">The <see cref="T:System.UriTemplate" /> to compare.</span><span class="sxs-lookup"><span data-stu-id="e3142-189">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e3142-190">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span><span class="sxs-lookup"><span data-stu-id="e3142-190">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="e3142-191"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3142-191"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-192">如果两个 <xref:System.UriTemplate> 实例的文本字符串相同，并且变量出现在相同的段中，则这两个实例是等效的。</span><span class="sxs-lookup"><span data-stu-id="e3142-192">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="e3142-193">例如，“weather/{state}/{city}”与“weather/{country}/{village}”结构等效。</span><span class="sxs-lookup"><span data-stu-id="e3142-193">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-194">下面的示例演示如何调用 <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>。</span><span class="sxs-lookup"><span data-stu-id="e3142-194">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="e3142-195">The base address.</span><span class="sxs-lookup"><span data-stu-id="e3142-195">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="e3142-196">The <see cref="T:System.Uri" /> to match against the template.</span><span class="sxs-lookup"><span data-stu-id="e3142-196">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="e3142-197">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="e3142-197">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="e3142-198">An instance.</span><span class="sxs-lookup"><span data-stu-id="e3142-198">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-199">如果匹配成功，则会使用 URI 段、变量值、查询字符串值和候选 URI 的通配符段来填充 <xref:System.UriTemplateMatch>。</span><span class="sxs-lookup"><span data-stu-id="e3142-199">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="e3142-200">如果匹配失败，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="e3142-200">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-201">下面的示例演示如何调用 <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="e3142-201">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3142-202">Gets a collection of variable names used within path segments in the template.</span><span class="sxs-lookup"><span data-stu-id="e3142-202">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="e3142-203">一个集合，包含模板的路径段中显示的变量名。</span><span class="sxs-lookup"><span data-stu-id="e3142-203">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-204">该集合不包括在模板的查询部分显示的变量名。</span><span class="sxs-lookup"><span data-stu-id="e3142-204">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-205">下面的示例演示如何访问 <xref:System.UriTemplate.PathSegmentVariableNames%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e3142-205">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3142-206">Gets a collection of variable names used within the query string in the template.</span><span class="sxs-lookup"><span data-stu-id="e3142-206">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="e3142-207">一个集合，包含在模板字符串的查询部分显示的模板变量名。</span><span class="sxs-lookup"><span data-stu-id="e3142-207">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3142-208">此集合不包括在模板字符串的路径部分显示的变量名。</span><span class="sxs-lookup"><span data-stu-id="e3142-208">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3142-209">下面的示例演示如何访问 <xref:System.UriTemplate.QueryValueVariableNames%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e3142-209">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3142-210">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span><span class="sxs-lookup"><span data-stu-id="e3142-210">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e3142-211">The representation of the <see cref="T:System.UriTemplate" /> instance.</span><span class="sxs-lookup"><span data-stu-id="e3142-211">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3142-212">下面的示例演示如何调用 <xref:System.UriTemplate.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="e3142-212">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>