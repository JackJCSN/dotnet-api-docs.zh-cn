<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0543f62ed668c3c2dc471558394ef9899c1ce307" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69421377" /></Metadata><TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="4feac-101">要比较的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="4feac-101">The type of the objects to compare.</span></span></typeparam>
    <param name="x"><span data-ttu-id="4feac-102">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="4feac-102">The first object to compare.</span></span></param>
    <param name="y"><span data-ttu-id="4feac-103">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="4feac-103">The second object to compare.</span></span></param>
    <summary><span data-ttu-id="4feac-104">表示比较同一类型的两个对象的方法。</span><span class="sxs-lookup"><span data-stu-id="4feac-104">Represents the method that compares two objects of the same type.</span></span></summary>
    <returns><span data-ttu-id="4feac-105">一个有符号整数，指示 <paramref name="x" /> 和 <paramref name="y" /> 的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="4feac-105">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4feac-106">值</span><span class="sxs-lookup"><span data-stu-id="4feac-106">Value</span></span> 
 </term><description> <span data-ttu-id="4feac-107">含义</span><span class="sxs-lookup"><span data-stu-id="4feac-107">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4feac-108">小于 0</span><span class="sxs-lookup"><span data-stu-id="4feac-108">Less than 0</span></span> 
 </term><description><span data-ttu-id="4feac-109"><paramref name="x" /> 小于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="4feac-109"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4feac-110">0</span><span class="sxs-lookup"><span data-stu-id="4feac-110">0</span></span> 
 </term><description><span data-ttu-id="4feac-111"><paramref name="x" /> 等于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="4feac-111"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4feac-112">大于 0</span><span class="sxs-lookup"><span data-stu-id="4feac-112">Greater than 0</span></span> 
 </term><description><span data-ttu-id="4feac-113"><paramref name="x" /> 大于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="4feac-113"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4feac-114">该类的<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29>方法重载<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> <xref:System.Collections.Generic.List%601>以及类的方法重载使用此委托对数组或列表的元素进行排序。 <xref:System.Array></span><span class="sxs-lookup"><span data-stu-id="4feac-114">This delegate is used by the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> method overload of the <xref:System.Array> class and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload of the <xref:System.Collections.Generic.List%601> class to sort the elements of an array or list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4feac-115">下面的代码示例演示如何将<xref:System.Comparison%601>委托<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>与方法重载一起使用。</span><span class="sxs-lookup"><span data-stu-id="4feac-115">The following code example demonstrates the use of the <xref:System.Comparison%601> delegate with the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="4feac-116">此代码示例定义了一个名为`CompareDinosByLength`的字符串的替代比较方法。</span><span class="sxs-lookup"><span data-stu-id="4feac-116">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="4feac-117">此方法的工作方式如下:首先, 对这些比较的值`null`进行测试, 并将空引用视为小于非空引用。</span><span class="sxs-lookup"><span data-stu-id="4feac-117">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="4feac-118">其次, 比较字符串长度, 较长的字符串被认为更大。</span><span class="sxs-lookup"><span data-stu-id="4feac-118">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="4feac-119">第三, 如果长度相等, 则使用普通字符串比较。</span><span class="sxs-lookup"><span data-stu-id="4feac-119">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="4feac-120">将<xref:System.Collections.Generic.List%601>创建一个字符串, 并以无特定顺序填充四个字符串。</span><span class="sxs-lookup"><span data-stu-id="4feac-120">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="4feac-121">此列表还包括一个空字符串和一个空引用。</span><span class="sxs-lookup"><span data-stu-id="4feac-121">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="4feac-122">显示列表, 使用<xref:System.Comparison%601> `CompareDinosByLength`表示方法的泛型委托进行排序, 并再次显示。</span><span class="sxs-lookup"><span data-stu-id="4feac-122">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 <span data-ttu-id="4feac-123">下面的示例使用<xref:System.Comparison%601>委托对`CityInfo`对象集合的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="4feac-123">The following example uses the <xref:System.Comparison%601> delegate to sort the elements of a collection of `CityInfo` objects.</span></span> <span data-ttu-id="4feac-124">`CityInfo`是应用程序定义的类, 包含有关城市及其人口的信息。</span><span class="sxs-lookup"><span data-stu-id="4feac-124">`CityInfo` is an application-defined class that contains information about a city and its population.</span></span> <span data-ttu-id="4feac-125">该示例定义了三种`CompareByName`方法`CompareByPopulation`:、 `CompareByNames`和, 它们提供了三种不同的`CityInfo`顺序对对象进行排序。</span><span class="sxs-lookup"><span data-stu-id="4feac-125">The example defines three methods, `CompareByName`, `CompareByPopulation`, and `CompareByNames`, that offer three different ways of ordering the `CityInfo` objects.</span></span> <span data-ttu-id="4feac-126">每个方法都分配`comparison`给<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType>方法的参数。</span><span class="sxs-lookup"><span data-stu-id="4feac-126">Each method is assigned to the `comparison` argument of the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>
