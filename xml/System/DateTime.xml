<Type Name="DateTime" FullName="System.DateTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19ff56dedfbefe8980b8d2a11eda302e0706ca3a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70372427" /></Metadata><TypeSignature Language="C#" Value="public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTime extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTime&#xA;Implements IComparable, IComparable(Of DateTime), IConvertible, IEquatable(Of DateTime), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTime = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc63e-101">表示时间上的一刻，通常以日期和当天的时间表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-101">Represents an instant in time, typically expressed as a date and time of day.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## <a name="quick-links-to-example-code"></a><span data-ttu-id="cc63e-102">示例代码的快速链接</span><span class="sxs-lookup"><span data-stu-id="cc63e-102">Quick links to example code</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="cc63e-103">本文包括使用类型的`DateTime`几个示例：</span><span class="sxs-lookup"><span data-stu-id="cc63e-103">This article includes several examples that use the `DateTime` type:</span></span>

<span data-ttu-id="cc63e-104">**初始化示例**</span><span class="sxs-lookup"><span data-stu-id="cc63e-104">**Initialization Examples**</span></span>      
- [<span data-ttu-id="cc63e-105">调用构造函数</span><span class="sxs-lookup"><span data-stu-id="cc63e-105">Invoke a constructor</span></span>](#initialization-01)
- [<span data-ttu-id="cc63e-106">调用隐式无参数构造函数</span><span class="sxs-lookup"><span data-stu-id="cc63e-106">Invoke the implicit parameterless constructor</span></span>](#initialization-02)
- [<span data-ttu-id="cc63e-107">从返回值赋值</span><span class="sxs-lookup"><span data-stu-id="cc63e-107">Assignment from return value</span></span>](#initialization-03)
- [<span data-ttu-id="cc63e-108">分析表示日期和时间的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-108">Parsing a string that represents a date and time</span></span>](#initialization-04)
- [<span data-ttu-id="cc63e-109">Visual Basic 语法来初始化日期和时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-109">Visual Basic syntax to initialize a date and time</span></span>](#initialization-05)

<span data-ttu-id="cc63e-110">**将`DateTime`对象格式设置为字符串**</span><span class="sxs-lookup"><span data-stu-id="cc63e-110">**Formatting `DateTime` objects as strings**</span></span>  
- [<span data-ttu-id="cc63e-111">使用默认日期时间格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-111">Use the default date time format</span></span>](#formatting-01)
- [<span data-ttu-id="cc63e-112">使用特定区域性设置日期和时间的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-112">Format a date and time using a specific culture</span></span>](#formatting-02)
- [<span data-ttu-id="cc63e-113">使用标准或自定义格式字符串设置日期时间格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-113">Format a date time using a standard or custom format string</span></span>](#formatting-03)
- [<span data-ttu-id="cc63e-114">指定格式字符串和特定区域性</span><span class="sxs-lookup"><span data-stu-id="cc63e-114">Specify both a format string and a specific culture</span></span>](#formatting-04)
- [<span data-ttu-id="cc63e-115">使用 web 服务的 ISO 8601 标准格式化日期时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-115">Format a date time using the ISO 8601 standard for web services</span></span>](#formatting-05)

<span data-ttu-id="cc63e-116">**将字符串分析`DateTime`为对象**</span><span class="sxs-lookup"><span data-stu-id="cc63e-116">**Parsing strings as `DateTime` objects**</span></span>  
- [<span data-ttu-id="cc63e-117">使用`Parse` 或`TryParse`将字符串转换为日期和时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-117">Use `Parse` or `TryParse` to convert a string to a date and time</span></span>](#parsing-01)
- [<span data-ttu-id="cc63e-118">使用`ParseExact` 或`TryParseExact`转换已知格式的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-118">Use `ParseExact` or `TryParseExact` to convert a string in a known format</span></span>](#parsing-02)
- [<span data-ttu-id="cc63e-119">从 ISO 8601 字符串表示形式转换为日期和时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-119">Convert from the ISO 8601 string representation to a date and time</span></span>](#parsing-03)

<span data-ttu-id="cc63e-120">**`DateTime`分辨率**</span><span class="sxs-lookup"><span data-stu-id="cc63e-120">**`DateTime` resolution**</span></span>  
- [<span data-ttu-id="cc63e-121">浏览日期和时间值的解决方法</span><span class="sxs-lookup"><span data-stu-id="cc63e-121">Explore the resolution of date and time values</span></span>](#resolution-01)
- [<span data-ttu-id="cc63e-122">在容差中比较是否相等</span><span class="sxs-lookup"><span data-stu-id="cc63e-122">Comparing for equality within a tolerance</span></span>](#comparison-01)

<span data-ttu-id="cc63e-123">**区域性和日历**</span><span class="sxs-lookup"><span data-stu-id="cc63e-123">**Culture and calendars**</span></span>  
- [<span data-ttu-id="cc63e-124">使用区域性特定日历显示日期和时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-124">Display date and time values using culture specific calendars</span></span>](#calendars-01)
- [<span data-ttu-id="cc63e-125">根据特定于区域性的日历分析字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-125">Parse strings according to a culture specific calendar</span></span>](#calendars-02)
- [<span data-ttu-id="cc63e-126">初始化特定区域性日历中的日期和时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-126">Initialize a date and time from a specific culture's calendar</span></span>](#calendars-03)
- [<span data-ttu-id="cc63e-127">使用特定区域性的日历访问日期和时间属性</span><span class="sxs-lookup"><span data-stu-id="cc63e-127">Accessing date and time properties using a specific culture's calendar</span></span>](#calendars-04)
- [<span data-ttu-id="cc63e-128">使用特定于区域性的日历检索一年中的第几周</span><span class="sxs-lookup"><span data-stu-id="cc63e-128">Retrieving the week of the year using culture specific calendars</span></span>](#calendars-05)

<span data-ttu-id="cc63e-129">**持久性**</span><span class="sxs-lookup"><span data-stu-id="cc63e-129">**Persistence**</span></span>  
- [<span data-ttu-id="cc63e-130">将日期和时间值保持为本地时区中的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-130">Persisting date and time values as strings in the local time zone</span></span>](#persistence-01)
- [<span data-ttu-id="cc63e-131">将日期和时间值保存为区域性和时间固定格式的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-131">Persisting date and time values as strings in a culture and time invariant format</span></span>](#persistence-02)
- [<span data-ttu-id="cc63e-132">将日期和时间值保持为整数</span><span class="sxs-lookup"><span data-stu-id="cc63e-132">Persisting date and time values as integers</span></span>](#persistence-03)
- [<span data-ttu-id="cc63e-133">使用保存日期和时间值`XmlSerializer`</span><span class="sxs-lookup"><span data-stu-id="cc63e-133">Persisting date and time values using the `XmlSerializer`</span></span>](#persistence-04)
- [<span data-ttu-id="cc63e-134">使用保存日期和时间值`BinaryFormatter`</span><span class="sxs-lookup"><span data-stu-id="cc63e-134">Persisting date and time values using the `BinaryFormatter`</span></span>](#persistence-05)
- [<span data-ttu-id="cc63e-135">保留时区数据的日期和时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-135">Persisting date and time values with time zone data</span></span>](#persistence-06)

## <a name="quick-links-to-remarks-topics"></a><span data-ttu-id="cc63e-136">说明主题的快速链接。</span><span class="sxs-lookup"><span data-stu-id="cc63e-136">Quick links to Remarks topics.</span></span>

<span data-ttu-id="cc63e-137">本部分包含`DateTime`结构的许多常见用途的主题：</span><span class="sxs-lookup"><span data-stu-id="cc63e-137">This section contains topics for many common uses of the `DateTime` struct:</span></span>
  
- [<span data-ttu-id="cc63e-138">`DateTime`初始化对象</span><span class="sxs-lookup"><span data-stu-id="cc63e-138">Initializing a `DateTime` object</span></span>](#initializing-a-datetime-object)
- [<span data-ttu-id="cc63e-139">DateTime 值及其字符串表示形式</span><span class="sxs-lookup"><span data-stu-id="cc63e-139">DateTime values and their string representations</span></span>](#datetime-values-and-their-string-representations)
- [<span data-ttu-id="cc63e-140">分析字符串中的日期时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-140">Parsing DateTime values from strings</span></span>](#parsing-datetime-values-from-strings)
- [<span data-ttu-id="cc63e-141">DateTime 值</span><span class="sxs-lookup"><span data-stu-id="cc63e-141">DateTime values</span></span>](#datetime-values)
- [<span data-ttu-id="cc63e-142">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="cc63e-142">DateTime operations</span></span>](#datetime-operations)
- [<span data-ttu-id="cc63e-143">日期时间解析</span><span class="sxs-lookup"><span data-stu-id="cc63e-143">DateTime resolution</span></span>](#datetime-resolution)
- [<span data-ttu-id="cc63e-144">DateTime 值和日历</span><span class="sxs-lookup"><span data-stu-id="cc63e-144">DateTime values and calendars</span></span>](#datetime-values-and-calendars)
- [<span data-ttu-id="cc63e-145">保留日期时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-145">Persisting DateTime values</span></span>](#persisting-datetime-values)
- [<span data-ttu-id="cc63e-146">DateTime 与TimeSpan</span><span class="sxs-lookup"><span data-stu-id="cc63e-146">DateTime vs. TimeSpan</span></span>](#datetime-vs-timespan)
- [<span data-ttu-id="cc63e-147">在容错范围内比较是否相等</span><span class="sxs-lookup"><span data-stu-id="cc63e-147">Comparing for equality within tolerance</span></span>](#comparing-for-equality-within-tolerance)
- [<span data-ttu-id="cc63e-148">COM 互操作注意事项</span><span class="sxs-lookup"><span data-stu-id="cc63e-148">COM interop considerations</span></span>](#com-interop-considerations)
   
<span data-ttu-id="cc63e-149"><xref:System.DateTime>值类型表示日期和时间，其值范围为00:00:00 （午夜），0001年1月1日至年1月1日下午11:59:59，年12月31日，9999公元</span><span class="sxs-lookup"><span data-stu-id="cc63e-149">The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="cc63e-150">公元公历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-150">(C.E.) in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="cc63e-151">时间值以100毫微秒为单位进行度量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-151">Time values are measured in 100-nanosecond units called ticks.</span></span> <span data-ttu-id="cc63e-152">特定日期是自公元12:00 年1月1日午夜开始的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-152">A particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="cc63e-153">公元<xref:System.Globalization.GregorianCalendar>在日历中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-153">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="cc63e-154">数字不包括闰秒将添加的刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-154">The number excludes ticks that would be added by leap seconds.</span></span> <span data-ttu-id="cc63e-155">例如，31241376000000000L 的滴答值表示日期星期五，0100 12:00:00 午夜。</span><span class="sxs-lookup"><span data-stu-id="cc63e-155">For example, a ticks value of 31241376000000000L represents the date Friday, January 01, 0100 12:00:00 midnight.</span></span> <span data-ttu-id="cc63e-156"><xref:System.DateTime>值始终在显式或默认日历的上下文中表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-156">A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-157">如果使用的计时周期值要转换为其他时间间隔（如分钟或秒），则应使用<xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>或<xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType>常量来执行转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-157">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="cc63e-158">例如，若要将指定的刻度数表示的秒数添加到<xref:System.DateTime.Second%2A> <xref:System.DateTime>值的分量中，则可以使用表达式`dateValue.Second + nTicks/Timespan.TicksPerSecond`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-158">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  

<span data-ttu-id="cc63e-159">可以在[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)或[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub 上的文档存储库中查看本文的整个示例集源。</span><span class="sxs-lookup"><span data-stu-id="cc63e-159">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>

> [!NOTE]
>  <span data-ttu-id="cc63e-160">使用特定时区的<xref:System.DateTime>日期和时间值的结构的一种替代方法<xref:System.DateTimeOffset>是结构。</span><span class="sxs-lookup"><span data-stu-id="cc63e-160">An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure.</span></span> <span data-ttu-id="cc63e-161">结构在私有字段中<xref:System.DateTime>存储日期和时间信息，并在私有<xref:System.Int16>字段中存储日期和时间与 UTC 不同的分钟数。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="cc63e-161">The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field.</span></span> <span data-ttu-id="cc63e-162">这样一来，一个<xref:System.DateTimeOffset>值就可以反映特定时区中的时间， <xref:System.DateTime>而值只能明确反映 UTC 和本地时区的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-162">This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time.</span></span> <span data-ttu-id="cc63e-163">有关处理日期和时间值时何时<xref:System.DateTime>使用结构<xref:System.DateTimeOffset>或结构的讨论，请参阅在[DateTime、DateTimeOffset、TimeSpan 和 TimeZoneInfo 之间进行选择](~/docs/standard/datetime/choosing-between-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-163">For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span>  
  
### <a name="initializing-a-datetime-object"></a><span data-ttu-id="cc63e-164">初始化 DateTime 对象</span><span class="sxs-lookup"><span data-stu-id="cc63e-164">Initializing a DateTime object</span></span>  

<span data-ttu-id="cc63e-165">可以通过多种不同的方式为新`DateTime`值指定初始值：</span><span class="sxs-lookup"><span data-stu-id="cc63e-165">You can assign an initial value to a new `DateTime` value in many different ways:</span></span>

- <span data-ttu-id="cc63e-166">调用构造函数（在其中指定值的参数），或使用隐式无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-166">Calling a constructor, either one where you specify arguments for values, or use the implicit parameterless constructor.</span></span>
- <span data-ttu-id="cc63e-167">将分配`DateTime`给属性或方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-167">Assigning a `DateTime` to the return value of a property or method.</span></span>
- <span data-ttu-id="cc63e-168">`DateTime`分析值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-168">Parsing a `DateTime` value from its string representation.</span></span>
- <span data-ttu-id="cc63e-169">使用 Visual Basic 特定语言功能来实例化`DateTime`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-169">Using Visual Basic-specific language features to instantiate a `DateTime`.</span></span> 

<span data-ttu-id="cc63e-170">下面的代码片段演示了每种情况的示例：</span><span class="sxs-lookup"><span data-stu-id="cc63e-170">The following code snippets show examples of each:</span></span>

#### <a name="invoke-constructors"></a><span data-ttu-id="cc63e-171">调用构造函数</span><span class="sxs-lookup"><span data-stu-id="cc63e-171">Invoke Constructors</span></span>

<span data-ttu-id="cc63e-172">调用<xref:System.DateTime>构造函数的任何重载，这些重载指定日期和时间值的元素（例如年、月、日或计时周期数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-172">You call any of the overloads of the <xref:System.DateTime> constructor that specify elements of the date and time value (such as the year, month, and day, or the number of ticks).</span></span> <span data-ttu-id="cc63e-173">下面的代码使用<xref:System.DateTime>构造函数指定年、月、日、小时、分钟和秒来创建特定日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-173">The following code creates a specific date using the <xref:System.DateTime> constructor specifying the year, month, day, hour, minute, and second.</span></span>  

<a name="initialization-01"></a> <span data-ttu-id="cc63e-174">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-174">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#1)]

<span data-ttu-id="cc63e-175">如果希望将`DateTime` `DateTime`初始化为其默认值，请调用结构的隐式无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-175">You invoke the `DateTime` structure's implicit parameterless constructor when you want a `DateTime` initialized to its default value.</span></span> <span data-ttu-id="cc63e-176">（有关值类型的隐式无参数构造函数的详细信息，请参阅[值类型](~/docs/csharp/language-reference/keywords/value-types.md)。）有些编译器还支持声明<xref:System.DateTime>值，而无需向其显式赋值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-176">(For details on the implicit parameterless constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) Some compilers also support declaring a <xref:System.DateTime> value without explicitly assigning a value to it.</span></span> <span data-ttu-id="cc63e-177">在不使用显式初始化的情况下创建值还会生成默认值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-177">Creating a value without an explicit initialization also results in the default value.</span></span> <span data-ttu-id="cc63e-178">下面的示例演示了<xref:System.DateTime>和 Visual Basic 中C#的隐式无参数构造函数， <xref:System.DateTime>以及在 Visual Basic 中没有赋值的声明。</span><span class="sxs-lookup"><span data-stu-id="cc63e-178">The following example illustrates the <xref:System.DateTime> implicit parameterless constructor in C# and Visual Basic, as well as a <xref:System.DateTime> declaration without assignment in Visual Basic.</span></span>  

<a name="initialization-02"></a> <span data-ttu-id="cc63e-179">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-179">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span></span>  
[!code-csharp-interactive[System.DateTime.Instantiation#5](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#5)]
    
#### <a name="assigning-a-computed-value"></a><span data-ttu-id="cc63e-180">分配计算值</span><span class="sxs-lookup"><span data-stu-id="cc63e-180">Assigning a computed value</span></span>

<span data-ttu-id="cc63e-181">可以为<xref:System.DateTime>对象指定由属性或方法返回的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-181">You can assign the <xref:System.DateTime> object a date and time value returned by a property or method.</span></span> <span data-ttu-id="cc63e-182">下面的示例将当前日期和时间、当前的协调世界时（UTC）日期和时间以及当前日期分配给三个新<xref:System.DateTime>变量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-182">The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.</span></span>  

<a name="initialization-03"></a> <span data-ttu-id="cc63e-183">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-183">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#3)]

#### <a name="parsing-a-string-that-represents-a-datetime"></a><span data-ttu-id="cc63e-184">分析表示日期时间的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-184">Parsing a string that represents a DateTime</span></span>

<span data-ttu-id="cc63e-185"><xref:System.DateTime.Parse%2A> 、<xref:System.DateTime.TryParse%2A>、和方法<xref:System.DateTime.TryParseExact%2A>均将字符串转换为其等效的日期和时间值。 <xref:System.DateTime.ParseExact%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-185">The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value.</span></span> <span data-ttu-id="cc63e-186">下面的示例使用<xref:System.DateTime.Parse%2A>和<xref:System.DateTime.ParseExact%2A>方法来分析字符串<xref:System.DateTime>并将其转换为值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-186">The following examples use the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods to parse a string and convert it to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-187">第二种格式使用[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)标准支持的窗体，表示字符串格式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-187">The second format uses a form supported by the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard for a representing date and time in string format.</span></span> <span data-ttu-id="cc63e-188">此标准表示形式通常用于传输 web 服务中的日期信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-188">This standard representation is often used to transfer date information in web services.</span></span>

<a name="initialization-04"></a> <span data-ttu-id="cc63e-189">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-189">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#4)]

<span data-ttu-id="cc63e-190">和方法指示字符串是否为有效的<xref:System.DateTime>值表示形式，如果为，则执行转换。 <xref:System.DateTime.TryParseExact%2A> <xref:System.DateTime.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-190">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a string is a valid representation of a <xref:System.DateTime> value and, if it is, performs the conversion.</span></span>  

#### <a name="language-specific-syntax-for-visual-basic"></a><span data-ttu-id="cc63e-191">Visual Basic 语言特定的语法</span><span class="sxs-lookup"><span data-stu-id="cc63e-191">Language-specific syntax for Visual Basic</span></span>

<span data-ttu-id="cc63e-192">下面的 Visual Basic 语句初始化一个新<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-192">The following Visual Basic statement initializes a new <xref:System.DateTime> value.</span></span>  

<a name="initialization-05"></a> <span data-ttu-id="cc63e-193">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-193">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span></span>  

### <a name="datetime-values-and-their-string-representations"></a><span data-ttu-id="cc63e-194">DateTime 值及其字符串表示形式</span><span class="sxs-lookup"><span data-stu-id="cc63e-194">DateTime values and their string representations</span></span>  

<span data-ttu-id="cc63e-195">在内部， <xref:System.DateTime>所有值都表示为自0001年1月1日午夜12月1日午夜12:00:00 以来经过的计时周期数（100纳秒间隔数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-195">Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</span></span> <span data-ttu-id="cc63e-196">实际<xref:System.DateTime>值与显示时值的显示方式无关。</span><span class="sxs-lookup"><span data-stu-id="cc63e-196">The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed.</span></span> <span data-ttu-id="cc63e-197"><xref:System.DateTime>值的外观是格式设置操作的结果，它将值转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-197">The appearance of a <xref:System.DateTime> value is the result of a formatting operation that converts a value to its string representation.</span></span>  
  
<span data-ttu-id="cc63e-198">日期和时间值的外观依赖于区域性、国际标准、应用程序要求和个人喜好。</span><span class="sxs-lookup"><span data-stu-id="cc63e-198">The appearance of date and time values is dependent on culture, international standards, application requirements, and personal preference.</span></span> <span data-ttu-id="cc63e-199">结构通过的重载为<xref:System.DateTime.ToString%2A>日期和时间值设置格式提供灵活性。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-199">The <xref:System.DateTime> structure offers flexibility in formatting date and time values through overloads of  <xref:System.DateTime.ToString%2A>.</span></span> <span data-ttu-id="cc63e-200">默认<xref:System.DateTime.ToString?displayProperty=nameWithType>方法使用当前区域性的短日期和长时间模式返回日期和时间值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-200">The default <xref:System.DateTime.ToString?displayProperty=nameWithType> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</span></span> <span data-ttu-id="cc63e-201">下面的示例使用默认<xref:System.DateTime.ToString?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-201">The following example uses the default <xref:System.DateTime.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-202">它使用当前区域性的短日期和长时间模式显示日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-202">It displays the date and time using the short date and long time pattern for the current culture.</span></span> <span data-ttu-id="cc63e-203">En-us 区域性是在其上运行示例的计算机上的当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-203">The en-US culture is the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-01"></a> <span data-ttu-id="cc63e-204">[!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-204">[!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span></span>
[!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#1)]  

<span data-ttu-id="cc63e-205">您可能需要设置特定区域性中的日期格式，以支持服务器可能与客户端不同的区域性的 web 方案。</span><span class="sxs-lookup"><span data-stu-id="cc63e-205">You may need to format dates in a specific culture to support web scenarios where the server may be in a different culture from the client.</span></span> <span data-ttu-id="cc63e-206">使用<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法指定区域性，以在特定区域性中创建短日期和长时间表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-206">You specify the culture using the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the short date and long time representation in a specific culture.</span></span> <span data-ttu-id="cc63e-207">下面的示例使用<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法来显示使用 fr-fr 区域性的短日期和长时间模式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-207">The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to display the date and time using the short date and long time pattern for the fr-FR culture.</span></span>  
  
<a name="formatting-02"></a> <span data-ttu-id="cc63e-208">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-208">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span></span>
[!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#2)]  

 <span data-ttu-id="cc63e-209">其他应用程序可能需要日期的不同字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-209">Other applications may require different string representations of a date.</span></span> <span data-ttu-id="cc63e-210"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法使用当前区域性的格式设置约定返回由标准或自定义格式说明符定义的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-210">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method returns the string representation defined by a standard or custom format specifier using the formatting conventions of the current culture.</span></span> <span data-ttu-id="cc63e-211">下面的示例使用<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法来显示 en-us 区域性（运行该示例的计算机上的当前区域性）的完整日期和时间模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-211">The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-03"></a> <span data-ttu-id="cc63e-212">[!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-212">[!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span></span>
[!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#3)]  

 <span data-ttu-id="cc63e-213">最后，可以使用<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法指定区域性和格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-213">Finally, you can specify both the culture and the format using the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-214">下面的示例使用<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法显示 fr-fr 区域性的完整日期和时间模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-214">The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display the full date and time pattern for the fr-FR culture.</span></span>  

<a name="formatting-04"></a> <span data-ttu-id="cc63e-215">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-215">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span></span>
[!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#4)]  

<span data-ttu-id="cc63e-216"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>重载还可与自定义格式字符串一起用于指定其他格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-216">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> overload can also be used with a custom format string to specify other formats.</span></span> <span data-ttu-id="cc63e-217">下面的示例演示如何使用通常用于 web 服务的[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)标准格式来设置字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-217">The following example shows how to format a string using the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format often used for web services.</span></span> <span data-ttu-id="cc63e-218">Iso 8601 格式没有对应的标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-218">The Iso 8601 format does not have a corresponding standard format string.</span></span>

<a name="formatting-05"></a> <span data-ttu-id="cc63e-219">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-219">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span></span>
[!code-vb[System.DateTime.Formatting#5](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#5)]  

<span data-ttu-id="cc63e-220">有关设置值格式<xref:System.DateTime>的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-220">For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  

### <a name="parsing-datetime-values-from-strings"></a><span data-ttu-id="cc63e-221">分析字符串中的日期时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-221">Parsing DateTime values from strings</span></span>

<span data-ttu-id="cc63e-222">分析将日期和时间的字符串表示形式转换为<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-222">Parsing converts the string representation of a date and time to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-223">通常，在应用程序中，日期和时间字符串具有两种不同的用法：</span><span class="sxs-lookup"><span data-stu-id="cc63e-223">Typically, date and time strings have two different usages in applications:</span></span>  
  
-   <span data-ttu-id="cc63e-224">日期和时间采用各种形式，并反映了当前区域性或特定区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-224">A date and time takes a variety of forms and reflects the conventions of either the current culture or a specific culture.</span></span> <span data-ttu-id="cc63e-225">例如，应用程序允许其当前区域性为 en-us 的用户将日期值输入为 "12/15/2013" 或 "12 月15日，2013"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-225">For example, an application allows a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013".</span></span> <span data-ttu-id="cc63e-226">它允许当前区域性为 en 的用户将日期值输入为 "15/12/2013" 或 "15 12 月12日 2013"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-226">It allows a user whose current culture is en-gb to input a date value as "15/12/2013" or "15 December 2013."</span></span>  
  
-   <span data-ttu-id="cc63e-227">日期和时间以预定义的格式表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-227">A date and time is represented in a predefined format.</span></span> <span data-ttu-id="cc63e-228">例如，应用程序将日期序列化为 "20130103"，而不考虑应用运行的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-228">For example, an application serializes a date as "20130103" independently of the culture on which the app is running.</span></span> <span data-ttu-id="cc63e-229">应用程序可能需要以当前区域性的短日期格式输入日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-229">An application may require dates be input in the current culture's short date format.</span></span>
  
<span data-ttu-id="cc63e-230">使用<xref:System.DateTime.Parse%2A> <xref:System.DateTime>或<xref:System.DateTime.TryParse%2A>方法可以将字符串从区域性使用的一个通用日期和时间格式转换为一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-230">You use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string from one of the common date and time formats used by a culture to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-231">下面的示例演示如何使用<xref:System.DateTime.TryParse%2A>将不同区域性特定格式的日期字符串转换<xref:System.DateTime>为值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-231">The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in different culture-specific formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-232">它将当前区域性更改为英语（英国），并调用<xref:System.DateTime.GetDateTimeFormats>方法来生成日期和时间字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="cc63e-232">It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings.</span></span> <span data-ttu-id="cc63e-233">然后，它将数组中的每个元素<xref:System.DateTime.TryParse%2A>传递给方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-233">It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method.</span></span> <span data-ttu-id="cc63e-234">该示例的输出显示，分析方法能够成功转换每个特定于区域性的日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-234">The output from the example shows the parsing method was able to successfully convert each of the culture-specific date and time strings.</span></span>  
  
<a name="parsing-01"></a> <span data-ttu-id="cc63e-235">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-235">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span></span>
[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#1)]  

<span data-ttu-id="cc63e-236">使用<xref:System.DateTime.ParseExact%2A> <xref:System.DateTime>和<xref:System.DateTime.TryParseExact%2A>方法可将必须与特定格式或格式匹配的字符串转换为值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-236">You use the <xref:System.DateTime.ParseExact%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a string that must match a particular format or formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-237">将一个或多个日期和时间格式字符串指定为分析方法的参数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-237">You specify one or more date and time format strings as a parameter to the parsing method.</span></span> <span data-ttu-id="cc63e-238">下面的<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>示例使用方法将必须以 "yyyyMMdd" 格式或 "HHmmss" 格式的字符串转换为<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-238">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <xref:System.DateTime> values.</span></span>  
  
<a name="parsing-02"></a> <span data-ttu-id="cc63e-239">[!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-239">[!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span></span>
[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#2)]  

<span data-ttu-id="cc63e-240">的<xref:System.DateTime.ParseExact%2A>一个常见用途是转换 web 服务的字符串表示形式，通常采用[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)标准格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-240">One common use for <xref:System.DateTime.ParseExact%2A> is to convert a string representation from a web service, usually in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format.</span></span> <span data-ttu-id="cc63e-241">下面的代码显示要使用的正确格式字符串：</span><span class="sxs-lookup"><span data-stu-id="cc63e-241">The following code shows the correct format string to use:</span></span>

<a name="parsing-03"></a> <span data-ttu-id="cc63e-242">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-242">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span></span>
[!code-vb[System.DateTime.Parsing#3](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#3)]  

<span data-ttu-id="cc63e-243">如果无法分析字符串，则<xref:System.DateTime.Parse%2A>和<xref:System.DateTime.ParseExact%2A>方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-243">If a string cannot be parsed, the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception.</span></span> <span data-ttu-id="cc63e-244">和方法返回一个<xref:System.Boolean>值，该值指示转换是成功还是失败。 <xref:System.DateTime.TryParseExact%2A> <xref:System.DateTime.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-244">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span> <span data-ttu-id="cc63e-245">在性能非常重要<xref:System.DateTime.TryParse%2A>的<xref:System.DateTime.TryParseExact%2A>情况下，应使用或方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-245">You should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important.</span></span> <span data-ttu-id="cc63e-246">日期和时间字符串的分析操作往往会产生较高的故障率，并且异常处理开销较高。</span><span class="sxs-lookup"><span data-stu-id="cc63e-246">The parsing operation for date and time strings tends to have a high failure rate, and exception handling is expensive.</span></span> <span data-ttu-id="cc63e-247">如果用户输入字符串或来自未知源，请使用这些方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-247">Use these methods if strings are input by users or coming from an unknown source.</span></span> 
  
<span data-ttu-id="cc63e-248">有关分析日期和时间值的详细信息，请参阅[分析日期和时间字符串](~/docs/standard/base-types/parsing-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-248">For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).</span></span>  

### <a name="datetime-values"></a><span data-ttu-id="cc63e-249">DateTime 值</span><span class="sxs-lookup"><span data-stu-id="cc63e-249">DateTime values</span></span>

<span data-ttu-id="cc63e-250">使用协调世界时（UTC <xref:System.DateTime> ）标准来表示类型中时间值的说明。</span><span class="sxs-lookup"><span data-stu-id="cc63e-250">Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard.</span></span> <span data-ttu-id="cc63e-251">协调世界时是格林尼治标准时间（GMT）的国际识别的名称。</span><span class="sxs-lookup"><span data-stu-id="cc63e-251">Coordinated Universal Time is the internationally recognized name for Greenwich Mean Time (GMT).</span></span> <span data-ttu-id="cc63e-252">协调世界时是指以零度经度（UTC 原点）度量的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-252">Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</span></span> <span data-ttu-id="cc63e-253">夏令时不适用于 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-253">Daylight saving time is not applicable to UTC.</span></span>  
  
<span data-ttu-id="cc63e-254">本地时间相对于特定时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-254">Local time is relative to a particular time zone.</span></span> <span data-ttu-id="cc63e-255">时区与时区偏移量关联。</span><span class="sxs-lookup"><span data-stu-id="cc63e-255">A time zone is associated with a time zone offset.</span></span> <span data-ttu-id="cc63e-256">时区偏移量是从 UTC 原点开始，以小时为单位的时间范围的位移。</span><span class="sxs-lookup"><span data-stu-id="cc63e-256">A time zone offset is the displacement of the time zone measured in hours from the UTC origin point.</span></span> <span data-ttu-id="cc63e-257">此外，还可以根据夏令时（添加或减去时间间隔调整）来影响本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-257">In addition, local time is optionally affected by daylight saving time, which adds or subtracts a time interval adjustment.</span></span> <span data-ttu-id="cc63e-258">本地时间是通过将时区偏移量添加到 UTC 并调整夏令时（如有必要）来计算的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-258">Local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</span></span> <span data-ttu-id="cc63e-259">UTC 原点的时区偏移量为零。</span><span class="sxs-lookup"><span data-stu-id="cc63e-259">The time zone offset at the UTC origin point is zero.</span></span>  
  
<span data-ttu-id="cc63e-260">UTC 时间适用于计算、比较以及在文件中存储日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-260">UTC time is suitable for calculations, comparisons, and storing dates and time in files.</span></span> <span data-ttu-id="cc63e-261">本地时间适用于桌面应用程序的用户界面。</span><span class="sxs-lookup"><span data-stu-id="cc63e-261">Local time is appropriate for display in user interfaces of desktop applications.</span></span> <span data-ttu-id="cc63e-262">时区感知应用程序（例如多个 Web 应用程序）还需要使用一些其他时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-262">Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</span></span>  
  
<span data-ttu-id="cc63e-263">如果<xref:System.DateTime>对象<xref:System.DateTime.Kind%2A>的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>，则指示表示的时间是本地时间、UTC 时间还是其他某个时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-263">If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</span></span>  

### <a name="datetime-resolution"></a><span data-ttu-id="cc63e-264">日期时间解析</span><span class="sxs-lookup"><span data-stu-id="cc63e-264">DateTime resolution</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cc63e-265">作为对<xref:System.DateTime>值执行日期和时间算法以测量运行时间的替代方法，可以<xref:System.Diagnostics.Stopwatch>使用类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-265">As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
<span data-ttu-id="cc63e-266"><xref:System.DateTime.Ticks%2A>属性表示日期和时间值，单位为 1 10-秒秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-266">The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second.</span></span> <span data-ttu-id="cc63e-267"><xref:System.DateTime.Millisecond%2A>属性返回日期和时间值的秒数的分之几秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-267">The <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value.</span></span> <span data-ttu-id="cc63e-268">使用对属性的<xref:System.DateTime.Now%2A?displayProperty=nameWithType>重复调用来度量经过的时间取决于系统时钟。</span><span class="sxs-lookup"><span data-stu-id="cc63e-268">Using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to measure elapsed time is dependent on the system clock.</span></span> <span data-ttu-id="cc63e-269">Windows 7 和 Windows 8 系统上的系统时钟的分辨率约为15毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-269">The system clock on  Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</span></span> <span data-ttu-id="cc63e-270">此分辨率会影响小于100毫秒的小时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-270">This resolution affects small time intervals less than 100 milliseconds.</span></span> 
  
<span data-ttu-id="cc63e-271">下面的示例演示了当前日期和时间值对系统时钟的分辨率的依赖关系。</span><span class="sxs-lookup"><span data-stu-id="cc63e-271">The following example illustrates the dependence of current date and time values on the resolution of the system clock.</span></span> <span data-ttu-id="cc63e-272">在此示例中，外部循环重复了20次，而内层循环用于延迟外部循环。</span><span class="sxs-lookup"><span data-stu-id="cc63e-272">In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</span></span> <span data-ttu-id="cc63e-273">如果外部循环计数器的值为10，则调用<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法会引入5毫秒的延迟。</span><span class="sxs-lookup"><span data-stu-id="cc63e-273">If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method introduces a five-millisecond delay.</span></span> <span data-ttu-id="cc63e-274">下面的示例演示了在对的`DateTime.Now.Milliseconds` <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>调用后，属性更改返回的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-274">The following example shows the number of milliseconds returned by the `DateTime.Now.Milliseconds` property changes only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>.</span></span>  

<a name="resolution-01"></a> <span data-ttu-id="cc63e-275">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-275">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span></span>
[!code-vb[System.DateTime.Resolution#1](~/samples/snippets/visualbasic/System.DateTime/Resolution.vb#1)]  

### <a name="datetime-operations"></a><span data-ttu-id="cc63e-276">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="cc63e-276">DateTime operations</span></span>  

<span data-ttu-id="cc63e-277">使用<xref:System.DateTime>结构（ <xref:System.DateTime.Add%2A>如或<xref:System.DateTime.Subtract%2A>）的计算不会修改结构的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-277">A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure.</span></span> <span data-ttu-id="cc63e-278">相反，计算返回一个新<xref:System.DateTime>的结构，其值为计算结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-278">Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.</span></span>  
  
<span data-ttu-id="cc63e-279">时区之间的转换操作（例如，在 UTC 与本地时间之间，或在一个时区之间，或在一个时区之间进行转换）会考虑到夏令时，但算术运算和比较运算不会。</span><span class="sxs-lookup"><span data-stu-id="cc63e-279">Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</span></span>  
  
<span data-ttu-id="cc63e-280"><xref:System.DateTime>结构本身为从一个时区转换到另一个时区提供有限的支持。</span><span class="sxs-lookup"><span data-stu-id="cc63e-280">The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another.</span></span> <span data-ttu-id="cc63e-281">您可以使用<xref:System.DateTime.ToLocalTime%2A>方法将 UTC 转换为本地时间，也可以<xref:System.DateTime.ToUniversalTime%2A>使用方法将本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-281">You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC.</span></span> <span data-ttu-id="cc63e-282">但是， <xref:System.TimeZoneInfo>类中提供了一组完整的时区转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-282">However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="cc63e-283">您可以使用这些方法将世界上任一时区中的时间转换为任何其他时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-283">You convert the time in any one of the world's time zones to the time in any other time zone using these methods.</span></span>  
  
<span data-ttu-id="cc63e-284">仅当对象表示<xref:System.DateTime>相同时区中的时间时，对象的计算和比较才有意义。</span><span class="sxs-lookup"><span data-stu-id="cc63e-284">Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-285">可以使用<xref:System.TimeZoneInfo>对象来<xref:System.DateTime>表示值的时区，尽管这两个值是松散耦合的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-285">You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled.</span></span> <span data-ttu-id="cc63e-286"><xref:System.DateTime>对象没有返回对象的属性，该对象表示日期和时间值的时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-286">A <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone.</span></span> <span data-ttu-id="cc63e-287"><xref:System.DateTime.Kind%2A>属性指示`DateTime`表示 UTC、本地时间还是未指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-287">The <xref:System.DateTime.Kind%2A> property indicates if a `DateTime` represents UTC, local time, or is unspecified.</span></span> <span data-ttu-id="cc63e-288">在时区感知应用程序中，必须依赖于某些外部机制来确定<xref:System.DateTime>创建对象的时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-288">In a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created.</span></span> <span data-ttu-id="cc63e-289">可以使用一个封装<xref:System.DateTime>值<xref:System.TimeZoneInfo>和表示<xref:System.DateTime>值的时区的对象的结构。</span><span class="sxs-lookup"><span data-stu-id="cc63e-289">You could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone.</span></span> <span data-ttu-id="cc63e-290">有关在计算中使用 UTC 和<xref:System.DateTime>值的比较的详细信息，请参阅使用[日期和时间执行算术运算](~/docs/standard/datetime/performing-arithmetic-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-290">For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).</span></span>  
  
<span data-ttu-id="cc63e-291">每<xref:System.DateTime>个成员都隐式使用公历来执行其操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-291">Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation.</span></span> <span data-ttu-id="cc63e-292">异常是隐式指定日历的方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-292">Exceptions are methods that implicitly specify a calendar.</span></span> <span data-ttu-id="cc63e-293">其中包括用于指定日历的构造函数，以及使用派生自<xref:System.IFormatProvider>的参数的方法， <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>例如。</span><span class="sxs-lookup"><span data-stu-id="cc63e-293">These include constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="cc63e-294"><xref:System.DateTime>类型成员的操作将考虑闰年和一个月中的天数等详细信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-294">Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.</span></span>  

## <a name="datetime-values-and-calendars"></a><span data-ttu-id="cc63e-295">DateTime 值和日历</span><span class="sxs-lookup"><span data-stu-id="cc63e-295">DateTime values and calendars</span></span>  

<span data-ttu-id="cc63e-296">.NET Framework 类库包含多个 calendar 类，它们都派生自<xref:System.Globalization.Calendar>类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-296">The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.</span></span>  <span data-ttu-id="cc63e-297">它们是：</span><span class="sxs-lookup"><span data-stu-id="cc63e-297">They are:</span></span>  
  
-   <span data-ttu-id="cc63e-298"><xref:System.Globalization.ChineseLunisolarCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-298">The <xref:System.Globalization.ChineseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-299"><xref:System.Globalization.EastAsianLunisolarCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-299">The <xref:System.Globalization.EastAsianLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-300"><xref:System.Globalization.GregorianCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-300">The <xref:System.Globalization.GregorianCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-301"><xref:System.Globalization.HebrewCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-301">The <xref:System.Globalization.HebrewCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-302"><xref:System.Globalization.HijriCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-302">The <xref:System.Globalization.HijriCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-303"><xref:System.Globalization.JapaneseCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-303">The <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-304"><xref:System.Globalization.JapaneseLunisolarCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-304">The <xref:System.Globalization.JapaneseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-305"><xref:System.Globalization.JulianCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-305">The <xref:System.Globalization.JulianCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-306"><xref:System.Globalization.KoreanCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-306">The <xref:System.Globalization.KoreanCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-307"><xref:System.Globalization.KoreanLunisolarCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-307">The <xref:System.Globalization.KoreanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-308"><xref:System.Globalization.PersianCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-308">The <xref:System.Globalization.PersianCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-309"><xref:System.Globalization.TaiwanCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-309">The <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-310"><xref:System.Globalization.TaiwanLunisolarCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-310">The <xref:System.Globalization.TaiwanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-311"><xref:System.Globalization.ThaiBuddhistCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-311">The <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
-   <span data-ttu-id="cc63e-312"><xref:System.Globalization.UmAlQuraCalendar> 类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-312">The <xref:System.Globalization.UmAlQuraCalendar> class.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

<span data-ttu-id="cc63e-313">每个区域性都使用由其只读<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>属性定义的默认日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-313">Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-314">每个区域性都可以支持由其只读<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>属性定义的一个或多个日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-314">Each culture may support one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-315">特定<xref:System.Globalization.CultureInfo>对象当前使用的日历由其<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>属性定义。</span><span class="sxs-lookup"><span data-stu-id="cc63e-315">The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-316">它必须是在<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>数组中找到的一个日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-316">It must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> array.</span></span>  
  
<span data-ttu-id="cc63e-317">区域性的当前日历用于该区域性的所有格式设置操作中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-317">A culture's current calendar is used in all formatting operations for that culture.</span></span> <span data-ttu-id="cc63e-318">例如，泰国佛历区域性的默认日历为泰国历年代日历，由<xref:System.Globalization.ThaiBuddhistCalendar>类表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-318">For example, the default calendar of the Thai Buddhist culture is the Thai Buddhist Era calendar, which is represented by the <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  <span data-ttu-id="cc63e-319">如果在日期和时间格式设置操作中使用表示泰国历区域性的对象，则默认情况下将使用泰国历时代日历。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="cc63e-319">When a <xref:System.Globalization.CultureInfo> object that represents the Thai Buddhist culture is used in a date and time formatting operation, the Thai Buddhist Era calendar is used by default.</span></span> <span data-ttu-id="cc63e-320">公历仅在区域性的<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>属性更改时使用，如下面的示例所示：</span><span class="sxs-lookup"><span data-stu-id="cc63e-320">The Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property is changed, as the following example shows:</span></span>  

<a name="calendars-01"></a> <span data-ttu-id="cc63e-321">[!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-321">[!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span></span>
[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#1)]  

<span data-ttu-id="cc63e-322">区域性的当前日历还用于该区域性的所有分析操作，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-322">A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</span></span>  
  
<a name="calendars-02"></a> <span data-ttu-id="cc63e-323">[!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-323">[!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span></span>
[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#2)]  

<span data-ttu-id="cc63e-324">可以通过调用<xref:System.DateTime>包含`calendar`参数的[DateTime 构造函数](xref:System.DateTime.%23ctor%2A)并向其传递一个<xref:System.Globalization.CultureInfo.Calendar%2A>对象，使用特定日历的日期和时间元素（年、月和日的数目）来实例化某个值。表示该日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-324">You instantiate a <xref:System.DateTime> value using the date and time elements (number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](xref:System.DateTime.%23ctor%2A) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar.</span></span> <span data-ttu-id="cc63e-325">下面的示例使用<xref:System.Globalization.ThaiBuddhistCalendar>日历中的日期和时间元素。</span><span class="sxs-lookup"><span data-stu-id="cc63e-325">The following example uses the date and time elements from the <xref:System.Globalization.ThaiBuddhistCalendar> calendar.</span></span>  
  
<a name="calendars-03"></a> <span data-ttu-id="cc63e-326">[!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-326">[!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span></span>
[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#3)]  

<span data-ttu-id="cc63e-327"><xref:System.DateTime>不包含`calendar`参数的构造函数假设日期和时间元素以公历表示为单位。</span><span class="sxs-lookup"><span data-stu-id="cc63e-327"><xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="cc63e-328">所有其他<xref:System.DateTime>属性和方法都使用公历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-328">All other <xref:System.DateTime> properties and methods use the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-329">例如， <xref:System.DateTime.Year%2A?displayProperty=nameWithType>属性返回公历中的年份， <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType>方法假定`year`参数是公历中的年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-329">For example, the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> method assumes that the `year` parameter is a year in the Gregorian calendar.</span></span>  <span data-ttu-id="cc63e-330">使用<xref:System.DateTime>公历的每个成员都具有使用特定日历的<xref:System.Globalization.CultureInfo.Calendar%2A>类的相应成员。</span><span class="sxs-lookup"><span data-stu-id="cc63e-330">Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that uses a specific calendar.</span></span> <span data-ttu-id="cc63e-331">例如， <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType>方法返回特定日历中的年份， <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType>方法将`year`参数解释为特定日历中的年份号。</span><span class="sxs-lookup"><span data-stu-id="cc63e-331">For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> method interprets the `year` parameter as a year number in a specific calendar.</span></span> <span data-ttu-id="cc63e-332">下面的示例同时<xref:System.DateTime>使用和<xref:System.Globalization.ThaiBuddhistCalendar>类的相应成员。</span><span class="sxs-lookup"><span data-stu-id="cc63e-332">The following example uses both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
  
<a name="calendars-04"></a> <span data-ttu-id="cc63e-333">[!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-333">[!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span></span>
[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#4)]  

<span data-ttu-id="cc63e-334">结构包含一个<xref:System.DateTime.DayOfWeek%2A>属性，该属性返回公历中的第几天。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-334">The <xref:System.DateTime> structure includes a <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-335">它不包含允许检索年份周数的成员。</span><span class="sxs-lookup"><span data-stu-id="cc63e-335">It does not include a member that allows you to retrieve the week number of the year.</span></span> <span data-ttu-id="cc63e-336">若要检索一年中的某一周，请调用<xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType>单个日历的方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-336">To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-337">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-337">The following example provides an illustration.</span></span>  
  
<a name="calendars-05"></a> <span data-ttu-id="cc63e-338">[!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-338">[!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span></span>
[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#5)]  

<span data-ttu-id="cc63e-339">有关日期和日历的详细信息，请参阅使用[日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-339">For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
### <a name="persisting-datetime-values"></a><span data-ttu-id="cc63e-340">保留日期时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-340">Persisting DateTime values</span></span>  

<span data-ttu-id="cc63e-341">可以通过以下<xref:System.DateTime>四种方式持久保存值：</span><span class="sxs-lookup"><span data-stu-id="cc63e-341">You can persist <xref:System.DateTime> values in four ways:</span></span>  
  
-   <span data-ttu-id="cc63e-342">[将它们转换为字符串](#persisting-values-as-strings)，然后保留字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-342">You [convert them to strings](#persisting-values-as-strings) and persist the strings.</span></span>  
-   <span data-ttu-id="cc63e-343">[将它们转换为64位整数值](#persisting-values-as-integers)（ <xref:System.DateTime.Ticks%2A>属性的值）并保留整数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-343">You [convert them to 64-bit integer values](#persisting-values-as-integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.</span></span>  
-   <span data-ttu-id="cc63e-344">[序列化日期时间值](#serializing-datetime-values)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-344">You [serialize the DateTime values](#serializing-datetime-values).</span></span>  
-   <span data-ttu-id="cc63e-345">[序列化日期时间值和时区信息](#serializing-datetime-and-time-zone-data)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-345">You [serialize the DateTime values along with time zone information](#serializing-datetime-and-time-zone-data).</span></span>  
  
<span data-ttu-id="cc63e-346">无论选择哪种方法，都必须确保<xref:System.DateTime>还原值的例程不会丢失数据或引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-346">You must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception regardless of which technique you choose.</span></span> <span data-ttu-id="cc63e-347"><xref:System.DateTime>值应往返。</span><span class="sxs-lookup"><span data-stu-id="cc63e-347"><xref:System.DateTime> values should round-trip.</span></span> <span data-ttu-id="cc63e-348">也就是说，原始值和还原的值应相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-348">That is, the original value and the restored value should be the same.</span></span> <span data-ttu-id="cc63e-349">如果原始<xref:System.DateTime>值表示一次时间，则它应在还原时标识同一时刻。</span><span class="sxs-lookup"><span data-stu-id="cc63e-349">And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.</span></span>  
  
#### <a name="persisting-values-as-strings"></a><span data-ttu-id="cc63e-350">将值保留为字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-350">Persisting values as strings</span></span>  

<span data-ttu-id="cc63e-351">若要成功<xref:System.DateTime>还原作为字符串保存的值，请遵循以下规则：</span><span class="sxs-lookup"><span data-stu-id="cc63e-351">To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:</span></span>  
  
-   <span data-ttu-id="cc63e-352">当你在还原字符串时将其视为保留时，请对区域性特定的格式设置相同的假设。</span><span class="sxs-lookup"><span data-stu-id="cc63e-352">Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</span></span> <span data-ttu-id="cc63e-353">若要确保可在其当前区域性不同于其保存所在系统的区域性的系统上还原字符串，请调用<xref:System.DateTime.ToString%2A>重载以使用固定区域性的约定保存字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-353">To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A> overload to save the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="cc63e-354">使用固定区域性<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>的约定调用或重载来还原字符串。<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-354">Call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="cc63e-355">决不要使用<xref:System.DateTime.ToString>、 <xref:System.DateTime.Parse%28System.String%29>或<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>重载，它们使用当前线程区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-355">Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.</span></span>  
  
-   <span data-ttu-id="cc63e-356">如果该日期表示一个时间点，请确保它在还原时表示相同的时间点，即使在不同的时区也是如此。</span><span class="sxs-lookup"><span data-stu-id="cc63e-356">If the date represents a single moment of time, ensure that it represents the same moment in time when it's restored, even on a different time zone.</span></span> <span data-ttu-id="cc63e-357">在保存之前，将值转换为协调世界时（UTC）。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-357">Convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it.</span></span> <span data-ttu-id="cc63e-358">你还可以将值和时区信息进行序列化。</span><span class="sxs-lookup"><span data-stu-id="cc63e-358">You can also serialize the value along with time zone information.</span></span> <span data-ttu-id="cc63e-359">有关此方法的详细信息，请参阅[序列化日期时间和时区数据](#serializing-datetime-and-time-zone-data)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-359">For more information about this approach, see [Serializing DateTime and time zone data](#serializing-datetime-and-time-zone-data).</span></span>  
  
 <span data-ttu-id="cc63e-360">将值作为字符串保留<xref:System.DateTime>时，最常见的错误是依赖于默认或当前区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-360">The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture.</span></span> <span data-ttu-id="cc63e-361">如果在保存和还原字符串时当前区域性不同，则会出现问题。</span><span class="sxs-lookup"><span data-stu-id="cc63e-361">Problems arise if the current culture is different when saving and restoring the strings.</span></span> <span data-ttu-id="cc63e-362">下面的示例阐释了这些问题。</span><span class="sxs-lookup"><span data-stu-id="cc63e-362">The following example illustrates these problems.</span></span> <span data-ttu-id="cc63e-363">它使用当前区域性的格式设置约定（在本例中为英语（美国））保存五个日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-363">It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</span></span> <span data-ttu-id="cc63e-364">它使用不同区域性的格式设置约定（在本例中为英语（英国））来还原日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-364">It restores the dates using the formatting conventions of a different culture, which in this case is English (Great Britain).</span></span> <span data-ttu-id="cc63e-365">由于这两个区域性的格式设置约定不同，因此不能还原两个日期，其余三个日期将被错误解释。</span><span class="sxs-lookup"><span data-stu-id="cc63e-365">Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</span></span> <span data-ttu-id="cc63e-366">此外，如果原始日期和时间值表示一段时间，则还原时间不正确，因为时区信息丢失。</span><span class="sxs-lookup"><span data-stu-id="cc63e-366">Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</span></span>  
  
<a name="persistence-01"></a> <span data-ttu-id="cc63e-367">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-367">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span></span>
[!code-vb[System.DateTime.Persistence#1](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#1)]  

<span data-ttu-id="cc63e-368">若要成功舍<xref:System.DateTime>入值，请执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="cc63e-368">To round-trip <xref:System.DateTime> values successfully, follow these steps:</span></span>  
  
1.  <span data-ttu-id="cc63e-369">如果这些值表示一段时间，则通过调用<xref:System.DateTime.ToUniversalTime%2A>方法将其从本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-369">If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
1.  <span data-ttu-id="cc63e-370">通过调用<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>或<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>重载，将日期转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-370">Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="cc63e-371">使用固定区域性的格式设置约定，方法是<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>将指定`provider`为参数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-371">Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument.</span></span> <span data-ttu-id="cc63e-372">通过使用 "O" 或 "R" 标准格式字符串，指定该值应往返。</span><span class="sxs-lookup"><span data-stu-id="cc63e-372">Specify that the value should round-trip by using the "O" or "R" standard format string.</span></span>  
  
<span data-ttu-id="cc63e-373">若要在不<xref:System.DateTime>丢失数据的情况下还原持久值，请执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="cc63e-373">To restore the persisted <xref:System.DateTime> values without data loss, follow these steps:</span></span>  
  
1.  <span data-ttu-id="cc63e-374">通过调用<xref:System.DateTime.ParseExact%2A>或<xref:System.DateTime.TryParseExact%2A>重载来分析数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-374">Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload.</span></span> <span data-ttu-id="cc63e-375">指定<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> `format`作为参数，并使用在转换过程中用于参数的相同标准格式字符串。 `provider`</span><span class="sxs-lookup"><span data-stu-id="cc63e-375">Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion.</span></span> <span data-ttu-id="cc63e-376"><xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 将`styles`该值包含在参数中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-376">Include the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> value in the `styles` argument.</span></span>  
1.  <span data-ttu-id="cc63e-377">如果这些<xref:System.DateTime>值表示单个时刻，则<xref:System.DateTime.ToLocalTime%2A>调用方法将分析的日期从 UTC 转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-377">If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.</span></span>  
  
<span data-ttu-id="cc63e-378">下面的示例使用固定区域性和 "O" 标准格式字符串来确保<xref:System.DateTime>已保存和还原的值表示同一时刻，而不考虑源和目标系统的系统、区域性或时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-378">The following example uses the invariant culture and the "O" standard format string to ensure that <xref:System.DateTime> values saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</span></span>  
  
<a name="persistence-02"></a> <span data-ttu-id="cc63e-379">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-379">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span></span>
[!code-vb[System.DateTime.Persistence#2](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#2)]  

#### <a name="persisting-values-as-integers"></a><span data-ttu-id="cc63e-380">将值保留为整数</span><span class="sxs-lookup"><span data-stu-id="cc63e-380">Persisting values as integers</span></span>  

<span data-ttu-id="cc63e-381">可以将日期和时间保存为<xref:System.Int64>表示刻度数的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-381">You can persist a date and time as an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="cc63e-382">在这种情况下，您不必考虑系统的区域性，这些<xref:System.DateTime>值将保留并在上还原。</span><span class="sxs-lookup"><span data-stu-id="cc63e-382">In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.</span></span>  
  
<span data-ttu-id="cc63e-383">若要将<xref:System.DateTime>值保留为整数：</span><span class="sxs-lookup"><span data-stu-id="cc63e-383">To persist a <xref:System.DateTime> value as an integer:</span></span>  
  
-   <span data-ttu-id="cc63e-384">如果这些<xref:System.DateTime.ToUniversalTime%2A>值表示一段时间，则通过调用方法将其转换为 UTC。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-384">If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
-   <span data-ttu-id="cc63e-385">从其<xref:System.DateTime> <xref:System.DateTime.Ticks%2A>属性中检索值所表示的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-385">Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.</span></span>  
  
<span data-ttu-id="cc63e-386">若要还原<xref:System.DateTime>已持久化为整数的值，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="cc63e-386">To restore a <xref:System.DateTime> value that has been persisted as an integer:</span></span>  
  
1.  <span data-ttu-id="cc63e-387">通过将<xref:System.Int64>值<xref:System.DateTime>传递给<xref:System.DateTime.%23ctor%28System.Int64%29>构造函数来实例化新的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-387">Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.</span></span>  
1.  <span data-ttu-id="cc63e-388">如果该值表示单个时间点，则通过<xref:System.DateTime.ToLocalTime%2A>调用方法将其从 UTC 转换为本地时间。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-388">If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span>  
  
<span data-ttu-id="cc63e-389">下面的示例在美国的系统<xref:System.DateTime>中将值数组作为整数保存。</span><span class="sxs-lookup"><span data-stu-id="cc63e-389">The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="cc63e-390">它在 UTC 时区中的系统上进行还原。</span><span class="sxs-lookup"><span data-stu-id="cc63e-390">It restores it on a system in the UTC zone.</span></span> <span data-ttu-id="cc63e-391">包含整数的文件包含一个<xref:System.Int32>值，该值指示紧随其后的<xref:System.Int64>值的总数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-391">The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.</span></span>  
  
<a name="persistence-03"></a> <span data-ttu-id="cc63e-392">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-392">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span></span>
[!code-vb[System.DateTime.Persistence#3](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#3)]  

<a name="serializing-datetime-values"></a>
#### <a name="serializing-datetime-values"></a><span data-ttu-id="cc63e-393">序列化日期时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-393">Serializing DateTime values</span></span>  

<span data-ttu-id="cc63e-394">可以通过序列<xref:System.DateTime>化将值保留到流或文件中，然后通过反序列化还原它们。</span><span class="sxs-lookup"><span data-stu-id="cc63e-394">You can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization.</span></span> <span data-ttu-id="cc63e-395"><xref:System.DateTime>以某种指定的对象格式对数据进行序列化。</span><span class="sxs-lookup"><span data-stu-id="cc63e-395"><xref:System.DateTime> data is serialized in some specified object format.</span></span> <span data-ttu-id="cc63e-396">反序列化对象时将还原对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-396">The objects are restored when they are deserialized.</span></span> <span data-ttu-id="cc63e-397">格式化程序或序列化程序（ <xref:System.Xml.Serialization.XmlSerializer>如<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>或）处理序列化和反序列化的过程。</span><span class="sxs-lookup"><span data-stu-id="cc63e-397">A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization.</span></span> <span data-ttu-id="cc63e-398">有关序列化和 .NET Framework 支持的序列化的类型的详细信息，请参阅[序列化](~/docs/standard/serialization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-398">For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](~/docs/standard/serialization/index.md).</span></span>
  
<span data-ttu-id="cc63e-399">下面的示例使用<xref:System.Xml.Serialization.XmlSerializer>类来序列化和反序列<xref:System.DateTime>化值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-399">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-400">这些值表示二十个世纪内的所有闰年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-400">The values represent all leap year days in the twenty-first century.</span></span> <span data-ttu-id="cc63e-401">如果该示例在当前区域性为英语（英国）的系统上运行，则输出表示结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-401">The output represents the result if the example is run on a system whose current culture is English (Great Britain).</span></span> <span data-ttu-id="cc63e-402">由于已经反序列化<xref:System.DateTime>对象本身，因此代码不必处理日期和时间格式的区域性差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-402">Because you've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.</span></span>  
  
<a name="persistence-04"></a> <span data-ttu-id="cc63e-403">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-403">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span></span>
[!code-vb[System.DateTime.Persistence#4](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#4)]  

<span data-ttu-id="cc63e-404">前面的示例未包括时间信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-404">The previous example doesn't include time information.</span></span> <span data-ttu-id="cc63e-405">如果值表示时间点并表示为本地时间，则在通过<xref:System.DateTime.ToUniversalTime%2A>调用方法对其进行序列化之前，将其从本地时间转换为 UTC。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-405">If a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span> <span data-ttu-id="cc63e-406">反序列化后，通过调用<xref:System.DateTime.ToLocalTime%2A>方法将其从 UTC 转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-406">After you deserialize it, convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="cc63e-407">下面的示例使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>类来序列化美国<xref:System.DateTime>太平洋标准时区并在美国英语系统中对其进行反序列化中部标准区域。</span><span class="sxs-lookup"><span data-stu-id="cc63e-407">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize <xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the U.S. Central Standard zone.</span></span>  
  
<a name="persistence-05"></a> <span data-ttu-id="cc63e-408">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-408">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span></span>
[!code-vb[System.DateTime.Persistence#5](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#5)]  

<a name="serializing-datetime-and-time-zone-data"></a>
#### <a name="serializing-datetime-and-time-zone-data"></a><span data-ttu-id="cc63e-409">序列化日期时间和时区数据</span><span class="sxs-lookup"><span data-stu-id="cc63e-409">Serializing DateTime and time zone data</span></span>  

<span data-ttu-id="cc63e-410">前面的示例假定<xref:System.DateTime>值表示为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-410">The previous examples all assumed that <xref:System.DateTime> values are expressed as local times.</span></span> <span data-ttu-id="cc63e-411">代码在 UTC 和本地时间之间转换了值，因此它们反映了源系统和目标系统上的同一时刻。</span><span class="sxs-lookup"><span data-stu-id="cc63e-411">The code converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</span></span> <span data-ttu-id="cc63e-412"><xref:System.DateTime>值还可能在本地和 UTC 之外的时区中反映时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-412"><xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC.</span></span> <span data-ttu-id="cc63e-413">由于结构不能识别时区，因此必须<xref:System.DateTime>同时序列化值和<xref:System.TimeZoneInfo>表示其时区的对象。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-413">Because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents its time zone.</span></span> <span data-ttu-id="cc63e-414">创建一个类型，其字段同时<xref:System.DateTime>包括值和时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-414">Create a type whose fields include both the <xref:System.DateTime> value and its time zone.</span></span> <span data-ttu-id="cc63e-415">下面的示例定义了`DateWithTimeZone`一个结构。</span><span class="sxs-lookup"><span data-stu-id="cc63e-415">The following example defines a `DateWithTimeZone` structure.</span></span>  
  
<a name="persistence-06"></a> <span data-ttu-id="cc63e-416">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-416">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span></span>
[!code-vb[System.DateTime.Persistence#6](~/samples/snippets/visualbasic/System.DateTime/DateWithTimeZone.vb#6)]  

> [!IMPORTANT]
>  <span data-ttu-id="cc63e-417">在接下来的两个示例中，将使用`DateWithTimeZone` 结构来序列化和反序列化对象的数组。`DateWithTimeZone`</span><span class="sxs-lookup"><span data-stu-id="cc63e-417">The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects.</span></span> <span data-ttu-id="cc63e-418">可以在[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)或[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub 上的文档存储库中查看本文的整个示例集源。</span><span class="sxs-lookup"><span data-stu-id="cc63e-418">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>
  
<span data-ttu-id="cc63e-419">通过使用`DateWithTimeZone`结构，可以将日期和时间与时区信息一起保存。</span><span class="sxs-lookup"><span data-stu-id="cc63e-419">By using the `DateWithTimeZone` structure, you can then persist date and time along with time zone information.</span></span> <span data-ttu-id="cc63e-420">下面的示例使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>类来序列化对象的`DateWithTimeZone`数组。</span><span class="sxs-lookup"><span data-stu-id="cc63e-420">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#7](~/samples/snippets/csharp/System.DateTime/Persistence.cs#7)]
[!code-vb[System.DateTime.Persistence#7](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#7)]  

<span data-ttu-id="cc63e-421">然后，下面的示例调用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>方法对其进行反序列化。</span><span class="sxs-lookup"><span data-stu-id="cc63e-421">The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method to deserialize it.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#8](~/samples/snippets/csharp/System.DateTime/Persistence.cs#8)]
[!code-vb[System.DateTime.Persistence#8](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#8)]  

### <a name="datetime-vs-timespan"></a><span data-ttu-id="cc63e-422">DateTime 与TimeSpan</span><span class="sxs-lookup"><span data-stu-id="cc63e-422">DateTime vs. TimeSpan</span></span>  

<span data-ttu-id="cc63e-423">和值类型在中是<xref:System.DateTime>不同的，它表示时间上的某个<xref:System.TimeSpan>时刻，而表示时间间隔。 <xref:System.TimeSpan> <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-423">The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval.</span></span> <span data-ttu-id="cc63e-424">可以<xref:System.DateTime>从一个实例中减去另一个实例，以<xref:System.TimeSpan>获取表示它们之间的时间间隔的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-424">You can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them.</span></span> <span data-ttu-id="cc63e-425">或者，您可以向当前<xref:System.TimeSpan> <xref:System.DateTime>添加一个正值，以获取<xref:System.DateTime>一个表示未来日期的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-425">Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.</span></span>  
  
<span data-ttu-id="cc63e-426">可以从<xref:System.DateTime>对象添加或减去时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-426">You can add or subtract a time interval from a <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-427">时间间隔可以是负数也可以是正数，它们可以用时间刻度、秒数或<xref:System.TimeSpan>对象表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-427">Time intervals can be negative or positive, and they can be expressed in units such as ticks, seconds, or as a <xref:System.TimeSpan> object.</span></span>  

### <a name="comparing-for-equality-within-tolerance"></a><span data-ttu-id="cc63e-428">在容错范围内比较是否相等</span><span class="sxs-lookup"><span data-stu-id="cc63e-428">Comparing for equality within tolerance</span></span>

<span data-ttu-id="cc63e-429">值的相等<xref:System.DateTime>比较是精确的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-429">Equality comparisons for <xref:System.DateTime> values are exact.</span></span> <span data-ttu-id="cc63e-430">这意味着两个值必须表示为相同的刻度数，才能视为相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-430">That means two values must be expressed as the same number of ticks to be considered equal.</span></span> <span data-ttu-id="cc63e-431">对于许多应用程序而言，这种精度通常是不必要的，甚至不正确。</span><span class="sxs-lookup"><span data-stu-id="cc63e-431">That precision is often unnecessary or even incorrect for many applications.</span></span> <span data-ttu-id="cc63e-432">通常，您需要测试<xref:System.DateTime>对象是否**大致相等**。</span><span class="sxs-lookup"><span data-stu-id="cc63e-432">Often, you want to test if <xref:System.DateTime> objects are **roughly equal**.</span></span> 

<span data-ttu-id="cc63e-433">下面的示例演示如何比较大致等效<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-433">The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-434">当将它们声明为相等时，它将接受较小的差别。</span><span class="sxs-lookup"><span data-stu-id="cc63e-434">It accepts a small margin of difference when declaring them equal.</span></span>  
  
<a name="comparison-01"></a> <span data-ttu-id="cc63e-435">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-435">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span></span>
[!code-vb[System.DateTime.Comparisons#1](~/samples/snippets/visualbasic/System.DateTime/DateTimeComparisons.vb#1)]  

### <a name="com-interop-considerations"></a><span data-ttu-id="cc63e-436">COM 互操作注意事项</span><span class="sxs-lookup"><span data-stu-id="cc63e-436">COM interop considerations</span></span>  

<span data-ttu-id="cc63e-437">如果<xref:System.DateTime>某个值已传输到 COM 应用程序，则会传输回托管应用程序，这被称为往返。</span><span class="sxs-lookup"><span data-stu-id="cc63e-437">A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</span></span> <span data-ttu-id="cc63e-438">但是， <xref:System.DateTime>仅指定时间的值不会像预期的那样往返。</span><span class="sxs-lookup"><span data-stu-id="cc63e-438">However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.</span></span>  
  
<span data-ttu-id="cc63e-439">如果只往返时间（如下午3点），则最终日期和时间为公元1899年12月30日</span><span class="sxs-lookup"><span data-stu-id="cc63e-439">If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</span></span> <span data-ttu-id="cc63e-440">在下午3:00，而不是公元0001年1月1日</span><span class="sxs-lookup"><span data-stu-id="cc63e-440">at 3:00 P.M., instead of January, 1, 0001 C.E.</span></span> <span data-ttu-id="cc63e-441">下午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-441">at 3:00 P.M.</span></span> <span data-ttu-id="cc63e-442">在仅指定时间时，.NET Framework 和 COM 将假定为默认日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-442">The .NET Framework and COM assume a default date when only a time is specified.</span></span> <span data-ttu-id="cc63e-443">但是，COM 系统假定基准日期为公元1899年12月30日，而 .NET Framework 假设基准日期为公元0001年1月1日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-443">However, the COM system assumes a base date of December 30, 1899 C.E., while the .NET Framework assumes a base date of January, 1, 0001 C.E.</span></span>  
  
<span data-ttu-id="cc63e-444">当只将时间从 .NET Framework 传递到 COM 时，会执行特殊处理，将时间转换为 COM 使用的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-444">When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</span></span> <span data-ttu-id="cc63e-445">如果仅将时间从 COM 传递到 .NET Framework，则不会执行任何特殊处理，因为这样会损坏1899年12月30日或之前的合法日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-445">When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</span></span> <span data-ttu-id="cc63e-446">如果日期从 COM 开始往返，则 .NET Framework 和 COM 将保留日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-446">If a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</span></span>  
  
<span data-ttu-id="cc63e-447">.NET Framework 和 COM 的行为意味着，如果你的应用程序往返<xref:System.DateTime>仅指定时间，则你的应用程序必须记得修改或忽略最后一个<xref:System.DateTime>对象中的错误日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-447">The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.</span></span>  
     
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cc63e-448">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-448">All members of this type are thread safe.</span></span> <span data-ttu-id="cc63e-449">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc63e-449">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="cc63e-450">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="cc63e-450">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeSpan" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
    <altmember cref="T:System.TimeZoneInfo" />
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md"><span data-ttu-id="cc63e-451">在 DateTime、DateTimeOffset、TimeSpan 和 TimeZoneInfo 之间进行选择</span><span class="sxs-lookup"><span data-stu-id="cc63e-451">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</span></span></related>
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="cc63e-452">使用日历</span><span class="sxs-lookup"><span data-stu-id="cc63e-452">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="cc63e-453">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="cc63e-453">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="cc63e-454">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="cc63e-454">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-455">初始化 <see cref="T:System.DateTime" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="cc63e-455">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 -&gt; DateTime" Usage="new System.DateTime ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="cc63e-456">一个日期和时间，以公历 0001 年 1 月 1 日 00:00:00.000 以来所经历的以 100 纳秒为间隔的间隔数来表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-456">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <summary><span data-ttu-id="cc63e-457">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定的刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-457">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-458">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-458">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-459">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-459">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-460">下面的示例演示其中一个<xref:System.DateTime>构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-460">The following example demonstrates one of the <xref:System.DateTime> constructors.</span></span>  
  
 [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]
 [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]
 [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-461"><paramref name="ticks" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-461"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (ticks, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="cc63e-462">一个日期和时间，以公历 0001 年 1 月 1 日 00:00:00.000 以来所经历的以 100 纳秒为间隔的间隔数来表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-462">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <param name="kind"><span data-ttu-id="cc63e-463">枚举值之一，该值指示 <paramref name="ticks" /> 是指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-463">One of the enumeration values that indicates whether <paramref name="ticks" /> specifies a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="cc63e-464">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定的计时周期数以及协调世界时 (UTC) 或本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-464">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-465">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-465">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-466"><paramref name="ticks" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-466"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-467"><paramref name="kind" /> 不是 <see cref="T:System.DateTimeKind" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-467"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-468">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-468">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-469">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-469">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-470">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-470">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <summary><span data-ttu-id="cc63e-471">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定的年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-471">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-472">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-472">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-473">若要使用<xref:System.DateTime>另一个日历中的年、月和日来实例化某个值， <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-473">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="cc63e-474">生成<xref:System.DateTime>的时间为午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-474">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="cc63e-475">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-475">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-476">下面的示例使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29>构造函数实例化某个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-476">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-477">该示例还说明了此重载创建的<xref:System.DateTime>值的时间部分等于午夜（或0:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-477">The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]
 [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-478"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-478"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="cc63e-479">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-479">-or-</span></span> 
 <span data-ttu-id="cc63e-480"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-480"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-481">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-481">-or-</span></span> 
 <span data-ttu-id="cc63e-482"><paramref name="day" /> 小于 1 或大于 <paramref name="month" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-482"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-483">年（1 到 <paramref name="calendar" /> 中的年数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-483">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-484">月（1 到 <paramref name="calendar" /> 中的月数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-484">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-485">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-485">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="calendar"><span data-ttu-id="cc63e-486">用于解释 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-486">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-487">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定日历的指定年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-487">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-488">生成<xref:System.DateTime>的时间为午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-488">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="cc63e-489">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-489">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-490">`year` `calendar`、和`month`的允许`day`值依赖于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-490">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="cc63e-491">如果无法使用`calendar`表示指定的日期和时间，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-491">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="cc63e-492">命名空间提供了多个<xref:System.Globalization.GregorianCalendar>日历，其中包括和<xref:System.Globalization.JulianCalendar>。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="cc63e-492">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-493">下面的示例调用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>两次构造函数来实例化两个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-493">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-494">第一次调用通过<xref:System.DateTime> <xref:System.Globalization.PersianCalendar>使用对象来实例化某个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-494">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="cc63e-495">由于不能将波斯历指定为区域性的默认日历，因此在波斯历中显示日期要求对其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法进行单独调用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-495">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="cc63e-496">对构造函数的第二次调用<xref:System.DateTime>通过<xref:System.Globalization.HijriCalendar>使用对象来实例化值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-496">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="cc63e-497">该示例将当前区域性更改为阿拉伯语（叙利亚），并将当前区域性的默认日历更改为回历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-497">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="cc63e-498">由于回历是当前区域性的默认日历，因此该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法使用它来设置日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-498">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="cc63e-499">当还原以前的当前区域性（在此示例中为英语（美国））时，该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法将使用当前区域性的默认公历来设置日期格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-499">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]
 [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-500"><paramref name="calendar" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-500"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-501"><paramref name="year" /> 不在 <paramref name="calendar" /> 支持的范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-501"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-502">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-502">-or-</span></span> 
 <span data-ttu-id="cc63e-503"><paramref name="month" /> 小于 1 或大于 <paramref name="calendar" /> 中的月数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-503"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-504">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-504">-or-</span></span> 
 <span data-ttu-id="cc63e-505"><paramref name="day" /> 小于 1 或大于 <paramref name="month" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-505"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-506">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-506">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-507">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-507">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-508">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-508">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-509">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-509">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-510">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-510">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-511">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-511">The seconds (0 through 59).</span></span></param>
        <summary><span data-ttu-id="cc63e-512">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定的年、月、日、小时、分钟和秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-512">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-513">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-513">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-514">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-514">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-515">若要使用<xref:System.DateTime>另一个日历中的年、月和日来实例化某个值， <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-515">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="cc63e-516">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-516">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-517">下面的示例使用<xref:System.DateTime.%23ctor%2A>构造函数实例化某个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-517">The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]
 [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-518"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-518"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="cc63e-519">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-519">-or-</span></span> 
 <span data-ttu-id="cc63e-520"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-520"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-521">-or-</span></span> 
 <span data-ttu-id="cc63e-522"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-522"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-523">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-523">-or-</span></span> 
 <span data-ttu-id="cc63e-524"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-524"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-525">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-525">-or-</span></span> 
 <span data-ttu-id="cc63e-526"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-526"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-527">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-527">-or-</span></span> 
 <span data-ttu-id="cc63e-528"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-528"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-529">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-529">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-530">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-530">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-531">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-531">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-532">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-532">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-533">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-533">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-534">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-534">The seconds (0 through 59).</span></span></param>
        <param name="kind"><span data-ttu-id="cc63e-535">枚举值之一，该值指示 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" /> 和 <paramref name="second" /> 指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-535">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> and <paramref name="second" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="cc63e-536">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定年、月、日、小时、分钟、秒和协调世界时 (UTC) 或本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-536">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-537">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-537">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-538">若要使用<xref:System.DateTime>另一个日历中的年、月和日来实例化某个值， <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-538">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="cc63e-539">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-539">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-540">下面的示例使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>构造函数实例化某个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-540">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]
 [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-541"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-541"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="cc63e-542">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-542">-or-</span></span> 
 <span data-ttu-id="cc63e-543"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-543"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-544">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-544">-or-</span></span> 
 <span data-ttu-id="cc63e-545"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-545"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-546">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-546">-or-</span></span> 
 <span data-ttu-id="cc63e-547"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-547"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-548">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-548">-or-</span></span> 
 <span data-ttu-id="cc63e-549"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-549"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-550">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-550">-or-</span></span> 
 <span data-ttu-id="cc63e-551"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-551"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-552"><paramref name="kind" /> 不是 <see cref="T:System.DateTimeKind" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-552"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-553">年（1 到 <paramref name="calendar" /> 中的年数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-553">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-554">月（1 到 <paramref name="calendar" /> 中的月数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-554">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-555">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-555">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-556">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-556">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-557">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-557">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-558">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-558">The seconds (0 through 59).</span></span></param>
        <param name="calendar"><span data-ttu-id="cc63e-559">用于解释 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-559">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-560">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定日历的年、月、日、小时、分钟和秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-560">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-561">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-561">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-562">`year` `calendar`、和`month`的允许`day`值依赖于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-562">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="cc63e-563">如果无法使用`calendar`表示指定的日期和时间，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-563">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="cc63e-564">命名空间提供了多个<xref:System.Globalization.GregorianCalendar>日历，其中包括和<xref:System.Globalization.JulianCalendar>。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="cc63e-564">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-565">下面的示例调用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>两次构造函数来实例化两个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-565">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-566">第一次调用通过<xref:System.DateTime> <xref:System.Globalization.PersianCalendar>使用对象来实例化某个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-566">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="cc63e-567">由于不能将波斯历指定为区域性的默认日历，因此在波斯历中显示日期要求对其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法进行单独调用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-567">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="cc63e-568">对构造函数的第二次调用<xref:System.DateTime>通过<xref:System.Globalization.HijriCalendar>使用对象来实例化值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-568">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="cc63e-569">该示例将当前区域性更改为阿拉伯语（叙利亚），并将当前区域性的默认日历更改为回历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-569">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="cc63e-570">由于回历是当前区域性的默认日历，因此该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法使用它来设置日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-570">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="cc63e-571">当还原以前的当前区域性（在此示例中为英语（美国））时，该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法将使用当前区域性的默认公历来设置日期格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-571">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]
 [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-572"><paramref name="calendar" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-572"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-573"><paramref name="year" /> 不在 <paramref name="calendar" /> 支持的范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-573"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-574">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-574">-or-</span></span> 
 <span data-ttu-id="cc63e-575"><paramref name="month" /> 小于 1 或大于 <paramref name="calendar" /> 中的月数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-575"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-576">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-576">-or-</span></span> 
 <span data-ttu-id="cc63e-577"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-577"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-578">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-578">-or-</span></span> 
 <span data-ttu-id="cc63e-579"><paramref name="hour" /> 小于 0 或大于 23</span><span class="sxs-lookup"><span data-stu-id="cc63e-579"><paramref name="hour" /> is less than 0 or greater than 23</span></span> 
<span data-ttu-id="cc63e-580">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-580">-or-</span></span> 
 <span data-ttu-id="cc63e-581"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-581"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-582">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-582">-or-</span></span> 
 <span data-ttu-id="cc63e-583"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-583"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-584">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-584">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-585">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-585">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-586">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-586">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-587">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-587">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-588">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-588">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-589">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-589">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="cc63e-590">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-590">The milliseconds (0 through 999).</span></span></param>
        <summary><span data-ttu-id="cc63e-591">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定的年、月、日、小时、分钟、秒和毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-591">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-592">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-592">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-593">若要使用<xref:System.DateTime>另一个日历中的年、月和日来实例化某个值， <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-593">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="cc63e-594">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-594">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-595">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-595">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-596">下面的示例使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>构造函数实例化某个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-596">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]
 [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-597"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-597"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="cc63e-598">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-598">-or-</span></span> 
 <span data-ttu-id="cc63e-599"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-599"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-600">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-600">-or-</span></span> 
 <span data-ttu-id="cc63e-601"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-601"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-602">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-602">-or-</span></span> 
 <span data-ttu-id="cc63e-603"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-603"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-604">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-604">-or-</span></span> 
 <span data-ttu-id="cc63e-605"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-605"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-606">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-606">-or-</span></span> 
 <span data-ttu-id="cc63e-607"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-607"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-608">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-608">-or-</span></span> 
 <span data-ttu-id="cc63e-609"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-609"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-610">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-610">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-611">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-611">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-612">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-612">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-613">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-613">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-614">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-614">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-615">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-615">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="cc63e-616">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-616">The milliseconds (0 through 999).</span></span></param>
        <param name="kind"><span data-ttu-id="cc63e-617">枚举值之一，该值指示 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />, <paramref name="hour" />、<paramref name="minute" />、<paramref name="second" /> 和 <paramref name="millisecond" /> 指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-617">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="cc63e-618">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定年、月、日、小时、分钟、秒、毫秒和协调世界时 (UTC) 或本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-618">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-619">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-619">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-620">若要使用<xref:System.DateTime>另一个日历中的年、月和日来实例化某个值， <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-620">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="cc63e-621">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-621">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-622">下面的示例使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>构造函数实例化某个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-622">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]
 [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-623"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-623"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="cc63e-624">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-624">-or-</span></span> 
 <span data-ttu-id="cc63e-625"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-625"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-626">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-626">-or-</span></span> 
 <span data-ttu-id="cc63e-627"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-627"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-628">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-628">-or-</span></span> 
 <span data-ttu-id="cc63e-629"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-629"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-630">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-630">-or-</span></span> 
 <span data-ttu-id="cc63e-631"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-631"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-632">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-632">-or-</span></span> 
 <span data-ttu-id="cc63e-633"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-633"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-634">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-634">-or-</span></span> 
 <span data-ttu-id="cc63e-635"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-635"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-636"><paramref name="kind" /> 不是 <see cref="T:System.DateTimeKind" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-636"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-637">年（1 到 <paramref name="calendar" /> 中的年数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-637">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-638">月（1 到 <paramref name="calendar" /> 中的月数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-638">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-639">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-639">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-640">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-640">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-641">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-641">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-642">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-642">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="cc63e-643">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-643">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="cc63e-644">用于解释 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-644">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-645">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定日历的指定年、月、日、小时、分钟、秒和毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-645">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-646">将 <xref:System.DateTime.Kind%2A> 属性初始化为 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-646">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="cc63e-647">`year` `calendar`、和`month`的允许`day`值依赖于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-647">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="cc63e-648">如果无法使用`calendar`表示指定的日期和时间，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-648">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="cc63e-649">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-649">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="cc63e-650">命名空间提供了多个<xref:System.Globalization.GregorianCalendar>日历，其中包括和<xref:System.Globalization.JulianCalendar>。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="cc63e-650">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-651">下面的示例调用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>两次构造函数来实例化两个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-651">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-652">第一次调用通过<xref:System.DateTime> <xref:System.Globalization.PersianCalendar>使用对象来实例化某个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-652">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="cc63e-653">由于不能将波斯历指定为区域性的默认日历，因此在波斯历中显示日期要求对其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法进行单独调用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-653">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="cc63e-654">对构造函数的第二次调用<xref:System.DateTime>通过<xref:System.Globalization.HijriCalendar>使用对象来实例化值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-654">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="cc63e-655">该示例将当前区域性更改为阿拉伯语（叙利亚），并将当前区域性的默认日历更改为回历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-655">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="cc63e-656">由于回历是当前区域性的默认日历，因此该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法使用它来设置日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-656">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="cc63e-657">当还原以前的当前区域性（在此示例中为英语（美国））时，该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法将使用当前区域性的默认公历来设置日期格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-657">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]
 [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-658"><paramref name="calendar" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-658"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-659"><paramref name="year" /> 不在 <paramref name="calendar" /> 支持的范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-659"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-660">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-660">-or-</span></span> 
 <span data-ttu-id="cc63e-661"><paramref name="month" /> 小于 1 或大于 <paramref name="calendar" /> 中的月数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-661"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-662">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-662">-or-</span></span> 
 <span data-ttu-id="cc63e-663"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-663"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-664">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-664">-or-</span></span> 
 <span data-ttu-id="cc63e-665"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-665"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-666">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-666">-or-</span></span> 
 <span data-ttu-id="cc63e-667"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-667"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-668">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-668">-or-</span></span> 
 <span data-ttu-id="cc63e-669"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-669"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-670">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-670">-or-</span></span> 
 <span data-ttu-id="cc63e-671"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-671"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-672">年（1 到 <paramref name="calendar" /> 中的年数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-672">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-673">月（1 到 <paramref name="calendar" /> 中的月数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-673">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="cc63e-674">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-674">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="cc63e-675">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-675">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="cc63e-676">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-676">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="cc63e-677">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-677">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="cc63e-678">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-678">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="cc63e-679">用于解释 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-679">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <param name="kind"><span data-ttu-id="cc63e-680">枚举值之一，该值指示 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />, <paramref name="hour" />、<paramref name="minute" />、<paramref name="second" /> 和 <paramref name="millisecond" /> 指定了本地时间、协调世界时 (UTC)，还是两者皆未指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-680">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="cc63e-681">将 <see cref="T:System.DateTime" /> 结构的新实例初始化为指定日历的指定年、月、日、小时、分钟、秒、毫秒和协调世界时 (UTC) 或本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-681">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-682">`year`、和`month`参数允许的值取决于参数。`calendar` `day`</span><span class="sxs-lookup"><span data-stu-id="cc63e-682">The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter.</span></span> <span data-ttu-id="cc63e-683">如果无法使用`calendar`表示指定的日期和时间，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-683">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="cc63e-684">对于在其中具有日期和时间数据的可移植性或有限程度的时区感知的应用程序，可以使用相应<xref:System.DateTimeOffset>的构造函数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-684">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="cc63e-685">命名空间提供了多个<xref:System.Globalization.GregorianCalendar>日历，其中包括和<xref:System.Globalization.JulianCalendar>。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="cc63e-685">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-686">下面的示例调用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>两次构造函数来实例化两个<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-686">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-687">第一次调用通过<xref:System.DateTime> <xref:System.Globalization.PersianCalendar>使用对象来实例化某个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-687">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="cc63e-688">由于不能将波斯历指定为区域性的默认日历，因此在波斯历中显示日期要求对其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法进行单独调用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-688">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="cc63e-689">对构造函数的第二次调用<xref:System.DateTime>通过<xref:System.Globalization.HijriCalendar>使用对象来实例化值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-689">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="cc63e-690">该示例将当前区域性更改为阿拉伯语（叙利亚），并将当前区域性的默认日历更改为回历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-690">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="cc63e-691">由于回历是当前区域性的默认日历，因此该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法使用它来设置日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-691">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="cc63e-692">当还原以前的当前区域性（在此示例中为英语（美国））时，该<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法将使用当前区域性的默认公历来设置日期格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-692">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]
 [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-693"><paramref name="calendar" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-693"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-694"><paramref name="year" /> 不在 <paramref name="calendar" /> 支持的范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-694"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-695">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-695">-or-</span></span> 
 <span data-ttu-id="cc63e-696"><paramref name="month" /> 小于 1 或大于 <paramref name="calendar" /> 中的月数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-696"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="cc63e-697">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-697">-or-</span></span> 
 <span data-ttu-id="cc63e-698"><paramref name="day" /> 小于 1 或大于 <paramref name="month" />中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-698"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="cc63e-699">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-699">-or-</span></span> 
 <span data-ttu-id="cc63e-700"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="cc63e-700"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="cc63e-701">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-701">-or-</span></span> 
 <span data-ttu-id="cc63e-702"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-702"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-703">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-703">-or-</span></span> 
 <span data-ttu-id="cc63e-704"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="cc63e-704"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="cc63e-705">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-705">-or-</span></span> 
 <span data-ttu-id="cc63e-706"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-706"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-707"><paramref name="kind" /> 不是 <see cref="T:System.DateTimeKind" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-707"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTime Add (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Add(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Add(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTime" Usage="dateTime.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-708">正或负时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-708">A positive or negative time interval.</span></span></param>
        <summary><span data-ttu-id="cc63e-709">返回一个新的 <see cref="T:System.DateTime" />，它将指定 <see cref="T:System.TimeSpan" /> 的值添加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-709">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-710">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的时间间隔之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-710">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-711">可以在单个操作<xref:System.DateTime.Add%2A>中使用方法添加多种时间间隔（天、小时、分钟、秒或毫秒）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-711">You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="cc63e-712">此方法的行为与加法运算符的行为相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-712">This method's behavior is identical to that of the addition operator.</span></span> <span data-ttu-id="cc63e-713">结构还支持每个时间间隔的专用加法<xref:System.DateTime.AddDays%2A>方法<xref:System.DateTime.AddHours%2A>（如<xref:System.DateTime.AddMinutes%2A>、和）。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-713">The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.</span></span>  
  
 <span data-ttu-id="cc63e-714"><xref:System.DateTime.Add%2A>方法会在执行日期算法时考虑闰年和月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-714">The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
 <span data-ttu-id="cc63e-715">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-715">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-716">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-716">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="cc63e-717"><xref:System.DateTime.Kind%2A> 新<xref:System.DateTime>实例的属性与当前实例的属性相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-717">The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-718">下面的示例演示<xref:System.DateTime.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-718">The following example demonstrates the <xref:System.DateTime.Add%2A> method.</span></span> <span data-ttu-id="cc63e-719">它计算36一周中的某一天（864小时）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-719">It calculates the day of the week that is 36 days (864 hours) from this moment.</span></span>  
  
 [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]
 [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-720">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-720">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-721">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-721">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTime AddDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddDays(double value);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTime" Usage="dateTime.AddDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-722">由整数和小数部分组成的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-722">A number of whole and fractional days.</span></span> <span data-ttu-id="cc63e-723"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-723">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-724">返回一个新的 <see cref="T:System.DateTime" />，它将指定的天数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-724">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-725">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的天数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-725">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-726">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-726">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-727">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-727">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-728">的小数部分`value`是一天中的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-728">The fractional part of `value` is the fractional part of a day.</span></span> <span data-ttu-id="cc63e-729">例如，4.5 等效于4天，12小时，0分钟，0秒，0毫秒，0刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-729">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="cc63e-730">`value`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-730">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="cc63e-731"><xref:System.DateTime.AddDays%2A>方法会在执行日期算法时考虑闰年和月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-731">The <xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-732">下面的示例使用<xref:System.DateTime.AddDays%2A>方法来确定当前日期之后36天中的第几天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-732">The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.</span></span>  
  
 [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]
 [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-733">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-733">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTime AddHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddHours(double value);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTime" Usage="dateTime.AddHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-734">由整数和小数部分组成的小时数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-734">A number of whole and fractional hours.</span></span> <span data-ttu-id="cc63e-735"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-735">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-736">返回一个新的 <see cref="T:System.DateTime" />，它将指定的小时数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-736">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-737">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的小时数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-737">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-738">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-738">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-739">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-739">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="cc63e-740">`value`返回<xref:System.DateTime.Kind%2A> 的对象的属性与<xref:System.DateTime>的属性相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-740">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.</span></span>  
  
 <span data-ttu-id="cc63e-741">的小数部分`value`是一个小时的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-741">The fractional part of `value` is the fractional part of an hour.</span></span> <span data-ttu-id="cc63e-742">例如，4.5 等效于4小时30分钟0秒0毫秒，0刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-742">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="cc63e-743">`value`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-743">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="cc63e-744">如果结果是非终止的重复小数，则将不到1小时的时间间隔转换为分数可能会损失精度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-744">Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</span></span> <span data-ttu-id="cc63e-745">（例如，一分钟为0.016667 小时。）如果这有问题，您可以使用<xref:System.DateTime.Add%2A>方法，该方法使您能够在单个方法调用中指定多个时间间隔，并且无需将时间间隔转换为一小时的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-745">(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-746">下面的示例使用<xref:System.DateTime.AddHours%2A>方法将一些整数值和小数部分值添加到日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-746">The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time.</span></span> <span data-ttu-id="cc63e-747">它还说明了通过向方法传递包含小数部分的值导致的精度损失。</span><span class="sxs-lookup"><span data-stu-id="cc63e-747">It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</span></span>  
  
 [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]
 [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-748">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-748">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-749">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-749">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTime AddMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTime" Usage="dateTime.AddMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-750">由整数和小数部分组成的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-750">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="cc63e-751"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-751">The <paramref name="value" /> parameter can be negative or positive.</span></span> <span data-ttu-id="cc63e-752">请注意，该值被舍入到最近的整数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-752">Note that this value is rounded to the nearest integer.</span></span></param>
        <summary><span data-ttu-id="cc63e-753">返回一个新的 <see cref="T:System.DateTime" />，它将指定的毫秒数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-753">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-754">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的毫秒数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-754">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-755">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-755">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-756">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-756">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-757">的小数部分`value`是毫秒的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-757">The fractional part of `value` is the fractional part of a millisecond.</span></span> <span data-ttu-id="cc63e-758">例如，4.5 等效于4毫秒，5000计时周期，其中一毫秒 = 10000 刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-758">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</span></span>  
  
 <span data-ttu-id="cc63e-759">`value`参数舍入为最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-759">The `value` parameter is rounded to the nearest integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-760">下面的示例使用<xref:System.DateTime.AddMilliseconds%2A>方法将1毫秒和1.5 毫秒添加<xref:System.DateTime>到值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-760">The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-761">然后，它显示每个新值，并显示它与原始值之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-761">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="cc63e-762">差异同时显示为时间跨度和刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-762">The difference is displayed both as a time span and as a number of ticks.</span></span> <span data-ttu-id="cc63e-763">该示例可以清楚地表明1毫秒等于10000刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-763">The example makes it clear that one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="cc63e-764">还显示了在执行加法运算之前舍入的小数部分;向原始日期添加1.5 毫秒后得出的值比原始日期大2毫秒。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-764">It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</span></span>  
  
 [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]
 [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-765">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-765">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-766">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-766">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTime AddMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMinutes(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTime" Usage="dateTime.AddMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-767">由整数和小数部分组成的分钟数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-767">A number of whole and fractional minutes.</span></span> <span data-ttu-id="cc63e-768"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-768">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-769">返回一个新的 <see cref="T:System.DateTime" />，它将指定的分钟数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-769">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-770">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的分钟数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-770">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-771">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-771">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-772">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-772">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-773">的小数部分`value`是一分钟的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-773">The fractional part of `value` is the fractional part of a minute.</span></span> <span data-ttu-id="cc63e-774">例如，4.5 等效于4分钟30秒0毫秒，0刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-774">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="cc63e-775">`value`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-775">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-776">下面的示例使用<xref:System.DateTime.AddMinutes%2A>方法将一些整数值和小数部分值添加到日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-776">The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.</span></span>  
  
 [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]
 [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]
 [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-777">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-777">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-778">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-778">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTime AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTime" Usage="dateTime.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="cc63e-779">月份数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-779">A number of months.</span></span> <span data-ttu-id="cc63e-780"><paramref name="months" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-780">The <paramref name="months" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-781">返回一个新的 <see cref="T:System.DateTime" />，它将指定的月数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-781">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-782">一个对象，其值是此实例所表示的日期和时间与 <paramref name="months" /> 所表示的时间之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-782">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-783">此方法不更改此<xref:System.DateTime>对象的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-783">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-784">相反，它会返回一个<xref:System.DateTime>新的对象，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-784">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-785">方法计算得出的月份和年份，考虑闰年和月份中的天数，然后调整结果<xref:System.DateTime>对象的日部分。 <xref:System.DateTime.AddMonths%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-785">The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-786">如果生成的日期不是生成的月中的有效日期，则使用生成的月份的最后一个有效日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-786">If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</span></span> <span data-ttu-id="cc63e-787">例如，三月 31 + 1 个月 = 4 月30日，3月31日到1月 = 2 月28日 = 闰年，闰年2月29日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-787">For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</span></span>  
  
 <span data-ttu-id="cc63e-788">生成<xref:System.DateTime>的对象的时间部分与此实例保持不变。</span><span class="sxs-lookup"><span data-stu-id="cc63e-788">The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-789">下面的示例将在12月1日到2015年12月之间添加0到15个月。</span><span class="sxs-lookup"><span data-stu-id="cc63e-789">The following example adds between zero and fifteen months to the last day of December, 2015.</span></span> <span data-ttu-id="cc63e-790">在这种情况下，AddMonths 方法将返回每月最后一天的日期，并成功处理闰年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-790">In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.</span></span>  
  
 [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-791">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-791">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span>  
  
<span data-ttu-id="cc63e-792">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-792">-or-</span></span> 
 <span data-ttu-id="cc63e-793"><paramref name="months" /> 小于 -120,000 或大于 120,000。</span><span class="sxs-lookup"><span data-stu-id="cc63e-793"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTime AddSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddSeconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTime" Usage="dateTime.AddSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-794">由整数和小数部分组成的秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-794">A number of whole and fractional seconds.</span></span> <span data-ttu-id="cc63e-795"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-795">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-796">返回一个新的 <see cref="T:System.DateTime" />，它将指定的秒数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-796">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-797">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的秒数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-797">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-798">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-798">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-799">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-799">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-800">的小数部分`value`是秒的小数部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-800">The fractional part of `value` is the fractional part of a second.</span></span> <span data-ttu-id="cc63e-801">例如，4.5 等效于4秒，500毫秒，0刻度。</span><span class="sxs-lookup"><span data-stu-id="cc63e-801">For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="cc63e-802">`value`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-802">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-803">下面的示例使用<xref:System.DateTime.AddSeconds%2A>方法将30秒和一天中的秒数加<xref:System.DateTime>到值中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-803">The following example uses the <xref:System.DateTime.AddSeconds%2A> method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-804">然后，它显示每个新值，并显示它与原始值之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-804">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="cc63e-805">差异同时显示为时间跨度和刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-805">The difference is displayed both as a time span and as a number of ticks.</span></span>  
  
 [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]
 [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-806">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-806">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-807">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-807">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTime AddTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddTicks(long value);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTime" Usage="dateTime.AddTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-808">以 100 纳秒为单位的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-808">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="cc63e-809"><paramref name="value" /> 参数可以是正数也可以是负数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-809">The <paramref name="value" /> parameter can be positive or negative.</span></span></param>
        <summary><span data-ttu-id="cc63e-810">返回一个新的 <see cref="T:System.DateTime" />，它将指定的刻度数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-810">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-811">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的时间之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-811">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-812">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-812">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-813">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-813">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-814">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-814">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-815">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-815">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTime AddYears (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddYears(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddYears(int value);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTime" Usage="dateTime.AddYears value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-816">年份数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-816">A number of years.</span></span> <span data-ttu-id="cc63e-817"><paramref name="value" /> 参数可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-817">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="cc63e-818">返回一个新的 <see cref="T:System.DateTime" />，它将指定的年份数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="cc63e-818">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-819">一个对象，其值是此实例所表示的日期和时间与 <paramref name="value" /> 所表示的年份数之和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-819">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-820">此方法不更改此<xref:System.DateTime>对象的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-820">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-821">相反，它会返回一个<xref:System.DateTime>新的对象，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-821">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-822"><xref:System.DateTime.AddYears%2A>方法用于计算将在闰年中产生的年数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-822">The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years.</span></span> <span data-ttu-id="cc63e-823">生成<xref:System.DateTime>的对象的月份和时间部分与此实例保持不变。</span><span class="sxs-lookup"><span data-stu-id="cc63e-823">The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
 <span data-ttu-id="cc63e-824">如果当前实例表示闰年中的闰日，返回值取决于目标日期：</span><span class="sxs-lookup"><span data-stu-id="cc63e-824">If the current instance represents the leap day in a leap year, the return value depends on the target date:</span></span>  
  
-   <span data-ttu-id="cc63e-825">如果`value` 也是闰年<xref:System.DateTime.Year%2A?displayProperty=nameWithType> ，则返回值表示该年份中的闰日。  + </span><span class="sxs-lookup"><span data-stu-id="cc63e-825">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is also a leap year, the return value represents the leap day in that year.</span></span> <span data-ttu-id="cc63e-826">例如，如果将四年添加到2012年2月29日，则返回的日期为2016年2月29日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-826">For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</span></span>  
  
-   <span data-ttu-id="cc63e-827">如果`value` 不是闰年<xref:System.DateTime.Year%2A?displayProperty=nameWithType> ，则返回值表示该年份的闰日之前的那一天。  + </span><span class="sxs-lookup"><span data-stu-id="cc63e-827">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is not a leap year, the return value represents the day before the leap day in that year.</span></span> <span data-ttu-id="cc63e-828">例如，如果一年添加到2012年2月29日，则返回的日期为2013年2月28日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-828">For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</span></span>  
  
 <span data-ttu-id="cc63e-829">下面的示例演示如何将<xref:System.DateTime.AddYears%2A>方法<xref:System.DateTime>与表示闰年的值一起使用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-829">The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day.</span></span> <span data-ttu-id="cc63e-830">它显示了15年之前15年的日期和2000年2月29日之后的十五年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-830">It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</span></span>  
  
 [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]
 [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-831"><paramref name="value" /> 或生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-831"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As DateTime, t2 As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTime * DateTime -&gt; int" Usage="System.DateTime.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-832">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-832">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-833">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-833">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-834">对两个 <see cref="T:System.DateTime" /> 的实例进行比较，并返回一个指示第一个实例是早于、等于还是晚于第二个实例的整数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-834">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-835">有符号数字，指示 <paramref name="t1" /> 和 <paramref name="t2" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-835">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cc63e-836">值类型</span><span class="sxs-lookup"><span data-stu-id="cc63e-836">Value Type</span></span> 
 </term><description> <span data-ttu-id="cc63e-837">条件</span><span class="sxs-lookup"><span data-stu-id="cc63e-837">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cc63e-838">小于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-838">Less than zero</span></span> 
 </term><description><span data-ttu-id="cc63e-839"><paramref name="t1" /> 早于 <paramref name="t2" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-839"><paramref name="t1" /> is earlier than <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-840">零</span><span class="sxs-lookup"><span data-stu-id="cc63e-840">Zero</span></span> 
 </term><description><span data-ttu-id="cc63e-841"><paramref name="t1" /> 与 <paramref name="t2" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-841"><paramref name="t1" /> is the same as <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-842">大于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-842">Greater than zero</span></span> 
 </term><description><span data-ttu-id="cc63e-843"><paramref name="t1" /> 晚于 <paramref name="t2" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-843"><paramref name="t1" /> is later than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-844">`t1`若要确定与`t2`的关系<xref:System.DateTime.Compare%2A> `t1` `t2` ，方法会比较和的<xref:System.DateTime.Kind%2A>属性，但会忽略其属性。 <xref:System.DateTime.Ticks%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-844">To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="cc63e-845">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-845">Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-846">下面的示例演示<xref:System.DateTime.Compare%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-846">The following example demonstrates the <xref:System.DateTime.Compare%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]
 [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-847">将此实例的值与指定的 <see cref="T:System.DateTime" /> 值相比较，并指示此实例是早于、等于还是晚于指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-847">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-848">此<xref:System.DateTime.CompareTo%2A>方法的两个重载返回一个有符号数字，指示此实例`value`和参数的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-848">The two overloads of the <xref:System.DateTime.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="cc63e-849">值</span><span class="sxs-lookup"><span data-stu-id="cc63e-849">Value</span></span>|<span data-ttu-id="cc63e-850">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-850">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="cc63e-851">小于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-851">Less than zero</span></span>|<span data-ttu-id="cc63e-852">此实例早于 `value`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-852">This instance is earlier than `value`.</span></span>|  
|<span data-ttu-id="cc63e-853">零</span><span class="sxs-lookup"><span data-stu-id="cc63e-853">Zero</span></span>|<span data-ttu-id="cc63e-854">此实例与 `value` 相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-854">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="cc63e-855">大于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-855">Greater than zero</span></span>|<span data-ttu-id="cc63e-856">此实例晚于 `value`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-856">This instance is later than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTime -&gt; int&#xA;override this.CompareTo : DateTime -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-857">要与当前类型进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-857">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="cc63e-858">将此实例的值与指定的 <see cref="T:System.DateTime" /> 值相比较，并返回一个整数，该整数指示此实例是早于、等于还是晚于指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-858">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="cc63e-859">有符号数字，指示此实例和 <paramref name="value" /> 参数的相对值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-859">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cc63e-860">值</span><span class="sxs-lookup"><span data-stu-id="cc63e-860">Value</span></span> 
 </term><description> <span data-ttu-id="cc63e-861">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-861">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cc63e-862">小于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-862">Less than zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-863">此实例早于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-863">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-864">零</span><span class="sxs-lookup"><span data-stu-id="cc63e-864">Zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-865">此实例与 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-865">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-866">大于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-866">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-867">此实例晚于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-867">This instance is later than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-868">若要`value`确定当前实例与的关系<xref:System.DateTime.CompareTo%2A> ，方法会比较<xref:System.DateTime.Ticks%2A>当前实例的属性， `value`但会忽略其<xref:System.DateTime.Kind%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-868">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span>  <span data-ttu-id="cc63e-869">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-869">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-870">可以通过比较其<xref:System.DateTime.Kind%2A>属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-870">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="cc63e-871">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，且执行<xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType>方式略优于方法重载，因为`value`无需将参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-871">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> method overload because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-872">下面的示例实例化<xref:System.DateTime>三个对象，一个表示当天的日期，另一个表示一年中的日期，另一个表示未来一年的日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-872">The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future.</span></span> <span data-ttu-id="cc63e-873">然后，它调用<xref:System.DateTime.CompareTo%28System.DateTime%29>方法并显示比较结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-873">It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.</span></span>  
  
 [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]
 [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(object value) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ value);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-874">要比较的装箱对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-874">A boxed object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-875">将此实例的值与包含指定的 <see cref="T:System.DateTime" /> 值的指定对象相比较，并返回一个整数，该整数指示此实例是早于、等于还是晚于指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-875">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="cc63e-876">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-876">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cc63e-877">值</span><span class="sxs-lookup"><span data-stu-id="cc63e-877">Value</span></span> 
 </term><description> <span data-ttu-id="cc63e-878">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-878">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cc63e-879">小于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-879">Less than zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-880">此实例早于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-880">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-881">零</span><span class="sxs-lookup"><span data-stu-id="cc63e-881">Zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-882">此实例与 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-882">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cc63e-883">大于零</span><span class="sxs-lookup"><span data-stu-id="cc63e-883">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="cc63e-884">此实例晚于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-884">This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-885">若要`value`确定当前实例与的关系<xref:System.DateTime.CompareTo%2A> ，方法会比较<xref:System.DateTime.Ticks%2A>当前实例的属性， `value`但会忽略其<xref:System.DateTime.Kind%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-885">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="cc63e-886">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-886">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-887">可以通过比较其<xref:System.DateTime.Kind%2A>属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-887">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="cc63e-888">的任何实例<xref:System.DateTime>，无论其值如何，都视为`null`大于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-888">Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-889">下面的示例演示<xref:System.DateTime.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-889">The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]
 [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-890"><paramref name="value" /> 不是 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-890"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTime.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-891">获取此实例的日期部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-891">Gets the date component of this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-892">一个新对象，其日期与此实例相同，时间值设置为午夜 12:00:00 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-892">A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-893"><xref:System.DateTime.Kind%2A> 返回<xref:System.DateTime>的值的属性值与当前实例的属性的值相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-893">The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.</span></span>  
  
 <span data-ttu-id="cc63e-894">因为类型表示单个类型的日期和时间，所以请务必避免将<xref:System.DateTime.Date%2A>属性返回的日期错误解释为日期和时间。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-894">Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-895">下面的示例使用<xref:System.DateTime.Date%2A>属性提取<xref:System.DateTime>值的日期部分，其时间部分设置为零（或0:00:00 或午夜）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-895">The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight).</span></span> <span data-ttu-id="cc63e-896">它还说明了根据显示<xref:System.DateTime>值时使用的格式字符串，时间部分可以继续出现在格式化的输出中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-896">It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.</span></span>  
  
 [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]
 [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]
 [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTime.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-897">获取此实例所表示的日期为该月中的第几天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-897">Gets the day of the month represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-898">日组成部分，表示为 1 和 31 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-898">The day component, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-899">属性始终返回公历中每月的第几天，即使当前<xref:System.DateTime>值是使用其他日历实例化的，或者当前线程区域性的默认日历不是公历日历。 <xref:System.DateTime.Day%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-899">The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-900">若要使用其他日历检索特定日期的日期，请调用该日历的<xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-900">To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-901">下面的示例使用<xref:System.DateTime.Day%2A>属性<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和方法来检索使用回历实例化的<xref:System.DateTime>值的月份日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-901">The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]
 [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  
  
 <span data-ttu-id="cc63e-902">同样，下面的示例使用<xref:System.DateTime.Day%2A>属性<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>和方法来检索当前线程区域性为 ar-SA （使用阿拉伯回历作为其默认日历）的月中的第几天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-902">Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]
 [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-903">下面的示例演示了<xref:System.DateTime.Day%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-903">The following example demonstrates the <xref:System.DateTime.Day%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTime.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-904">获取此实例所表示的日期是星期几。</span><span class="sxs-lookup"><span data-stu-id="cc63e-904">Gets the day of the week represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-905">一个枚举常量，指示此 <see cref="T:System.DateTime" /> 值是星期几。</span><span class="sxs-lookup"><span data-stu-id="cc63e-905">An enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-906"><xref:System.DayOfWeek>枚举中的常量的值范围从<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>到<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-906">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-907">如果强制转换为整数，则其值范围为0（指示<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>）到6（表示<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-907">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="cc63e-908"><xref:System.DateTime.DayOfWeek%2A>属性返回一个枚举常量; 它不反映系统的区域和语言设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-908">The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings.</span></span> <span data-ttu-id="cc63e-909">若要检索表示特定日期的本地化星期几名称的<xref:System.DateTime.ToString%2A>字符串，请调用`format`包含参数的方法的重载之一，并向`ddd`其传递或`dddd`自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-909">To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings.</span></span> <span data-ttu-id="cc63e-910">有关详细信息，请参阅[如何：从特定日期中提取星期几](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-910">For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-911">下面的示例演示<xref:System.DateTime.DayOfWeek%2A>了属性<xref:System.DayOfWeek?displayProperty=nameWithType>和枚举。</span><span class="sxs-lookup"><span data-stu-id="cc63e-911">The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]
 [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]
 [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTime.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-912">获取此实例所表示的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-912">Gets the day of the year represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-913">该年中的第几天，表示为 1 和 366 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-913">The day of the year, expressed as a value between 1 and 366.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-914">在<xref:System.DateTime.DayOfYear%2A>计算一年中的第几天时，属性将占用闰年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-914">The <xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year.</span></span> <span data-ttu-id="cc63e-915">无论当前线程区域性的当前日历如何，属性值始终反映公历中的第几天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-915">The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</span></span> <span data-ttu-id="cc63e-916">若要检索不同日历中的一年中的第几天<xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> ，请调用该日历的方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-916">To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> method of that calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-917">下面的示例显示公历中年2010-2020 年12月31日的日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-917">The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-918">请注意，该示例显示12月31日是一年中的第366日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-918">Note that the example shows that December 31 is the 366th day of the year in leap years.</span></span>  
  
 [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]
 [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DaysInMonth">
      <MemberSignature Language="C#" Value="public static int DaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="static member DaysInMonth : int * int -&gt; int" Usage="System.DateTime.DaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-919">年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-919">The year.</span></span></param>
        <param name="month"><span data-ttu-id="cc63e-920">月（介于 1 到 12 之间的一个数字）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-920">The month (a number ranging from 1 to 12).</span></span></param>
        <summary><span data-ttu-id="cc63e-921">返回指定年和月中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-921">Returns the number of days in the specified month and year.</span></span></summary>
        <returns><span data-ttu-id="cc63e-922">指定 <paramref name="month" /> 中 <paramref name="year" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-922">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span></span>  
  
<span data-ttu-id="cc63e-923">例如，如果 <paramref name="month" /> 等于 2（表示二月），则返回值为 28 或 29，具体取决于 <paramref name="year" /> 是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-923">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-924">即使<xref:System.DateTime.DaysInMonth%2A>公历不是`month`当前`year`区域性的当前日历，该方法也会将和解释为公历的月份和年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-924">The <xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</span></span> <span data-ttu-id="cc63e-925">若要获取特定日历的指定月份中的天数，请调用该日历的<xref:System.Globalization.Calendar.GetDaysInMonth%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-925">To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-926">下面的示例演示如何使用<xref:System.DateTime.DaysInMonth%2A>方法来确定2001年 1998 2 月（非闰年）和2月1996（闰年）中的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-926">The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</span></span>  
  
 [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]
 [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  
  
 <span data-ttu-id="cc63e-927">下面的示例显示在一个整数数组中指定的一年中每个月的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-927">The following example displays the number of days in each month of a year specified in an integer array.</span></span>  
  
 [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]
 [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-928"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="cc63e-928"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="cc63e-929">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-929">-or-</span></span> 
 <span data-ttu-id="cc63e-930"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-930"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-931">返回一个值，该值指示两个 <see cref="T:System.DateTime" /> 对象，或者一个 <see cref="T:System.DateTime" /> 实例和另一个对象或 <see cref="T:System.DateTime" /> 是否具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-931">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime value);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTime -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-932">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-932">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="cc63e-933">返回一个值，该值指示此实例的值是否等于指定 <see cref="T:System.DateTime" /> 实例的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-933">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-934">如果 <see langword="true" /> 参数与此实例的值相等，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-934"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-935">如果当前实例的`value` 属性值相等，则为该实例和相等。<xref:System.DateTime.Ticks%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-935">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="cc63e-936">它们<xref:System.DateTime.Kind%2A>的属性值在测试中不被视为相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-936">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
 <span data-ttu-id="cc63e-937">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行<xref:System.DateTime.Equals%2A>方式略优于方法，因为`value`无需将参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-937">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-938">下面的示例演示<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-938">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-939">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-939">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="cc63e-940">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-940">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="cc63e-941">如果 <see langword="true" /> 是 <paramref name="value" /> 的实例并且等于此实例的值，则为 <see cref="T:System.DateTime" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-941"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-942">如果当前实例的`value` 属性值相等，则为该实例和相等。<xref:System.DateTime.Ticks%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-942">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="cc63e-943">它们<xref:System.DateTime.Kind%2A>的属性值在测试中不被视为相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-943">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-944">下面的示例演示<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-944">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTime * DateTime -&gt; bool" Usage="System.DateTime.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-945">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-945">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-946">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-946">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-947">返回一个值，该值指示的两个 <see cref="T:System.DateTime" /> 实例是否具有同一个日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-947">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span></span></summary>
        <returns><span data-ttu-id="cc63e-948">如果两个值相等，则为，<see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-948"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-949">`t1`如果`t2` 其<xref:System.DateTime.Ticks%2A>属性值相等，则和相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-949">`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="cc63e-950">它们<xref:System.DateTime.Kind%2A>的属性值在测试中不被视为相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-950">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-951">下面的示例演示<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-951">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]
 [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromBinary">
      <MemberSignature Language="C#" Value="public static DateTime FromBinary (long dateData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromBinary(int64 dateData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromBinary(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBinary (dateData As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromBinary(long dateData);" />
      <MemberSignature Language="F#" Value="static member FromBinary : int64 -&gt; DateTime" Usage="System.DateTime.FromBinary dateData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateData" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateData"><span data-ttu-id="cc63e-952">64 位带符号整数，它对 2 位字段的 <see cref="P:System.DateTime.Kind" /> 属性以及 62 位字段的 <see cref="P:System.DateTime.Ticks" /> 属性进行了编码。</span><span class="sxs-lookup"><span data-stu-id="cc63e-952">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span></span></param>
        <summary><span data-ttu-id="cc63e-953">反序列化一个 64 位二进制值，并重新创建序列化的 <see cref="T:System.DateTime" /> 初始对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-953">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="cc63e-954">一个对象，它等效于由 <see cref="T:System.DateTime" /> 方法序列化的 <see cref="M:System.DateTime.ToBinary" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-954">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-955">使用方法将当前<xref:System.DateTime>对象的值转换为二进制值。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-955">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="cc63e-956">随后，使用二进制值和<xref:System.DateTime.FromBinary%2A>方法重新创建原始<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-956">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-957">在某些情况下， <xref:System.DateTime> <xref:System.DateTime.FromBinary%2A>方法返回的值与提供给该<xref:System.DateTime.ToBinary%2A>方法的原始<xref:System.DateTime>值不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-957">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="cc63e-958">有关详细信息，请参阅下一节 "本地时间调整"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-958">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="cc63e-959">本地时间调整</span><span class="sxs-lookup"><span data-stu-id="cc63e-959">Local Time Adjustment</span></span>  
 <span data-ttu-id="cc63e-960">本地时间（即调整为本地时区的协调世界时）由其<xref:System.DateTime> <xref:System.DateTime.Kind%2A>属性具有值<xref:System.DateTimeKind.Local>的结构来表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-960">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="cc63e-961">从<xref:System.DateTime.ToBinary%2A>方法生成的<xref:System.DateTime>二进制表示形式还原本地值时，该<xref:System.DateTime.FromBinary%2A>方法可能会调整重新创建的值，使其不等于原始值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-961">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="cc63e-962">在下列条件下，可能会出现这种情况：</span><span class="sxs-lookup"><span data-stu-id="cc63e-962">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="cc63e-963">如果本地<xref:System.DateTime>对象<xref:System.DateTime.ToBinary%2A>按方法在一个时区中序列化，然后<xref:System.DateTime.FromBinary%2A>方法在不同时区中进行反序列化，则生成<xref:System.DateTime>的对象所表示的本地时间会自动调整第二个时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-963">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="cc63e-964">例如，假设某个<xref:System.DateTime>对象表示本地时间下午3点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-964">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="cc63e-965">在美国的中执行的应用程序太平洋时区使用<xref:System.DateTime.ToBinary%2A>方法将该<xref:System.DateTime>对象转换为二进制值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-965">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="cc63e-966">在美国的其他正在执行的应用程序然后， <xref:System.DateTime.FromBinary%2A>东部时区使用方法将二进制值转换为新<xref:System.DateTime>的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-966">Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-967">新<xref:System.DateTime>的对象的值为下午6点，表示与原来的下午3点相同的时间点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-967">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="cc63e-968">值，但会调整为东部时区中的本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-968">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="cc63e-969">如果本地<xref:System.DateTime>值的二进制表示形式表示所调用系统<xref:System.DateTime.FromBinary%2A>的本地时区中的无效时间，则将调整该时间，使其有效。</span><span class="sxs-lookup"><span data-stu-id="cc63e-969">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="cc63e-970">例如，从标准时间转换为夏时制时间美国在2010年3月14日上午，上午2:00，时间前进一小时，到上午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-970">For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="cc63e-971">此小时间隔为无效时间，即此时区中不存在的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-971">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="cc63e-972">下面的示例显示，当处于此范围内的时间由<xref:System.DateTime.ToBinary%2A>方法转换为二进制值，然后<xref:System.DateTime.FromBinary%2A>通过方法还原时，原始值将调整为有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-972">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="cc63e-973">如示例所示，可以通过将特定日期和时间值传递给<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>方法来确定是否可以修改该日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-973">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="cc63e-974">版本注意事项</span><span class="sxs-lookup"><span data-stu-id="cc63e-974">Version Considerations</span></span>  
 <span data-ttu-id="cc63e-975">从 .NET Framework 版本2.0 开始， <xref:System.DateTime>结构包含一个私有类型字段，该字段指示指定的时间是本地时间、协调世界时（UTC）还是两者都不连接到专用刻度字段，这是包含指定日期和时间的100毫微秒刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-975">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="cc63e-976">可以通过属性访问<xref:System.DateTime.Ticks%2A>的计时周期数，可以通过<xref:System.DateTime.Kind%2A>属性访问 theKind 字段。</span><span class="sxs-lookup"><span data-stu-id="cc63e-976">The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-977">在 .NET Framework 2.0 之前，如果手动序列化<xref:System.DateTime>对象<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>，而不是使用序列化接口（如），则只需要序列化中<xref:System.DateTime>的滴答数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-977">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you needed to serialize only the Ticks data in the <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-978">从 .NET Framework 2.0 开始，还必须序列化类型数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-978">Starting with the .NET Framework 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-979"><paramref name="dateData" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-979"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToBinary" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="cc63e-980">以计时周期表示的 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-980">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="cc63e-981">将指定的 Windows 文件时间转换为等效的本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-981">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-982">一个表示本地时间的对象，等效于由 <paramref name="fileTime" /> 参数表示的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-982">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-983">Windows 文件时间是一个64位的值，它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="cc63e-983">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="cc63e-984">公元协调世界时（UTC）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-984">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="cc63e-985">当应用程序创建、访问或写入到文件时，Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="cc63e-985">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="cc63e-986">`fileTime`参数指定以100毫微秒计时周期表示的文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-986">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="cc63e-987">从 .NET Framework 版本2.0 开始，返回值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-987">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-988">下面的示例演示<xref:System.DateTime.FromFileTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-988">The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-989"><paramref name="fileTime" /> 小于零或表示大于 <see cref="F:System.DateTime.MaxValue" /> 的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-989"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-990">通常， <see cref="M:System.DateTime.FromFileTime(System.Int64)" />方法<see cref="T:System.DateTime" /> 会还原由方法保存的值。<see cref="M:System.DateTime.ToFileTime" /></span><span class="sxs-lookup"><span data-stu-id="cc63e-990">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="cc63e-991">但是，在下列情况下，这两个值可能不同：</span><span class="sxs-lookup"><span data-stu-id="cc63e-991">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="cc63e-992">-如果<see cref="T:System.DateTime" />值的序列化和反序列化出现在不同的时区中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-992">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="cc63e-993">例如，如果<see cref="T:System.DateTime" />值的时间为 12:30 P.M。</span><span class="sxs-lookup"><span data-stu-id="cc63e-993">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="cc63e-994">在美国会序列化东部时区，然后在美国太平洋时区，12:30 P.M. 的原始值</span><span class="sxs-lookup"><span data-stu-id="cc63e-994">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="cc63e-995">调整为凌晨9:30。</span><span class="sxs-lookup"><span data-stu-id="cc63e-995">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="cc63e-996">来反映两个时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-996">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="cc63e-997">-如果<see cref="T:System.DateTime" />序列化的值表示本地时区中的无效时间，则为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-997">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="cc63e-998">在这种情况下<see cref="M:System.DateTime.ToFileTime" /> ，方法会调整<see cref="T:System.DateTime" />还原的值，使其表示本地时区中的有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-998">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="cc63e-999">例如，从标准时间转换为夏时制发生在美国太平洋时区于2010年3月14日上午2:00 点，时间前进一小时，上午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-999">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="cc63e-1000">此小时间隔为无效时间，即此时区中不存在的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1000">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="cc63e-1001">下面的示例显示，当此范围内的时间由<see cref="M:System.DateTime.ToFileTime" />方法转换为长整数值，然后<see cref="M:System.DateTime.FromFileTime(System.Int64)" />通过方法还原时，原始值将调整为有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1001">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="cc63e-1002">如示例所示，可以通过将特定日期和时间值传递给<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法来确定是否可以修改该日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1002">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="cc63e-1003">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1003">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTimeUtc (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTimeUtc(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTimeUtc(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTimeUtc (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTimeUtc(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTimeUtc : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTimeUtc fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="cc63e-1004">以计时周期表示的 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1004">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="cc63e-1005">将指定的 Windows 文件时间转换为等效的 UTC 时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1005">Converts the specified Windows file time to an equivalent UTC time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1006">一个表示 UTC 时间的对象，等效于由 <paramref name="fileTime" /> 参数表示的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1006">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1007">Windows 文件时间是一个64位的值，它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="cc63e-1007">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="cc63e-1008">公元协调世界时（UTC）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1008">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="cc63e-1009">当应用程序创建、访问或写入到文件时，Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1009">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="cc63e-1010">`fileTime`参数指定以100毫微秒计时周期表示的文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1010">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="cc63e-1011">从 .NET Framework 版本2.0 开始，返回值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Utc>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1011">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1012"><paramref name="fileTime" /> 小于零或表示大于 <see cref="F:System.DateTime.MaxValue" /> 的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1012"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.DateTime.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FromOADate">
      <MemberSignature Language="C#" Value="public static DateTime FromOADate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromOADate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromOADate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOADate (d As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromOADate(double d);" />
      <MemberSignature Language="F#" Value="static member FromOADate : double -&gt; DateTime" Usage="System.DateTime.FromOADate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cc63e-1013">OLE 自动化日期值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1013">An OLE Automation Date value.</span></span></param>
        <summary><span data-ttu-id="cc63e-1014">返回与指定的 OLE 自动化日期等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1014">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1015">一个对象，它表示与 <paramref name="d" /> 相同的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1015">An object that represents the same date and time as <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1016">`d`参数是一个双精度浮点数，表示日期作为基准日期早于或晚于1899年12月30日的天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1016">The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</span></span> <span data-ttu-id="cc63e-1017">的`d`符号和整数部分将日期编码为从30年 12 1899 月30日起的正数或负数次偏移，并`d`将一天中的时间编码为从午夜开始进行日置换的一小部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1017">The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight.</span></span> <span data-ttu-id="cc63e-1018">`d`必须是介于负657435.0 到正2958465.99999999 之间的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1018">`d` must be a value between negative 657435.0 through positive 2958465.99999999.</span></span>  
  
 <span data-ttu-id="cc63e-1019">请注意，由于编码日期的方式，有两种方法可以表示一天中的任何时间（1899年12月30日）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1019">Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</span></span> <span data-ttu-id="cc63e-1020">例如，-0.5 和0.5 都表示30年 12 1899 月30日，因为从基准日期算起的加减或减零天数仍是基准日期，而从午夜开始的半天置换为中午。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1020">For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</span></span>  
  
 <span data-ttu-id="cc63e-1021">有关<xref:System.DateTime.ToOADate%2A> OLE 自动化的详细信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1021">See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-1022">日期不是有效的 OLE 自动化日期值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1022">The date is not a valid OLE Automation Date value.</span></span></exception>
        <altmember cref="M:System.DateTime.ToOADate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDateTimeFormats">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1023">将此实例的值转换为标准日期和时间格式说明符支持的所有字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1023">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1024">不应假设多次调用<xref:System.DateTime.GetDateTimeFormats%2A>重载将返回相同的数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1024">You should not assume that multiple calls to the <xref:System.DateTime.GetDateTimeFormats%2A> overloads will return identical data.</span></span> <span data-ttu-id="cc63e-1025">根据特定的重载，此方法返回的数据可能会更改（如果当前区域性发生更改、用户重写单独的区域性设置或对系统的区域性数据进行更新）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1025">Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1026">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1026">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : unit -&gt; string[]" Usage="dateTime.GetDateTimeFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1027">将此实例的值转换为标准日期和时间格式说明符支持的所有字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1027">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1028">字符串数组，其中每个元素都表示此实例的以标准日期和时间格式说明符之一进行格式设置的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1028">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1029"><xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>方法返回的字符串数组等效于将通过单独调用<xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType>返回的字符串数组与 "d"、"d"、"f"、"f"、"g"、"g"、"m"、"o"、"r"、"s"、"t"、"t"、"u"、"u" 和 "y" 标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1029">The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="cc63e-1030">有关标准格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1030">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="cc63e-1031">使用当前区域性中的信息设置返回值的每个元素的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1031">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="cc63e-1032">有关当前区域性的区域性特定格式设置信息的详细信息，请参阅<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1032">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1033">由于此方法使用区分区域性的数据，因此不应假定对方法的多个调用将返回相同的数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1033">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="cc63e-1034">如果当前区域性发生更改、用户重写单独的区域性设置或对系统的区域性数据进行更新，则此方法返回的数据可能会更改。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1034">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1035">下面的示例演示<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1035">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-1036">它使用计算机的当前区域性中所有可能的标准日期和时间格式显示日期的字符串表示形式，在本例中为 en-us。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1036">It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]
 [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  
  
 <span data-ttu-id="cc63e-1037">该示例显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1037">The example displays the following output:</span></span>  
  
```  
7/28/2009  
7/28/09  
07/28/09  
07/28/2009  
09/07/28  
2009-07-28  
28-Jul-09  
Tuesday, July 28, 2009  
July 28, 2009  
Tuesday, 28 July, 2009  
28 July, 2009  
Tuesday, July 28, 2009 5:23 AM  
Tuesday, July 28, 2009 05:23 AM  
Tuesday, July 28, 2009 5:23  
Tuesday, July 28, 2009 05:23  
July 28, 2009 5:23 AM  
July 28, 2009 05:23 AM  
July 28, 2009 5:23  
July 28, 2009 05:23  
Tuesday, 28 July, 2009 5:23 AM  
Tuesday, 28 July, 2009 05:23 AM  
Tuesday, 28 July, 2009 5:23  
Tuesday, 28 July, 2009 05:23  
28 July, 2009 5:23 AM  
28 July, 2009 05:23 AM  
28 July, 2009 5:23  
28 July, 2009 05:23  
Tuesday, July 28, 2009 5:23:15 AM  
Tuesday, July 28, 2009 05:23:15 AM  
Tuesday, July 28, 2009 5:23:15  
Tuesday, July 28, 2009 05:23:15  
July 28, 2009 5:23:15 AM  
July 28, 2009 05:23:15 AM  
July 28, 2009 5:23:15  
July 28, 2009 05:23:15  
Tuesday, 28 July, 2009 5:23:15 AM  
Tuesday, 28 July, 2009 05:23:15 AM  
Tuesday, 28 July, 2009 5:23:15  
Tuesday, 28 July, 2009 05:23:15  
28 July, 2009 5:23:15 AM  
28 July, 2009 05:23:15 AM  
28 July, 2009 5:23:15  
28 July, 2009 05:23:15  
7/28/2009 5:23 AM  
7/28/2009 05:23 AM  
7/28/2009 5:23  
7/28/2009 05:23  
7/28/09 5:23 AM  
7/28/09 05:23 AM  
7/28/09 5:23  
7/28/09 05:23  
07/28/09 5:23 AM  
07/28/09 05:23 AM  
07/28/09 5:23  
07/28/09 05:23  
07/28/2009 5:23 AM  
07/28/2009 05:23 AM  
07/28/2009 5:23  
07/28/2009 05:23  
09/07/28 5:23 AM  
09/07/28 05:23 AM  
09/07/28 5:23  
09/07/28 05:23  
2009-07-28 5:23 AM  
2009-07-28 05:23 AM  
2009-07-28 5:23  
2009-07-28 05:23  
28-Jul-09 5:23 AM  
28-Jul-09 05:23 AM  
28-Jul-09 5:23  
28-Jul-09 05:23  
7/28/2009 5:23:15 AM  
7/28/2009 05:23:15 AM  
7/28/2009 5:23:15  
7/28/2009 05:23:15  
7/28/09 5:23:15 AM  
7/28/09 05:23:15 AM  
7/28/09 5:23:15  
7/28/09 05:23:15  
07/28/09 5:23:15 AM  
07/28/09 05:23:15 AM  
07/28/09 5:23:15  
07/28/09 05:23:15  
07/28/2009 5:23:15 AM  
07/28/2009 05:23:15 AM  
07/28/2009 5:23:15  
07/28/2009 05:23:15  
09/07/28 5:23:15 AM  
09/07/28 05:23:15 AM  
09/07/28 5:23:15  
09/07/28 05:23:15  
2009-07-28 5:23:15 AM  
2009-07-28 05:23:15 AM  
2009-07-28 5:23:15  
2009-07-28 05:23:15  
28-Jul-09 5:23:15 AM  
28-Jul-09 05:23:15 AM  
28-Jul-09 5:23:15  
28-Jul-09 05:23:15  
July 28  
July 28  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
5:23 AM  
05:23 AM  
5:23  
05:23  
5:23:15 AM  
05:23:15 AM  
5:23:15  
05:23:15  
2009-07-28 05:23:15Z  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15  
Tuesday, July 28, 2009 12:23:15  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15  
July 28, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15  
28 July, 2009 12:23:15  
July, 2009  
July, 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1038">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1038">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char -&gt; string[]" Usage="dateTime.GetDateTimeFormats format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cc63e-1039">标准日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1039">A standard date and time format string.</span></span></param>
        <summary><span data-ttu-id="cc63e-1040">将此实例的值转换为指定的标准日期和时间格式说明符支持的所有字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1040">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1041">符串数组，其中每个元素都表示此实例的以 <paramref name="format" /> 标准日期和时间格式说明符之一进行格式设置的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1041">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1042">`format`参数可以是任何标准日期和时间格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1042">The `format` parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="cc63e-1043">其中包括 d、D、f、F、g、G、M （或 M）、O （或 o）、R （或 r）、s、t、T、u、U 和 Y （或 y）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1043">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="cc63e-1044">有关详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1044">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="cc63e-1045">使用当前区域性中的信息设置返回值的每个元素的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1045">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="cc63e-1046">有关当前区域性的区域性特定格式设置信息的详细信息，请参阅<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1046">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1047">由于此方法使用区分区域性的数据，因此不应假定对方法的多个调用将返回相同的数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1047">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="cc63e-1048">如果当前区域性发生更改、用户重写单独的区域性设置或对系统的区域性数据进行更新，则此方法返回的数据可能会更改。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1048">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1049">下面的示例演示<xref:System.DateTime.GetDateTimeFormats%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1049">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method.</span></span> <span data-ttu-id="cc63e-1050">它使用当前区域性的长日期格式说明符（"D"）显示日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1050">It displays the string representation of a date using the long date format specifier ("D") for the current culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]
 [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1051"><paramref name="format" /> 不是有效的标准日期和时间格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1051"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1052">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1052">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1053">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1053">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="cc63e-1054">将此实例的值转换为标准日期和时间格式说明符和指定的区域性特定格式信息支持的所有字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1054">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1055">字符串数组，其中每个元素都表示此实例的以标准日期和时间格式说明符之一进行格式设置的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1055">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1056"><xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>方法返回的字符串数组等效于将通过单独调用<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>返回的字符串数组与 "d"、"d"、"f"、"f"、"g"、"g"、"m"、"o"、"r"、"s"、"t"、"t"、"u"、"u" 和 "y" 标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1056">The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="cc63e-1057">有关标准格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1057">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="cc63e-1058">返回值的每个元素均使用提供的`provider`区域性特定信息进行格式化。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1058">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1059">由于此方法使用区分区域性的数据，因此不应假定对方法的多个调用将返回相同的数据`provider` ，除非<xref:System.Globalization.CultureInfo>是表示固定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1059">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="cc63e-1060">如果用户重写的单个区域性设置`provider` ，或如果对系统的区域性`provider`数据进行更新，则此方法返回的数据可能会更改。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1060">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1061">下面的示例演示<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1061">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-1062">它使用 fr-fr 区域性的所有可能标准日期和时间格式显示日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1062">It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]
 [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]
 [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  
  
 <span data-ttu-id="cc63e-1063">该示例显示以下输出：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1063">The example displays the following output:</span></span>  
  
```  
28/07/2009  
28/07/09  
28.07.09  
28-07-09  
2009-07-28  
mardi 28 juillet 2009  
28 juil. 09  
28 juillet 2009  
mardi 28 juillet 2009 05:23  
mardi 28 juillet 2009 5:23  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23  
28 juil. 09 5:23  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23  
28 juillet 2009 5:23  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
mardi 28 juillet 2009 05:23:15  
mardi 28 juillet 2009 5:23:15  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23:15  
28 juil. 09 5:23:15  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23:15  
28 juillet 2009 5:23:15  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
28/07/2009 05:23  
28/07/2009 5:23  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23  
28/07/09 5:23  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23  
28.07.09 5:23  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23  
28-07-09 5:23  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23  
2009-07-28 5:23  
2009-07-28 05.23  
2009-07-28 05 h 23  
28/07/2009 05:23:15  
28/07/2009 5:23:15  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23:15  
28/07/09 5:23:15  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23:15  
28.07.09 5:23:15  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23:15  
28-07-09 5:23:15  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23:15  
2009-07-28 5:23:15  
2009-07-28 05.23  
2009-07-28 05 h 23  
28 juillet  
28 juillet  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
05:23  
5:23  
05.23  
05 h 23  
05:23:15  
5:23:15  
05.23  
05 h 23  
2009-07-28 05:23:15Z  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12.23  
mardi 28 juillet 2009 12 h 23  
28 juil. 09 12:23:15  
28 juil. 09 12:23:15  
28 juil. 09 12.23  
28 juil. 09 12 h 23  
28 juillet 2009 12:23:15  
28 juillet 2009 12:23:15  
28 juillet 2009 12.23  
28 juillet 2009 12 h 23  
juillet 2009  
juillet 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1064">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1064">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char, provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char * IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats (format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cc63e-1065">标准和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1065">A date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1066">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1066">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="cc63e-1067">将此实例的值转换为指定的标准日期和时间格式说明符和区域性特定格式信息支持的所有字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1067">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1068">字符串数组，其中每个元素都表示此实例的以标准日期和时间格式说明符之一进行格式设置的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1068">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1069">Format 参数可以是任何标准日期和时间格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1069">The format parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="cc63e-1070">其中包括 d、D、f、F、g、G、M （或 M）、O （或 o）、R （或 r）、s、t、T、u、U 和 Y （或 y）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1070">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="cc63e-1071">有关详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1071">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="cc63e-1072">返回值的每个元素均使用提供的`provider`区域性特定信息进行格式化。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1072">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1073">由于此方法使用区分区域性的数据，因此不应假定对方法的多个调用将返回相同的数据`provider` ，除非<xref:System.Globalization.CultureInfo>是表示固定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1073">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="cc63e-1074">如果用户重写的单个区域性设置`provider` ，或如果对系统的区域性`provider`数据进行更新，则此方法返回的数据可能会更改。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1074">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1075">下面的示例演示<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1075">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="cc63e-1076">它使用 fr-fr 区域性的短日期格式说明符（"d"）显示日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1076">It displays the string representations of a date using the short date format specifier ("d") for the fr-FR culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]
 [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1077"><paramref name="format" /> 不是有效的标准日期和时间格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1077"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1078">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1078">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTime.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1079">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1079">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1080">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1080">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1081">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1081">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1082">枚举常数 <see cref="F:System.TypeCode.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1082">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTime.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1083">获取此实例所表示日期的小时部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1083">Gets the hour component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1084">小时组成部分，表示为 0 和 23 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1084">The hour component, expressed as a value between 0 and 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1085">始终使用24小时<xref:System.DateTime.Hour%2A>制表示属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1085">The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock.</span></span> <span data-ttu-id="cc63e-1086">若要使用12小时制检索表示日期和时间的小时的字符串，请使用 "h" 自<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>定义<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>格式说明符调用或方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1086">To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "h" custom format specifier.</span></span> <span data-ttu-id="cc63e-1087">例如:</span><span class="sxs-lookup"><span data-stu-id="cc63e-1087">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]
 [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1088">下面的示例演示了<xref:System.DateTime.Hour%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1088">The following example demonstrates the <xref:System.DateTime.Hour%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime();" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : unit -&gt; bool" Usage="dateTime.IsDaylightSavingTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1089">指示此 <see cref="T:System.DateTime" /> 实例是否在当前时区的夏时制范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1089">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1090">如果 <see langword="true" /> 属性的值为 <see cref="P:System.DateTime.Kind" /> 或 <see cref="F:System.DateTimeKind.Local" />，并且 <see cref="F:System.DateTimeKind.Unspecified" /> 的此实例的值在当前时区的夏时制范围内，则为 <see cref="T:System.DateTime" />；如果 <see langword="false" /> 为 <see cref="P:System.DateTime.Kind" />，则为 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1090"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1091">此方法确定当前<xref:System.DateTime>值是否处于本地时区的夏时制范围内，该范围<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>由属性返回。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1091">This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1092">可以通过检索其<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType>属性的值来确定时区是否支持夏令时。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1092">You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1093">对于观察夏令时的时区，可以通过检索<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>由时区的<xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>属性返回的数组来确定何时从夏令时转换到夏令时。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1093">For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="cc63e-1094">如果当前<xref:System.DateTime>值表示在本地时区中不明确或无效的时间，则该方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1094">If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.</span></span>  
  
 <span data-ttu-id="cc63e-1095">在[!INCLUDE[winxp](~/includes/winxp-md.md)]系统上， <xref:System.DateTime.IsDaylightSavingTime%2A>当确定当前实例是否为夏时制时，此方法仅识别当前调整规则。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1095">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</span></span> <span data-ttu-id="cc63e-1096">因此，该方法可能无法准确报告当前实例是否为当前调整规则生效前的时间段的夏时制。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1096">As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public static bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="static member IsLeapYear : int -&gt; bool" Usage="System.DateTime.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="cc63e-1097">四位数年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1097">A 4-digit year.</span></span></param>
        <summary><span data-ttu-id="cc63e-1098">返回指定的年份是否为闰年的指示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1098">Returns an indication whether the specified year is a leap year.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1099">如果 <see langword="true" /> 是闰年，则为 <paramref name="year" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1099"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1100">`year`指定为四位数基数为10的数字;例如，1996。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1100">`year` is specified as a 4-digit base 10 number; for example, 1996.</span></span>  
  
 <span data-ttu-id="cc63e-1101">`year`在公历中始终解释为年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1101">`year` is always interpreted as a year in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-1102">若要确定某一年份是否为其他日历中的闰年，请调用该日历对象的`IsLeapYear`方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1102">To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1103">下面的示例使用<xref:System.DateTime.IsLeapYear%2A>方法来确定1994和2014之间的年份是闰年。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1103">The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years.</span></span> <span data-ttu-id="cc63e-1104">该示例还说明了使用<xref:System.DateTime.AddYears%2A>方法将年份添加到闰日时的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1104">The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.</span></span>  
  
 [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]
 [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1105"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1105"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public DateTimeKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As DateTimeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeKind Kind { DateTimeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Kind : DateTimeKind" Usage="System.DateTime.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1106">获取一个值，该值指示由此实例表示的时间是基于本地时间、协调世界时 (UTC)，还是两者皆否。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1106">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span></span></summary>
        <value><span data-ttu-id="cc63e-1107">用于指示当前时间表示的含义的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1107">One of the enumeration values that indicates what the current time represents.</span></span> <span data-ttu-id="cc63e-1108">默认值为 <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1108">The default is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1109">可以通过调用<xref:System.DateTime.Kind%2A> <xref:System.DateTime.SpecifyKind%2A>方法将新<xref:System.DateTime>值的属性显式设置为特定<xref:System.DateTimeKind>值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1109">You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.</span></span>  
  
 <span data-ttu-id="cc63e-1110"><xref:System.DateTime.Kind%2A> 属性<xref:System.DateTime>允许值明确反映协调世界时（UTC）或本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1110">The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</span></span> <span data-ttu-id="cc63e-1111">与此相反， <xref:System.DateTimeOffset>该结构可以明确地将任何时区中的任何时间反映为单个时间点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1111">In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1112">下面<xref:System.DateTime.SpecifyKind%2A>的示例使用方法演示<xref:System.DateTime.Kind%2A>属性如何影响<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1112">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTime" Usage="System.DateTime.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1113">表示 <see cref="T:System.DateTime" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1113">Represents the largest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="cc63e-1114">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1114">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1115">此常量的值等效于23：59： 59.9999999 UTC，9999（公历）12月31日，，1 100 毫微秒时间刻度早于 00:00:00 UTC，年1月 1 10000 日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1115">The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</span></span>  
  
 <span data-ttu-id="cc63e-1116">某些日历（如<xref:System.Globalization.ThaiBuddhistCalendar>）支持早于<xref:System.DateTime.MaxValue>的日期范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1116">Some calendars, such as the <xref:System.Globalization.ThaiBuddhistCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="cc63e-1117">在这些情况下，尝试在<xref:System.DateTime.MaxValue>变量赋值或格式设置和分析操作中进行访问<xref:System.ArgumentOutOfRangeException>可能会引发。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1117">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="cc63e-1118">您可以<xref:System.DateTime.MaxValue?displayProperty=nameWithType> <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType>从属性中检索指定区域性的最新有效日期值，而不是检索的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1118">Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1119">下面的示例通过将<xref:System.DateTime> <xref:System.Int64>对象的构造函数传递给一个表示刻度数的值来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1119">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="cc63e-1120">在调用构造函数之前，该示例确保此值大于或等于`DateTime.MinValue.Ticks`且小于或`DateTime.MaxValue.Ticks`等于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1120">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="cc63e-1121">如果不是<xref:System.ArgumentOutOfRangeException>，则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1121">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DateTime.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTime.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1122">获取此实例所表示日期的毫秒部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1122">Gets the milliseconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1123">毫秒组成部分，表示为 0 和 999 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1123">The milliseconds component, expressed as a value between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1124">可以通过使用 "fff" 格式说明符<xref:System.DateTime.Millisecond%2A>来显示属性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1124">You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the "fff" format specifier.</span></span> <span data-ttu-id="cc63e-1125">例如，下面的代码显示一个字符串，其中包含在控制台中的日期和时间的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1125">For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]
 [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  
  
 <span data-ttu-id="cc63e-1126">还可以通过使用 "o" 标准格式说明符，与日期和时间值的其他组件一起显示毫秒部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1126">You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</span></span> <span data-ttu-id="cc63e-1127">例如:</span><span class="sxs-lookup"><span data-stu-id="cc63e-1127">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]
 [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  
  
 <span data-ttu-id="cc63e-1128">但是，对于显示，"o" 格式说明符比用于往返或存储<xref:System.DateTime>值更少。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1128">However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-1129">你还可以通过使用自定义格式字符串，与其他日期和时间组件一起显示毫秒，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1129">You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]
 [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1130">下面的示例演示了<xref:System.DateTime.Millisecond%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1130">The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTime.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1131">获取此实例所表示日期的分钟部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1131">Gets the minute component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1132">分钟组成部分，表示为 0 和 59 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1132">The minute component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc63e-1133">下面的示例演示了<xref:System.DateTime.Minute%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1133">The following example demonstrates the <xref:System.DateTime.Minute%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTime" Usage="System.DateTime.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1134">表示 <see cref="T:System.DateTime" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1134">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="cc63e-1135">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1135">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1136">此常量的值等效于公历的00：00： 00.0000000 UTC，0001年1月1日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1136">The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="cc63e-1137"><xref:System.DateTime.MinValue>定义分配给未初始化<xref:System.DateTime>的变量的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1137"><xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable.</span></span> <span data-ttu-id="cc63e-1138">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1138">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]
 [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  
  
 <span data-ttu-id="cc63e-1139">在<xref:System.DateTime.MinValue>将<xref:System.DateTime.MaxValue>值传递给<xref:System.DateTime>构造函数之前，可以使用和属性来确保值位于受支持的范围内。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1139">The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor.</span></span> <span data-ttu-id="cc63e-1140">"示例" 部分中的代码说明了这种用法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1140">The code in the Example section illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1141">下面的示例通过将<xref:System.DateTime> <xref:System.Int64>对象的构造函数传递给一个表示刻度数的值来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1141">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="cc63e-1142">在调用构造函数之前，该示例确保此值大于或等于`DateTime.MinValue.Ticks`且小于或`DateTime.MaxValue.Ticks`等于。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1142">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="cc63e-1143">如果不是<xref:System.ArgumentOutOfRangeException>，则会引发。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1143">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTime.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1144">获取此实例所表示日期的月份部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1144">Gets the month component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1145">月组成部分，表示为 1 和 12 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1145">The month component, expressed as a value between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc63e-1146">下面的示例演示了<xref:System.DateTime.Month%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1146">The following example demonstrates the <xref:System.DateTime.Month%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="System.DateTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1147">获取一个 <see cref="T:System.DateTime" /> 对象，该对象设置为此计算机上的当前日期和时间，表示为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1147">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span></span></summary>
        <value><span data-ttu-id="cc63e-1148">其值为当前日期和时间的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1148">An object whose value is the current local date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1149">属性返回一个<xref:System.DateTime>值，该值表示本地计算机上的当前日期和时间。 <xref:System.DateTime.Now%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1149">The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer.</span></span> <span data-ttu-id="cc63e-1150">请注意， <xref:System.DateTime>值之间存在差异，这表示自0001年1月1日午夜开始经过的计时周期数，以及<xref:System.DateTime>该值的字符串表示形式，这表示特定于区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1150">Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format.</span></span> <span data-ttu-id="cc63e-1151">有关格式化日期和时间值的信息，请参阅<xref:System.DateTime.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1151">For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A> method.</span></span> <span data-ttu-id="cc63e-1152">下面的示例显示了多个特定于区域性的格式的短日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1152">The following example displays the short date and time string in a number of culture-specific formats.</span></span>  
  
 [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]
 [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]
 [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  
  
 <span data-ttu-id="cc63e-1153">此属性的解决方法取决于系统计时器，它依赖于基础操作系统。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1153">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="cc63e-1154">它通常介于0.5 到15毫秒之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1154">It tends to be between 0.5 and 15 milliseconds.</span></span> <span data-ttu-id="cc63e-1155">因此，在较短的时间间隔<xref:System.DateTime.Now%2A> （如循环中）对属性的重复调用可能会返回相同的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1155">As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.</span></span>  
  
 <span data-ttu-id="cc63e-1156"><xref:System.DateTime.Now%2A>属性通常用于衡量性能。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1156">The <xref:System.DateTime.Now%2A> property is frequently used to measure performance.</span></span> <span data-ttu-id="cc63e-1157">然而，由于它的分辨率较低，因此不适合用作基准工具。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1157">However, because of its low resolution, it is not suitable for use as a benchmarking tool.</span></span> <span data-ttu-id="cc63e-1158">更好的替代方法是使用<xref:System.Diagnostics.Stopwatch>类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1158">A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 <span data-ttu-id="cc63e-1159">从 .NET Framework 版本2.0 开始，返回值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1159">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1160">你还可以使用<xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType>属性来检索当前的本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1160">You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> property to retrieve the current local date and time.</span></span> <span data-ttu-id="cc63e-1161">它允许将本地时间明确表达为单个时间点，从而使该时间值可在计算机之间移植。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1161">It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1162">下面的示例使用<xref:System.DateTime.Now%2A>和<xref:System.DateTime.UtcNow%2A>属性来检索当前的本地日期和时间以及当前的协调世界时（UTC）日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1162">The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time.</span></span> <span data-ttu-id="cc63e-1163">然后，它将使用多个区域性的格式设置约定来显示字符串，以及其<xref:System.DateTime.Kind%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1163">It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]
 [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]
 [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
        <altmember cref="P:System.DateTime.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTime operator + (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator +(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTime * TimeSpan -&gt; DateTime" Usage="d + t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cc63e-1164">要添加的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1164">The date and time value to add.</span></span></param>
        <param name="t"><span data-ttu-id="cc63e-1165">待添加的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1165">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="cc63e-1166">将指定的时间间隔加到指定的日期和时间以生成新的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1166">Adds a specified time interval to a specified date and time, yielding a new date and time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1167">一个对象，它是 <paramref name="d" /> 和 <paramref name="t" /> 值的和。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1167">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="cc63e-1168">此运算符的等效方法是<xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1168">The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="cc63e-1169">下面的示例演示加法运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1169">The following example demonstrates the addition operator.</span></span>  
  
 [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]
 [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]
 [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1170">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1170">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-1171">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-1171">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTime * DateTime -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cc63e-1172">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1172">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cc63e-1173">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1173">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1174">确定 <see cref="T:System.DateTime" /> 的两个指定的实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1174">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1175">如果 <see langword="true" /> 和 <paramref name="d1" /> 表示同一日期和时间，则为 <paramref name="d2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1175"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1176">运算符通过比较两个<xref:System.DateTime>值的计时周期数来确定这两个值是否相等。 <xref:System.DateTime.op_Equality%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1176">The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1177">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1177">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1178">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1178">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1179">此运算符的等效方法是<xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1179">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="cc63e-1180">下面的示例演示了相等运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1180">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]
 [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]
 [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-1181">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1181">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-1182">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1182">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1183">确定指定的 <see cref="T:System.DateTime" /> 是否晚于另一个指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1183">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1184">如果 <see langword="true" /> 晚于 <paramref name="t1" />，则为 <paramref name="t2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1184"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1185">运算符通过比较两个值的<xref:System.DateTime>计时周期数来确定这两个值之间的关系。 <xref:System.DateTime.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1185">The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1186">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1186">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1187">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1187">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1188">此运算符的等效方法是<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1188">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-1189">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1189">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-1190">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1190">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1191">确定一个指定的 <see cref="T:System.DateTime" /> 表示的日期和时间等于还是晚于另一个指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1191">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1192">如果 <see langword="true" /> 等于或晚于 <paramref name="t1" />，则为 <paramref name="t2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1192"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1193">运算符通过比较两个值的<xref:System.DateTime>计时周期数来确定这两个值之间的关系。 <xref:System.DateTime.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1193">The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1194">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1194">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1195">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1195">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1196">此运算符的等效方法是<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1196">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTime * DateTime -&gt; bool" Usage="System.DateTime.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cc63e-1197">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1197">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cc63e-1198">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1198">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1199">确定 <see cref="T:System.DateTime" /> 的两个指定的实例是否不等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1199">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1200">如果 <see langword="true" /> 和 <paramref name="d1" /> 不表示同一日期和时间，则为 <paramref name="d2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1200"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1201">运算符通过比较它们的<xref:System.DateTime>计时周期数来确定两个值是否不相等。 <xref:System.DateTime.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1201">The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1202">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1202">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1203">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1203">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1204">此运算符的等效方法是<xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1204">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-1205">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1205">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-1206">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1206">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1207">确定指定的 <see cref="T:System.DateTime" /> 是否早于另一个指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1207">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1208">如果 <see langword="true" /> 早于 <paramref name="t1" />，则为 <paramref name="t2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1208"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1209">运算符通过比较两个值的<xref:System.DateTime>计时周期数来确定这两个值之间的关系。 <xref:System.DateTime.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1209">The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1210">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1210">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1211">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1211">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1212">此运算符的等效方法是<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1212">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="cc63e-1213">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1213">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="cc63e-1214">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1214">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="cc63e-1215">确定一个指定的 <see cref="T:System.DateTime" /> 表示的日期和时间等于还是早于另一个指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1215">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1216">如果 <paramref name="t1" /> 等于或早于 <paramref name="t2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1216"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1217">运算符通过比较两个值的<xref:System.DateTime>计时周期数来确定这两个值之间的关系。 <xref:System.DateTime.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1217">The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="cc63e-1218">在比较<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1218">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1219">可以通过比较其 <xref:System.DateTime.Kind%2A> 属性的值来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1219">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1220">此运算符的等效方法是<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1220">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1221">从指定的 <see cref="T:System.DateTime" /> 减去指定的 <see cref="T:System.DateTime" /> 或 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1221">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span></span></summary>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As DateTime, d2 As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * DateTime -&gt; TimeSpan" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cc63e-1222">要从中减去的日期和时间值（被减数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1222">The date and time value to subtract from (the minuend).</span></span></param>
        <param name="d2"><span data-ttu-id="cc63e-1223">要减去的日期和时间值（减数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1223">The date and time value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="cc63e-1224">将指定的日期和时间与另一个指定的日期和时间相减，返回一个时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1224">Subtracts a specified date and time from another specified date and time and returns a time interval.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1225"><paramref name="d1" /> 和 <paramref name="d2" /> 之间的时间间隔；即 <paramref name="d1" /> 减去 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1225">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1226">执行<xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29>减法运算时，此方法不会<xref:System.DateTime.Kind%2A>考虑两个<xref:System.DateTime>值的属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1226">The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="cc63e-1227">在减去<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1227">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1228">否则，结果将包括时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1228">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1229">在<xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>执行减法运算时，此方法会考虑时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1229">The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
 <span data-ttu-id="cc63e-1230">此运算符的等效方法是<xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1230">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="cc63e-1231">下面的示例演示<xref:System.DateTime.Subtract%2A>方法和减法运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1231">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-1232">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-1232">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTime operator - (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator -(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * TimeSpan -&gt; DateTime" Usage="d - t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cc63e-1233">要从其中减去的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1233">The date and time value to subtract from.</span></span></param>
        <param name="t"><span data-ttu-id="cc63e-1234">待减去的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1234">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="cc63e-1235">从指定的日期和时间减去指定的时间间隔，返回新的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1235">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1236">一个对象，其值为 <paramref name="d" /> 的值减去 <paramref name="t" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1236">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1237">此方法`t`从的计时周期`d`值减去的计时周期值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1237">This method subtracts the ticks value of `t` from the ticks value of `d`.</span></span>  
  
 <span data-ttu-id="cc63e-1238">此运算符的等效方法是<xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1238">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="cc63e-1239">下面的示例演示<xref:System.DateTime.Subtract%2A>方法和减法运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1239">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1240">生成的 <see cref="T:System.DateTime" /> 小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1240">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.TimeSpan)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-1241">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-1241">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1242">将日期和时间的字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1242">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 <span data-ttu-id="cc63e-1243">本节内容：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1243">In this section:</span></span>  
  
- [<span data-ttu-id="cc63e-1244">我要调用哪种方法？</span><span class="sxs-lookup"><span data-stu-id="cc63e-1244">Which method do I call?</span></span>](#Tasks)
- [<span data-ttu-id="cc63e-1245">要分析的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1245">The string to parse</span></span>](#StringToParse)
- [<span data-ttu-id="cc63e-1246">分析和文化约定</span><span class="sxs-lookup"><span data-stu-id="cc63e-1246">Parsing and cultural conventions</span></span>](#Culture)
- [<span data-ttu-id="cc63e-1247">分析和样式元素</span><span class="sxs-lookup"><span data-stu-id="cc63e-1247">Parsing and style elements</span></span>](#Styles)
- [<span data-ttu-id="cc63e-1248">返回值和日期时间类型</span><span class="sxs-lookup"><span data-stu-id="cc63e-1248">The return value and DateTime.Kind</span></span>](#kind)
 
<a name="Tasks"></a>   
### <a name="which-method-do-i-call"></a><span data-ttu-id="cc63e-1249">我要调用哪种方法？</span><span class="sxs-lookup"><span data-stu-id="cc63e-1249">Which method do I call?</span></span>  
  
|<span data-ttu-id="cc63e-1250">功能</span><span class="sxs-lookup"><span data-stu-id="cc63e-1250">To</span></span>|<span data-ttu-id="cc63e-1251">Call</span><span class="sxs-lookup"><span data-stu-id="cc63e-1251">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="cc63e-1252">使用当前区域性的约定分析日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1252">Parse a date and time string by using the conventions of the current culture.</span></span>|<span data-ttu-id="cc63e-1253"><xref:System.DateTime.Parse%28System.String%29> 重载</span><span class="sxs-lookup"><span data-stu-id="cc63e-1253"><xref:System.DateTime.Parse%28System.String%29> overload</span></span>|  
|<span data-ttu-id="cc63e-1254">使用特定区域性的约定分析日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1254">Parse a date and time string by using the conventions of a specific culture.</span></span>|<span data-ttu-id="cc63e-1255"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29>重载（请参阅[分析和文化约定](#Culture)）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1255"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> overload (see [Parsing and Cultural Conventions](#Culture))</span></span>|  
|<span data-ttu-id="cc63e-1256">使用特殊的样式元素（如空格或无空格）分析日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1256">Parse a date and time string with special style elements (such as white space or no white space).</span></span>|<span data-ttu-id="cc63e-1257"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 重载</span><span class="sxs-lookup"><span data-stu-id="cc63e-1257"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="cc63e-1258">分析日期和时间字符串，该字符串必须采用特定格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1258">Parse a date and time string that must be in a particular format.</span></span>|<span data-ttu-id="cc63e-1259"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 或 <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1259"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="cc63e-1260">分析日期和时间字符串，并执行到 UTC 或本地时间的转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1260">Parse a date and time string and perform a conversion to UTC or local time.</span></span>|<span data-ttu-id="cc63e-1261"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 重载</span><span class="sxs-lookup"><span data-stu-id="cc63e-1261"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="cc63e-1262">分析日期和时间字符串，而不处理异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1262">Parse a date and time string without handling exceptions.</span></span>|<span data-ttu-id="cc63e-1263"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="cc63e-1263"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method</span></span>|  
|<span data-ttu-id="cc63e-1264">还原（往返）由格式设置操作创建的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1264">Restore (round-trip) a date and time value created by a formatting operation.</span></span>|<span data-ttu-id="cc63e-1265">向<xref:System.DateTime.ToString%28System.String%29>方法传递 "o" 或 "r" 标准格式字符串，并通过<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>调用重载<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1265">Pass the "o" or "r" standard format string to the <xref:System.DateTime.ToString%28System.String%29> method, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload with <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="cc63e-1266">跨计算机（和可能的文化）边界分析固定格式的日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1266">Parse a date and time string in a fixed format across machine (and possibly cultural) boundaries.</span></span>|<span data-ttu-id="cc63e-1267"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>或<xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType>方法</span><span class="sxs-lookup"><span data-stu-id="cc63e-1267"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method</span></span>|  
  
<a name="StringToParse"></a>   
### <a name="the-string-to-parse"></a><span data-ttu-id="cc63e-1268">要分析的字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1268">The string to parse</span></span>  
 <span data-ttu-id="cc63e-1269">方法尝试将日期和时间值的字符串表示形式转换为其<xref:System.DateTime>等效的。 <xref:System.DateTime.Parse%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1269">The <xref:System.DateTime.Parse%2A> method tries to convert the string representation of a date and time value to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="cc63e-1270">它尝试完全分析输入字符串，而不引发<xref:System.FormatException>异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1270">It tries to parse the input string completely without throwing a <xref:System.FormatException> exception.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1271">如果分析操作由于字符串格式无法识别而失败，则该<xref:System.DateTime.Parse%2A>方法将<xref:System.FormatException>引发，而该<xref:System.DateTime.TryParse%2A>方法将`false`返回。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1271">If the parsing operation fails because of an unrecognized string format, the <xref:System.DateTime.Parse%2A> method throws a <xref:System.FormatException>, whereas the <xref:System.DateTime.TryParse%2A> method returns `false`.</span></span> <span data-ttu-id="cc63e-1272">由于异常处理可能会消耗大量资源，因此<xref:System.DateTime.Parse%2A>应在分析操作成功成功时使用，因为输入源受信任。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1272">Because exception handling can be expensive, you should use <xref:System.DateTime.Parse%2A> when the parsing operation is expected to succeed because the input source is trusted.</span></span> <span data-ttu-id="cc63e-1273"><xref:System.DateTime.TryParse%2A>当分析失败很有可能时，尤其是因为输入源不受信任，或者您具有合理的默认值来替换不能成功分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1273"><xref:System.DateTime.TryParse%2A> is preferable when parsing failures are likely, particularly because an input source is not trusted, or you have reasonable default values to substitute for strings that do not parse successfully.</span></span>   

 <span data-ttu-id="cc63e-1274">要分析的字符串可以采用以下任何形式：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1274">The string to be parsed can take any of the following forms:</span></span>  
  
-   <span data-ttu-id="cc63e-1275">包含日期和时间组成部分的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1275">A string with a date and a time component.</span></span>  
  
-   <span data-ttu-id="cc63e-1276">一个具有日期但没有时间部分的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1276">A string with a date but no time component.</span></span> <span data-ttu-id="cc63e-1277">如果时间部分不存在，则该方法假定为12:00 午夜。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1277">If the time component is absent, the method assumes 12:00 midnight.</span></span> <span data-ttu-id="cc63e-1278">如果日期部分的年份是两位数，则它将基于当前区域性的当前日历或指定<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>区域性的当前日历（如果使用具有非 null `provider`参数的重载）的来转换为年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1278">If the date component has a two-digit year, it is converted to a year based on the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> of the current culture's current calendar or the specified culture's current calendar (if you use an overload with a non-null `provider` argument).</span></span>  
  
- <span data-ttu-id="cc63e-1279">包含日期部分的字符串，仅包含月份和年份，但不包括日期部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1279">A string with a date component that includes only the month and the year but no day component.</span></span> <span data-ttu-id="cc63e-1280">方法假设每月的第一天。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1280">The method assumes the first day of the month.</span></span>

- <span data-ttu-id="cc63e-1281">包含日期部分的字符串，仅包含月份和日期，但不包括年份部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1281">A string with a date component that includes only the month and the day but no year component.</span></span> <span data-ttu-id="cc63e-1282">方法假定当前年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1282">The method assumes the current year.</span></span>

-   <span data-ttu-id="cc63e-1283">带有时间但没有日期部分的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1283">A string with a time but no date component.</span></span> <span data-ttu-id="cc63e-1284">此方法假定当前日期，除非调用<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>重载并包括<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>在`styles`参数中，在这种情况下，该方法假设日期为0001年1月1日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1284">The method assumes the current date unless you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>  

- <span data-ttu-id="cc63e-1285">包含时间部分的字符串，其中仅包含小时和 AM/PM 指示符，不包含日期部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1285">A string with a time component that includes only the hour and an AM/PM designator, with no date component.</span></span> <span data-ttu-id="cc63e-1286">方法假定当前日期和时间无分钟且无秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1286">The method assumes the current date and a time with no minutes and no seconds.</span></span> <span data-ttu-id="cc63e-1287">您可以通过调用<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>重载并在`styles`自变量中包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>来更改此行为，在这种情况下，该方法假设日期为0001年1月1日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1287">You can change this behavior by calling the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>

-   <span data-ttu-id="cc63e-1288">包含时区信息并符合 ISO 8601 的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1288">A string that includes time zone information and conforms to ISO 8601.</span></span> <span data-ttu-id="cc63e-1289">在下面的示例中，第一个字符串指定协调世界时（UTC），第二个字符串指定时区中的时间早于 UTC 7 小时：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1289">In the following examples, the first string designates Coordinated Universal Time (UTC), and the second designates the time in a time zone that's seven hours earlier than UTC:</span></span>  
  
    <span data-ttu-id="cc63e-1290">"2008-11-01T19：35： 00.0000000 Z"</span><span class="sxs-lookup"><span data-stu-id="cc63e-1290">"2008-11-01T19:35:00.0000000Z"</span></span>   
    <span data-ttu-id="cc63e-1291">"01T19：35： 00.0000000-07： 00"</span><span class="sxs-lookup"><span data-stu-id="cc63e-1291">"2008-11-01T19:35:00.0000000-07:00"</span></span>  
  
-   <span data-ttu-id="cc63e-1292">包含 GMT 指示符并符合 RFC 1123 时间格式的字符串;例如：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1292">A string that includes the GMT designator and conforms to the RFC 1123 time format; for example:</span></span>  
  
     <span data-ttu-id="cc63e-1293">"Sat，01 11 11 2008 19:35:00 GMT"</span><span class="sxs-lookup"><span data-stu-id="cc63e-1293">"Sat, 01 Nov 2008 19:35:00 GMT"</span></span>  
  
-   <span data-ttu-id="cc63e-1294">一个字符串，其中包含日期和时间以及时区偏移量信息;例如：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1294">A string that includes the date and time along with time zone offset information; for example:</span></span>  
  
     <span data-ttu-id="cc63e-1295">"03/01/2009 05:42:00-5:00"</span><span class="sxs-lookup"><span data-stu-id="cc63e-1295">"03/01/2009 05:42:00 -5:00"</span></span>  

<span data-ttu-id="cc63e-1296">下面的示例使用当前区域性的格式设置约定（在本例中为 en-us 区域性）分析每种格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1296">The following example parses strings in each of these formats by using the formatting conventions of the current culture, which in this case is the en-US culture:</span></span>

[!code-csharp[Default parsing](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse6.cs)]
[!code-vb[Default parsing](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse6.vb)]  
  
 <span data-ttu-id="cc63e-1297">如果输入字符串表示在分析方法使用的日历中的闰年的闰日（请参阅[分析和区域性约定](#Culture)），则方法将<xref:System.DateTime.Parse%2A>成功分析字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1297">If the input string represents a leap day in a leap year in the calendar used by the parsing method (see [Parsing and cultural conventions](#Culture)), the <xref:System.DateTime.Parse%2A> method parses the string successfully.</span></span> <span data-ttu-id="cc63e-1298">如果输入字符串表示非闰年中的闰日，则该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1298">If the input string represents a leap day in a non-leap year, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="cc63e-1299"><xref:System.DateTime.Parse%2A>由于方法尝试使用当前或指定区域性的格式设置规则来分析日期和时间的字符串表示形式，因此尝试跨不同区域性分析字符串会失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1299">Because the <xref:System.DateTime.Parse%2A> method tries to parse the string representation of a date and time by using the formatting rules of the current or a specified culture, trying to parse a string across different cultures can fail.</span></span> <span data-ttu-id="cc63e-1300">若要在不同的区域设置中分析特定的日期和时间格式，请使用<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>方法的重载之一，并提供格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1300">To parse a specific date and time format across different locales, use one of the overloads of the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method and provide a format specifier.</span></span>  
  
<a name="Culture"></a>   
### <a name="parsing-and-cultural-conventions"></a><span data-ttu-id="cc63e-1301">分析和文化约定</span><span class="sxs-lookup"><span data-stu-id="cc63e-1301">Parsing and cultural conventions</span></span>  
 <span data-ttu-id="cc63e-1302">除非要分析的<xref:System.DateTime.Parse%2A>字符串（由下表`s`中的表示）符合 ISO 8601 模式，否则，方法的所有重载都是区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1302">All overloads of the <xref:System.DateTime.Parse%2A> method are culture-sensitive unless the string to be parsed (which is represented by `s` in the following table) conforms to the ISO 8601 pattern.</span></span> <span data-ttu-id="cc63e-1303">分析操作使用派生的<xref:System.Globalization.DateTimeFormatInfo>对象中的格式设置信息，如下所示：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1303">The parsing operation uses the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is derived as follows:</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

|<span data-ttu-id="cc63e-1304">如果调用</span><span class="sxs-lookup"><span data-stu-id="cc63e-1304">If you call</span></span>|<span data-ttu-id="cc63e-1305">并且`provider`为</span><span class="sxs-lookup"><span data-stu-id="cc63e-1305">And `provider` is</span></span>|<span data-ttu-id="cc63e-1306">格式设置信息派生自</span><span class="sxs-lookup"><span data-stu-id="cc63e-1306">Formatting information is derived from</span></span>|  
|-----------------|-----------------------|--------------------------------------------|  
|<xref:System.DateTime.Parse%28System.String%29>|-|<span data-ttu-id="cc63e-1307">当前线程区域性（<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>属性）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1307">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="cc63e-1308"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-1308"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="cc63e-1309">一个<xref:System.Globalization.DateTimeFormatInfo>对象</span><span class="sxs-lookup"><span data-stu-id="cc63e-1309">a <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|<span data-ttu-id="cc63e-1310">指定<xref:System.Globalization.DateTimeFormatInfo>的对象</span><span class="sxs-lookup"><span data-stu-id="cc63e-1310">The specified <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|  
|<span data-ttu-id="cc63e-1311"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-1311"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|`null`|<span data-ttu-id="cc63e-1312">当前线程区域性（<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>属性）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1312">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="cc63e-1313"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-1313"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="cc63e-1314">一个<xref:System.Globalization.CultureInfo>对象</span><span class="sxs-lookup"><span data-stu-id="cc63e-1314">a <xref:System.Globalization.CultureInfo> object</span></span>|<span data-ttu-id="cc63e-1315"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 属性</span><span class="sxs-lookup"><span data-stu-id="cc63e-1315">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property</span></span>|  
|<span data-ttu-id="cc63e-1316"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-1316"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="cc63e-1317">自<xref:System.IFormatProvider>定义实现</span><span class="sxs-lookup"><span data-stu-id="cc63e-1317">Custom <xref:System.IFormatProvider> implementation</span></span>|<span data-ttu-id="cc63e-1318"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="cc63e-1318">The <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method</span></span>|  
  
 <span data-ttu-id="cc63e-1319">当格式设置信息从<xref:System.Globalization.DateTimeFormatInfo>对象派生时，属性将<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>定义分析操作中使用的日历。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1319">When formatting information is derived from a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property defines the calendar used in the parsing operation.</span></span>  
  
 <span data-ttu-id="cc63e-1320">如果使用<xref:System.Globalization.DateTimeFormatInfo>与标准区域性不同的自定义设置来分析日期和时间字符串，请<xref:System.DateTime.ParseExact%2A>使用方法而不是<xref:System.DateTime.Parse%2A>方法来提高成功转换的几率。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1320">If you parse a date and time string by using a <xref:System.Globalization.DateTimeFormatInfo> object with customized settings that are different from those of a standard culture, use the <xref:System.DateTime.ParseExact%2A> method instead of the <xref:System.DateTime.Parse%2A> method to improve the chances for a successful conversion.</span></span> <span data-ttu-id="cc63e-1321">非标准日期和时间字符串可能比较复杂且难以分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1321">A non-standard date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="cc63e-1322">此<xref:System.DateTime.Parse%2A>方法尝试使用几个隐式分析模式分析字符串，所有这些模式都可能失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1322">The <xref:System.DateTime.Parse%2A> method tries to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="cc63e-1323">与此<xref:System.DateTime.ParseExact%2A>相反，方法要求您显式指定一个或多个可能成功的准确分析模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1323">In contrast, the <xref:System.DateTime.ParseExact%2A> method requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span> <span data-ttu-id="cc63e-1324">有关详细信息，请参阅<xref:System.Globalization.DateTimeFormatInfo>主题中的 "DateTimeFormatInfo and 动态数据" 部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1324">For more information, see the "DateTimeFormatInfo and Dynamic Data" section in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1325">请注意，特定区域性的格式设置约定是动态的，可能会发生更改。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1325">Note that the formatting conventions for a particular culture are dynamic and can be subject to change.</span></span> <span data-ttu-id="cc63e-1326">这意味着，如果发生以下任何情况，则依赖于默认（当前）区域性的格式设置约定的<xref:System.IFormatProvider>分析操作或指定一个对象（该对象表示除固定区域性以外的区域性）可能会意外失败：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1326">This means that parsing operations that depend on the formatting conventions of the default (current) culture or that specify an <xref:System.IFormatProvider> object that represents a culture other than the invariant culture can unexpectedly fail if any of the following occurs:</span></span>  
>   
> -   <span data-ttu-id="cc63e-1327">区域性特定的数据在 .NET Framework 的主版本或次版本中发生了更改，或作为 .NET Framework 的现有版本的更新结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1327">The culture-specific data has changed between major or minor versions of the .NET Framework or as the result of an update to the existing version of the .NET Framework.</span></span>  
> -   <span data-ttu-id="cc63e-1328">特定于区域性的数据反映用户首选项，这些首选项因计算机而异，或会话之间有所不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1328">The culture-specific data reflects user preferences, which can vary from machine to machine or session to session.</span></span>  
> -   <span data-ttu-id="cc63e-1329">特定于区域性的数据表示替代区域性，替代了标准区域性或自定义区域性的设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1329">The culture-specific data represents a replacement culture that overrides the settings of a standard culture or a custom culture.</span></span>  
>   
>  <span data-ttu-id="cc63e-1330">若要防止在分析与区域性数据更改关联的数据和时间字符串时遇到困难，可以使用固定区域性来分析日期和时间字符串，也可以调用<xref:System.DateTime.ParseExact%2A>或<xref:System.DateTime.TryParseExact%2A>方法并指定精确格式。要分析的字符串的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1330">To prevent the difficulties in parsing data and time strings that are associated with changes in cultural data, you can parse date and time strings by using the invariant culture, or you can call the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> method and specify the exact format of the string to be parsed.</span></span> <span data-ttu-id="cc63e-1331">如果要序列化和反序列化日期和时间数据，则可以使用固定区域性的格式约定，也可以序列化和反序列化<xref:System.DateTime>二进制格式的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1331">If you are serializing and deserializing date and time data, you can either use the formatting conventions of the invariant culture, or you can serialize and deserialize the <xref:System.DateTime> value in a binary format.</span></span>  
>   
>  <span data-ttu-id="cc63e-1332">有关详细信息，请参阅主题中<xref:System.Globalization.CultureInfo>的 "动态区域性数据" 部分和 "保留日期时间值" 部分。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="cc63e-1332">For more information see the "Dynamic culture data" section in the <xref:System.Globalization.CultureInfo> topic and the "Persisting DateTime values" section in the <xref:System.DateTime> topic.</span></span>  
  
<a name="Styles"></a>   
### <a name="parsing-and-style-elements"></a><span data-ttu-id="cc63e-1333">分析和样式元素</span><span class="sxs-lookup"><span data-stu-id="cc63e-1333">Parsing and style elements</span></span>  
 <span data-ttu-id="cc63e-1334">所有<xref:System.DateTime.Parse%2A>重载都忽略输入字符串中的前导、内部或尾随空白字符（ `s`如下表中所示）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1334">All <xref:System.DateTime.Parse%2A> overloads ignore leading, inner, or trailing white-space characters in the input string (which is represented by `s` in the following table).</span></span> <span data-ttu-id="cc63e-1335">日期和时间可以用一对前导和尾随数字符号字符（"#"、U + 0023）括起来，并且可以使用一个或多个 NULL 字符（U + 0000）进行 trailed。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1335">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ("#", U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="cc63e-1336">此外，此<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>重载还具有一个`styles`由一个<xref:System.Globalization.DateTimeStyles>或多个枚举成员组成的参数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1336">In addition, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload has a `styles` parameter that consists of one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration.</span></span> <span data-ttu-id="cc63e-1337">此参数定义应该`s`如何解释和分析操作应该如何转换`s`为日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1337">This parameter defines how `s` should be interpreted and how the parse operation should convert `s` to a date and time.</span></span> <span data-ttu-id="cc63e-1338">下表描述了每个<xref:System.Globalization.DateTimeStyles>成员对分析操作的影响。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1338">The following table describes the effect of each <xref:System.Globalization.DateTimeStyles> member on the parse operation.</span></span>  
  
|<span data-ttu-id="cc63e-1339">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-1339">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-1340">转换后的效果</span><span class="sxs-lookup"><span data-stu-id="cc63e-1340">Effect on conversion</span></span>|  
|---------------------------|--------------------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-1341">分析`s`并根据需要将其转换为 UTC，如下所示：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1341">Parses `s` and, if necessary, converts it to UTC, as follows:</span></span><br /><br /> <span data-ttu-id="cc63e-1342">-如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为UTC，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1342">-   If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="cc63e-1343">-如果`s`表示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1343">-   If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="cc63e-1344">-在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1344">-   In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-1345">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1345">This value is ignored.</span></span> <span data-ttu-id="cc63e-1346">的日期和时间元素`s`中始终允许内部空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1346">Inner white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-1347">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1347">This value is ignored.</span></span> <span data-ttu-id="cc63e-1348">的日期和时间元素`s`中始终允许使用前导空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1348">Leading white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-1349">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1349">This value is ignored.</span></span> <span data-ttu-id="cc63e-1350">的日期和时间元素`s`中始终允许尾随空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1350">Trailing white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-1351">`s`指定可能包含前导空格和尾随空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1351">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="cc63e-1352">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1352">This is the default behavior.</span></span> <span data-ttu-id="cc63e-1353">不能通过提供限制性更强<xref:System.Globalization.DateTimeStyles>的枚举值（如） <xref:System.Globalization.DateTimeStyles.None>来重写它。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1353">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-1354">指定如果`s`缺少任何时区信息，则假定为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1354">Specifies that if `s` lacks any time zone information, local time is assumed.</span></span> <span data-ttu-id="cc63e-1355">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal></span><span class="sxs-lookup"><span data-stu-id="cc63e-1355">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-1356">指定如果`s`缺少任何时区信息，则采用 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1356">Specifies that if `s` lacks any time zone information, UTC is assumed.</span></span> <span data-ttu-id="cc63e-1357">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal></span><span class="sxs-lookup"><span data-stu-id="cc63e-1357">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-1358">虽然有效，但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1358">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-1359">对于包含时区信息的字符串，尝试防止将日期和时间字符串转换为<xref:System.DateTime>表示本地时间的值，并将其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1359">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value that represents a local time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1360">通常，通过调用<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法并使用 "o"、"r" 或 "u" 标准格式说明符来创建此类字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1360">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method and by using the "o", "r", or "u" standard format specifier.</span></span>|  

<a name="kind"></a>   
### <a name="the-return-value-and-datetimekind"></a><span data-ttu-id="cc63e-1361">返回值和日期时间类型</span><span class="sxs-lookup"><span data-stu-id="cc63e-1361">The return value and DateTime.Kind</span></span>

<span data-ttu-id="cc63e-1362">重载返回一个<xref:System.DateTime>值，其<xref:System.DateTime.Kind>属性包含时区信息。 `DateTime.Parse`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1362">The `DateTime.Parse` overloads return a <xref:System.DateTime> value whose <xref:System.DateTime.Kind> property includes time zone information.</span></span> <span data-ttu-id="cc63e-1363">它可以指示时间为：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1363">It can indicate that the time is:</span></span>

- <span data-ttu-id="cc63e-1364">协调世界时（<xref:System.DateTimeKind.Utc?displayProperty=fullName>）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1364">Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span></span>
- <span data-ttu-id="cc63e-1365">本地时区中的时间（<xref:System.DateTimeKind.Local?displayProperty=fullName>）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1365">The time in the local time zone (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span></span>
- <span data-ttu-id="cc63e-1366">未知时区中的时间（x： Datetimekind.utc？ displayProperty = fullName >）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1366">The time in an unknown time zone (xref:System.DateTimeKind.Unspecified?displayProperty=fullName>).</span></span>
 
 <span data-ttu-id="cc63e-1367">通常， <xref:System.DateTime.Parse%2A>方法会返回一个<xref:System.DateTime>对象， <xref:System.DateTime.Kind%2A>其属性<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1367">Generally, the <xref:System.DateTime.Parse%2A> method returns a <xref:System.DateTime> object whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1368">但是，该<xref:System.DateTime.Parse%2A>方法还可能执行时区转换，并以不同的方式设置<xref:System.DateTime.Kind%2A>属性的值，具体取决于`s`和`styles`参数的值：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1368">However, the <xref:System.DateTime.Parse%2A> method may also perform time zone conversion and set the value of the <xref:System.DateTime.Kind%2A> property differently, depending on the values of the `s` and `styles` parameters:</span></span>  
  
|<span data-ttu-id="cc63e-1369">如果</span><span class="sxs-lookup"><span data-stu-id="cc63e-1369">If</span></span>|<span data-ttu-id="cc63e-1370">时区转换</span><span class="sxs-lookup"><span data-stu-id="cc63e-1370">Time zone conversion</span></span>|<span data-ttu-id="cc63e-1371">Kind 属性</span><span class="sxs-lookup"><span data-stu-id="cc63e-1371">Kind property</span></span>|  
|--------|--------------------------|-------------------|  
|<span data-ttu-id="cc63e-1372">`s`包含时区信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1372">`s` contains time zone information.</span></span>|<span data-ttu-id="cc63e-1373">日期和时间将转换为本地时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1373">The date and time is converted to the time in the local time zone.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="cc63e-1374">`s`包含时区信息，并`styles` <xref:System.Globalization.DateTimeStyles.AdjustToUniversal>包含标志。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1374">`s` contains time zone information, and `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag.</span></span>|<span data-ttu-id="cc63e-1375">日期和时间转换为协调世界时（UTC）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1375">The date and time is converted to Coordinated Universal Time (UTC).</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="cc63e-1376">`s`包含 Z 或 GMT 时区指示符，并`styles` <xref:System.Globalization.DateTimeStyles.RoundtripKind>包含标志。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1376">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag.</span></span>|<span data-ttu-id="cc63e-1377">日期和时间解释为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1377">The date and time are interpreted as UTC.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
  
 <span data-ttu-id="cc63e-1378">下面的示例将包含时区信息的日期字符串转换为本地时区中的时间：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1378">The following example converts date strings that contain time zone information to the time in the local time zone:</span></span>  
  
 [!code-csharp[System.DateTime.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.DateTime.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse2.vb#2)]  

  <span data-ttu-id="cc63e-1379">还可以通过<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>使用标志在格式设置和分析操作期间<xref:System.DateTime.Kind%2A>保留日期和时间属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1379">You can also preserve the value of a date and time's <xref:System.DateTime.Kind%2A> property during a formatting and parsing operation by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc63e-1380">下面的示例演示了<xref:System.Globalization.DateTimeStyles.RoundtripKind>标志如何对通过使用 "o"、"r" 或 "u" 格式说明符转换为字符串的<xref:System.DateTime>值影响分析操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1380">The following example illustrates how the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag affects the parsing operation on <xref:System.DateTime> values that are converted to strings by using the "o", "r", or "u" format specifier.</span></span>  
  
 [!code-csharp[System.DateTime.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse5.cs#5)]
 [!code-vb[System.DateTime.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse5.vb#5)]  
  
## Examples

<span data-ttu-id="cc63e-1381">调用`DateTime.Parse`方法的很多示例都在本文的 "[备注](#remarks)" 部分和各个`DateTime.Parse`重载的文档中混杂在一起。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1381">Numerous examples that call the `DateTime.Parse` method are interspersed throughout the [Remarks](#remarks) section of this article and in the documentation for the individual `DateTime.Parse` overloads.</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="cc63e-1382">还`DateTime.Parse`可以从[dotnet/samples GitHub 存储库](https://github.com/dotnet/samples)下载一组完整的示例，这些示例包含在[.net core 2.0 项目C# ](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip)中，用于用于[Visual Basic 的 .net core 2.0 项目](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1382">You can also download a complete set of `DateTime.Parse` examples, which are included in a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
        <altmember cref="Overload:System.DateTime.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTime" Usage="System.DateTime.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1383">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1383">A string that contains a date and time to convert.</span></span> <span data-ttu-id="cc63e-1384">有关详细信息，请参阅[要分析的字符串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1384">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <summary><span data-ttu-id="cc63e-1385">使用当前线程区域性的约定将日期和时间的字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1385">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1386">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1386">An object that is equivalent to the date and time contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="cc63e-1387">如果`s`包含时区信息，则此方法将<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值，并将中`s`的日期和时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1387">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="cc63e-1388">否则，它不执行时区转换，并返回<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1388">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="cc63e-1389">此重载尝试使用当前`s`区域性的格式设置约定进行分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1389">This overload attempts to parse `s` by using the formatting conventions of the current culture.</span></span> <span data-ttu-id="cc63e-1390">当前区域性由<xref:System.Globalization.CultureInfo.CurrentCulture>属性指示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1390">The current culture is indicated by the <xref:System.Globalization.CultureInfo.CurrentCulture> property.</span></span> <span data-ttu-id="cc63e-1391">若要使用特定区域性的格式设置约定分析字符串，请调用<xref:System.DateTime.Parse(System.String,System.IFormatProvider)> <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)>或重载。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1391">To parse a string using the formatting conventions of a specific culture, call the <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> or the <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> overloads.</span></span>

<span data-ttu-id="cc63e-1392">此重载尝试使用`s` <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>样式进行分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1392">This overload attempts to parse `s` by using <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="cc63e-1393">示例</span><span class="sxs-lookup"><span data-stu-id="cc63e-1393">Example</span></span>

<span data-ttu-id="cc63e-1394">下面的示例通过以下方式分析几个日期和时间值的字符串表示形式：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1394">The following example parses the string representation of several date and time values by:</span></span>

- <span data-ttu-id="cc63e-1395">使用默认格式提供程序，该提供程序提供用于生成示例输出的计算机的当前线程区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1395">Using the default format provider, which provides the formatting conventions of the current thread culture of the computer used to produce the example output.</span></span> <span data-ttu-id="cc63e-1396">此示例的输出反映了 en-us 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1396">The output from this example reflects the formatting conventions of the en-US culture.</span></span>

- <span data-ttu-id="cc63e-1397">使用默认样式值， <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>即。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1397">Using the default style value, which is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>.</span></span> 

<span data-ttu-id="cc63e-1398">它处理<xref:System.FormatException>当方法尝试使用其他区域性的格式设置约定分析日期和时间的字符串表示形式时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1398">It handles the <xref:System.FormatException> exception that is thrown when the method tries to parse the string representation of a date and time by using some other culture's formatting conventions.</span></span> <span data-ttu-id="cc63e-1399">它还演示如何成功分析不使用当前线程区域性的格式设置约定的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1399">It also shows how to successfully parse a date and time value that does not use the formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp[System.DateTime.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.DateTime.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse1.vb#1)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1400"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1400"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1401"><paramref name="s" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1401"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1402">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1402">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1403">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1403">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1404">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1404">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1405">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1405">A string that contains a date and time to convert.</span></span> <span data-ttu-id="cc63e-1406">有关详细信息，请参阅[要分析的字符串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1406">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1407">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1407">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="cc63e-1408">请参阅[分析和区域性约定](#Culture)</span><span class="sxs-lookup"><span data-stu-id="cc63e-1408">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <summary><span data-ttu-id="cc63e-1409">使用指定的区域性特定格式设置信息，将日期和时间的字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1409">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1410">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1410">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="cc63e-1411">如果`s`包含时区信息，则此方法将<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值，并将中`s`的日期和时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1411">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="cc63e-1412">否则，它不执行时区转换，并返回<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1412">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="cc63e-1413">此重载尝试<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>使用样式`s`进行分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1413">This overload attempts to parse `s` by using the <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="cc63e-1414">示例</span><span class="sxs-lookup"><span data-stu-id="cc63e-1414">Example</span></span>

<span data-ttu-id="cc63e-1415">下面的示例使用 en-us、fr 和 de 消除文化的约定分析日期字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1415">The following example parses an array of date strings by using the conventions of the en-US, fr-FR, and de-DE cultures.</span></span> <span data-ttu-id="cc63e-1416">它演示单个日期的字符串表示形式可以在不同的区域性中以不同的方式解释。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1416">It demonstrates that the string representations of a single date can be interpreted differently across different cultures.</span></span>  
  
[!code-csharp[System.DateTime.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse3.cs#3)]
[!code-vb[System.DateTime.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1417"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1417"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1418"><paramref name="s" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1418"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1419">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1419">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1420">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1420">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1421">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1421">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional provider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1422">包含要分析的字符串的内存范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1422">The memory span that contains the string to parse.</span></span> <span data-ttu-id="cc63e-1423">有关详细信息，请参阅[要分析的字符串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1423">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1424">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1424">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="cc63e-1425">请参阅[分析和区域性约定](#Culture)</span><span class="sxs-lookup"><span data-stu-id="cc63e-1425">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="cc63e-1426">枚举值的按位组合，用于指示 <paramref name="s" /> 成功执行分析操作所需的样式元素以及定义如何根据当前时区或当前日期解释已分析日期的样式元素。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1426">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="cc63e-1427">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1427">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-1428">使用指定的区域性特定格式设置信息和格式类型，将包含日期和时间的字符串表示形式的内存范围转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1428">Converts a memory span that contains string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1429">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="provider" /> 和 <paramref name="styles" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1429">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1430"><paramref name="s" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1430"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-1431"><paramref name="styles" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1431"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="cc63e-1432">例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1432">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider, styles As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1433">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1433">A string that contains a date and time to convert.</span></span> <span data-ttu-id="cc63e-1434">有关详细信息，请参阅[要分析的字符串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1434">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1435">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1435">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span>  <span data-ttu-id="cc63e-1436">请参阅[分析和区域性约定](#Culture)</span><span class="sxs-lookup"><span data-stu-id="cc63e-1436">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="cc63e-1437">枚举值的按位组合，用于指示 <paramref name="s" /> 成功执行分析操作所需的样式元素以及定义如何根据当前时区或当前日期解释已分析日期的样式元素。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1437">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="cc63e-1438">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1438">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-1439">使用指定的区域性特定格式设置信息和格式类型，将日期和时间的字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1439">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1440">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="provider" /> 和 <paramref name="styles" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1440">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cc63e-1441">此方法重载在中`s`转换日期和时间，并<xref:System.DateTime.Kind%2A>设置返回<xref:System.DateTime>值的属性，如下所示：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1441">This method overload converts the date and time in `s` and sets the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value as follows:</span></span>

|<span data-ttu-id="cc63e-1442">如果</span><span class="sxs-lookup"><span data-stu-id="cc63e-1442">If</span></span> |<span data-ttu-id="cc63e-1443">时区转换</span><span class="sxs-lookup"><span data-stu-id="cc63e-1443">Time zone conversion</span></span>|<span data-ttu-id="cc63e-1444">Kind 属性</span><span class="sxs-lookup"><span data-stu-id="cc63e-1444">Kind property</span></span>|   
|-----|-----|-----|  
|<span data-ttu-id="cc63e-1445">`s`不包含时区信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1445">`s` contains no time zone information.</span></span>|<span data-ttu-id="cc63e-1446">无。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1446">None.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|
|<span data-ttu-id="cc63e-1447">`s`包含时区信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1447">`s` contains time zone information.</span></span>|<span data-ttu-id="cc63e-1448">到本地时区的时间</span><span class="sxs-lookup"><span data-stu-id="cc63e-1448">To the time in the local time zone</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|
|<span data-ttu-id="cc63e-1449">`s`包含时区信息，并且 "样式" 包括<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1449">`s` contains time zone information, and \`styles includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag.</span></span>|<span data-ttu-id="cc63e-1450">到协调世界时（UTC）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1450">To Coordinated Universal Time (UTC)</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|
|<span data-ttu-id="cc63e-1451">`s`包含 Z 或 GMT 时区指示符，并`styles` <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>包括。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1451">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="cc63e-1452">无。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1452">None.</span></span>|<xref:System.DateTimeKind.Utc>| 

## <a name="example"></a><span data-ttu-id="cc63e-1453">示例</span><span class="sxs-lookup"><span data-stu-id="cc63e-1453">Example</span></span>

<span data-ttu-id="cc63e-1454">下面的示例演示<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法，并显示结果<xref:System.DateTime>值的<xref:System.DateTime.Kind%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1454">The following example demonstrates the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method and displays the value of the <xref:System.DateTime.Kind%2A> property of the resulting <xref:System.DateTime> values.</span></span>  
  
[!code-csharp[System.DateTime.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse4.cs#4)]
[!code-vb[System.DateTime.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1455"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1455"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1456"><paramref name="s" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1456"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-1457"><paramref name="styles" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1457"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="cc63e-1458">例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1458">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1459">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1459">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1460">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1460">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1461">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1461">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-round-trip-date-and-time-values.md"><span data-ttu-id="cc63e-1462">如何：往返日期和时间值</span><span class="sxs-lookup"><span data-stu-id="cc63e-1462">How to: Round-trip Date and Time Values</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1463">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1463">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="cc63e-1464">字符串表示形式的格式必须与指定的格式完全匹配，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1464">The format of the string representation must match a specified format exactly or an exception is thrown.</span></span></summary>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1465">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1465">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="cc63e-1466">用于定义所需的 <paramref name="s" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1466">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="cc63e-1467">有关详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1467">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1468">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1468">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-1469">使用指定的格式和区域性特定格式信息，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1469">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="cc63e-1470">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1470">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1471">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1471">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1472">方法分析日期的字符串表示形式，该日期必须采用`format`参数定义的格式。 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1472">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="cc63e-1473">它\<还要求日期和时间的字符串\<表示形式的日期 > 和时间 > 元素`format`以`s`指定的顺序出现，并且没有除允许的以外的空白`format`.</span><span class="sxs-lookup"><span data-stu-id="cc63e-1473">It also requires that the \<Date> and \<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`.</span></span> <span data-ttu-id="cc63e-1474">如果`format`定义的日期没有时间元素并且分析操作成功，则生成<xref:System.DateTime>的值的时间为午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1474">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="cc63e-1475">如果`format`定义一个没有日期元素的时间并且分析操作成功，则生成<xref:System.DateTime>的值的日期为`DateTime.Now.Date`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1475">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.</span></span>  
  
 <span data-ttu-id="cc63e-1476">如果`s`不表示特定时区中的时间并且分析操作成功<xref:System.DateTime.Kind%2A> ，则返回<xref:System.DateTime>值的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1476">If `s` does not represent a time in a particular time zone and the parse operation succeeds, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1477">如果`s`表示特定时区中的时间，并`format`允许存在时区信息`format` （例如，等于 "o"、"r" 或 "u" 标准格式说明符，或者它包含 "z"、"zz" 或 "zzz"）自定义格式说明符）， <xref:System.DateTime.Kind%2A>则返回<xref:System.DateTime>的值的属性<xref:System.DateTimeKind.Local?displayProperty=nameWithType>为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1477">If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="cc63e-1478">参数是一个字符串，其中包含单个标准格式说明符，或者一个或多个定义所需的格式的`s`自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1478">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`.</span></span> <span data-ttu-id="cc63e-1479">有关有效格式设置代码的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)或[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1479">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1480">如果`format`是不包含日期或时间分隔符（如 "yyyyMMddHHmm"）的自定义格式模式，请对`provider`参数和每个自定义格式说明符的最宽形式使用固定区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1480">If `format` is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="cc63e-1481">例如，如果想要在格式模式中指定小时数，请指定更宽的形式 "HH"，而不是 "H"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1481">For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="cc63e-1482">中`s`使用的特定日期和时间符号和字符串（如一周中的星期几的名称）是`provider`由参数定义的，因为`s` if `format`是标准格式说明符字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1482">The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="cc63e-1483">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1483">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-1484">一个<xref:System.Globalization.CultureInfo>对象，表示用于解释`s`的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1484">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="cc63e-1485">`s`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1485">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-1486">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1486">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-1487">一个自<xref:System.IFormatProvider>定义实现<xref:System.IFormatProvider.GetFormat%2A> ，其方法返回<xref:System.Globalization.CultureInfo>提供格式设置<xref:System.Globalization.DateTimeFormatInfo>信息的对象或对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1487">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-1488">如果`provider`为`null` ，<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1488">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1489">下面的示例演示<xref:System.DateTime.ParseExact%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1489">The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]
 [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1490"><paramref name="s" /> 或 <paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1490"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1491"><paramref name="s" /> 或 <paramref name="format" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1491"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="cc63e-1492">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1492">-or-</span></span> 
 <span data-ttu-id="cc63e-1493"><paramref name="s" /> 不包含与 <paramref name="format" /> 中指定的模式相对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1493"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="cc63e-1494">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-1494">-or-</span></span> 
<span data-ttu-id="cc63e-1495"><paramref name="s" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1495">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1496">在中<see cref="Overload:System.DateTime.ParseExact" /> <see cref="T:System.FormatException" /> ，如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符，则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1496">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="cc63e-1497">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中，将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1497">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1498">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1498">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1499">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1499">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1500">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1500">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1501">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1501">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="cc63e-1502">用于定义所需的 <paramref name="s" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1502">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="cc63e-1503">有关详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1503">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1504">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1504">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="cc63e-1505">枚举值的按位组合，提供有关以下内容的附加信息：<paramref name="s" />、可能出现在 <paramref name="s" /> 中的样式元素或从 <paramref name="s" /> 到 <see cref="T:System.DateTime" /> 值的转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1505">A bitwise combination of the enumeration values that provides additional information about <paramref name="s" />, about style elements that may be present in <paramref name="s" />, or about the conversion from <paramref name="s" /> to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="cc63e-1506">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1506">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-1507">使用指定的格式、区域性特定的格式信息和样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1507">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="cc63e-1508">字符串表示形式的格式必须与指定的格式完全匹配，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1508">The format of the string representation must match the specified format exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1509">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="format" />、<paramref name="provider" /> 和 <paramref name="style" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1509">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1510">方法分析日期的字符串表示形式，该日期必须采用`format`参数定义的格式。 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1510">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="cc63e-1511">它还要求中`s`的日期和时间元素按`format`指定的顺序显示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1511">It also requires that the date and time elements in `s` appear in the order specified by `format`.</span></span> <span data-ttu-id="cc63e-1512">如果`s`与`format`参数的模式不匹配，并且具有`style`参数定义的任何变体，则该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1512">If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="cc63e-1513">与<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>此相反，方法会分析格式提供程序的<xref:System.Globalization.DateTimeFormatInfo>对象识别的任何格式的日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1513">In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="cc63e-1514">方法还允许中`s`的日期和时间元素按任意顺序显示。 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1514">The <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method also allows the date and time elements in `s` to appear in any order.</span></span>  
  
 <span data-ttu-id="cc63e-1515">如果参数只包含时间而不包含日期，则使用当前日期， `style`除非参数包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>标志，在这种情况下，将使用默认的`DateTime.Date.MinValue`日期（）。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1515">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="cc63e-1516">`s`如果参数仅包含日期而不包含时间，则使用午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1516">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="cc63e-1517">参数还可确定`s`参数是否可以包含前导空白字符和尾随空格字符。 `style`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1517">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="cc63e-1518">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1518">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1519">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>标志来更改，该标志<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值<xref:System.DateTime> ，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>和<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>标志，后者返回值<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1519">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1520">如果`s`包含时区信息，则时间转换为本地时间，如有必要， <xref:System.DateTime.Kind%2A>返回<xref:System.DateTime>对象的属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1520">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1521">可以通过使用<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>标志来更改此行为，以便不将协调世界时（UTC）转换为本地时间并<xref:System.DateTime.Kind%2A>将属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1521">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-1522">参数定义`s`参数所需的模式。 `format`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1522">The `format` parameter defines the required pattern of the `s` parameter.</span></span> <span data-ttu-id="cc63e-1523">它可以包含[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)表中的一个或多个自定义格式说明符，也可以是从[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)表中标识预定义模式的单个标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1523">It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="cc63e-1524">如果在自定义格式模式下不使用日期或时间分隔符，请对`provider`参数使用固定区域性，并为每个自定义格式说明符使用最宽形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1524">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="cc63e-1525">例如，如果想要在模式中指定小时数，请指定更宽的形式 "HH"，而不是 "H"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1525">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1526">您可以`s` <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>调用方法并指定多个允许的格式，而不是要求符合一种格式以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1526">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="cc63e-1527">这使得分析操作更有可能成功。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1527">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="cc63e-1528">参数包含一个或多个<xref:System.Globalization.DateTimeStyles>枚举成员，这些成员确定是否`format`可以在中`s`显示未定义的，以及是否能够控制分析操作的确切行为。 `styles`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1528">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="cc63e-1529">下表描述了<xref:System.Globalization.DateTimeStyles>枚举的每个成员如何影响该<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法的操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1529">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="cc63e-1530">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-1530">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-1531">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-1531">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-1532">分析`s`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1532">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="cc63e-1533">如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为 UTC，并将<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1533">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1534">如果`s`指示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1534">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1535">在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1535">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-1536">指定不由`format`定义的空白可以出现在任何单个日期或时间元素之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1536">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-1537">指定不由`format`定义的空白可出现在的`s`开头。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1537">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-1538">指定的`format` `s`末尾不能出现的空白。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1538">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-1539">指定可能包含未定义的`format`前导空格、内部空格和尾随空格。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1539">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-1540">指定如果`s`缺少任何时区信息，则假定它表示本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1540">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="cc63e-1541">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1541">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-1542">指定如果`s`缺少任何时区信息，则假定它表示 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1542">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="cc63e-1543">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1543">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="cc63e-1544">如果`s`包含时间而不包含日期信息，则返回值的日期设置为`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1544">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-1545">使用默认值分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1545">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="cc63e-1546">不允许使用以外的`format`任何空白区域。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1546">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="cc63e-1547">如果`s`缺少日期部分，则返回<xref:System.DateTime>值的日期设置为1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1547">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="cc63e-1548">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性设置为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1548">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1549">如果中`s`存在时区信息，则该时间将转换为本地时间， <xref:System.DateTime.Kind%2A>而返回<xref:System.DateTime>对象的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1549">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-1550">对于包含时区信息的字符串，尝试防止转换为<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1550">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1551">此标志主要用于防止 UTC 时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1551">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="cc63e-1552">中`s`使用的特定日期和时间符号和字符串（如一周中的星期几的名称）是`provider`由参数定义的， `s`如果`format`是标准格式，则是的精确格式。说明符字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1552">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="cc63e-1553">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1553">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-1554">一个<xref:System.Globalization.CultureInfo>对象，表示用于解释`s`的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1554">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="cc63e-1555">`s`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1555">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-1556">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1556">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-1557">一个自<xref:System.IFormatProvider>定义实现<xref:System.IFormatProvider.GetFormat%2A> ，其方法返回<xref:System.Globalization.CultureInfo>提供格式设置<xref:System.Globalization.DateTimeFormatInfo>信息的对象或对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1557">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-1558">如果`provider`为`null` ，<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1558">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1559">下面的示例演示<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1559">The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="cc63e-1560">请注意，当`styles`参数等于<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>时无法成功分析字符串 "5/01/2009 8:30 AM"，因为不允许使用前导`format`空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1560">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="cc63e-1561">此外，不能使用`format` "MM/dd/yyyyhh： MM" 成功分析字符串 "5/01/2009 09:00"，因为日期字符串未在月份号之前带有前导零，如`format`需要。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1561">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]
 [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1562"><paramref name="s" /> 或 <paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1562"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1563"><paramref name="s" /> 或 <paramref name="format" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1563"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="cc63e-1564">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1564">-or-</span></span> 
 <span data-ttu-id="cc63e-1565"><paramref name="s" /> 不包含与 <paramref name="format" /> 中指定的模式相对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1565"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="cc63e-1566">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1566">-or-</span></span> 
<span data-ttu-id="cc63e-1567"><paramref name="s" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1567">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-1568"><paramref name="style" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1568"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="cc63e-1569">例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1569">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1570">在中<see cref="Overload:System.DateTime.ParseExact" /> <see cref="T:System.FormatException" /> ，如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符，则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1570">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="cc63e-1571">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中，将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1571">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1572">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1572">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1573">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1573">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1574">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1574">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-1575">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1575">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="cc63e-1576"><paramref name="s" /> 的允许格式的数组。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1576">An array of allowable formats of <paramref name="s" />.</span></span> <span data-ttu-id="cc63e-1577">有关详细信息，请参阅“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1577">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1578">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1578">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="cc63e-1579">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1579">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="cc63e-1580">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1580">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="cc63e-1581">使用指定的格式数组、区域性特定格式信息和样式，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1581">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="cc63e-1582">字符串表示形式的格式必须至少与指定的格式之一完全匹配，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1582">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1583">一个对象，它等效于 <paramref name="s" /> 中包含的日期和时间，由 <paramref name="formats" />、<paramref name="provider" /> 和 <paramref name="style" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1583">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1584">方法分析与分配`formats`给参数的模式之一匹配的日期的字符串表示形式。 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1584">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="cc63e-1585">如果字符串`s`与`styles`这些模式<xref:System.FormatException>中的任何一种模式都不匹配，则该方法将引发。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1585">If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="cc63e-1586">除了与多`s`个格式设置模式（而不是单个格式化模式）进行比较以外，此重载的<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>行为与方法相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1586">Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cc63e-1587">`s`参数包含要分析的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1587">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="cc63e-1588">如果参数只包含时间而不包含日期，则使用当前日期， `style`除非参数包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>标志，在这种情况下，将使用默认的`DateTime.Date.MinValue`日期（）。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1588">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="cc63e-1589">`s`如果参数仅包含日期而不包含时间，则使用午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1589">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="cc63e-1590">参数还可确定`s`参数是否可以包含前导、内部或尾随空格字符，而不能包含中`formats`的某个格式字符串所允许的空白字符。 `style`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1590">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="cc63e-1591">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1591">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1592">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>标志来更改，该标志<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值<xref:System.DateTime> ，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>和<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>标志，后者返回值<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1592">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1593">如果`s`包含时区信息，则时间转换为本地时间，如有必要， <xref:System.DateTime.Kind%2A>返回<xref:System.DateTime>对象的属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1593">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1594">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>标志来更改，而不是将协调世界时（UTC）转换为本地时间，并<xref:System.DateTime.Kind%2A>将属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1594">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-1595">参数包含模式的数组，其中一个`s`模式必须完全匹配（如果分析操作成功）。 `formats`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1595">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="cc63e-1596">`formats`参数中的模式包括[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)表中的一个或多个自定义格式说明符，或从[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)表。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1596">The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="cc63e-1597">如果在自定义格式模式下不使用日期或时间分隔符，请对`provider`参数使用固定区域性，并为每个自定义格式说明符使用最宽形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1597">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="cc63e-1598">例如，如果想要在模式中指定小时数，请指定更宽的形式 "HH"，而不是 "H"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1598">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="cc63e-1599">参数包含一个或多个<xref:System.Globalization.DateTimeStyles>枚举成员，这些成员确定是否`format`可以在中`s`显示未定义的，以及是否能够控制分析操作的确切行为。 `styles`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1599">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="cc63e-1600">下表描述了<xref:System.Globalization.DateTimeStyles>枚举的每个成员如何影响该<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法的操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1600">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="cc63e-1601">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-1601">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-1602">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-1602">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-1603">分析`s`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1603">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="cc63e-1604">如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为 UTC，并将<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1604">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1605">如果`s`指示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1605">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1606">在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1606">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-1607">指定不由`format`定义的空白可以出现在任何单个日期或时间元素之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1607">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-1608">指定不由`format`定义的空白可出现在的`s`开头。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1608">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-1609">指定的`format` `s`末尾不能出现的空白。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1609">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-1610">指定可能包含未定义的`format`前导空格、内部空格和尾随空格。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1610">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-1611">指定如果`s`缺少任何时区信息，则假定它表示本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1611">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="cc63e-1612">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1612">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-1613">指定如果`s`缺少任何时区信息，则假定它表示 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1613">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="cc63e-1614">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-1614">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="cc63e-1615">如果`s`包含时间而不包含日期信息，则返回值的日期设置为`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1615">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-1616">使用默认值分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-1616">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="cc63e-1617">不允许使用以外的`format`任何空白区域。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1617">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="cc63e-1618">如果`s`缺少日期部分，则返回<xref:System.DateTime>值的日期设置为1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1618">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="cc63e-1619">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性设置为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1619">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1620">如果中`s`存在时区信息，则该时间将转换为本地时间， <xref:System.DateTime.Kind%2A>而返回<xref:System.DateTime>对象的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1620">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-1621">对于包含时区信息的字符串，尝试防止转换为其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1621">For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1622">此标志主要用于防止 UTC 时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1622">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="cc63e-1623">中`s`使用的特定日期和时间符号和字符串（如一周中的星期几的名称）是`provider`由参数定义的， `s`如果`format`是标准格式，则是的精确格式。说明符字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1623">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="cc63e-1624">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1624">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-1625">一个<xref:System.Globalization.CultureInfo>对象，表示用于解释`s`的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1625">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="cc63e-1626">`s`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1626">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-1627">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1627">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-1628">一个自<xref:System.IFormatProvider>定义实现<xref:System.IFormatProvider.GetFormat%2A> ，其方法返回<xref:System.Globalization.CultureInfo>提供格式设置<xref:System.Globalization.DateTimeFormatInfo>信息的对象或对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1628">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-1629">如果`provider`为`null` ，<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1629">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1630">下面的示例使用<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法来确保可以成功分析多种可能格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1630">The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]
 [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1631"><paramref name="s" /> 或 <paramref name="formats" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1631"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-1632"><paramref name="s" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1632"><paramref name="s" /> is an empty string.</span></span>  
  
<span data-ttu-id="cc63e-1633">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1633">-or-</span></span> 
<span data-ttu-id="cc63e-1634"><paramref name="formats" /> 的一个元素为空字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1634">an element of <paramref name="formats" /> is an empty string.</span></span>  
  
<span data-ttu-id="cc63e-1635">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1635">-or-</span></span> 
 <span data-ttu-id="cc63e-1636"><paramref name="s" /> 不包含与 <paramref name="formats" /> 中任意元素相对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1636"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span></span>  
  
<span data-ttu-id="cc63e-1637">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-1637">-or-</span></span> 
<span data-ttu-id="cc63e-1638"><paramref name="s" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1638">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-1639"><paramref name="style" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1639"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="cc63e-1640">例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1640">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1641">在中<see cref="Overload:System.DateTime.ParseExact" /> <see cref="T:System.FormatException" /> ，如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符，则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1641">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="cc63e-1642">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中，将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1642">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-1643">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1643">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1644">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1644">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1645">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1645">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTime.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1646">获取此实例所表示日期的秒部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1646">Gets the seconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1647">秒组成部分，表示为 0 和 59 之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1647">The seconds component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc63e-1648">下面的示例演示了<xref:System.DateTime.Second%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1648">The following example demonstrates the <xref:System.DateTime.Second%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifyKind">
      <MemberSignature Language="C#" Value="public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime SpecifyKind(valuetype System.DateTime value, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpecifyKind (value As DateTime, kind As DateTimeKind) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime SpecifyKind(DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="static member SpecifyKind : DateTime * DateTimeKind -&gt; DateTime" Usage="System.DateTime.SpecifyKind (value, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-1649">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1649">A date and time.</span></span></param>
        <param name="kind"><span data-ttu-id="cc63e-1650">枚举值之一，该值指示新对象是表示本地时间、UTC，还是两者皆否。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1650">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span></span></param>
        <summary><span data-ttu-id="cc63e-1651">创建新的 <see cref="T:System.DateTime" /> 对象，该对象具有与指定的 <see cref="T:System.DateTime" /> 相同的刻度数，但是根据指定的 <see cref="T:System.DateTimeKind" /> 值的指示，指定为本地时间或协调世界时 (UTC)，或者两者皆否。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1651">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1652">一个新对象，它与由 <paramref name="value" /> 参数和由 <see cref="T:System.DateTimeKind" /> 参数指定的 <paramref name="kind" /> 值代表的对象具有相同刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1652">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1653"><xref:System.DateTime>对象包含一个类型字段，该字段指示时间值是基于本地时间、协调世界时（UTC）还是两者都不是，以及包含以100毫微秒计时周期度量的时间值的滴答字段。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1653">A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</span></span> <span data-ttu-id="cc63e-1654">方法使用<xref:System.DateTime> 指定`kind`的参数和原始时间值创建一个新的对象。 <xref:System.DateTime.SpecifyKind%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1654">The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1655">返回<xref:System.DateTime>的值`value`与参数的时间不相同，并且<xref:System.DateTime.SpecifyKind%2A>不是时区转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1655">The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method.</span></span> <span data-ttu-id="cc63e-1656">相反，它会使`value`参数指定的时间保持不变，并<xref:System.DateTime.Kind%2A>将属性设置`kind`为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1656">Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`.</span></span> <span data-ttu-id="cc63e-1657">有关时区转换的信息，请参阅[在时区之间转换时间](~/docs/standard/datetime/converting-between-time-zones.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1657">For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).</span></span>  
  
 <span data-ttu-id="cc63e-1658">此<xref:System.DateTime.SpecifyKind%2A>方法在互操作性方案中非常有用， <xref:System.DateTime>在这种情况下，你将收到一个具有未指定的类型字段的对象，但你可以通过独立的方式来确定刻度字段表示本地时间或 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1658">The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1659">下面<xref:System.DateTime.SpecifyKind%2A>的示例使用方法演示<xref:System.DateTime.Kind%2A>属性如何影响<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1659">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md"><span data-ttu-id="cc63e-1660">.NET Framework 应用程序中的 COM 互操作性 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="cc63e-1660">COM Interoperability in .NET Framework Applications (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1661">返回一个新的 <see cref="T:System.DateTime" />，从此实例的值中减去指定的时间或持续时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1661">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified time or duration from the value of this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTime -&gt; TimeSpan" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-1662">要减去的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1662">The date and time value to subtract.</span></span></param>
        <summary><span data-ttu-id="cc63e-1663">返回一个新的 <see cref="T:System.DateTime" />，从此实例的值中减去指定的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1663">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified date and time from the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1664">一个时间间隔，它等于此实例所表示的日期和时间减去 <paramref name="value" /> 所表示的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1664">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1665"><xref:System.DateTime.Subtract%28System.DateTime%29>方法确定两个日期之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1665">The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates.</span></span> <span data-ttu-id="cc63e-1666">若要从当前实例中减去时间间隔，请调用<xref:System.DateTime.Subtract%28System.TimeSpan%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1666">To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method.</span></span> <span data-ttu-id="cc63e-1667">若要从当前实例中减去特定时间间隔，请调用将该时间间隔添加到当前日期的方法，并提供一个负值作为方法自变量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1667">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="cc63e-1668">例如，若要从当前日期中减去两个月，请<xref:System.DateTime.AddMonths%28System.Int32%29>使用值-2 调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1668">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="cc63e-1669">如果当前实例的日期和时间早于`value`，则该方法返回一个<xref:System.TimeSpan>表示负时间跨度的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1669">If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span.</span></span> <span data-ttu-id="cc63e-1670">也就是说，其所有非零属性（如<xref:System.TimeSpan.Days%2A>或<xref:System.TimeSpan.Ticks%2A>）的值均为负数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1670">That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.</span></span>  
  
 <span data-ttu-id="cc63e-1671">执行<xref:System.DateTime.Subtract%28System.DateTime%29>减法运算时，此方法不会<xref:System.DateTime.Kind%2A>考虑两个<xref:System.DateTime>值的属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1671">The <xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="cc63e-1672">在减去<xref:System.DateTime>对象之前，请确保对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1672">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="cc63e-1673">否则，结果将包括时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1673">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1674">在<xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType>执行减法运算时，此方法会考虑时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1674">The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1675">下面的示例演示<xref:System.DateTime.Subtract%2A>方法和减法运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1675">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1676">结果小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1676">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-1677">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-1677">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTime Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTime" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc63e-1678">待减去的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1678">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="cc63e-1679">返回一个新的 <see cref="T:System.DateTime" />，从此实例的值中减去指定持续时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1679">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified duration from the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1680">一个对象，它等于此实例所表示的日期和时间减去 <paramref name="value" /> 所表示的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1680">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1681"><xref:System.DateTime.Subtract%28System.TimeSpan%29>方法返回与当前实例的指定时间间隔的日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1681">The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance.</span></span> <span data-ttu-id="cc63e-1682">若要确定两个日期之间的时间间隔， <xref:System.DateTime.Subtract%28System.DateTime%29>请调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1682">To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method.</span></span> <span data-ttu-id="cc63e-1683">若要从当前实例中减去特定时间间隔，请调用将该时间间隔添加到当前日期的方法，并提供一个负值作为方法自变量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1683">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="cc63e-1684">例如，若要从当前日期中减去两个月，请<xref:System.DateTime.AddMonths%28System.Int32%29>使用值-2 调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1684">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="cc63e-1685">此方法不更改此<xref:System.DateTime>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1685">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="cc63e-1686">相反，它会返回一个<xref:System.DateTime>新的，其值为此操作的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1686">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="cc63e-1687">通常， <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法会<xref:System.TimeSpan>减去表示正时间跨度的对象，并返回一个<xref:System.DateTime>早于当前实例的日期和时间的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1687">Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance.</span></span> <span data-ttu-id="cc63e-1688">但是，如果<xref:System.TimeSpan>对象表示负时间跨度，则该<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法将返回一个<xref:System.DateTime>值，该值晚于当前实例的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1688">However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.</span></span>  
  
 <span data-ttu-id="cc63e-1689">使用<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法可以减去包含多个时间单位的时间间隔（例如，给定小时数和给定分钟数）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1689">The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</span></span> <span data-ttu-id="cc63e-1690">若要从<xref:System.DateTime>实例中减去单个时间单位（例如年、月或日），可以将负值数值作为参数传递给以下任何方法：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1690">To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:</span></span>  
  
-   <span data-ttu-id="cc63e-1691"><xref:System.DateTime.AddYears%2A>，用于从当前日期和时间实例中减去特定的年数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1691"><xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1692"><xref:System.DateTime.AddMonths%2A>，用于从当前日期和时间实例中减去特定的月份数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1692"><xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1693"><xref:System.DateTime.AddDays%2A>，用于从当前日期和时间实例减去特定天数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1693"><xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1694"><xref:System.DateTime.AddHours%2A>，用于从当前日期和时间实例中减去特定的小时数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1694"><xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1695"><xref:System.DateTime.AddMinutes%2A>，用于从当前日期和时间实例减去特定分钟数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1695"><xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1696"><xref:System.DateTime.AddSeconds%2A>，用于从当前日期和时间实例中减去特定的秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1696"><xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1697"><xref:System.DateTime.AddMilliseconds%2A>，用于从当前日期和时间实例减去特定的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1697"><xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="cc63e-1698"><xref:System.DateTime.AddTicks%2A>，用于从当前日期和时间实例减去特定的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1698"><xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1699">下面的示例演示<xref:System.DateTime.Subtract%2A>方法和减法运算符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1699">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1700">结果小于 <see cref="F:System.DateTime.MinValue" /> 或大于 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1700">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="cc63e-1701">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="cc63e-1701">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1702">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1702">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1703">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1703">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1704">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1704">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1705">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1705">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1706">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1706">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1707">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1707">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1708">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1708">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1709">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1709">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1710">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1710">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1711">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1711">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1712">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1712">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1713">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1713">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1714">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1714">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1715">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1715">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1716">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1716">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1717">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1717">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1718">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1718">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1719">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1719">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1720">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1720">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1721">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1721">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1722">返回当前 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1722">Returns the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1723">当前对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1723">The current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1724">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1724">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1725">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1725">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1726">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1726">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1727">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1727">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1728">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1728">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1729">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1729">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1730">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1730">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1731">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1731">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1732">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1732">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1733">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1733">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1734">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1734">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1735">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1735">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1736">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1736">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1737">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1737">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1738">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1738">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1739">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1739">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1740">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1740">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1741">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1741">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1742">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1742">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1743">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1743">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1744">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1744">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1745">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1745">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1746">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1746">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1747">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1747">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1748">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1748">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1749">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1749">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1750">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1750">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1751">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1751">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1752">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1752">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1753">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1753">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1754">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1754">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1755">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1755">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1756">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1756">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1757">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1757">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1758">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1758">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1759">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1759">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1760">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1760">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1761">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1761">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1762">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1762">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1763">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1763">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1764">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1764">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1765">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1765">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cc63e-1766">所需类型。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1766">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-1767">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1767">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1768">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1768">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1769">将当前 <see cref="T:System.DateTime" /> 对象转换为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1769">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1770">由 <paramref name="type" /> 参数指定的类型的对象，其值与当前 <see cref="T:System.DateTime" /> 对象等效。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1770">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1771"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1771"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1772"><see cref="T:System.DateTime" /> 类型不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1772">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1773">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1773">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1774">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1774">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1775">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1775">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1776">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1776">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1777">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1777">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1778">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1778">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1779">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1779">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1780">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1780">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1781">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1781">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1782">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1782">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1783">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1783">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1784">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1784">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1785">一个实现 <see cref="T:System.IFormatProvider" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1785">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="cc63e-1786">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1786">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1787">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1787">This conversion is not supported.</span></span> <span data-ttu-id="cc63e-1788">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1788">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1789">未使用此成员的返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1789">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cc63e-1790">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1790">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cc63e-1791">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1791">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="cc63e-1792">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1792">The destination for this serialization.</span></span> <span data-ttu-id="cc63e-1793">（未使用此参数；指定 <see langword="null" />。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-1793">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="cc63e-1794">使用序列化当前的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的所有数据填充 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1794">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1795">此方法`info` <xref:System.DateTime.Ticks%2A>用和<xref:System.DateTime.Kind%2A>属性值填充参数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1795">This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc63e-1796"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1796"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="cc63e-1797">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1797">requires full trust for the immediate caller.</span></span> <span data-ttu-id="cc63e-1798">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1798">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTime.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1799">获取表示此实例的日期和时间的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1799">Gets the number of ticks that represent the date and time of this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1800">表示此实例的日期和时间的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1800">The number of ticks that represent the date and time of this instance.</span></span> <span data-ttu-id="cc63e-1801">该值介于 <see langword="DateTime.MinValue.Ticks" /> 和 <see langword="DateTime.MaxValue.Ticks" /> 之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1801">The value is between <see langword="DateTime.MinValue.Ticks" /> and <see langword="DateTime.MaxValue.Ticks" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1802">一个计时周期表示一百纳秒，即一千万分之一秒。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1802">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="cc63e-1803">1 毫秒内有 10,000 个计时周期，即 1 秒内有 1,000 万个计时周期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1803">There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</span></span>  
  
 <span data-ttu-id="cc63e-1804">此属性的值表示12:00:00 自0001年1月1日午夜12月1日午夜0:00:00 （公历日期为0001年1月1日）的100毫微秒间隔数，表示<xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1804">The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1805">它不包括由闰秒组成的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1805">It does not include the number of ticks that are attributable to leap seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1806">下面的示例使用<xref:System.DateTime.Ticks%2A>属性来显示自第二十五世纪开始到<xref:System.TimeSpan>实例化对象以来已过的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1806">The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="cc63e-1807">然后<xref:System.TimeSpan> ，使用该对象显示使用几个其他时间间隔的运行时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1807">The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.</span></span>  
  
 [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]
 [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1808">获取此实例的当天的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1808">Gets the time of day for this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-1809">一个时间间隔，它表示当天自午夜以来已经过时间的部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1809">A time interval that represents the fraction of the day that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1810"><xref:System.DateTime.Date%2A>与属性不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1810">Unlike the <xref:System.DateTime.Date%2A> property.</span></span> <span data-ttu-id="cc63e-1811">此<xref:System.DateTime.TimeOfDay%2A>属性返回<xref:System.DateTime>一个值，该值表示不带时间部分的日期，属性返回<xref:System.TimeSpan> <xref:System.DateTime>一个值，该值表示值的时间部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1811">which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.</span></span>  
  
 <span data-ttu-id="cc63e-1812">如果要显示一天中的时间或检索某一天的<xref:System.DateTime>时间的字符串表示形式，则可以改为调用具有`format`参数或使用[复合格式设置](~/docs/standard/base-types/composite-formatting.md)的<xref:System.DateTime.ToString%2A>方法的重载带有 "t" 或 "T" 标准格式字符串的功能。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1812">If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the "t" or "T" standard format string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1813">下面的示例显示<xref:System.DateTime.TimeOfDay%2A> <xref:System.DateTime>值数组的属性的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1813">The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values.</span></span> <span data-ttu-id="cc63e-1814">它还使用复合格式设置操作中的 "t" 标准格式字符串返回的字符串来比较返回值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1814">It also contrasts the return value with the string returned by the "t" standard format string in a composite formatting operation.</span></span>  
  
 [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]
 [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="ToBinary">
      <MemberSignature Language="C#" Value="public long ToBinary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToBinary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToBinary" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBinary () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToBinary();" />
      <MemberSignature Language="F#" Value="member this.ToBinary : unit -&gt; int64" Usage="dateTime.ToBinary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1815">将当前 <see cref="T:System.DateTime" /> 对象序列化为一个 64 位二进制值，该值随后可用于重新创建 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1815">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1816">64 位有符号整数，它对 <see cref="P:System.DateTime.Kind" /> 和 <see cref="P:System.DateTime.Ticks" /> 属性进行了编码。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1816">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1817">使用方法将当前<xref:System.DateTime>对象的值转换为二进制值。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1817">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="cc63e-1818">随后，使用二进制值和<xref:System.DateTime.FromBinary%2A>方法重新创建原始<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1818">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1819">在某些情况下， <xref:System.DateTime> <xref:System.DateTime.FromBinary%2A>方法返回的值与提供给该<xref:System.DateTime.ToBinary%2A>方法的原始<xref:System.DateTime>值不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1819">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="cc63e-1820">有关详细信息，请参阅下一节 "本地时间调整"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1820">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="cc63e-1821">本地时间调整</span><span class="sxs-lookup"><span data-stu-id="cc63e-1821">Local Time Adjustment</span></span>  
 <span data-ttu-id="cc63e-1822">本地时间（即调整为本地时区的协调世界时）由其<xref:System.DateTime> <xref:System.DateTime.Kind%2A>属性具有值<xref:System.DateTimeKind.Local>的结构来表示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1822">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="cc63e-1823">从<xref:System.DateTime.ToBinary%2A>方法生成的<xref:System.DateTime>二进制表示形式还原本地值时，该<xref:System.DateTime.FromBinary%2A>方法可能会调整重新创建的值，使其不等于原始值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1823">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="cc63e-1824">在下列条件下，可能会出现这种情况：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1824">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="cc63e-1825">如果本地<xref:System.DateTime>对象<xref:System.DateTime.ToBinary%2A>按方法在一个时区中序列化，然后<xref:System.DateTime.FromBinary%2A>方法在不同时区中进行反序列化，则生成<xref:System.DateTime>的对象所表示的本地时间会自动调整第二个时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1825">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="cc63e-1826">例如，假设某个<xref:System.DateTime>对象表示本地时间下午3点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1826">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="cc63e-1827">在美国的中执行的应用程序太平洋时区使用<xref:System.DateTime.ToBinary%2A>方法将该<xref:System.DateTime>对象转换为二进制值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1827">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="cc63e-1828">在美国的其他正在执行的应用程序东部时区使用<xref:System.DateTime.FromBinary%2A>方法将二进制值转换为新<xref:System.DateTime>的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1828">Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-1829">新<xref:System.DateTime>的对象的值为下午6点，表示与原来的下午3点相同的时间点。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1829">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="cc63e-1830">值，但会调整为东部时区中的本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1830">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="cc63e-1831">如果本地<xref:System.DateTime>值的二进制表示形式表示所调用系统<xref:System.DateTime.FromBinary%2A>的本地时区中的无效时间，则将调整该时间，使其有效。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1831">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="cc63e-1832">例如，从标准时间转换为夏时制发生在美国太平洋时区于2010年3月14日上午2:00 点，时间前进一小时，上午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-1832">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="cc63e-1833">此小时间隔为无效时间，即此时区中不存在的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1833">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="cc63e-1834">下面的示例显示，当处于此范围内的时间由<xref:System.DateTime.ToBinary%2A>方法转换为二进制值，然后<xref:System.DateTime.FromBinary%2A>通过方法还原时，原始值将调整为有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1834">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="cc63e-1835">如示例所示，可以通过将特定日期和时间值传递给<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>方法来确定是否可以修改该日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1835">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="cc63e-1836">版本注意事项</span><span class="sxs-lookup"><span data-stu-id="cc63e-1836">Version Considerations</span></span>  
 <span data-ttu-id="cc63e-1837">从 .NET Framework 版本2.0 开始， <xref:System.DateTime>结构包含一个私有类型字段，该字段指示指定的时间值是基于本地时间、协调世界时（UTC）还是两者都不是，以及一个专用刻度字段，包含指定日期和时间的100毫微秒刻度数。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1837">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="cc63e-1838">可以通过<xref:System.DateTime.Ticks%2A>属性访问刻度字段，并且可以<xref:System.DateTime.Kind%2A>通过属性访问 Kind 字段。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1838">The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="cc63e-1839">在 .NET Framework 2.0 之前，如果手动序列化<xref:System.DateTime>对象<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>，而不是使用序列化接口（如），则只需要序列化<xref:System.DateTime>结构中的滴答数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1839">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="cc63e-1840">从版本2.0 开始，还必须序列化类型数据。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1840">Starting with version 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.FromBinary(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime" Usage="System.DateTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-1841">获取当前日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1841">Gets the current date.</span></span></summary>
        <value><span data-ttu-id="cc63e-1842">一个对象，设置为当天日期，其时间组成部分设置为 00:00:00。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1842">An object that is set to today's date, with the time component set to 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1843">从 .NET Framework 版本2.0 开始，返回值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1843">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.</span></span>  
  
 <span data-ttu-id="cc63e-1844">由于它在不使用当前时间的情况下返回当前<xref:System.DateTime.Today%2A>日期，因此该属性适用于仅使用日期的应用程序。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1844">Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only.</span></span> <span data-ttu-id="cc63e-1845">有关详细信息，请参阅[在 DateTime、DateTimeOffset、TimeSpan 和 TimeZoneInfo 之间进行选择](~/docs/standard/datetime/choosing-between-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1845">For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span> <span data-ttu-id="cc63e-1846">与此<xref:System.DateTime.TimeOfDay%2A>相反，属性返回当前时间而不包含当前日期， <xref:System.DateTime.Now%2A>属性返回当前日期和当前时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1846">In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1847">下面的示例使用<xref:System.DateTime.Date%2A>属性检索当前日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1847">The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date.</span></span> <span data-ttu-id="cc63e-1848">它还说明了如何<xref:System.DateTime>使用某些标准日期和时间格式字符串来设置值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1848">It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings.</span></span> <span data-ttu-id="cc63e-1849">请注意，第三次调用<xref:System.DateTime.ToString%28System.String%29>方法所生成的输出将使用 g 格式说明符来包含时间部分（零）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1849">Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.</span></span>  
  
 [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]
 [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Now" />
        <altmember cref="P:System.DateTime.TimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTime.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1850">将当前 <see cref="T:System.DateTime" /> 对象的值转换为 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1850">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1851">表示为 Windows 文件时间的当前 <see cref="T:System.DateTime" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1851">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1852">Windows 文件时间是一个64位的值，它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="cc63e-1852">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="cc63e-1853">公元协调世界时（UTC）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1853">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="cc63e-1854">当应用程序创建、访问或写入到文件时，Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1854">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="cc63e-1855">方法使用属性来确定当前<xref:System.DateTime>对象是否为本地时间、UTC 时间或被视为本地时间的未指定时间类型。 <xref:System.DateTime.Kind%2A> <xref:System.DateTime.ToFileTime%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1855">The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1856">下面的示例演示<xref:System.DateTime.ToFileTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1856">The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1857">所生成的文件时间将表示公元 1601 年 1 月 1 日午夜 12:00 之前的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1857">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="cc63e-1858">UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1858">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1859">通常， <see cref="M:System.DateTime.FromFileTime(System.Int64)" />方法<see cref="T:System.DateTime" /> 会还原由方法保存的值。<see cref="M:System.DateTime.ToFileTime" /></span><span class="sxs-lookup"><span data-stu-id="cc63e-1859">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="cc63e-1860">但是，在下列情况下，这两个值可能不同：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1860">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="cc63e-1861">-如果<see cref="T:System.DateTime" />值的序列化和反序列化出现在不同的时区中。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1861">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="cc63e-1862">例如，如果<see cref="T:System.DateTime" />值的时间为 12:30 P.M。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1862">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="cc63e-1863">在美国会序列化东部时区，然后在美国太平洋时区，12:30 P.M. 的原始值</span><span class="sxs-lookup"><span data-stu-id="cc63e-1863">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="cc63e-1864">调整为凌晨9:30。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1864">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="cc63e-1865">来反映两个时区之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1865">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="cc63e-1866">-如果<see cref="T:System.DateTime" />序列化的值表示本地时区中的无效时间，则为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1866">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="cc63e-1867">在这种情况下<see cref="M:System.DateTime.ToFileTime" /> ，方法会调整<see cref="T:System.DateTime" />还原的值，使其表示本地时区中的有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1867">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="cc63e-1868">例如，从标准时间转换为夏时制发生在美国太平洋时区于2010年3月14日上午2:00 点，时间前进一小时，上午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-1868">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="cc63e-1869">此小时间隔为无效时间，即此时区中不存在的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1869">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="cc63e-1870">下面的示例显示，当此范围内的时间由<see cref="M:System.DateTime.ToFileTime" />方法转换为长整数值，然后<see cref="M:System.DateTime.FromFileTime(System.Int64)" />通过方法还原时，原始值将调整为有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1870">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="cc63e-1871">如示例所示，可以通过将特定日期和时间值传递给<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法来确定是否可以修改该日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1871">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="cc63e-1872">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1872">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTimeUtc" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTimeUtc">
      <MemberSignature Language="C#" Value="public long ToFileTimeUtc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTimeUtc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTimeUtc () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTimeUtc();" />
      <MemberSignature Language="F#" Value="member this.ToFileTimeUtc : unit -&gt; int64" Usage="dateTime.ToFileTimeUtc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1873">将当前 <see cref="T:System.DateTime" /> 对象的值转换为 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1873">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1874">表示为 Windows 文件时间的当前 <see cref="T:System.DateTime" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1874">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1875">Windows 文件时间是一个64位的值，它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="cc63e-1875">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="cc63e-1876">公元协调世界时（UTC）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1876">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="cc63e-1877">当应用程序创建、访问或写入到文件时，Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1877">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="cc63e-1878">方法使用属性来确定当前<xref:System.DateTime>对象是本地时间、utc 时间还是被视为 utc 时间的未指定时间类型。 <xref:System.DateTime.Kind%2A> <xref:System.DateTime.ToFileTimeUtc%2A></span><span class="sxs-lookup"><span data-stu-id="cc63e-1878">The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</span></span> <span data-ttu-id="cc63e-1879">如果它是本地时间，则会在执行到 Windows 文件时间的转换之前将时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1879">If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1880">所生成的文件时间将表示公元 1601 年 1 月 1 日午夜 12:00 之前的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1880">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="cc63e-1881">UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1881">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1882">方法有时用于将本地时间转换为 UTC，然后通过<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />调用方法<see cref="M:System.DateTime.ToLocalTime" />然后调用方法来还原该时间。 <see cref="M:System.DateTime.ToFileTimeUtc" /></span><span class="sxs-lookup"><span data-stu-id="cc63e-1882">The <see cref="M:System.DateTime.ToFileTimeUtc" /> method is sometimes used to convert a local time to UTC, and subsequently to restore it by calling the <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method followed by the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span> <span data-ttu-id="cc63e-1883">但是，如果原始时间表示本地时区中的无效时间，则两个本地时间值将不相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1883">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="cc63e-1884">有关其他信息，请参见<see cref="M:System.DateTime.ToLocalTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1884">For additional information, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTime" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTime" Usage="dateTime.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1885">将当前 <see cref="T:System.DateTime" /> 对象的值转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1885">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1886">一个对象，其 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Local" />，并且其值为等效于当前 <see cref="T:System.DateTime" /> 对象的值的本地时间；如果经转换的值过大以至于不能由 <see cref="F:System.DateTime.MaxValue" /> 对象表示，则为 <see cref="T:System.DateTime" />，或者，如果经转换的值过小以至于不能表示为 <see cref="F:System.DateTime.MinValue" /> 对象，则为 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1886">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1887">本地时间等于协调世界时（UTC）时间加上 UTC 偏移量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1887">The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</span></span> <span data-ttu-id="cc63e-1888">有关 UTC 偏移量的详细信息，请<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>参阅。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1888">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1889">转换还会考虑适用于当前<xref:System.DateTime>对象所表示的时间的夏时制规则。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1889">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-1890">在[!INCLUDE[winxp](~/includes/winxp-md.md)]系统上， <xref:System.DateTime.ToLocalTime%2A>此方法仅在将 UTC 转换为本地时间时才识别当前调整规则。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1890">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time.</span></span> <span data-ttu-id="cc63e-1891">因此，当前调整规则生效前的时间转换可能无法准确反映 UTC 与本地时间之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1891">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</span></span>  
  
 <span data-ttu-id="cc63e-1892">从 .NET Framework 版本2.0 开始， <xref:System.DateTime.ToLocalTime%2A>方法返回的值由当前<xref:System.DateTime>对象的<xref:System.DateTime.Kind%2A>属性确定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1892">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-1893">下表描述了可能的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1893">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="cc63e-1894">类型</span><span class="sxs-lookup"><span data-stu-id="cc63e-1894">Kind</span></span>|<span data-ttu-id="cc63e-1895">结果</span><span class="sxs-lookup"><span data-stu-id="cc63e-1895">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="cc63e-1896"><xref:System.DateTime>将此实例转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1896">This instance of <xref:System.DateTime> is converted to local time.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="cc63e-1897">不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1897">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="cc63e-1898">的<xref:System.DateTime>此实例被假定为 UTC 时间，转换的执行<xref:System.DateTime.Kind%2A>方式就像是<xref:System.DateTimeKind.Utc>一样。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1898">This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1899"><xref:System.DateTime.ToLocalTime%2A> 方法<xref:System.DateTime>将值从 UTC 转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1899">The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time.</span></span> <span data-ttu-id="cc63e-1900">若要将任何指定时区中的时间转换为本地时间，请<xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType>使用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1900">To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cc63e-1901">转换返回的值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性始终返回<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1901">The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="cc63e-1902">因此，即使<xref:System.DateTime.ToLocalTime%2A>重复应用于同一<xref:System.DateTime>，也会返回有效的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1902">Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1903">下面的示例演示<xref:System.DateTime.ToLocalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1903">The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="cc63e-1904">请注意，准确的输出取决于当前区域性以及运行它的系统的本地时区。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1904">Note that the exact output depends on the current culture and the local time zone of the system on which it is run.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="cc63e-1905">下面<xref:System.DateTime.SpecifyKind%2A>的示例使用方法演示<xref:System.DateTime.Kind%2A>属性如何影响<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1905">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1906">您可以使用<see cref="M:System.DateTime.ToLocalTime" />方法还原<see cref="M:System.DateTime.ToUniversalTime" />通过或<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />方法转换为 UTC 的本地日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1906">You can use the <see cref="M:System.DateTime.ToLocalTime" /> method to restore a local date and time value that was converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> or <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method.</span></span> <span data-ttu-id="cc63e-1907">但是，如果原始时间表示本地时区中的无效时间，则它将不与还原的值匹配。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1907">However, if the original time represents an invalid time in the local time zone, it will not match the restored value.</span></span> <span data-ttu-id="cc63e-1908"><see cref="M:System.DateTime.ToLocalTime" />当方法将时间从 UTC 转换为本地时区时，它还会调整时间，以便在本地时区中有效。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1908">When the <see cref="M:System.DateTime.ToLocalTime" /> method converts a time from UTC to the local time zone, it also adjusts the time so that is valid in the local time zone.</span></span>  
  
<span data-ttu-id="cc63e-1909">例如，从标准时间转换为夏时制发生在美国太平洋时区于2010年3月14日上午2:00 点，时间前进一小时，上午3:00</span><span class="sxs-lookup"><span data-stu-id="cc63e-1909">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="cc63e-1910">此小时间隔为无效时间，即此时区中不存在的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1910">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="cc63e-1911">下面的示例显示，当此范围内的时间由<see cref="M:System.DateTime.ToUniversalTime" />方法转换为 UTC，然后<see cref="M:System.DateTime.ToLocalTime" />通过方法还原时，原始值将调整为有效时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1911">The following example shows that when a time that falls within this range is converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> method and is then restored by the <see cref="M:System.DateTime.ToLocalTime" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="cc63e-1912">如示例所示，可以通过将特定日期和时间值传递给<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法来确定是否可以修改该日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1912">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="cc63e-1913">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1913">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToLongDateString">
      <MemberSignature Language="C#" Value="public string ToLongDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongDateString();" />
      <MemberSignature Language="F#" Value="member this.ToLongDateString : unit -&gt; string" Usage="dateTime.ToLongDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1914">将当前 <see cref="T:System.DateTime" /> 对象的值转换为其等效的长日期字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1914">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1915">一个字符串，它包含当前 <see cref="T:System.DateTime" /> 对象的长日期字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1915">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1916">使用与当前线程区域性<xref:System.DateTime>关联的<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性所定义的模式来设置当前对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1916">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture.</span></span> <span data-ttu-id="cc63e-1917">返回值与通过使用<xref:System.DateTime.ToString%28System.String%29>方法指定 "D"[标准 DateTime 格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)返回的值相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1917">The return value is identical to the value returned by specifying the "D" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1918"><xref:System.DateTime.ToLongDateString%2A>方法返回的字符串是区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1918">The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="cc63e-1919">它反映由当前区域性的<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType>属性定义的模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1919">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1920">例如，对于 en-us 区域性，标准长日期模式通常为 "dddd，MMMM dd，yyyy";对于 de 消除区域性，它是 "dddd，d"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1920">For example, for the en-US culture, the standard long date pattern is commonly "dddd, MMMM dd, yyyy"; for the de-DE culture, it is "dddd, d.</span></span> <span data-ttu-id="cc63e-1921">MMMM yyyy ";对于 ja-jp 区域性，为 "yyyy" 年 "月" 日 ""。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1921">MMMM yyyy"; for the ja-JP culture, it is "yyyy'年'M'月'd'日'".</span></span> <span data-ttu-id="cc63e-1922">请注意，根据 .NET 实现及其版本、操作系统及其版本和用户自定义情况，其值会有所不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1922">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]
  
## Examples

<span data-ttu-id="cc63e-1923">下面的示例演示<xref:System.DateTime.ToLongDateString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1923">The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.</span></span>  
  
[!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
[!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-1924">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-1924">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1925">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1925">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLongTimeString">
      <MemberSignature Language="C#" Value="public string ToLongTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToLongTimeString : unit -&gt; string" Usage="dateTime.ToLongTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1926">将当前 <see cref="T:System.DateTime" /> 对象的值转换为其等效的长时间字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1926">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1927">一个字符串，它包含当前 <see cref="T:System.DateTime" /> 对象的长时间字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1927">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cc63e-1928">使用与当前线程区域性<xref:System.DateTime>关联的<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>属性所定义的模式来设置当前对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1928">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="cc63e-1929">返回值与通过使用<xref:System.DateTime.ToString%28System.String%29>方法指定 "T"[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)返回的值相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1929">The return value is identical to the value returned by specifying the "T" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1930"><xref:System.DateTime.ToLongTimeString%2A>方法返回的字符串是区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1930">The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="cc63e-1931">它反映由当前区域性的<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>属性定义的模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1931">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1932">例如，对于 en-us 区域性，标准长时间模式为 "h:mm： ss tt";对于取消操作，它是 "HH： mm： ss";对于 ja-jp 区域性，它是 "H:mm： ss"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1932">For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</span></span> <span data-ttu-id="cc63e-1933">请注意，根据 .NET 实现及其版本、操作系统及其版本和用户自定义情况，其值会有所不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1933">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive-formatting](~/includes/thread-formatting.md)]
  
## Examples  
 <span data-ttu-id="cc63e-1934">下面的示例演示<xref:System.DateTime.ToLongTimeString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1934">The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]
 [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-1935">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-1935">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1936">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1936">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToOADate">
      <MemberSignature Language="C#" Value="public double ToOADate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ToOADate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToOADate" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOADate () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ToOADate();" />
      <MemberSignature Language="F#" Value="member this.ToOADate : unit -&gt; double" Usage="dateTime.ToOADate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1937">将此实例的值转换为等效的 OLE 自动化日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1937">Converts the value of this instance to the equivalent OLE Automation date.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1938">一个双精度浮点数，它包含与此实例的值等效的 OLE 自动化日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1938">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1939">OLE 自动化日期是以浮点数的形式实现的，其整数部分为午夜、12 1899 月30日之前或之后的天数，其小数部分表示该日除以24的时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1939">An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</span></span> <span data-ttu-id="cc63e-1940">例如，1899年12月31日午夜1.0 表示，6 A.M.，1月 1 1900 日表示，2.25;1899年12月29日午夜表示-1.0;和6月6日上午 6 1899，表示为-1.25。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1940">For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</span></span>  
  
 <span data-ttu-id="cc63e-1941">基础 OLE 自动化日期为1899年12月30日。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1941">The base OLE Automation Date is midnight, 30 December 1899.</span></span> <span data-ttu-id="cc63e-1942">最小 OLE 自动化日期为0100年1月1日午夜。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1942">The minimum OLE Automation date is midnight, 1 January 0100.</span></span> <span data-ttu-id="cc63e-1943">最大 OLE 自动化日期与9999年 12 <xref:System.DateTime.MaxValue?displayProperty=nameWithType>月31日最后一刻的日期相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1943">The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, the last moment of 31 December 9999.</span></span>  
  
 <span data-ttu-id="cc63e-1944">如果当前实例表示的<xref:System.DateTime.ToOADate%2A> <xref:System.DateTime.MaxValue>日期晚于 January1 0100，则该方法将引发。 <xref:System.OverflowException></span><span class="sxs-lookup"><span data-stu-id="cc63e-1944">The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MaxValue> and earlier than midnight on January1, 0100.</span></span> <span data-ttu-id="cc63e-1945">但是，如果当前实例的值为<xref:System.DateTime.MinValue>，则此方法返回0。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1945">However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.</span></span>  
  
 <span data-ttu-id="cc63e-1946">有关 OLE 自动化的详细信息，请参阅[MSDN library](https://go.microsoft.com/fwlink/?linkid=37118)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1946">For more information about OLE Automation, see the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cc63e-1947">此实例的值无法表示为 OLE 自动化日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1947">The value of this instance cannot be represented as an OLE Automation Date.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.DateTime.FromOADate(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToShortDateString">
      <MemberSignature Language="C#" Value="public string ToShortDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortDateString();" />
      <MemberSignature Language="F#" Value="member this.ToShortDateString : unit -&gt; string" Usage="dateTime.ToShortDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1948">将当前 <see cref="T:System.DateTime" /> 对象的值转换为其等效的短日期字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1948">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1949">一个字符串，它包含当前 <see cref="T:System.DateTime" /> 对象的短日期字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1949">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1950">使用与当前线程区域性<xref:System.DateTime>关联的<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType>属性所定义的模式来设置当前对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1950">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="cc63e-1951">返回值与通过使用<xref:System.DateTime.ToString%28System.String%29>方法指定 "d"[标准 DateTime 格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)返回的值相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1951">The return value is identical to the value returned by specifying the "d" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1952"><xref:System.DateTime.ToShortDateString%2A>方法返回的字符串是区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1952">The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="cc63e-1953">它反映由当前区域性的<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType>属性定义的模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1953">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1954">例如，对于 en-us 区域性，标准短日期模式为 "M/d/yyyy";对于取消的区域性，它是 "dd"。MM yyyy-mm-dd ";对于 ja-jp 区域性，它为 "yyyy/MM/dd"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1954">For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/MM/dd".</span></span> <span data-ttu-id="cc63e-1955">请注意，根据 .NET 实现及其版本、操作系统及其版本和用户自定义情况，其值会有所不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1955">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="cc63e-1956">下面的示例演示<xref:System.DateTime.ToShortDateString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1956">The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method.</span></span> <span data-ttu-id="cc63e-1957">它还显示调用<xref:System.DateTime.ToShortDateString%2A>方法的结果与通过将 "d" 作为格式参数<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>调用方法相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1957">It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method with "d" as the format parameter.</span></span>  
  
 [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]
 [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-1958">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-1958">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1959">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1959">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToShortTimeString">
      <MemberSignature Language="C#" Value="public string ToShortTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToShortTimeString : unit -&gt; string" Usage="dateTime.ToShortTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1960">将当前 <see cref="T:System.DateTime" /> 对象的值转换为其等效的短时间字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1960">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1961">一个字符串，它包含当前 <see cref="T:System.DateTime" /> 对象的短时间字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1961">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="cc63e-1962">使用与当前线程区域性<xref:System.DateTime>关联的<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType>属性所定义的模式来设置当前对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1962">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="cc63e-1963">返回值与通过使用<xref:System.DateTime.ToString%28System.String%29>方法指定 "t"[标准 DateTime 格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)返回的值相同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1963">The return value is identical to the value returned by specifying the "t" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-1964"><xref:System.DateTime.ToShortTimeString%2A>方法返回的字符串是区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1964">The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="cc63e-1965">它反映由当前区域性的<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType>属性定义的模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1965">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-1966">例如，对于 en-us 区域性，标准短时间模式为 "h:mm tt";对于取消操作，它是 "HH： mm";对于 ja-jp 区域性，它是 "H:mm"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1966">For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</span></span> <span data-ttu-id="cc63e-1967">请注意，根据 .NET 实现及其版本、操作系统及其版本和用户自定义情况，其值会有所不同。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1967">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span> 

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="cc63e-1968">下面的示例演示<xref:System.DateTime.ToShortTimeString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1968">The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-1969">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-1969">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-1970">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-1970">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-1971">将当前 <see cref="T:System.DateTime" /> 对象的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1971">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTime.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-1972">使用当前的区域性格式约定将当前 <see cref="T:System.DateTime" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1972">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1973">当前 <see cref="T:System.DateTime" /> 对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1973">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1974">使用常规日期和时间<xref:System.DateTime>格式说明符（"G"）设置当前对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1974">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G').</span></span> <span data-ttu-id="cc63e-1975">若要使用特定的日期和时间格式说明符来设置其格式<xref:System.DateTime.ToString%28System.String%29> ，请调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1975">To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method.</span></span> <span data-ttu-id="cc63e-1976">若要使用特定区域性的常规日期和时间格式说明符（"G"）对其进行格式化，请<xref:System.DateTime.ToString%28System.IFormatProvider%29>调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1976">To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method.</span></span> <span data-ttu-id="cc63e-1977">若要使用特定的日期和时间格式说明符以及特定区域性的约定对其进行格式化，请<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>调用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1977">To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="cc63e-1978">此方法使用派生自当前区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1978">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="cc63e-1979">特别是，它<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>将由`Thread.CurrentThread.CurrentCulture.DateTimeFormat`属性返回的<xref:System.Globalization.DateTimeFormatInfo>对象的和<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>属性返回的自定义格式字符串组合在一起。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1979">In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property.</span></span> <span data-ttu-id="cc63e-1980">有关详细信息，请参阅 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1980">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-1981"><xref:System.DateTime.ToString%2A>方法的其他重载使你能够指定要使用其格式设置的区域性，并定义<xref:System.DateTime>值的输出模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1981">Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-1982">下面的示例说明<xref:System.DateTime> <xref:System.DateTime.ToString>方法返回的值的字符串表示形式如何取决于当前线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1982">The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture.</span></span> <span data-ttu-id="cc63e-1983">它将当前线程区域性从 en-us 改为 fr-fr。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1983">It changes the current thread culture from en-US to fr-FR to ja-JP.</span></span> <span data-ttu-id="cc63e-1984">在每种情况下， <xref:System.DateTime.ToString>都调用方法，以返回使用该区域性的日期和时间值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1984">and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-1985">此日期和时间超出了当前区域性所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1985">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-1986"><see cref="M:System.DateTime.ToString" />方法返回当前区域性使用的日历中的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1986">The <see cref="M:System.DateTime.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="cc63e-1987">如果当前<see cref="T:System.DateTime" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1987">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="cc63e-1988">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1988">The following example provides an illustration.</span></span> <span data-ttu-id="cc63e-1989">当当前区域性为阿拉伯语（叙利亚）时，它会尝试<see cref="T:System.Globalization.HijriCalendar" />设置位于类范围之外的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1989">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
<span data-ttu-id="cc63e-1990">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-1990">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTime.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cc63e-1991">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1991">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="cc63e-1992">使用指定的区域性特定格式信息将当前 <see cref="T:System.DateTime" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1992">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cc63e-1993">由 <see cref="T:System.DateTime" /> 指定的当前 <paramref name="provider" /> 对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1993">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-1994">使用常规日期和时间<xref:System.DateTime>格式说明符（"G"）设置当前对象的值的格式，这将使用短日期模式和长时间模式设置输出的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1994">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</span></span>  
  
 <span data-ttu-id="cc63e-1995">短日期和长时间模式的格式由`provider`参数定义。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1995">The format of the short date and long time pattern is defined by the `provider` parameter.</span></span> <span data-ttu-id="cc63e-1996">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-1996">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-1997">一个<xref:System.Globalization.CultureInfo>对象，该对象表示要在返回的字符串中反映其格式设置约定的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1997">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="cc63e-1998">由属性返回的<xref:System.Globalization.DateTimeFormatInfo>对象定义返回的字符串的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1998">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="cc63e-1999">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-1999">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-2000">一个实现<xref:System.IFormatProvider>接口的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2000">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="cc63e-2001">其<xref:System.IFormatProvider.GetFormat%2A> 方法<xref:System.Globalization.DateTimeFormatInfo>返回提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2001">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-2002">如果`provider` <xref:System.Globalization.DateTimeFormatInfo>为`null`，则使用与当前区域性关联的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2002">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used.</span></span> <span data-ttu-id="cc63e-2003">有关详细信息，请参阅 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2003">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2004">下面的示例使用<xref:System.Globalization.CultureInfo>表示五个不同区域性的对象来显示日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2004">The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]
 [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-2005">日期和时间超出了 <paramref name="provider" /> 所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2005">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2006">方法返回由<paramref name="provider" />参数所表示的区域性使用的日历中的日期和时间的字符串表示形式。 <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /></span><span class="sxs-lookup"><span data-stu-id="cc63e-2006">The <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="cc63e-2007">其日历由<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />属性定义。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2007">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="cc63e-2008">如果当前<see cref="T:System.DateTime" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2008">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="cc63e-2009">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2009">The following example provides an illustration.</span></span> <span data-ttu-id="cc63e-2010">它尝试设置超出<see cref="T:System.Globalization.JapaneseCalendar" />类范围的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2010">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
<span data-ttu-id="cc63e-2011">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2011">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTime.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cc63e-2012">标准或自定义日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2012">A standard or custom date and time format string.</span></span></param>
        <summary><span data-ttu-id="cc63e-2013">使用指定的格式和当前区域性的格式约定将当前 <see cref="T:System.DateTime" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2013">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2014">由 <see cref="T:System.DateTime" /> 指定的当前 <paramref name="format" /> 对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2014">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2015">方法以特定格式返回日期和时间值的字符串表示形式，该格式使用当前区域性的格式设置约定; 有关详细信息，请参阅<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。 <xref:System.DateTime.ToString%28System.String%29></span><span class="sxs-lookup"><span data-stu-id="cc63e-2015">The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-2016">参数应包含单个格式说明符（请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)）或自定义格式模式（请参阅[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)），该模式定义了返回的格式`format`类似.</span><span class="sxs-lookup"><span data-stu-id="cc63e-2016">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="cc63e-2017">如果`format` 是`null`或空字符串，则使用常规格式说明符 "G"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2017">If `format` is `null` or an empty string, the general format specifier, 'G', is used.</span></span>  
  
 <span data-ttu-id="cc63e-2018">此方法的一些用途包括：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2018">Some uses of this method include:</span></span>  
  
-   <span data-ttu-id="cc63e-2019">获取一个字符串，该字符串以当前区域性的短日期和时间格式显示日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2019">Getting a string that displays the date and time in the current culture's short date and time format.</span></span> <span data-ttu-id="cc63e-2020">为此，请使用 "G" 格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2020">To do this, you use the "G" format specifier.</span></span>  
  
-   <span data-ttu-id="cc63e-2021">获取只包含月份和年份的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2021">Getting a string that contains only the month and year.</span></span> <span data-ttu-id="cc63e-2022">为此，请使用 "MM/yyyy" 格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2022">To do this, you use the "MM/yyyy" format string.</span></span> <span data-ttu-id="cc63e-2023">格式字符串使用当前区域性的日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2023">The format string uses the current culture's date separator.</span></span>  
  
-   <span data-ttu-id="cc63e-2024">获取一个字符串，该字符串包含采用特定格式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2024">Getting a string that contains the date and time in a specific format.</span></span> <span data-ttu-id="cc63e-2025">例如，"MM/dd/yyyyHH： MM" 格式字符串以固定格式（例如 "19//03//2013 18:06"）显示日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2025">For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</span></span> <span data-ttu-id="cc63e-2026">格式字符串使用 "/" 作为固定日期分隔符，而与区域性特定的设置无关。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2026">The format string uses "/" as a fixed date separator regardless of culture-specific settings.</span></span>  
  
-   <span data-ttu-id="cc63e-2027">采用可用于序列化日期字符串的紧缩格式获取日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2027">Getting a date in a condensed format that could be used for serializing a date string.</span></span> <span data-ttu-id="cc63e-2028">例如，"yyyyMMdd" 格式字符串显示四位数的年份，后跟两位数的月份和两位数的日期（不含日期分隔符）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2028">For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</span></span>  
  
 <span data-ttu-id="cc63e-2029">下面的示例使用这三个格式字符串通过使用 en-us 和 fr-fr 区域性的约定来显示日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2029">The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]
 [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2030">下面的示例使用每个标准日期和时间格式字符串以及选择自定义日期和时间格式字符串来显示<xref:System.DateTime>值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2030">The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value.</span></span> <span data-ttu-id="cc63e-2031">示例的当前区域性为 en-us。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2031">The thread current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]
 [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-2032"><paramref name="format" /> 的长度为 1，而且它不是为 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定义的格式说明符字符之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2032">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="cc63e-2033">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-2033">-or-</span></span> 
 <span data-ttu-id="cc63e-2034"><paramref name="format" /> 不包含有效的自定义格式模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2034"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-2035">此日期和时间超出了当前区域性所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2035">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2036"><see cref="M:System.DateTime.ToString(System.String)" />方法返回当前区域性使用的日历中的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2036">The <see cref="M:System.DateTime.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="cc63e-2037">如果当前<see cref="T:System.DateTime" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2037">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="cc63e-2038">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2038">The following example provides an illustration.</span></span> <span data-ttu-id="cc63e-2039">当当前区域性为希伯来语（以色列）时，它会<see cref="T:System.Globalization.HebrewCalendar" />尝试设置位于类范围之外的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2039">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
<span data-ttu-id="cc63e-2040">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2040">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-2041">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-2041">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2042">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2042">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2043">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2043">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTime.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cc63e-2044">标准或自定义日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2044">A standard or custom date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-2045">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2045">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="cc63e-2046">使用指定的格式和区域性特定格式信息将当前 <see cref="T:System.DateTime" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2046">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2047">由 <see cref="T:System.DateTime" /> 和 <paramref name="format" /> 指定的当前 <paramref name="provider" /> 对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2047">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2048">参数可以包含单个格式说明符（请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)）或自定义格式模式（请参阅[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)）。 `format`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2048">The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="cc63e-2049">如果`format` 是`null`或空字符串（""），则使用标准格式说明符 "G"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2049">If `format` is `null` or an empty string (""), the standard format specifier, "G", is used.</span></span>  
  
 <span data-ttu-id="cc63e-2050">`provider`参数定义与标准格式说明符对应的模式以及日期和时间组件的符号和名称。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2050">The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</span></span> <span data-ttu-id="cc63e-2051">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2051">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-2052">一个<xref:System.Globalization.CultureInfo>对象，该对象表示要在返回的字符串中反映其格式设置约定的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2052">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="cc63e-2053">由属性返回的<xref:System.Globalization.DateTimeFormatInfo>对象定义返回的字符串的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2053">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="cc63e-2054">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2054">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-2055">一个实现<xref:System.IFormatProvider>接口的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2055">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="cc63e-2056">其<xref:System.IFormatProvider.GetFormat%2A> 方法<xref:System.Globalization.DateTimeFormatInfo>返回提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2056">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-2057">如果`provider` <xref:System.Globalization.DateTimeFormatInfo>为`null`，则使用与当前区域性关联的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2057">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used.</span></span> <span data-ttu-id="cc63e-2058">有关详细信息，请参阅 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2058">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2059">下面的示例使用每个标准日期时间格式字符串来显示四个不同区域性的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2059">The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]
 [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  
  
 <span data-ttu-id="cc63e-2060">下面的示例演示使用固定<xref:System.DateTime> <xref:System.Globalization.DateTimeFormatInfo>的值进行格式设置的不同方式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2060">The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.</span></span>  
  
 [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cc63e-2061"><paramref name="format" /> 的长度为 1，而且它不是为 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定义的格式说明符字符之一。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2061">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="cc63e-2062">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-2062">-or-</span></span> 
 <span data-ttu-id="cc63e-2063"><paramref name="format" /> 不包含有效的自定义格式模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2063"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc63e-2064">日期和时间超出了 <paramref name="provider" /> 所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2064">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2065">方法返回<paramref name="provider" />参数使用的日历中的日期和时间的字符串表示形式。 <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /></span><span class="sxs-lookup"><span data-stu-id="cc63e-2065">The <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="cc63e-2066">其日历由<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />属性定义。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2066">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="cc63e-2067">如果当前<see cref="T:System.DateTime" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2067">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="cc63e-2068">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2068">The following example provides an illustration.</span></span> <span data-ttu-id="cc63e-2069">它尝试设置超出<see cref="T:System.Globalization.UmAlQuraCalendar" />类范围的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2069">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
<span data-ttu-id="cc63e-2070">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2070">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="cc63e-2071">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cc63e-2071">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2072">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2072">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2073">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2073">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="cc63e-2074">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="cc63e-2074">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="cc63e-2075">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="cc63e-2075">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTime ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTime" Usage="dateTime.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc63e-2076">将当前 <see cref="T:System.DateTime" /> 对象的值转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2076">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="cc63e-2077">一个对象，其 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Utc" />，并且其值为等效于当前 <see cref="T:System.DateTime" /> 对象的值的 UTC；如果经转换的值过大以至于不能由 <see cref="F:System.DateTime.MaxValue" /> 对象表示，则为 <see cref="T:System.DateTime" />，或者，如果经转换的值过小以至于不能表示为 <see cref="F:System.DateTime.MinValue" /> 对象，则为 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2077">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2078">协调世界时（UTC）等于本地时间减去 UTC 偏移量。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2078">The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</span></span> <span data-ttu-id="cc63e-2079">有关 UTC 偏移量的详细信息，请<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>参阅。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2079">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2080">转换还会考虑适用于当前<xref:System.DateTime>对象所表示的时间的夏时制规则。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2080">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc63e-2081">在[!INCLUDE[winxp](~/includes/winxp-md.md)]系统上， <xref:System.DateTime.ToUniversalTime%2A>此方法仅在从本地时间转换为 UTC 时识别当前调整规则。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2081">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC.</span></span> <span data-ttu-id="cc63e-2082">因此，当前调整规则生效前的时间转换可能无法准确反映本地时间和 UTC 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2082">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</span></span>  
  
 <span data-ttu-id="cc63e-2083">从 .NET Framework 版本2.0 开始， <xref:System.DateTime.ToUniversalTime%2A>方法返回的值由当前<xref:System.DateTime>对象的<xref:System.DateTime.Kind%2A>属性确定。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2083">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="cc63e-2084">下表描述了可能的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2084">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="cc63e-2085">类型</span><span class="sxs-lookup"><span data-stu-id="cc63e-2085">Kind</span></span>|<span data-ttu-id="cc63e-2086">结果</span><span class="sxs-lookup"><span data-stu-id="cc63e-2086">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="cc63e-2087">不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2087">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="cc63e-2088">当前<xref:System.DateTime>的对象将转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2088">The current <xref:System.DateTime> object is converted to UTC.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="cc63e-2089">当前<xref:System.DateTime>的对象假定为本地时间，而转换的执行<xref:System.DateTime.Kind%2A>方式就像是<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2089">The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-2090"><xref:System.DateTime.ToUniversalTime%2A> 方法<xref:System.DateTime>将值从本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2090">The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC.</span></span> <span data-ttu-id="cc63e-2091">若要将非本地时区中的时间转换为 UTC，请使用<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2091">To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-2092">若要转换与 UTC 的偏移量已知的时间，请<xref:System.DateTimeOffset.ToUniversalTime%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2092">To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.</span></span>  
  
 <span data-ttu-id="cc63e-2093">如果日期和时间实例值是不明确的时间，则此方法假定它是标准时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2093">If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</span></span> <span data-ttu-id="cc63e-2094">（不明确的时间是指可以映射到标准时间或本地时区的夏令时的时间）如果日期和时间实例的值无效，则此方法只需将本地时区的 UTC 偏移量减去本地时间即可返回 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2094">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="cc63e-2095">（无效时间是由于应用夏令时调整规则而不存在的时间。）</span><span class="sxs-lookup"><span data-stu-id="cc63e-2095">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2096">下面的示例演示<xref:System.DateTime.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2096">The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="cc63e-2097">下面<xref:System.DateTime.SpecifyKind%2A>的示例使用方法演示<xref:System.DateTime.Kind%2A>属性如何影响<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2097">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2098"><see cref="M:System.DateTime.ToUniversalTime" />方法有时用于将本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2098">The <see cref="M:System.DateTime.ToUniversalTime" /> method is sometimes used to convert a local time to UTC.</span></span> <span data-ttu-id="cc63e-2099">然后<see cref="M:System.DateTime.ToLocalTime" />调用方法以还原原始的本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2099">The <see cref="M:System.DateTime.ToLocalTime" /> method is then called to restore the original local time.</span></span> <span data-ttu-id="cc63e-2100">但是，如果原始时间表示本地时区中的无效时间，则两个本地时间值将不相等。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2100">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="cc63e-2101">有关其他信息和示例，请参见<see cref="M:System.DateTime.ToLocalTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2101">For additional information and an example, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span>  
  
<span data-ttu-id="cc63e-2102">在[!INCLUDE[winxp](~/includes/winxp-md.md)]系统上<see cref="M:System.DateTime.ToUniversalTime" /> ，方法仅识别本地时区的当前调整规则，该规则应用于所有日期，包括下级日期（即早于当前调整开始日期的日期）规则）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2102">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <see cref="M:System.DateTime.ToUniversalTime" /> method recognizes only the current adjustment rule for the local time zone, which it applies to all dates, including down-level dates (that is, dates that are earlier than the starting date of the current adjustment rule).</span></span> <span data-ttu-id="cc63e-2103">在上[!INCLUDE[winxp](~/includes/winxp-md.md)]运行的应用程序需要使用过时的本地日期和时间计算，则<see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />必须通过使用方法检索<see cref="T:System.TimeZoneInfo" />与本地时区对应的对象并调用其<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2103">Applications running on [!INCLUDE[winxp](~/includes/winxp-md.md)] that require historically accurate local date and time calculations must work around this behavior by using the <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> method to retrieve a <see cref="T:System.TimeZoneInfo" /> object that corresponds to the local time zone and calling its <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> method.</span></span>  
  
<span data-ttu-id="cc63e-2104">下面的示例说明了美国英语<see cref="M:System.DateTime.ToUniversalTime" /> [!INCLUDE[winxp](~/includes/winxp-md.md)]系统中<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />的系统上的和方法之间的差异。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2104">The following example illustrates the difference between the <see cref="M:System.DateTime.ToUniversalTime" /> and <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> methods on a [!INCLUDE[winxp](~/includes/winxp-md.md)] system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="cc63e-2105">前两种方法调用将当前时区调整规则（在2007中生效）应用于2006中的日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2105">The first two method calls apply the current time zone adjustment rule (which went into effect in 2007) to a date in 2006.</span></span> <span data-ttu-id="cc63e-2106">当前调整规则用于在三月的第二个星期日转换到夏令时以前的规则（在2006中有效）在4月的第一个星期日开始转换为夏令时。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2106">The current adjustment rule provides for the transition to daylight saving time on the second Sunday of March; the previous rule, which was in effect in 2006, provided for the transition to daylight saving time to occur on the first Sunday of April.</span></span> <span data-ttu-id="cc63e-2107">只有第三个方法调用才能准确地执行此历史日期和时间转换。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2107">Only the third method call accurately performs this historical date and time conversion.</span></span>  
  
<span data-ttu-id="cc63e-2108">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2108">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToLocalTime" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTime.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-2109">将日期和时间的指定字符串表示形式转换为其 <see cref="T:System.DateTime" /> 等效项，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2109">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.Parse" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-2110">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2110">A string containing a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="cc63e-2111">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.DateTime" /> 中包含的日期和时间等效的 <paramref name="s" /> 值；如果转换失败，则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2111">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="cc63e-2112">如果 <paramref name="s" /> 参数为 <see langword="null" />，是空字符串 ("") 或者不包含日期和时间的有效字符串表示形式，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2112">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="cc63e-2113">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2113">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="cc63e-2114">将日期和时间的指定字符串表示形式转换为其 <see cref="T:System.DateTime" /> 等效项，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2114">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2115">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2115"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2116">方法与<xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType>方法类似，不同之处在于方法不会在转换失败时引发异常。<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2116">The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="cc63e-2117">使用当前`s` <xref:System.Globalization.DateTimeFormatInfo>对象中的格式设置信息对字符串进行分析，该对象由当前线程区域性隐式提供。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2117">The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.</span></span>  
  
 <span data-ttu-id="cc63e-2118">此方法尝试忽略无法识别的数据（如果可能），并用当前日期填充缺少的月、日和年信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2118">This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</span></span> <span data-ttu-id="cc63e-2119">如果`s`仅包含日期而不包含时间，则此方法假定时间为12:00 午夜。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2119">If `s` contains only a date and no time, this method assumes the time is 12:00 midnight.</span></span> <span data-ttu-id="cc63e-2120">如果`s`包含带有两位数年份的日期部分，则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换为当前区域性当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2120">If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-2121">中的`s`任何前导、内部或尾随空格字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2121">Any leading, inner, or trailing white space character in `s` is ignored.</span></span> <span data-ttu-id="cc63e-2122">日期和时间可以用一对前导和尾随数字符号字符（"#"、U + 0023）括起来，并且可以使用一个或多个 NULL 字符（U + 0000）进行 trailed。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2122">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="cc63e-2123"><xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>由于方法尝试使用当前区域性的格式设置规则来分析日期和时间的字符串表示形式，因此尝试跨不同区域性分析特定字符串可能会失败或返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2123">Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</span></span> <span data-ttu-id="cc63e-2124">如果将在不同的区域设置中分析特定的日期和时间格式， <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>请使用方法或<xref:System.DateTime.TryParseExact%2A>方法的重载之一，并提供格式说明符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2124">If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
 <span data-ttu-id="cc63e-2125">如果`s`是当前日历中闰年的闰日字符串表示形式，则该方法将成功分析`s` 。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2125">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="cc63e-2126">如果`s`是当前区域性当前日历中非闰年的闰日字符串表示形式，则分析操作将失败，并且该方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2126">If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="cc63e-2127">如果`s`不包含时区信息，则`result`包含一个<xref:System.DateTime>值，在此<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>方法返回时，其<xref:System.DateTime.Kind%2A>属性为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2127">If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> when the method returns.</span></span> <span data-ttu-id="cc63e-2128">如果要分析的字符串包含时区信息，则包含`result`一个<xref:System.DateTime>值，在<xref:System.DateTime.Kind%2A>此方法<xref:System.DateTimeKind.Local?displayProperty=nameWithType>返回时，其属性为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2128">If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> when the method returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2129">下面的示例将一些日期和时间字符串传递给<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2129">The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]
 [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2130">格式设置受当前<see cref="T:System.Globalization.DateTimeFormatInfo" />对象的属性影响，默认情况下，它派生自控制面板中的 "**区域和语言选项**" 项。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2130">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which by default are derived from the **Regional and Language Options** item in Control Panel.</span></span> <span data-ttu-id="cc63e-2131">如果<see cref="Overload:System.DateTime.TryParse" /> <see langword="False" /> 当前<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />和属性设置为相同的值，则此方法可能会意外失败<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> ，并返回。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2131">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-2132">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2132">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2133">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2133">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2134">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2134">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="cc63e-2135">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="cc63e-2135">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="cc63e-2136">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="cc63e-2136">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-2137">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2137">A string containing a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-2138">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2138">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="styles"><span data-ttu-id="cc63e-2139">枚举值的按位组合，该组合定义如何根据当前时区或当前日期解释已分析日期。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2139">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="cc63e-2140">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2140">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="cc63e-2141">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.DateTime" /> 中包含的日期和时间等效的 <paramref name="s" /> 值；如果转换失败，则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2141">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="cc63e-2142">如果 <paramref name="s" /> 参数为 <see langword="null" />，是空字符串 ("") 或者不包含日期和时间的有效字符串表示形式，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2142">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="cc63e-2143">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2143">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="cc63e-2144">使用指定的区域性特定格式信息和格式设置样式，将日期和时间的指定字符串表示形式转换为其 <see cref="T:System.DateTime" /> 等效项，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2144">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2145">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2145"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2146"><xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法分析可包含日期、时间和时区信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2146">The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses a string that can contain date, time, and time zone information.</span></span> <span data-ttu-id="cc63e-2147">它与<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法类似，不同<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>的是，如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2147">It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="cc63e-2148">此方法尝试忽略无法识别的数据， `s`并完全进行分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2148">This method attempts to ignore unrecognized data and parse `s` completely.</span></span> <span data-ttu-id="cc63e-2149">如果`s`包含时间而不包含日期，则默认情况下该方法将替换当前日期， `styles`或者， <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>如果包含标志， `DateTime.Date.MinValue`则将替换为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2149">If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`.</span></span> <span data-ttu-id="cc63e-2150">如果`s`包含日期但没有时间，则使用12:00 午夜作为默认时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2150">If `s` contains a date but no time, 12:00 midnight is used as the default time.</span></span> <span data-ttu-id="cc63e-2151">如果存在日期但其年份组成部分只包含两个数字，则会根据`provider` <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换为参数的当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2151">If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cc63e-2152">中`s`的所有前导、内部或尾随空格字符都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2152">Any leading, inner, or trailing white space characters in `s` are ignored.</span></span> <span data-ttu-id="cc63e-2153">日期和时间可以用一对前导和尾随数字符号字符（"#"、U + 0023）括起来，并且可以使用一个或多个 NULL 字符（U + 0000）进行 trailed。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2153">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="cc63e-2154">日期和时间元素的特定有效格式以及日期和时间中使用的名称和符号由`provider`参数定义，该参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2154">Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-2155">一个<xref:System.Globalization.CultureInfo>对象，它表示在`s`参数中使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2155">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter.</span></span> <span data-ttu-id="cc63e-2156">由属性返回的`s`对象定义中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2156">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-2157">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义在中`s`使用的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2157">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-2158">一个自定义 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2158">A custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="cc63e-2159">其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`s`返回对象，该对象定义中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="cc63e-2159">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
 <span data-ttu-id="cc63e-2160">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2160">If `provider` is `null`, the current culture is used.</span></span>  
  
 <span data-ttu-id="cc63e-2161">如果`s`是当前日历中闰年的闰日字符串表示形式，则该方法将成功分析`s` 。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2161">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="cc63e-2162">如果`s`是当前`provider`日历中非闰年的闰年的字符串表示形式，则分析操作将失败，并且该方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2162">If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="cc63e-2163">`styles`参数定义经过分析的字符串的精确解释，以及分析操作应该如何处理它。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2163">The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</span></span> <span data-ttu-id="cc63e-2164">它可以是一个或多个<xref:System.Globalization.DateTimeStyles>枚举成员，如下表中所述。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2164">It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.</span></span>  
  
|<span data-ttu-id="cc63e-2165">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-2165">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-2166">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-2166">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-2167">分析`s`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2167">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="cc63e-2168">如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为 UTC，并将<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2168">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2169">如果`s`指示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2169">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2170">在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2170">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-2171">虽然有效，但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2171">Although valid, this value is ignored.</span></span> <span data-ttu-id="cc63e-2172">的日期和时间元素`s`中允许有内部空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2172">Inner white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-2173">虽然有效，但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2173">Although valid, this value is ignored.</span></span> <span data-ttu-id="cc63e-2174">的日期和时间元素`s`中允许使用前导空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2174">Leading white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-2175">虽然有效，但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2175">Although valid, this value is ignored.</span></span> <span data-ttu-id="cc63e-2176">的日期和时间元素`s`中允许尾随空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2176">Trailing white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-2177">`s`指定可能包含前导空格和尾随空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2177">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="cc63e-2178">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2178">This is the default behavior.</span></span> <span data-ttu-id="cc63e-2179">不能通过提供限制性更强<xref:System.Globalization.DateTimeStyles>的枚举值（如） <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>来重写它。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2179">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-2180">指定如果`s`缺少任何时区信息，则假定它表示本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2180">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="cc63e-2181">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2181">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-2182">指定如果`s`缺少任何时区信息，则假定它表示 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2182">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="cc63e-2183">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2183">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-2184">虽然有效，但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2184">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-2185">对于包含时区信息的字符串，尝试防止日期和时间字符串转换为<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2185">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2186">通常，此类字符串是通过使用 "o <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> "、"r" 或 "u" 标准格式说明符调用方法创建的。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2186">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method using either the "o", "r", or "u" standard format specifiers.</span></span>|  
  
 <span data-ttu-id="cc63e-2187">如果`s`不包含时区信息，该<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法将返回属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>的值，除非`styles`标志为其他值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2187">If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless a `styles` flag indicates otherwise.</span></span> <span data-ttu-id="cc63e-2188">如果`s`包括时区或时区偏移量信息，该方法<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>将执行任何所需的时间转换，并返回以下内容之一：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2188">If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method performs any necessary time conversion and returns one of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-2189">一个<xref:System.DateTime>值，其日期和时间反映本地时间，其<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2189">A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="cc63e-2190">或者，如果`styles` <xref:System.Globalization.DateTimeStyles.AdjustToUniversal>包含标志，则为<xref:System.DateTime>其日期和时间反映 UTC 的值， <xref:System.DateTime.Kind%2A>并且其<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>属性为。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2190">Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-2191">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>标志进行重写。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2191">This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span>  
  
## <a name="parsing-custom-cultures"></a><span data-ttu-id="cc63e-2192">分析自定义区域性</span><span class="sxs-lookup"><span data-stu-id="cc63e-2192">Parsing Custom Cultures</span></span>  
 <span data-ttu-id="cc63e-2193">如果分析为自定义区域性生成的日期和时间字符串，请使用<xref:System.DateTime.TryParseExact%2A>方法而不是<xref:System.DateTime.TryParse%2A>方法来提高分析操作将成功的概率。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2193">If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed.</span></span> <span data-ttu-id="cc63e-2194">自定义区域性日期和时间字符串可能比较复杂且难以分析。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2194">A custom culture date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="cc63e-2195">此<xref:System.DateTime.TryParse%2A>方法尝试使用几个隐式分析模式分析字符串，所有这些模式都可能失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2195">The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="cc63e-2196">与此<xref:System.DateTime.TryParseExact%2A>相反，方法要求您显式指定一个或多个可能成功的准确分析模式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2196">In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span>  
  
 <span data-ttu-id="cc63e-2197">有关自定义区域性的详细信息，请<xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType>参阅类。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2197">For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2198">下面的示例演示<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2198">The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-2199"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2199"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="cc63e-2200">或</span><span class="sxs-lookup"><span data-stu-id="cc63e-2200">-or-</span></span> 
 <span data-ttu-id="cc63e-2201"><paramref name="styles" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合（例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2201"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc63e-2202"><paramref name="provider" /> 是一个非特定区域性，并且不能在分析操作中使用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2202"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2203">格式设置受当前<see cref="T:System.Globalization.DateTimeFormatInfo" />对象的属性影响，该对象由<paramref name="provider" />参数提供。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2203">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which is supplied by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="cc63e-2204">如果<see cref="Overload:System.DateTime.TryParse" /> <see langword="False" /> 当前<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />和属性设置为相同的值，则此方法可能会意外失败<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> ，并返回。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2204">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-2205">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2205">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2206">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2206">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2207">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2207">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc63e-2208">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2208">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="cc63e-2209">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2209">The format of the string representation must match a specified format exactly.</span></span> <span data-ttu-id="cc63e-2210">该方法返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2210">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTime.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-2211">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2211">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="cc63e-2212">所需的 <paramref name="s" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2212">The required format of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-2213">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2213">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="cc63e-2214">一个或多个枚举值的按位组合，指示 <paramref name="s" /> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2214">A bitwise combination of one or more enumeration values that indicate the permitted format of <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="cc63e-2215">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.DateTime" /> 中包含的日期和时间等效的 <paramref name="s" /> 值；如果转换失败，则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2215">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="cc63e-2216">如果 <paramref name="s" /> 或 <paramref name="format" /> 参数为 <see langword="null" />，或者为空字符串，或者未包含对应于 <paramref name="format" /> 中指定的模式的日期和时间，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2216">The conversion fails if either the <paramref name="s" /> or <paramref name="format" /> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <paramref name="format" />.</span></span> <span data-ttu-id="cc63e-2217">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2217">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="cc63e-2218">使用指定的格式、区域性特定的格式信息和样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2218">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="cc63e-2219">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2219">The format of the string representation must match the specified format exactly.</span></span> <span data-ttu-id="cc63e-2220">该方法返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2220">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2221">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2221"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2222">方法分析日期的字符串表示形式，该日期必须采用`format`参数定义的格式。 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2222">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="cc63e-2223">它与<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法类似，不同<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>的是，如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2223">It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="cc63e-2224">参数包含要分析的日期和时间，其格式必须为参数所`format`定义的格式。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2224">The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="cc63e-2225">如果中`s`存在日期、时间和时区元素，则它们也必须按`format`指定的顺序出现。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2225">If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`.</span></span> <span data-ttu-id="cc63e-2226">如果`format`定义的日期没有时间元素并且分析操作成功，则生成<xref:System.DateTime>的值的时间为午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2226">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="cc63e-2227">如果`format`定义一个没有日期元素的时间并且分析操作成功，则默认情况<xref:System.DateTime>下生成的`DateTime.Now.Date`值具有日期，或者<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>它的日期`DateTime.MinValue.Date`为（如果`styles`包含标志）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2227">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc63e-2228">参数确定`s`参数是否可以包含前导空白字符和尾随空格字符。 `style`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2228">The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="cc63e-2229">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2229">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2230">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>标志来更改，该标志<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值<xref:System.DateTime> ，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>和<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>标志，后者返回值<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2230">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2231">如果包含时区信息，则时间转换为本地时间，如有必要， <xref:System.DateTime.Kind%2A>返回<xref:System.DateTime>对象的属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2231">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2232">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>标志来更改，而不是将协调世界时（UTC）转换为本地时间，并<xref:System.DateTime.Kind%2A>将属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2232">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-2233">参数包含对应于所需的`s`参数格式的模式。 `format`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2233">The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter.</span></span> <span data-ttu-id="cc63e-2234">`format`参数中的模式包括[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)表中的一个或多个自定义格式说明符，或从[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)表。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2234">The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="cc63e-2235">如果在自定义格式模式下不使用日期或时间分隔符，请对`provider`参数使用固定区域性，并为每个自定义格式说明符使用最宽形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2235">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="cc63e-2236">例如，如果想要在模式中指定小时数，请指定更宽的形式 "HH"，而不是 "H"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2236">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc63e-2237">您可以`s` <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>调用方法并指定多个允许的格式，而不是要求符合一种格式以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2237">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="cc63e-2238">这使得分析操作更有可能成功。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2238">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="cc63e-2239">中`s`使用的特定日期和时间符号和字符串（如一周中的星期几的名称）是`provider`由参数定义的， `s`如果`format`是标准格式，则是的精确格式。说明符字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2239">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="cc63e-2240">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2240">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-2241">一个<xref:System.Globalization.CultureInfo>对象，表示用于解释`s`的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2241">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="cc63e-2242">`s`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2242">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-2243">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2243">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-2244">一个自<xref:System.IFormatProvider>定义实现<xref:System.IFormatProvider.GetFormat%2A> ，其方法返回<xref:System.Globalization.CultureInfo>提供格式设置<xref:System.Globalization.DateTimeFormatInfo>信息的对象或对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2244">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-2245">如果`provider`为`null` ，<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2245">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="cc63e-2246">参数包含一个或多个<xref:System.Globalization.DateTimeStyles>枚举成员，这些成员确定是否`format`可以在中`s`显示未定义的，以及是否能够控制分析操作的确切行为。 `styles`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2246">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="cc63e-2247">下表描述了<xref:System.Globalization.DateTimeStyles>枚举的每个成员如何影响该<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法的操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2247">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="cc63e-2248">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-2248">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-2249">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-2249">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-2250">分析`s`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2250">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="cc63e-2251">如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为 UTC，并将<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2251">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2252">如果`s`指示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2252">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2253">在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2253">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-2254">指定不由`format`定义的空白可以出现在任何单个日期或时间元素之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2254">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-2255">指定不由`format`定义的空白可出现在的`s`开头。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2255">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-2256">指定的`format` `s`末尾不能出现的空白。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2256">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-2257">指定可能包含未定义的`format`前导空格、内部空格和尾随空格。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2257">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-2258">指定如果`s`缺少任何时区信息，则假定它表示本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2258">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="cc63e-2259">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2259">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-2260">指定如果`s`缺少任何时区信息，则假定它表示 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2260">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="cc63e-2261">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2261">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="cc63e-2262">如果`s`包含时间而不包含日期信息，则返回值的日期设置为`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2262">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-2263">使用默认值分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2263">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="cc63e-2264">不允许使用以外的`format`任何空白区域。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2264">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="cc63e-2265">如果`s`缺少日期部分，则返回<xref:System.DateTime>值的日期设置为1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2265">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="cc63e-2266">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性设置为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2266">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2267">如果中`s`存在时区信息，则该时间将转换为本地时间， <xref:System.DateTime.Kind%2A>而返回<xref:System.DateTime>对象的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2267">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-2268">对于包含时区信息的字符串，尝试防止转换为<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2268">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2269">此标志主要用于防止 UTC 时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2269">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2270">下面的示例演示<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2270">The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cc63e-2271">请注意，当`styles`参数等于<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>时无法成功分析字符串 "5/01/2009 8:30 AM"，因为不允许使用前导`format`空格。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2271">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="cc63e-2272">此外，不能使用`format` "MM/dd/yyyyhh： MM" 成功分析字符串 "5/01/2009 09:00"，因为日期字符串未在月份号之前带有前导零，如`format`需要。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2272">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]
 [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-2273"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2273"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="cc63e-2274">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-2274">-or-</span></span> 
 <span data-ttu-id="cc63e-2275"><paramref name="styles" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合（例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2275"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2276">在中<see cref="Overload:System.DateTime.TryParseExact" /> <see langword="false" /> ，如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符，则方法将返回。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2276">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="cc63e-2277">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中，将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2277">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-2278">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2278">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2279">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2279">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2280">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2280">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cc63e-2281">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2281">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="cc63e-2282"><paramref name="s" /> 的允许格式的数组。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2282">An array of allowable formats of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cc63e-2283">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2283">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="cc63e-2284">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2284">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="cc63e-2285">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2285">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="cc63e-2286">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.DateTime" /> 中包含的日期和时间等效的 <paramref name="s" /> 值；如果转换失败，则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2286">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="cc63e-2287">如果 <paramref name="s" /> 或 <paramref name="formats" /> 为 <see langword="null" />，<paramref name="s" /> 或 <paramref name="formats" /> 的某个元素为空字符串， 或者 <paramref name="s" /> 的格式与 <paramref name="formats" /> 中的格式模式所指定的格式都不完全匹配，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2287">The conversion fails if <paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />, <paramref name="s" /> or an element of <paramref name="formats" /> is an empty string, or the format of <paramref name="s" /> is not exactly as specified by at least one of the format patterns in <paramref name="formats" />.</span></span> <span data-ttu-id="cc63e-2288">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2288">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="cc63e-2289">使用指定的格式数组、区域性特定格式信息和样式，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2289">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="cc63e-2290">字符串表示形式的格式必须至少与指定的格式之一完全匹配。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2290">The format of the string representation must match at least one of the specified formats exactly.</span></span> <span data-ttu-id="cc63e-2291">该方法返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2291">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="cc63e-2292">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2292"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2293">方法分析与分配`formats`给参数的模式之一匹配的日期的字符串表示形式。 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2293">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="cc63e-2294">它与<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法类似， <xref:System.DateTime.TryParseExact%2A>不同的是，如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2294">It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="cc63e-2295">`s`参数包含要分析的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2295">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="cc63e-2296">如果参数只包含时间而不包含日期，则使用当前日期， `style`除非参数包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>标志，在这种情况下，将使用默认的`DateTime.Date.MinValue`日期（）。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2296">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="cc63e-2297">`s`如果参数仅包含日期而不包含时间，则使用午夜（00:00:00）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2297">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="cc63e-2298">参数还可确定`s`参数是否可以包含前导、内部或尾随空格字符，而不能包含中`formats`的某个格式字符串所允许的空白字符。 `style`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2298">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="cc63e-2299">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2299">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2300">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>标志来更改，该标志<xref:System.DateTime>返回<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值<xref:System.DateTime> ，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>和<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>标志，后者返回值<xref:System.DateTime.Kind%2A>属性为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2300">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2301">如果包含时区信息，则时间转换为本地时间，如有必要， <xref:System.DateTime.Kind%2A>返回<xref:System.DateTime>对象的属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2301">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2302">此行为可以通过使用<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>标志来更改，而不是将协调世界时（UTC）转换为本地时间，并<xref:System.DateTime.Kind%2A>将属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2302">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cc63e-2303">参数包含模式的数组，其中一个`s`模式必须完全匹配（如果分析操作成功）。 `formats`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2303">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="cc63e-2304">`formats`参数中的模式包含[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)表中的一个或多个自定义格式说明符，或从[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)表。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2304">The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="cc63e-2305">如果在自定义格式模式下不使用日期或时间分隔符，请对`provider`参数使用固定区域性，并为每个自定义格式说明符使用最宽形式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2305">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="cc63e-2306">例如，如果想要在模式中指定小时数，请指定更宽的形式 "HH"，而不是 "H"。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2306">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="cc63e-2307">中`s`使用的特定日期和时间符号和字符串（如一周中的星期几的名称）是`provider`由参数定义的， `s`如果`format`是标准格式，则是的精确格式。说明符字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2307">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="cc63e-2308">`provider`参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="cc63e-2308">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="cc63e-2309">一个<xref:System.Globalization.CultureInfo>对象，表示用于解释`s`的区域性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2309">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="cc63e-2310">`s`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2310">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="cc63e-2311">一个<xref:System.Globalization.DateTimeFormatInfo>对象，该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2311">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="cc63e-2312">一个自<xref:System.IFormatProvider>定义实现<xref:System.IFormatProvider.GetFormat%2A> ，其方法返回<xref:System.Globalization.CultureInfo>提供格式设置<xref:System.Globalization.DateTimeFormatInfo>信息的对象或对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2312">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="cc63e-2313">如果`provider`为`null` ，<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2313">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="cc63e-2314">参数包含一个或多个<xref:System.Globalization.DateTimeStyles>枚举成员，这些成员确定是否`format`可以在中`s`显示未定义的，以及是否能够控制分析操作的确切行为。 `styles`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2314">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="cc63e-2315">下表描述了<xref:System.Globalization.DateTimeStyles>枚举的每个成员如何影响该<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法的操作。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2315">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="cc63e-2316">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="cc63e-2316">DateTimeStyles member</span></span>|<span data-ttu-id="cc63e-2317">说明</span><span class="sxs-lookup"><span data-stu-id="cc63e-2317">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="cc63e-2318">分析`s`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2318">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="cc63e-2319">如果`s`包括时区偏移量，或者如果`s`不包含任何时区信息，但`styles` <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>包含标志，则方法会分析该字符串，调用<xref:System.DateTime.ToUniversalTime%2A>将返回<xref:System.DateTime>值转换为 UTC，并将<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2319">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2320">如果`s`指示它表示 UTC，或者，如果`s`不包含时区信息但`styles`包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志，则方法分析字符串，不对返回<xref:System.DateTime>的执行时区转换值，并将<xref:System.DateTime.Kind%2A>属性设置为。 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2320">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2321">在所有其他情况下，该标志不起作用。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2321">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="cc63e-2322">指定不由`format`定义的空白可以出现在任何单个日期或时间元素之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2322">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="cc63e-2323">指定不由`format`定义的空白可出现在的`s`开头。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2323">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="cc63e-2324">指定的`format` `s`末尾不能出现的空白。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2324">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="cc63e-2325">指定可能包含未定义的`format`前导空格、内部空格和尾随空格。 `s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2325">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="cc63e-2326">指定如果`s`缺少任何时区信息，则假定它表示本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2326">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="cc63e-2327">除非存在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>标志，否则返回值的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2327">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="cc63e-2328">指定如果`s`缺少任何时区信息，则假定它表示 UTC。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2328">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="cc63e-2329">除非存在<xref:System.DateTime> <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>标志，否则方法会将返回的值从 UTC 转换为本地时间，并将其属性设置为。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cc63e-2329">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="cc63e-2330">如果`s`包含时间而不包含日期信息，则返回值的日期设置为`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2330">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="cc63e-2331">使用默认值分析参数。`s`</span><span class="sxs-lookup"><span data-stu-id="cc63e-2331">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="cc63e-2332">不允许使用以外的`format`任何空白区域。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2332">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="cc63e-2333">如果`s`缺少日期部分，则返回<xref:System.DateTime>值的日期设置为1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2333">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="cc63e-2334">如果`s`不包含时区信息，则返回<xref:System.DateTime.Kind%2A> <xref:System.DateTime>的对象的属性设置为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2334">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2335">如果中`s`存在时区信息，则该时间将转换为本地时间， <xref:System.DateTime.Kind%2A>而返回<xref:System.DateTime>对象的属性将设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2335">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="cc63e-2336">对于包含时区信息的字符串，尝试防止转换为<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>属性设置为<xref:System.DateTimeKind.Local?displayProperty=nameWithType>的值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2336">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2337">此标志主要用于防止 UTC 时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2337">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2338">下面的示例使用<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法来确保可以成功分析多种可能格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2338">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]
 [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc63e-2339"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2339"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="cc63e-2340">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cc63e-2340">-or-</span></span> 
 <span data-ttu-id="cc63e-2341"><paramref name="styles" /> 包含无效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值组合（例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2341"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="cc63e-2342">在中<see cref="Overload:System.DateTime.TryParseExact" /> <see langword="false" /> ，如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符，则方法将返回。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="cc63e-2342">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="cc63e-2343">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中，将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2343">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="cc63e-2344">在 .NET Framework 中分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2344">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2345">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2345">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="cc63e-2346">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="cc63e-2346">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTime UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTime" Usage="System.DateTime.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTime UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime UtcNow { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTime" Usage="System.DateTime.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-2347">获取一个 <see cref="T:System.DateTime" /> 对象，该对象设置为此计算机上的当前日期和时间，表示为协调通用时间 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2347">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="cc63e-2348">其值为当前 UTC 日期和时间的对象。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2348">An object whose value is the current UTC date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2349">此属性的解决方法取决于系统计时器，它依赖于基础操作系统。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2349">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="cc63e-2350">它通常介于0.5 到15毫秒之间。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2350">It tends to be between 0.5 and 15 milliseconds.</span></span>

 <span data-ttu-id="cc63e-2351">从 .NET Framework 版本2.0 开始，返回值为<xref:System.DateTime> ，其<xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2351">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="cc63e-2352">使用<xref:System.DateTime.UtcNow%2A>的替代方法是<xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2352">An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc63e-2353">尽管前者通过分配<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>给其<xref:System.DateTime.Kind%2A>属性来指示日期和时间值是协调世界时（UTC），后者会将日期和时间值分配给 UTC 时间的偏移量（等于<xref:System.TimeSpan.Zero?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2353">While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span></span>
  
## Examples  
 <span data-ttu-id="cc63e-2354">下面<xref:System.DateTime.SpecifyKind%2A>的示例使用方法演示<xref:System.DateTime.Kind%2A>属性如何影响<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>转换方法。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2354">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTime.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc63e-2355">获取此实例所表示日期的年份部分。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2355">Gets the year component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="cc63e-2356">年份（介于 1 和 9999 之间）。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2356">The year, between 1 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc63e-2357"><xref:System.DateTime.Year%2A>属性以公历返回当前实例的年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2357">The <xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar.</span></span> <span data-ttu-id="cc63e-2358">它不返回使用当前区域性的默认日历的年份。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2358">It does not return the year using the default calendar of the current culture.</span></span> <span data-ttu-id="cc63e-2359">若要使用特定日历检索年份，可以调用该日历的`GetYear`方法，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2359">To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.</span></span>  
  
 [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]
 [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="cc63e-2360">下面的示例演示了<xref:System.DateTime.Year%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cc63e-2360">The following example demonstrates the <xref:System.DateTime.Year%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
  </Members>
</Type>
