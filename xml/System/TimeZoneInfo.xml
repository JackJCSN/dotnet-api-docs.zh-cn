<Type Name="TimeZoneInfo" FullName="System.TimeZoneInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25e19b7d157dbe922506010b94767d4a672e028c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709147" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneInfo sealed : IEquatable&lt;TimeZoneInfo ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1cec-101">表示世界上的任何时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-101">Represents any time zone in the world.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-102">时区指使用相同时间的某个地理区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-102">A time zone is a geographical region in which the same time is used.</span></span>  
  
 <span data-ttu-id="a1cec-103"><xref:System.TimeZoneInfo>类提供了重要的增强功能，通过<xref:System.TimeZone>类，该类提供有限的功能。</span><span class="sxs-lookup"><span data-stu-id="a1cec-103">The <xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.</span></span>  
  
 <span data-ttu-id="a1cec-104"><xref:System.TimeZone>类识别仅本地时区，并可以将协调世界时 (UTC) 和当地时间之间的时间转换。</span><span class="sxs-lookup"><span data-stu-id="a1cec-104">The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time.</span></span> <span data-ttu-id="a1cec-105">一个<xref:System.TimeZoneInfo>对象可以表示任何时区，以及方法<xref:System.TimeZoneInfo>类可用于将一个时区的时间转换为其他时区中相应的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-105">A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone.</span></span> <span data-ttu-id="a1cec-106">成员<xref:System.TimeZoneInfo>类支持以下操作：</span><span class="sxs-lookup"><span data-stu-id="a1cec-106">The members of the <xref:System.TimeZoneInfo> class support the following operations:</span></span>  
  
-   <span data-ttu-id="a1cec-107">正在检索已由操作系统定义的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-107">Retrieving a time zone that is already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="a1cec-108">枚举可用的系统的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-108">Enumerating the time zones that are available on a system.</span></span>  
  
-   <span data-ttu-id="a1cec-109">转换不同时区之间的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-109">Converting times between different time zones.</span></span>  
  
-   <span data-ttu-id="a1cec-110">创建新的时区不由操作系统已定义的。</span><span class="sxs-lookup"><span data-stu-id="a1cec-110">Creating a new time zone that is not already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="a1cec-111">序列化时区，以供将来检索。</span><span class="sxs-lookup"><span data-stu-id="a1cec-111">Serializing a time zone for later retrieval.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1cec-112">实例<xref:System.TimeZoneInfo>类是不可变。</span><span class="sxs-lookup"><span data-stu-id="a1cec-112">An instance of the <xref:System.TimeZoneInfo> class is immutable.</span></span> <span data-ttu-id="a1cec-113">一旦已实例化一个对象，不能修改其值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-113">Once an object has been instantiated, its values cannot be modified.</span></span>  
  
 <span data-ttu-id="a1cec-114">无法实例化<xref:System.TimeZoneInfo>对象使用`new`关键字。</span><span class="sxs-lookup"><span data-stu-id="a1cec-114">You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword.</span></span> <span data-ttu-id="a1cec-115">相反，您必须调用的静态成员之一<xref:System.TimeZoneInfo>下表中所示的类。</span><span class="sxs-lookup"><span data-stu-id="a1cec-115">Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.</span></span>  
  
|<span data-ttu-id="a1cec-116">静态成员名称</span><span class="sxs-lookup"><span data-stu-id="a1cec-116">Static member name</span></span>|<span data-ttu-id="a1cec-117">描述</span><span class="sxs-lookup"><span data-stu-id="a1cec-117">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="a1cec-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="a1cec-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method</span></span>|<span data-ttu-id="a1cec-119">从应用程序提供的数据创建自定义时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-119">Creates a custom time zone from application-supplied data.</span></span>|  
|<span data-ttu-id="a1cec-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="a1cec-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method</span></span>|<span data-ttu-id="a1cec-121">实例化时区根据其标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-121">Instantiates a time zone based on its identifier.</span></span>|  
|<span data-ttu-id="a1cec-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="a1cec-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> method</span></span>|<span data-ttu-id="a1cec-123">反序列化要重新创建以前序列化的字符串值<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-123">Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.</span></span>|  
|<span data-ttu-id="a1cec-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="a1cec-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method</span></span>|<span data-ttu-id="a1cec-125">返回可枚举<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.TimeZoneInfo>对象，表示所有本地系统上可用的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-125">Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.</span></span>|  
|<span data-ttu-id="a1cec-126"><xref:System.TimeZoneInfo.Local%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-126"><xref:System.TimeZoneInfo.Local%2A> property</span></span>|<span data-ttu-id="a1cec-127">实例化<xref:System.TimeZoneInfo>对象，表示本地时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-127">Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.</span></span>|  
|<span data-ttu-id="a1cec-128"><xref:System.TimeZoneInfo.Utc%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-128"><xref:System.TimeZoneInfo.Utc%2A> property</span></span>|<span data-ttu-id="a1cec-129">实例化<xref:System.TimeZoneInfo>对象，表示 UTC 时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-129">Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.</span></span>|  
  
 <span data-ttu-id="a1cec-130">可以使用<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法来创建未在本地系统注册表在 Windows 系统上或通过中的时区类中定义的时区[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 或 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-130">You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry on Windows systems or by the time zone classes in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux or macOS.</span></span> <span data-ttu-id="a1cec-131">然后，可以使用<xref:System.TimeZoneInfo.ToSerializedString%2A>属性将时区对象的信息另存为可以存储在应用程序可以访问某种形式的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-131">You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application.</span></span> <span data-ttu-id="a1cec-132">可以使用<xref:System.TimeZoneInfo.FromSerializedString%2A>方法将序列化的字符串转换回<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-132">You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan BaseUtcOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BaseUtcOffset" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.BaseUtcOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUtcOffset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BaseUtcOffset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUtcOffset : TimeSpan" Usage="System.TimeZoneInfo.BaseUtcOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-133">获取当前时区的标准时间与协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-133">Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="a1cec-134">一个对象，它指示当前时区的标准时间与协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-134">An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-135">返回的时间跨度<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性介于 14 小时 （14 小时领先于协调世界时 (UTC) 的时区） 到 （适用于为 14 小时 utc 时区）-14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-135">The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC).</span></span> <span data-ttu-id="a1cec-136">早于 utc 时间的时区具有负的偏移量;位于 UTC 时区具有负偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-136">Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.</span></span>  
  
 <span data-ttu-id="a1cec-137"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>值表示为整分钟数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-137">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes.</span></span> <span data-ttu-id="a1cec-138">它不能包含小数分钟数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-138">It cannot include a fractional number of minutes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1cec-139">因为<xref:System.TimeZoneInfo.BaseUtcOffset%2A>是的一个属性<xref:System.TimeZoneInfo>对象而非<xref:System.TimeZoneInfo.AdjustmentRule>对象，<xref:System.TimeZoneInfo>类将从 UTC 一个偏移量应用于所有时区的调整。</span><span class="sxs-lookup"><span data-stu-id="a1cec-139">Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments.</span></span> <span data-ttu-id="a1cec-140">以反映已修改其相对于 UTC 的时区，必须创建新的时区使用<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-140">To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-141"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性不同于<xref:System.TimeZoneInfo.GetUtcOffset%2A>方法按以下方式：</span><span class="sxs-lookup"><span data-stu-id="a1cec-141">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:</span></span>  
  
-   <span data-ttu-id="a1cec-142"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性返回 UTC 与时区的标准时间; 之间的差异<xref:System.TimeZoneInfo.GetUtcOffset%2A>方法在时间中返回 UTC 与时区的时间的特定点之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a1cec-142">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.</span></span>  
  
-   <span data-ttu-id="a1cec-143"><xref:System.TimeZoneInfo.GetUtcOffset%2A>方法将反映到时区; 应用程序的任何调整规则<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性却没有。</span><span class="sxs-lookup"><span data-stu-id="a1cec-143">The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-144">下面的示例使用<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性来显示本地时间与协调世界时 (UTC) 之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a1cec-144">The following example uses the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property to display the difference between the local time and Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#1)]
 [!code-vb[System.TimeZone2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.GetUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public static void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCachedData();" />
      <MemberSignature Language="F#" Value="static member ClearCachedData : unit -&gt; unit" Usage="System.TimeZoneInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-145">清除已缓存的时区数据。</span><span class="sxs-lookup"><span data-stu-id="a1cec-145">Clears cached time zone data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-146">已缓存的时区数据包括本地时区和协调世界时 (UTC) 区域上的数据。</span><span class="sxs-lookup"><span data-stu-id="a1cec-146">Cached time zone data includes data on the local time zone and the Coordinated Universal Time (UTC) zone.</span></span>  
  
 <span data-ttu-id="a1cec-147">您可能要调用`ClearCachedData`方法，以减少内存专门用于应用程序的缓存的时区信息或以反映本地系统时区已更改的事实。</span><span class="sxs-lookup"><span data-stu-id="a1cec-147">You might call the `ClearCachedData` method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.</span></span>  
  
 <span data-ttu-id="a1cec-148">不建议存储对本地和 UTC 时区的引用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-148">Storing references to the local and UTC time zones is not recommended.</span></span> <span data-ttu-id="a1cec-149">在调用`ClearCachedData`方法，这些对象变量将是未定义<xref:System.TimeZoneInfo>不再对引用的对象<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>或<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-149">After the call to the `ClearCachedData` method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-150">例如，下面的代码中的第二个调用到<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法会抛出<xref:System.ArgumentException>因为`local`变量不再被视为等于<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-150">For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]
 [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-151">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-151">Converts a time to the time in a particular time zone.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-152">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-152">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-153">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-153">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a1cec-154">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-154">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a1cec-155">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-155">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="a1cec-156">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-156">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-157">在执行转换时,<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29>方法将应用实际上在任何调整规则`destinationTimeZone`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-157">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-158">此重载<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>方法确定源时区的值从`dateTime`参数的<xref:System.DateTime.Kind%2A>属性，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-158">This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-159">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-159">Kind property value</span></span>|<span data-ttu-id="a1cec-160">源时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-160">Source time zone</span></span>|<span data-ttu-id="a1cec-161">方法行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-161">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="a1cec-162">将本地时间转换到的时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-162">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="a1cec-163">将协调世界时 (UTC) 转换为时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-163">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-164">假定为<xref:System.TimeZoneInfo.Local%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-164">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="a1cec-165">将本地时间转换到的时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-165">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="a1cec-166"><xref:System.DateTime.Kind%2A>属性所返回的<xref:System.DateTime>下表中所示设置值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-166">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a1cec-167">条件</span><span class="sxs-lookup"><span data-stu-id="a1cec-167">Condition</span></span>|<span data-ttu-id="a1cec-168">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-168">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a1cec-169">`destinationTimeZone` 为 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-169">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a1cec-170">`destinationTimeZone` 为 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-170">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="a1cec-171">所有其他日期和时间值和目标时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-171">All other date and time values and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a1cec-172">如果的值`dateTime`参数是不明确本地时间，它被解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-172">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="a1cec-173">如果`dateTime`参数是无效的本地时间，则此方法将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-173">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a1cec-174">如果转换`dateTime`早于的日期和时间值会导致<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue?displayProperty=nameWithType>或<xref:System.DateTime.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-174">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a1cec-175">您还可以通过调用转换为 / 自 UTC<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>和<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-175">You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-176">下面的示例将数组转换为日期和时间值到时间在美国和加拿大东部时区中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-176">The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="a1cec-177">它显示了上取决于源时区<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>源属性<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-177">It shows that the source time zone depends on the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the source <xref:System.DateTime> value.</span></span> <span data-ttu-id="a1cec-178">它还演示了<xref:System.TimeZoneInfo.ConvertTime%2A>方法采用时区调整，因为时区调整在源和目标时区中发生在凌晨 2:00</span><span class="sxs-lookup"><span data-stu-id="a1cec-178">It also illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="a1cec-179">在 2010 年 11 月 7日日。</span><span class="sxs-lookup"><span data-stu-id="a1cec-179">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime1.cs#1)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-180"><paramref name="dateTime" /> 参数值表示无效的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-180">The value of the <paramref name="dateTime" /> parameter represents an invalid time.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-181"><paramref name="destinationTimeZone" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-181">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-182">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-182">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTime(valuetype System.DateTimeOffset dateTimeOffset, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTime(DateTimeOffset dateTimeOffset, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTimeOffset * TimeZoneInfo -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTime (dateTimeOffset, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-183">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-183">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a1cec-184">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-184">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a1cec-185">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-185">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="a1cec-186">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-186">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-187">在执行转换时,<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29>方法将应用实际上在任何调整规则`destinationTimeZone`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-187">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-188">此重载与不同的其他重载<xref:System.TimeZoneInfo.ConvertTime%2A>方法通过接受<xref:System.DateTimeOffset>作为其第一个参数的值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-188">This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter.</span></span> <span data-ttu-id="a1cec-189">此标识的日期和时间与协调世界时 (UTC) 偏移量为而不是日期和时间在某个特定时区中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-189">This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone.</span></span> <span data-ttu-id="a1cec-190">因此，`dateTimeOffset`参数不能表示不明确时间无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-190">As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="a1cec-191">在转换`dateTimeOffset`会考虑任何调整规则目标时区中的有效的值为目标时区，此方法中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-191">In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="a1cec-192">如果转换`dateTimeOffset`早于的日期和时间值会导致<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>或<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-192">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-193">下面的示例将数组转换为<xref:System.DateTimeOffset>时间的美国和加拿大东部时区中的值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-193">The following example converts an array of <xref:System.DateTimeOffset> values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="a1cec-194">它演示了<xref:System.TimeZoneInfo.ConvertTime%2A>方法采用时区调整，因为时区调整在源和目标时区中发生在凌晨 2:00</span><span class="sxs-lookup"><span data-stu-id="a1cec-194">It illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="a1cec-195">在 2010 年 11 月 7日日。</span><span class="sxs-lookup"><span data-stu-id="a1cec-195">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime2.cs#2)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-196"><paramref name="destinationTimeZone" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-196">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-197">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-197">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, sourceTimeZone, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-198">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-198">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="a1cec-199"><paramref name="dateTime" /> 的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-199">The time zone of <paramref name="dateTime" />.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a1cec-200">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-200">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a1cec-201">将时间从一个时区转换为另一个时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-201">Converts a time from one time zone to another.</span></span></summary>
        <returns><span data-ttu-id="a1cec-202">目标时区中与源时区中的 <paramref name="dateTime" /> 参数对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-202">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-203">在执行转换时,<xref:System.TimeZoneInfo.ConvertTime%2A>方法将应用实际上在任何调整规则`destinationTimeZone`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-203">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-204">值<xref:System.DateTime.Kind%2A>的属性`dateTime`参数必须对应于`sourceTimeZone`参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-204">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-205">DateTime.Kind 值</span><span class="sxs-lookup"><span data-stu-id="a1cec-205">DateTime.Kind value</span></span>|<span data-ttu-id="a1cec-206">sourceTimeZone 值</span><span class="sxs-lookup"><span data-stu-id="a1cec-206">sourceTimeZone value</span></span>|<span data-ttu-id="a1cec-207">方法行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-207">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-208">等于<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-208">Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a1cec-209">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-209">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-210">不等于<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a1cec-211">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-211">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-212">等于<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-212">Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a1cec-213">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-213">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-214">不等于<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a1cec-215">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-215">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-216">任何。</span><span class="sxs-lookup"><span data-stu-id="a1cec-216">Any.</span></span>|<span data-ttu-id="a1cec-217">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-217">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="a1cec-218">您还可以将转换到或从协调世界时 (UTC) 通过调用<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>和<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-218">You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
 <span data-ttu-id="a1cec-219"><xref:System.DateTime.Kind%2A>属性所返回的<xref:System.DateTime>下表中所示设置值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-219">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a1cec-220">条件</span><span class="sxs-lookup"><span data-stu-id="a1cec-220">Condition</span></span>|<span data-ttu-id="a1cec-221">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-221">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a1cec-222">`destinationTimeZone` 参数为 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-222">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a1cec-223">`destinationTimeZone` 参数为 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-223">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="a1cec-224">所有其他日期和时间值、 源时区，并且目标时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-224">All other date and time values, source time zones, and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a1cec-225">如果的值`dateTime`参数为源时区中的不明确时间时，将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-225">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="a1cec-226">如果`dateTime`参数是无效时间源时区中的，则此方法将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-226">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a1cec-227">如果转换`dateTime`早于的日期和时间值会导致<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue?displayProperty=nameWithType>或<xref:System.DateTime.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-227">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a1cec-228"><xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29>方法会抛出<xref:System.ArgumentException>异常如果<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>的属性`dateTime`自变量是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>但`sourceTimeZone`参数不是<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-228">The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` argument is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-229">若要确定该方法是否与源时区为本地时区或世界时区，而不是使用的值相等性测试引用相等性测试<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-229">To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method.</span></span> <span data-ttu-id="a1cec-230">请注意，<xref:System.TimeZoneInfo>对象，表示本地时区和通过调用检索<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法没有与引用相等性<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-230">Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-231">此外，<xref:System.TimeZoneInfo>对象，表示本地或世界时区，并通过循环访问返回的集合检索<xref:System.TimeZoneInfo.GetSystemTimeZones%2A>方法没有与引用相等性<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>或<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-231">Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-232">或者，可以调用<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-232">As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-233">下面的示例演示如何使用<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29>方法将夏威夷标准时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-233">The following example illustrates the use of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method to convert from Hawaiian Standard Time to local time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#9)]
 [!code-vb[System.TimeZone2.Concepts#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-234"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Local" />，但 <paramref name="sourceTimeZone" /> 参数不等于 <see cref="F:System.DateTimeKind.Local" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-234">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Local" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="F:System.DateTimeKind.Local" />.</span></span>  
  
<span data-ttu-id="a1cec-235">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-235">-or-</span></span> 
<span data-ttu-id="a1cec-236"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Utc" />，但 <paramref name="sourceTimeZone" /> 参数不等于 <see cref="P:System.TimeZoneInfo.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-236">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Utc" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="a1cec-237">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-237">-or-</span></span> 
<span data-ttu-id="a1cec-238"><paramref name="dateTime" /> 参数为无效时间（即，它表示因时区的调整规则而不存在的时间）。</span><span class="sxs-lookup"><span data-stu-id="a1cec-238">The <paramref name="dateTime" /> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-239"><paramref name="sourceTimeZone" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-239">The <paramref name="sourceTimeZone" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a1cec-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-240">-or-</span></span> 
<span data-ttu-id="a1cec-241"><paramref name="destinationTimeZone" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-241">The <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-242">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-242">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeBySystemTimeZoneId">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-243">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-243">Converts a time to the time in another time zone based on a time zone identifier.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-244">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-244">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-245">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-245">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a1cec-246">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-246">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a1cec-247">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-247">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="a1cec-248">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-248">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-249">在执行转换时,<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>方法将应用实际上在任何调整规则`destinationTimeZoneId`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-249">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-250">此重载在很大程度上等同于调用<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>方法，但还允许您通过其标识符而不是对象引用指定目标时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-250">This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="a1cec-251">当必须将时间转换而无需检索与之相对应的时区对象并且不需要知道转换后的时间是标准或夏时制，则此方法是最有用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-251">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-252"><xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29>方法确定源时区的值从`dateTime`参数的<xref:System.DateTime.Kind%2A>属性，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-252">The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-253">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-253">Kind property value</span></span>|<span data-ttu-id="a1cec-254">源时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-254">Source time zone</span></span>|<span data-ttu-id="a1cec-255">方法行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-255">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="a1cec-256">将本地时间转换到的时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-256">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="a1cec-257">将协调世界时 (UTC) 转换为时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-257">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-258">假定为<xref:System.TimeZoneInfo.Local%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-258">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="a1cec-259">将本地时间转换到的时间`destinationTimeZone`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-259">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="a1cec-260"><xref:System.DateTime.Kind%2A>属性所返回的<xref:System.DateTime>下表中所示设置值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-260">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a1cec-261">条件</span><span class="sxs-lookup"><span data-stu-id="a1cec-261">Condition</span></span>|<span data-ttu-id="a1cec-262">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-262">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a1cec-263">`destinationTimeZone` 为 `TimeZoneInfo.Utc.Id`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-263">The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a1cec-264">任何其他`destinationTimeZone`值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-264">Any other `destinationTimeZone` value.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a1cec-265">如果的值`dateTime`参数是不明确本地时间，它被解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-265">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="a1cec-266">如果`dateTime`参数是无效的本地时间，则此方法将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-266">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a1cec-267">如果转换`dateTime`早于的日期和时间值会导致<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue?displayProperty=nameWithType>或<xref:System.DateTime.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-267">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a1cec-268">此方法检索信息由其标识符指定的时区`destinationTimeZoneId`在 Windows 系统上并从注册表中的参数[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-268">This method retrieves information on the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-269">它不能检索使用创建的时区对象<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-269">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a1cec-270">`destinationTimeZoneId`参数必须精确对应于时区的标识符的长度，但不是在情况下，成功匹配发生; 也就是说，比较`destinationTimeZoneId`时区标识符不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="a1cec-270">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-271"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-271"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-272">已找到时区标识符，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="a1cec-272">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1cec-273">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="a1cec-273">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a1cec-274">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-274">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-275">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-275">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTimeBySystemTimeZoneId(valuetype System.DateTimeOffset dateTimeOffset, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTimeBySystemTimeZoneId(DateTimeOffset dateTimeOffset, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTimeOffset * string -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTimeOffset, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-276">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-276">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a1cec-277">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-277">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a1cec-278">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-278">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="a1cec-279">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-279">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-280">在执行转换时,<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>方法将应用实际上在任何调整规则`destinationTimeZoneId`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-280">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-281">此重载相当于调用<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29>方法，但还允许您通过其标识符而不是对象引用指定目标时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-281">This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="a1cec-282">当必须将时间转换而无需检索与之相对应的时区对象并且不需要知道转换后的时间是标准或夏时制，则此方法是最有用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-282">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-283">因为`dateTimeOffset`参数表示的日期和时间再加上该时间的偏移量从协调世界时 (UTC)，它不能表示不明确时间无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-283">Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="a1cec-284">此方法检索其标识符指定的时区`destinationTimeZoneId`在 Windows 系统上并从注册表中的参数[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-284">This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-285">它不能检索使用创建的时区对象<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-285">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a1cec-286">`destinationTimeZoneId`参数必须精确对应于时区的标识符的长度，但不是在情况下，成功匹配发生; 也就是说，比较`destinationTimeZoneId`时区标识符不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="a1cec-286">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 <span data-ttu-id="a1cec-287">在转换`dateTimeOffset`会考虑任何调整规则目标时区中的有效的值为目标时区，该方法中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-287">In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="a1cec-288">如果转换`dateTimeOffset`早于的日期和时间值会导致<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>或<xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-288">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-289"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-289"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-290">时区标识符已找到，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="a1cec-290">The time zone identifier was found but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1cec-291">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="a1cec-291">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a1cec-292">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-292">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-293">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-293">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ sourceTimeZoneId, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, sourceTimeZoneId, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sourceTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-294">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-294">The date and time to convert.</span></span></param>
        <param name="sourceTimeZoneId"><span data-ttu-id="a1cec-295">源时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-295">The identifier of the source time zone.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a1cec-296">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-296">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a1cec-297">根据时区标识符将时间从一个时区转换到另一个时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-297">Converts a time from one time zone to another based on time zone identifiers.</span></span></summary>
        <returns><span data-ttu-id="a1cec-298">目标时区中与源时区中的 <paramref name="dateTime" /> 参数对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-298">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-299">在执行转换时,<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>方法将应用实际上在任何调整规则`destinationTimeZoneId`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-299">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-300">尽管它是类似于<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法中，可以使用<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>来指定使用其标识符，而不是在源和目标时区其<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-300">Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="a1cec-301">当必须将时间转换而无需检索与之相对应的时区对象并且不需要知道转换后的时间是标准或夏时制，则此方法是最有用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-301">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-302">此方法检索其标识符是时区`sourceTimeZoneId`并`destinationTimeZoneId`在 Windows 系统上并从注册表中的参数[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-302">This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-303">它不能检索时区对象，使用创建<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-303">It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-304">值<xref:System.DateTime.Kind%2A>的属性`dateTime`参数必须对应于`sourceTimeZoneId`参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-304">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-305">DateTime.Kind 值</span><span class="sxs-lookup"><span data-stu-id="a1cec-305">DateTime.Kind value</span></span>|<span data-ttu-id="a1cec-306">sourceTimeZone 值</span><span class="sxs-lookup"><span data-stu-id="a1cec-306">sourceTimeZone value</span></span>|<span data-ttu-id="a1cec-307">方法行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-307">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-308">等于`TimeZoneInfo.Utc.Id`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-308">Equals `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="a1cec-309">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-309">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-310">不等于`TimeZoneInfo.Utc.Id`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-310">Does not equal `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="a1cec-311">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-311">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-312">等于`TimeZoneInfo.Local.Id`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-312">Equals `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="a1cec-313">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-313">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-314">不等于`TimeZoneInfo.Local.Id`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-314">Does not equal `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="a1cec-315">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-315">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-316">任何。</span><span class="sxs-lookup"><span data-stu-id="a1cec-316">Any.</span></span>|<span data-ttu-id="a1cec-317">将转换`dateTime`为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-317">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="a1cec-318">因为它依赖于调用<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法，<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A>方法用于执行不区分大小写的搜索来查找对应于时区`sourceTimeZoneId`和`destinationTimeZoneId`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-318">Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.</span></span>  
  
 <span data-ttu-id="a1cec-319">如果的值`dateTime`参数为源时区中的不明确时间时，将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-319">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="a1cec-320">如果`dateTime`参数是无效时间源时区中的，则此方法将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-320">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a1cec-321"><xref:System.DateTime.Kind%2A>所返回的属性<xref:System.DateTime>值设置为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>除非目标时区为协调世界时 (UTC)，在这种情况下它设置为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-321">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-322">下面的示例使用<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>方法相对应的时间为本地系统时间显示八个城市的世界。</span><span class="sxs-lookup"><span data-stu-id="a1cec-322">The following example uses the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> method to display the time that corresponds to the local system time in eight cities of the world.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#3)]
 [!code-vb[System.TimeZone2.Conversions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-323"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性与源时区不对应。</span><span class="sxs-lookup"><span data-stu-id="a1cec-323">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter does not correspond to the source time zone.</span></span>  
  
<span data-ttu-id="a1cec-324">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-324">-or-</span></span> 
 <span data-ttu-id="a1cec-325"><paramref name="dateTime" /> 是源时区中的无效时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-325"><paramref name="dateTime" /> is an invalid time in the source time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-326"><paramref name="sourceTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-326"><paramref name="sourceTimeZoneId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a1cec-327">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-327">-or-</span></span> 
 <span data-ttu-id="a1cec-328"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-328"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-329">已找到时区标识符，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="a1cec-329">The time zone identifiers were found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1cec-330">用户没有读取包含时区数据的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="a1cec-330">The user does not have the permissions required to read from the registry keys that hold time zone data.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a1cec-331">在本地系统上找不到 <paramref name="sourceTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-331">The <paramref name="sourceTimeZoneId" /> identifier was not found on the local system.</span></span>  
  
<span data-ttu-id="a1cec-332">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-332">-or-</span></span> 
<span data-ttu-id="a1cec-333">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-333">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-334">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-334">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeFromUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeFromUtc(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeFromUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeFromUtc (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-335">协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-335">The Coordinated Universal Time (UTC).</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a1cec-336">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-336">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a1cec-337">将协调世界时 (UTC) 转换为指定时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-337">Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</span></span></summary>
        <returns><span data-ttu-id="a1cec-338">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-338">The date and time in the destination time zone.</span></span> <span data-ttu-id="a1cec-339">如果 <paramref name="destinationTimeZone" /> 为 <see cref="P:System.DateTime.Kind" />，则该值的 <see cref="F:System.DateTimeKind.Utc" /> 属性为 <see cref="P:System.TimeZoneInfo.Utc" />；否则该值的 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-339">Its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" /> if <paramref name="destinationTimeZone" /> is <see cref="P:System.TimeZoneInfo.Utc" />; otherwise, its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-340">在执行转换时,<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A>方法将应用实际上在任何调整规则`destinationTimeZone`时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-340">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a1cec-341">此方法的确切行为取决于的值<xref:System.DateTime.Kind%2A>属性的`dateTime`参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-341">The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-342">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-342">DateTime.Kind property</span></span>|<span data-ttu-id="a1cec-343">转换</span><span class="sxs-lookup"><span data-stu-id="a1cec-343">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-344">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-344">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a1cec-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-346">将从协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-346">Converts from Coordinated Universal Time (UTC).</span></span>|  
  
 <span data-ttu-id="a1cec-347">如果转换`dateTime`早于的日期和时间值会导致<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本比<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue?displayProperty=nameWithType>或<xref:System.DateTime.MaxValue?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-347">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-348">下面的示例将协调世界时 (UTC) 转换为中部时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-348">The following example converts Coordinated Universal Time (UTC) to Central Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#8)]
 [!code-vb[System.TimeZone2.Concepts#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-349"><paramref name="dateTime" /> 的 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Local" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-349">The <see cref="P:System.DateTime.Kind" /> property of <paramref name="dateTime" /> is <see cref="F:System.DateTimeKind.Local" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-350"><paramref name="destinationTimeZone" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-350"><paramref name="destinationTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-351">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-351">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeToUtc">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-352">将日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-352">Converts a date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-353">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-353">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-354">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-354">The date and time to convert.</span></span></param>
        <summary><span data-ttu-id="a1cec-355">将指定的日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-355">Converts the specified date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="a1cec-356">与 <paramref name="dateTime" /> 参数对应的协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-356">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="a1cec-357"><see cref="T:System.DateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性始终设置为 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-357">The <see cref="T:System.DateTime" /> value's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-358">执行的具体转换取决于的值<xref:System.DateTime.Kind%2A>属性的`dateTime`参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-358">The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-359">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-359">DateTime.Kind property</span></span>|<span data-ttu-id="a1cec-360">转换</span><span class="sxs-lookup"><span data-stu-id="a1cec-360">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-361">从本地时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-361">Converts from local time to Coordinated Universal Time (UTC).</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-362">假定`dateTime`为本地时间，将从本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="a1cec-362">Assumes `dateTime` is local time and converts from local time to UTC.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-363">返回`dateTime`不变。</span><span class="sxs-lookup"><span data-stu-id="a1cec-363">Returns `dateTime` unchanged.</span></span>|  
  
 <span data-ttu-id="a1cec-364">如果`dateTime`对应到不明确本地时间，此方法假设它是标准的本地时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-364">If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time.</span></span> <span data-ttu-id="a1cec-365">如果`dateTime`对应于无效的本地时间，该方法将引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-365">If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1cec-366">如果当前计算机的本地时区包含多个调整规则，此重载<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A>方法可返回不同的结果<xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType>和<xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-366">If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="a1cec-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> 始终将当前的调整规则是否应用时区转换到`dateTime`其日期范围内。</span><span class="sxs-lookup"><span data-stu-id="a1cec-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span> <span data-ttu-id="a1cec-368">和在执行时[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]，<xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType>也适用于时区转换，当前的调整规则，该值指示是否`dateTime`其日期范围内。</span><span class="sxs-lookup"><span data-stu-id="a1cec-368">And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span>  
  
 <span data-ttu-id="a1cec-369">如果 UTC 等效于`dateTime`早于<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本的<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue>或<xref:System.DateTime.MaxValue>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-369">If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-370">下面的示例演示的转换时间值的<xref:System.DateTime.Kind%2A>属性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>， <xref:System.DateTimeKind.Local?displayProperty=nameWithType>，和<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-370">The following example illustrates the conversion of time values whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, and <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, respectively.</span></span> <span data-ttu-id="a1cec-371">它还阐释了不明确和无效时间转换。</span><span class="sxs-lookup"><span data-stu-id="a1cec-371">It also illustrates the conversion of ambiguous and invalid times.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#1)]
 [!code-vb[System.TimeZone2.Conversions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> 返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-373">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-373">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc (dateTime, sourceTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-374">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-374">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="a1cec-375"><paramref name="dateTime" /> 的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-375">The time zone of <paramref name="dateTime" />.</span></span></param>
        <summary><span data-ttu-id="a1cec-376">将指定时区中的时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-376">Converts the time in a specified time zone to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="a1cec-377">与 <paramref name="dateTime" /> 参数对应的协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-377">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="a1cec-378"><see cref="T:System.DateTime" /> 对象的 <see cref="P:System.DateTime.Kind" /> 属性始终设置为 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-378">The <see cref="T:System.DateTime" /> object's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-379">如果<xref:System.DateTime.Kind%2A>的属性`dateTime`参数等于<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>并且`sourceTimeZone`参数等于<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>，此方法返回`dateTime`而不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="a1cec-379">If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>, this method returns `dateTime` without performing any conversion.</span></span>  
  
 <span data-ttu-id="a1cec-380">如果`dateTime`对应到不明确的时间，此方法假设它是源时区的标准时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-380">If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone.</span></span> <span data-ttu-id="a1cec-381">如果`dateTime`对应于一个无效的时间，此方法，则会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-381">If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a1cec-382">如果的协调世界时 (UTC) 等效项`dateTime`早于<xref:System.DateTime.MinValue?displayProperty=nameWithType>或更高版本的<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，此方法返回<xref:System.DateTime.MinValue>或<xref:System.DateTime.MaxValue>分别。</span><span class="sxs-lookup"><span data-stu-id="a1cec-382">If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-383">下面的示例从本地系统中检索当前日期并将其转换为协调世界时 (UTC)，然后将其转换到东京标准时间，并最后将从东京标准时间转换回为 UTC。</span><span class="sxs-lookup"><span data-stu-id="a1cec-383">The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC.</span></span> <span data-ttu-id="a1cec-384">请注意，这两个的 UTC 时间相同。</span><span class="sxs-lookup"><span data-stu-id="a1cec-384">Note that the two UTC times are identical.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-385"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="a1cec-385"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="a1cec-386">为 <see cref="F:System.DateTimeKind.Utc" />，而 <paramref name="sourceTimeZone" /> 不等于 <see cref="P:System.TimeZoneInfo.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-386">is <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="a1cec-387">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-387">-or-</span></span> 
 <span data-ttu-id="a1cec-388"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="a1cec-388"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="a1cec-389">为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="sourceTimeZone" /> 不等于 <see cref="P:System.TimeZoneInfo.Local" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-389">is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Local" />.</span></span>  
  
<span data-ttu-id="a1cec-390">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-390">-or-</span></span> 
 <span data-ttu-id="a1cec-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> 返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-392"><paramref name="sourceTimeZone" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-392"><paramref name="sourceTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a51e1a3b-c983-4320-b31a-1f9fa3cf824a"><span data-ttu-id="a1cec-393">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-393">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCustomTimeZone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-394">定义在本地计算机上未找到的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-394">Defines a time zone that is not found on the local computer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a1cec-395">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-395">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a1cec-396">一个对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-396">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a1cec-397">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-397">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a1cec-398">新时区的标准时间名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-398">The name of the new time zone's standard time.</span></span></param>
        <summary><span data-ttu-id="a1cec-399">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称以及标准时间显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-399">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</span></span></summary>
        <returns><span data-ttu-id="a1cec-400">新时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-400">The new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-401">此重载<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29>方法适合于创建不具有任何调整 （即，不支持夏时制时间区域） 的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-401">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time).</span></span> <span data-ttu-id="a1cec-402">若要定义包括调整为夏时制时区，请使用<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>或<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-402">To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a1cec-403">下表显示了为提供的参数之间的关系<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法和属性的<xref:System.TimeZoneInfo>方法调用返回的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-403">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a1cec-404">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="a1cec-404">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a1cec-405">TimeZoneInfo 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-405">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
  
 <span data-ttu-id="a1cec-406">通常情况下，时区的标准时间名称和其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="a1cec-406">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a1cec-407">但是，时区的标识符的长度不应超过 32 个字符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-407">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a1cec-408">将字符串传递到`displayName`参数遵循相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="a1cec-408">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a1cec-409">显示名称的第一个部分是时区的基本偏移量从协调世界时，这将由的首字母缩写 GMT （格林尼治标准时间），括在括号中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-409">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a1cec-410">随后是一个字符串，标识时区本身，或一个或和 / 或多个城市、 区域或国家/地区时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-410">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a1cec-411">例如:</span><span class="sxs-lookup"><span data-stu-id="a1cec-411">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-412">以下示例创建一个自定义时区，莫森，霍尔姆湾南极洲区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-412">The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica.</span></span> <span data-ttu-id="a1cec-413">然后，它显示将本地时间转换为新的时区中的时间的结果。</span><span class="sxs-lookup"><span data-stu-id="a1cec-413">It then displays the result of converting the local time to the time in the new time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#1)]
 [!code-vb[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-414"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-414">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-415"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a1cec-415">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a1cec-416">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-416">-or-</span></span> 
<span data-ttu-id="a1cec-417"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-417">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1cec-418"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-418">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a6af8647-7893-4f29-95a9-d94c65a6e8dd"><span data-ttu-id="a1cec-419">如何：创建不含调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-419">How to: Create Time Zones Without Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule()) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a1cec-420">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-420">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a1cec-421">一个对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-421">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a1cec-422">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-422">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a1cec-423">新时区的标准时间名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-423">The new time zone's standard time name.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="a1cec-424">新时区的夏令制名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-424">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="a1cec-425">一个数组，它将基本 UTC 偏移量增加了特定的期间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-425">An array that augments the base UTC offset for a particular period.</span></span></param>
        <summary><span data-ttu-id="a1cec-426">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称、标准时间名称、夏时制名称和夏时制规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-426">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</span></span></summary>
        <returns><span data-ttu-id="a1cec-427">一个表示新时区的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-427">A <see cref="T:System.TimeZoneInfo" /> object that represents the new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-428">此重载<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法适合于创建支持夏令时的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-428">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method is suitable for creating a time zone that supports daylight saving time.</span></span> <span data-ttu-id="a1cec-429">若要定义不支持夏令时的时区，请使用<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>或<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-429">To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a1cec-430">下表显示了为提供的参数之间的关系<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法和成员<xref:System.TimeZoneInfo>方法调用返回的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-430">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a1cec-431">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="a1cec-431">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a1cec-432">TimeZoneInfo 成员</span><span class="sxs-lookup"><span data-stu-id="a1cec-432">TimeZoneInfo member</span></span>|  
|------------------------------------|-------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  
|`adjustmentRules`|<span data-ttu-id="a1cec-433">一个数组<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>返回的对象<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-433">An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.</span></span>|  
  
 <span data-ttu-id="a1cec-434">通常情况下，时区的标准时间名称和其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="a1cec-434">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a1cec-435">但是，时区的标识符的长度不应超过 32 个字符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-435">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a1cec-436">将字符串传递到`displayName`参数遵循相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="a1cec-436">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a1cec-437">显示名称的第一个部分是时区的基本偏移量从协调世界时，这将由的首字母缩写 GMT （格林尼治标准时间），括在括号中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-437">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a1cec-438">随后是一个字符串，标识时区本身，或一个或和 / 或多个城市、 区域或国家/地区时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-438">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a1cec-439">例如:</span><span class="sxs-lookup"><span data-stu-id="a1cec-439">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="a1cec-440">`baseUtcOffset`参数定义自定义时区的偏移量从协调世界时 (UTC) 的所有时区的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-440">The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules.</span></span> <span data-ttu-id="a1cec-441">换而言之，<xref:System.TimeZoneInfo>对象模型假定相对于 UTC 的时区的偏移量是常量的时区，整个生存期，并且存在独立于特定的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-441">In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules.</span></span> <span data-ttu-id="a1cec-442">以反映已更改其偏移量与 UTC 的时区，必须创建一个新的时区对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-442">To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.</span></span>  
  
 <span data-ttu-id="a1cec-443">通过执行以下操作定义时区的调整规则：</span><span class="sxs-lookup"><span data-stu-id="a1cec-443">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="a1cec-444">调用<xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A>或<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>方法定义的起始和结束每个调整规则的过渡时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-444">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="a1cec-445">调用<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>对于每个调整规则的方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-445">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="a1cec-446">将调整规则分配到一个数组可作为传递`adjustmentRules`参数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-446">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-447">下面的示例在南极洲中创建一个自定义时区，帕默站，安特卫普岛。</span><span class="sxs-lookup"><span data-stu-id="a1cec-447">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="a1cec-448">然后，将本地时间转换为新的时区中的时间，并显示结果。</span><span class="sxs-lookup"><span data-stu-id="a1cec-448">It then converts the local time to the time in the new time zone and displays the result.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#2)]
 [!code-vb[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-449"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-449">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-450"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a1cec-450">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a1cec-451">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-451">-or-</span></span> 
<span data-ttu-id="a1cec-452"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-452">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1cec-453"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-453">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-454">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则重叠。</span><span class="sxs-lookup"><span data-stu-id="a1cec-454">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="a1cec-455">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-455">-or-</span></span> 
<span data-ttu-id="a1cec-456">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则未按时间顺序排列。</span><span class="sxs-lookup"><span data-stu-id="a1cec-456">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="a1cec-457">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-457">-or-</span></span> 
<span data-ttu-id="a1cec-458"><paramref name="adjustmentRules" /> 中的一个或多个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-458">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="a1cec-459">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-459">-or-</span></span> 
<span data-ttu-id="a1cec-460">一个日期可能有多个应用于它的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-460">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="a1cec-461">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-461">-or-</span></span> 
<span data-ttu-id="a1cec-462"><paramref name="baseUtcOffset" /> 参数与 <paramref name="adjustmentRules" /> 数组中一个或多个对象的 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 值的和大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-462">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c52ef192-13a9-435f-8015-3b12eae8c47c"><span data-ttu-id="a1cec-463">如何：创建含调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-463">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule(), disableDaylightSavingTime As Boolean) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] * bool -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="disableDaylightSavingTime" Type="System.Boolean" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a1cec-464">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-464">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a1cec-465">一个 <see cref="T:System.TimeSpan" /> 对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-465">A <see cref="T:System.TimeSpan" /> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a1cec-466">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-466">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a1cec-467">新时区的标准时间名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-467">The standard time name of the new time zone.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="a1cec-468">新时区的夏令制名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-468">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="a1cec-469">一个 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的数组，这些对象增加特定期间的基本 UTC 偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-469">An array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that augment the base UTC offset for a particular period.</span></span></param>
        <param name="disableDaylightSavingTime"><span data-ttu-id="a1cec-470">如果为 <see langword="true" /> ，则丢弃包含新对象的 <paramref name="adjustmentRules" /> 中与夏令制相关的任何信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-470"><see langword="true" /> to discard any daylight saving time-related information present in <paramref name="adjustmentRules" /> with the new object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a1cec-471">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称、标准时间名称、夏令制名称、夏令制规则以及指示返回的对象是否反映夏令制信息的值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-471">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</span></span></summary>
        <returns><span data-ttu-id="a1cec-472">新时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-472">The new time zone.</span></span> <span data-ttu-id="a1cec-473">如果 <paramref name="disableDaylightSavingTime" /> 参数为 <see langword="true" />，则返回的对象没有夏令制数据。</span><span class="sxs-lookup"><span data-stu-id="a1cec-473">If the <paramref name="disableDaylightSavingTime" /> parameter is <see langword="true" />, the returned object has no daylight saving time data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-474">可以使用此重载<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法来创建在运行时条件可以确定夏时制其支持的自定义时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-474">You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.</span></span>  
  
 <span data-ttu-id="a1cec-475">下表显示了为提供的参数之间的关系<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法和成员<xref:System.TimeZoneInfo>方法调用返回的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-475">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a1cec-476">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="a1cec-476">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a1cec-477">TimeZoneInfo 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-477">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<span data-ttu-id="a1cec-478"><xref:System.TimeZoneInfo.DaylightName%2A> 如果`disableDaylightSavingTime`是`false`;<xref:System.String.Empty?displayProperty=nameWithType>如果`disableDaylightSavingTime`是`true`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-478"><xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=nameWithType> if `disableDaylightSavingTime` is `true`.</span></span>|  
|`adjustmentRules`|<span data-ttu-id="a1cec-479">一个数组<xref:System.TimeZoneInfo.AdjustmentRule>返回的对象<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法如果`disableDaylightSavingTime`是`false`; 返回一个空数组<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法如果`disableDaylightSavingTime`是`true`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-479">An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.</span></span>|  
|`disableDaylightSavingTime`|<span data-ttu-id="a1cec-480">不<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-480">Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.</span></span>|  
  
 <span data-ttu-id="a1cec-481">通常情况下，时区的标准时间名称和其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="a1cec-481">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a1cec-482">但是，时区的标识符的长度不应超过 32 个字符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-482">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a1cec-483">将字符串传递到`displayName`参数遵循相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="a1cec-483">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a1cec-484">显示名称的第一个部分是时区的基本偏移量从协调世界时，这将由的首字母缩写 GMT （格林尼治标准时间），括在括号中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-484">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a1cec-485">随后是一个字符串，标识时区本身，或一个或和 / 或多个城市、 区域或国家/地区时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-485">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a1cec-486">例如:</span><span class="sxs-lookup"><span data-stu-id="a1cec-486">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="a1cec-487">通过执行以下操作定义时区的调整规则：</span><span class="sxs-lookup"><span data-stu-id="a1cec-487">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="a1cec-488">调用<xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A>或<xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A>方法定义的起始和结束每个调整规则的转换规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-488">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="a1cec-489">调用<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>对于每个调整规则的方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-489">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="a1cec-490">将调整规则分配到一个数组可作为传递`adjustmentRules`参数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-490">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
 <span data-ttu-id="a1cec-491">如果`disableDaylightSavingTime`参数是`false`，此方法的操作等同于<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="a1cec-491">If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="a1cec-492">如果`disableDaylightSavingTime`是`true`，返回的对象包括带调整规则和一个<xref:System.TimeZoneInfo.DaylightName%2A>属性值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-492">If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-493">下面的示例在南极洲中创建一个自定义时区，帕默站，安特卫普岛。</span><span class="sxs-lookup"><span data-stu-id="a1cec-493">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="a1cec-494">它会设置`disableDaylightSavingTime`对的调用中的参数<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>方法`true`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-494">It sets the `disableDaylightSavingTime` parameter in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to `true`.</span></span> <span data-ttu-id="a1cec-495">然后显示新时区的夏时制名称，如果不存在，并调整规则，以确认新时区具有任何夏令制信息数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-495">It then displays the new time zone's daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#3)]
 [!code-vb[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-496"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-496">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-497"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a1cec-497">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a1cec-498">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-498">-or-</span></span> 
<span data-ttu-id="a1cec-499"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-499">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1cec-500"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-500">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-501">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则重叠。</span><span class="sxs-lookup"><span data-stu-id="a1cec-501">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="a1cec-502">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-502">-or-</span></span> 
<span data-ttu-id="a1cec-503">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则未按时间顺序排列。</span><span class="sxs-lookup"><span data-stu-id="a1cec-503">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="a1cec-504">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-504">-or-</span></span> 
<span data-ttu-id="a1cec-505"><paramref name="adjustmentRules" /> 中的一个或多个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-505">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="a1cec-506">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-506">-or-</span></span> 
<span data-ttu-id="a1cec-507">一个日期可能有多个应用于它的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-507">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="a1cec-508">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1cec-508">-or-</span></span> 
<span data-ttu-id="a1cec-509"><paramref name="baseUtcOffset" /> 参数与 <paramref name="adjustmentRules" /> 数组中一个或多个对象的 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 值的和大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-509">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a6af8647-7893-4f29-95a9-d94c65a6e8dd"><span data-ttu-id="a1cec-510">如何：创建不含调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-510">How to: Create Time Zones Without Adjustment Rules</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c52ef192-13a9-435f-8015-3b12eae8c47c"><span data-ttu-id="a1cec-511">如何：创建含调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-511">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZoneInfo.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-512">获取当前时区的夏时制的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-512">Gets the display name for the current time zone's daylight saving time.</span></span></summary>
        <value><span data-ttu-id="a1cec-513">时区的夏时制的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-513">The display name for the time zone's daylight saving time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-514">根据随 Windows 操作系统一起安装的区域性进行本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-514">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a1cec-515">一个<xref:System.TimeZoneInfo.DaylightName%2A>属性的值不是<xref:System.String.Empty?displayProperty=nameWithType>或`null`并不一定表示时区支持夏令时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-515">A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String.Empty?displayProperty=nameWithType> or `null` does not necessarily indicate that the time zone supports daylight saving time.</span></span> <span data-ttu-id="a1cec-516">若要确定是否时区支持夏令时，检查的值及其<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-516">To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="a1cec-517">在大多数情况下，`DaylightName`属性的系统定义的时区不是<xref:System.String.Empty?displayProperty=nameWithType>或`null`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-517">In most cases, the `DaylightName` property of system-defined time zones is not <xref:System.String.Empty?displayProperty=nameWithType> or `null`.</span></span> <span data-ttu-id="a1cec-518">但是，<xref:System.TimeZoneInfo.DaylightName%2A>的自定义时区的属性可以设置为<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-518">However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-519">通过创建自定义时区时将发生这种情况<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType>或<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType>重载并`disableDaylightSavingTime`参数是`true`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-519">This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> overload and the `disableDaylightSavingTime` parameter is `true`.</span></span> <span data-ttu-id="a1cec-520">因此，你的代码应永远不会假设的值<xref:System.TimeZoneInfo.DaylightName%2A>属性不是`null`或为空。</span><span class="sxs-lookup"><span data-stu-id="a1cec-520">Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.</span></span>  
  
 <span data-ttu-id="a1cec-521"><xref:System.TimeZoneInfo.DaylightName%2A>属性等效于<xref:System.TimeZone.DaylightName%2A>属性的<xref:System.TimeZone>类。</span><span class="sxs-lookup"><span data-stu-id="a1cec-521">The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-522">下面的示例定义一个名为方法`DisplayDateWithTimeZoneName`，它使用<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>方法，以确定是否显示时区的标准时间名称或夏令时名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-522">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.TimeZoneInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-523">获取表示时区的一般显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-523">Gets the general display name that represents the time zone.</span></span></summary>
        <value><span data-ttu-id="a1cec-524">时区的一般显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-524">The time zone's general display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-525">根据随 Windows 操作系统一起安装的区域性进行本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-525">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a1cec-526">Windows 系统的时区的时区显示名称遵循相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="a1cec-526">Time zone display names for Windows system time zones follow a fairly standard format.</span></span> <span data-ttu-id="a1cec-527">显示名称的第一个部分是时区的基本偏移量从协调世界时，这将由的首字母缩写 GMT （格林尼治标准时间），括在括号中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-527">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a1cec-528">为协调世界时，格林威治标准时间首字母缩写词，没有偏移量被括在括号中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-528">For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.</span></span>  <span data-ttu-id="a1cec-529">随后是一个字符串，标识时区或一个或多个城市、 区域或国家/地区时区中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-529">This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone.</span></span> <span data-ttu-id="a1cec-530">例如:</span><span class="sxs-lookup"><span data-stu-id="a1cec-530">For example:</span></span>  
  
```  
(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-531">下面的示例检索<xref:System.TimeZoneInfo>对象，表示本地时区，并输出其显示名称、 标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-531">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span> <span data-ttu-id="a1cec-532">输出显示在美国的系统太平洋标准时区运行。</span><span class="sxs-lookup"><span data-stu-id="a1cec-532">The output is displayed for a system in the U.S. Pacific Standard Time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-533">确定两个 <see cref="T:System.TimeZoneInfo" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1cec-533">Determines whether two <see cref="T:System.TimeZoneInfo" /> objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeZoneInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a1cec-534">要与当前对象进行比较的另一个对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-534">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a1cec-535">确定当前的 <see cref="T:System.TimeZoneInfo" /> 对象和另一个对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1cec-535">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another object are equal.</span></span></summary>
        <returns><span data-ttu-id="a1cec-536">如果 <paramref name="obj" /> 是 <see cref="T:System.TimeZoneInfo" /> 对象等于当前实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-536"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.TimeZoneInfo" /> object that is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-537">此方法将转换或强制转换`obj`到<xref:System.TimeZoneInfo>对象，并将其与当前实例进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1cec-537">This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance.</span></span> <span data-ttu-id="a1cec-538">为确定相等性测试基于值的比较。</span><span class="sxs-lookup"><span data-stu-id="a1cec-538">The test for equality is based on a comparison of values.</span></span> <span data-ttu-id="a1cec-539">当前<xref:System.TimeZoneInfo>实例和`obj`视为可在以下情况下等于：</span><span class="sxs-lookup"><span data-stu-id="a1cec-539">The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="a1cec-540">运行时类型`obj`是<xref:System.TimeZoneInfo>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-540">The run-time type of `obj` is <xref:System.TimeZoneInfo>.</span></span>  
  
-   <span data-ttu-id="a1cec-541">两个对象具有相同<xref:System.TimeZoneInfo.Id%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-541">The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.</span></span>  
  
-   <span data-ttu-id="a1cec-542">两个对象具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-542">The two objects have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="a1cec-543">如果 `obj` 为 `null`，则此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-543">If `obj` is `null`, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-544">下面的示例使用<xref:System.TimeZoneInfo.Equals%28System.Object%29>方法确定本地时区为太平洋时间或美国东部时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-544">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.Object%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.equals/cs/equals1.cs#1)]
 [!code-vb[System.TimeZoneInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a1cec-545">要与当前对象进行比较的另一个对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-545">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a1cec-546">确定当前的 <see cref="T:System.TimeZoneInfo" /> 对象和另一个 <see cref="T:System.TimeZoneInfo" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1cec-546">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another <see cref="T:System.TimeZoneInfo" /> object are equal.</span></span></summary>
        <returns><span data-ttu-id="a1cec-547">如果两个 <see cref="T:System.TimeZoneInfo" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-547"><see langword="true" /> if the two <see cref="T:System.TimeZoneInfo" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-548">相等性基于值的比较。</span><span class="sxs-lookup"><span data-stu-id="a1cec-548">Equality is based on a comparison of values.</span></span> <span data-ttu-id="a1cec-549">两个<xref:System.TimeZoneInfo>对象被视为等于在以下情况下：</span><span class="sxs-lookup"><span data-stu-id="a1cec-549">Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="a1cec-550">值及其<xref:System.TimeZoneInfo.Id%2A>属性相同时。</span><span class="sxs-lookup"><span data-stu-id="a1cec-550">The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.</span></span>  
  
-   <span data-ttu-id="a1cec-551">它们具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-551">They have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="a1cec-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> 返回用于得出以下表达式的结果的布尔值：</span><span class="sxs-lookup"><span data-stu-id="a1cec-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> returns the Boolean value that results from evaluating the following expression:</span></span>  
  
 ```csharp 
 other.Id == this.Id && HasSameRules(other);  
 ```
  
 ```vb
 other.Id = me.Id AndAlso HasSameRules(other)  
 ```

 <span data-ttu-id="a1cec-553">如果`other`参数为未初始化<xref:System.TimeZoneInfo>对象，此方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-553">If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-554">下面的示例使用<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29>方法确定本地时区为太平洋时间或美国东部时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-554">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#7)]
 [!code-vb[System.TimeZone2.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSystemTimeZoneById">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FindSystemTimeZoneById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FindSystemTimeZoneById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindSystemTimeZoneById (id As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FindSystemTimeZoneById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member FindSystemTimeZoneById : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FindSystemTimeZoneById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a1cec-555">时区标识符，它对应于 <see cref="P:System.TimeZoneInfo.Id" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-555">The time zone identifier, which corresponds to the <see cref="P:System.TimeZoneInfo.Id" /> property.</span></span></param>
        <summary><span data-ttu-id="a1cec-556">根据新的 <see cref="T:System.TimeZoneInfo" /> 对象的标识符实例化该对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-556">Instantiates a new <see cref="T:System.TimeZoneInfo" /> object based on its identifier.</span></span></summary>
        <returns><span data-ttu-id="a1cec-557">一个对象，其标识符为 <paramref name="id" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-557">An object whose identifier is the value of the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-558">`id`参数必须精确对应于时区的标识符的长度，但不是在情况下，成功匹配发生; 也就是说，比较`id`时区标识符不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="a1cec-558">The `id` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive.</span></span> <span data-ttu-id="a1cec-559">如果你想要检索时区对象基于部分匹配项，您可以编写使用的只读集合的自定义过程<xref:System.TimeZoneInfo>返回的对象<xref:System.TimeZoneInfo.GetSystemTimeZones%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-559">If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-560">在 Windows 系统上`FindSystemTimeZoneById`尝试匹配`id`到注册表的 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones 分支的子项名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-560">On Windows systems, `FindSystemTimeZoneById` tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones branch of the registry.</span></span> <span data-ttu-id="a1cec-561">在 Linux 和 macOS 上，它使用时区信息中提供[ICU 库](http://userguide.icu-project.org/datetime/timezone)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-561">On Linux and macOS, it uses time zone information available in the [ICU Library](http://userguide.icu-project.org/datetime/timezone).</span></span> <span data-ttu-id="a1cec-562">如果在注册表或库不具有所需时区的信息，您可以创建特定的时间区域通过调用的重载之一<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法或通过调用<xref:System.TimeZoneInfo.FromSerializedString%2A>要反序列化<xref:System.TimeZoneInfo>对象表示所需的时间区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-562">If the registry or the library does not have the information for the time zone you desire, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone.</span></span> <span data-ttu-id="a1cec-563">但是，通过这些方法调用创建时区不是系统定义的时间，从而不能使用检索<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-563">However, time zones created by these method calls are not system-defined time and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span> <span data-ttu-id="a1cec-564">可以仅通过返回的对象引用访问这些自定义的时区<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>或<xref:System.TimeZoneInfo.FromSerializedString%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-564">These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.</span></span>  
  
<span data-ttu-id="a1cec-565">此方法返回一个新<xref:System.TimeZoneInfo>实例为每个方法调用; 它不会返回缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-565">This method returns a new <xref:System.TimeZoneInfo> instance for each method call; it does not return cached objects.</span></span> <span data-ttu-id="a1cec-566">这可能会影响中调用的应用程序的性能`FindSystemTimeZoneById`方法重复使用相同的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-566">This may impact performance in applications that call the  `FindSystemTimeZoneById` method repeatedly with the same identifier.</span></span>   
  
## Examples  
 <span data-ttu-id="a1cec-567">下面的示例使用<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法来检索东京标准时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-567">The following example uses the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve the Tokyo Standard Time zone.</span></span> <span data-ttu-id="a1cec-568">这<xref:System.TimeZoneInfo>在东京中将本地时间转换为时间并确定它是东京标准时间还是东京夏时制时间，然后使用对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-568">This <xref:System.TimeZoneInfo> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a1cec-569">系统没有足够内存保留有关时区的信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-569">The system does not have enough memory to hold information about the time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-570"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-570">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a1cec-571">未找到 <paramref name="id" /> 指定的时区标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-571">The time zone identifier specified by <paramref name="id" /> was not found.</span></span> <span data-ttu-id="a1cec-572">这意味着名称与 <paramref name="id" /> 匹配的时区标识符不存在，或者该标识符存在但不包含任何时区数据。</span><span class="sxs-lookup"><span data-stu-id="a1cec-572">This means that a time zone identifier whose name matches <paramref name="id" /> does not exist, or that the identifier exists but does not contain any time zone data.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1cec-573">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="a1cec-573">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a1cec-574">已找到时区标识符，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="a1cec-574">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.Id" />
        <related type="Article" href="https://msdn.microsoft.com/library/8cb620e5-c6a6-4267-a52e-beeb73cd1a34"><span data-ttu-id="a1cec-575">如何：实例化 TimeZoneInfo 对象</span><span class="sxs-lookup"><span data-stu-id="a1cec-575">How to: Instantiate a TimeZoneInfo Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromSerializedString">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FromSerializedString (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FromSerializedString(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSerializedString (source As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FromSerializedString(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member FromSerializedString : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FromSerializedString source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a1cec-576">已序列化的 <see cref="T:System.TimeZoneInfo" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1cec-576">The string representation of the serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="a1cec-577">反序列化一个字符串，以重新创建原来已序列化的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-577">Deserializes a string to re-create an original serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a1cec-578">原始序列化对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-578">The original serialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-579">没有提供了创建时区，在 Windows 上或在注册表中找不到所需的所有代码的替代方法[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-579">There is an alternative to providing all the code required to create a time zone that is not found in the registry on Windows or in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-580">您可以定义自定义时区，然后使用<xref:System.TimeZoneInfo.ToSerializedString%2A>独立可执行文件或使用应用程序的安装程序也可以将时区保存为一个字符串中的方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-580">You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string.</span></span> <span data-ttu-id="a1cec-581">应用程序然后可以从其存储位置检索此字符串并使用它进行实例化<xref:System.TimeZoneInfo.FromSerializedString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-581">The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-582">下面的示例尝试检索南极从本地系统时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-582">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="a1cec-583">如果失败，该代码将尝试从应用程序目录中的文本文件中检索有关时区信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-583">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="a1cec-584">如果此尝试失败，代码将创建时区，并将有关时区信息写入到文本文件。</span><span class="sxs-lookup"><span data-stu-id="a1cec-584">If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-585"><paramref name="source" /> 参数为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-585">The <paramref name="source" /> parameter is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-586"><paramref name="source" /> 参数为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-586">The <paramref name="source" /> parameter is a null string.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a1cec-587">无法将源参数反序列化回 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-587">The source parameter cannot be deserialized back into a <see cref="T:System.TimeZoneInfo" /> object.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.ToSerializedString" />
        <related type="Article" href="https://msdn.microsoft.com/library/6b7b4de9-da07-47e3-8f4c-823f81798ee7"><span data-ttu-id="a1cec-588">如何：从嵌入的资源还原时区</span><span class="sxs-lookup"><span data-stu-id="a1cec-588">How to: Restore Time Zones from an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustmentRules">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.TimeZoneInfo/AdjustmentRule[] GetAdjustmentRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAdjustmentRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjustmentRules () As TimeZoneInfo.AdjustmentRule()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ GetAdjustmentRules();" />
      <MemberSignature Language="F#" Value="member this.GetAdjustmentRules : unit -&gt; TimeZoneInfo.AdjustmentRule[]" Usage="timeZoneInfo.GetAdjustmentRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-589">检索应用至当前 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的 <see cref="T:System.TimeZoneInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="a1cec-589">Retrieves an array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that apply to the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a1cec-590">此时区的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="a1cec-590">An array of objects for this time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-591"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法检索数组<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-591">The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="a1cec-592">数组中的每个对象定义的该时区调整，以及其增量生效的开始和结束日期 （精确调整用来使要更改的时间量）。</span><span class="sxs-lookup"><span data-stu-id="a1cec-592">Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change).</span></span> <span data-ttu-id="a1cec-593">此外，两个属性返回<xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType>定义每个每年何时从标准时间与转换发生时的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-593">In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> objects that define when each annual transition to and from standard time occurs.</span></span>  
  
 <span data-ttu-id="a1cec-594">如果时区具有多个调整规则，则通常按从最早 （位于索引 0 处） 到最新 (索引处<xref:System.Array.Length%2A>-1)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-594">If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> - 1).</span></span>  
  
 <span data-ttu-id="a1cec-595">如果时区具有带调整规则，<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法返回一个空数组 (数组的<xref:System.Array.Length%2A>为零)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-595">If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).</span></span>  
  
 <span data-ttu-id="a1cec-596">对返回的数组的元素进行任何修改<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法不会反映在属于某个特定时区的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-596">Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone.</span></span> <span data-ttu-id="a1cec-597">要修改时区的调整规则 （例如，反映到 / 从夏令时其历史转换），必须使用适当的调整规则创建新的时区而修改现有的一个。</span><span class="sxs-lookup"><span data-stu-id="a1cec-597">To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-598">下面的示例检索有关其到控制台的调整规则的本地系统，并显示完整信息定义的所有时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-598">The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a1cec-599">系统没有足够内存来制作调整规则在内存中的副本。</span><span class="sxs-lookup"><span data-stu-id="a1cec-599">The system does not have enough memory to make an in-memory copy of the adjustment rules.</span></span></exception>
        <altmember cref="T:System.TimeZoneInfo.AdjustmentRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAmbiguousTimeOffsets">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-600">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-600">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTime -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-601">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-601">A date and time.</span></span></param>
        <summary><span data-ttu-id="a1cec-602">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-602">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="a1cec-603">对象的数组，它表示特定日期和时间可以映射到的可能的协调世界时 (UTC) 偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-603">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-604">此方法的确切行为取决于之间的关系<xref:System.DateTime.Kind%2A>属性和<xref:System.TimeZoneInfo>对象，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-604">The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-605">TimeZoneInfo 对象类型</span><span class="sxs-lookup"><span data-stu-id="a1cec-605">TimeZoneInfo object type</span></span>|<span data-ttu-id="a1cec-606">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-606">Kind property value</span></span>|<span data-ttu-id="a1cec-607">行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-607">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-609">返回不明确时间的偏移量`dateTime`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-609">Returns ambiguous time offsets for `dateTime`.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-610">将转换`dateTime`到本地时间，然后返回该时间的不明确的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-610">Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-611">任意值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-611">Any value.</span></span>|<span data-ttu-id="a1cec-612">引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-612">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a1cec-613">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-613">Any other time zone.</span></span>|<span data-ttu-id="a1cec-614"><xref:System.DateTimeKind.Local> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-614"><xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-615">将转换`dateTime`到指定的时区，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-615">Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="a1cec-616">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-616">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-617">确定是否`dateTime`中指定的时区不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-617">Determines whether `dateTime` is ambiguous in the specified time zone.</span></span>|  
  
 <span data-ttu-id="a1cec-618">顺序<xref:System.TimeSpan>未定义此方法返回的数组中的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-618">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="a1cec-619">但是，可以确定哪些元素可表示时区的标准时间通过比较其值的时区偏移量<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-619">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="a1cec-620">若要将不明确时间映射到时区的标准时间，请参阅[如何：解决不明确时间](~/docs/standard/datetime/resolve-ambiguous-times.md)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-620">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-621">下面的示例定义一个名为方法`ShowPossibleUtcTimes`，它使用<xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29>方法以将不明确时间映射到其对应的协调世界时 (UTC) 时间的可能。</span><span class="sxs-lookup"><span data-stu-id="a1cec-621">The following example defines a method named `ShowPossibleUtcTimes` that uses the <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#1)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#1)]  
  
 <span data-ttu-id="a1cec-622">然后可以使用类似以下的代码调用该方法：</span><span class="sxs-lookup"><span data-stu-id="a1cec-622">The method can then be called using code such as the following:</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#2)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-623"><paramref name="dateTime" /> 是明确的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-623"><paramref name="dateTime" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
        <related type="Article" href="https://msdn.microsoft.com/library/2cf5fb25-492c-4875-9245-98cac8348e97"><span data-ttu-id="a1cec-624">如何：解决不明确时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-624">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bca874ee-5b68-4654-8bbd-3711220ef332"><span data-ttu-id="a1cec-625">如何：让的用户解析不明确时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-625">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTimeOffset -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-626">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-626">A date and time.</span></span></param>
        <summary><span data-ttu-id="a1cec-627">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-627">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="a1cec-628">对象的数组，它表示特定日期和时间可以映射到的可能的协调世界时 (UTC) 偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-628">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-629">此方法的确切行为取决于之间的关系<xref:System.DateTimeOffset.Offset%2A>的属性`dateTimeOffset`参数和<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-629">The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object.</span></span> <span data-ttu-id="a1cec-630">如果的值<xref:System.DateTimeOffset.Offset%2A>属性对应于当前时区的可能的偏移量从协调世界时 (UTC) 的日期和时间，该方法将返回可能的偏移量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-630">If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets.</span></span> <span data-ttu-id="a1cec-631">否则，它将为`dateTimeOffset`当前所在的时区，然后返回的可能偏移量的时间的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-631">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.</span></span>  
  
 <span data-ttu-id="a1cec-632">顺序<xref:System.TimeSpan>未定义此方法返回的数组中的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-632">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="a1cec-633">但是，可以确定哪些元素可表示时区的标准时间通过比较其值的时区偏移量<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-633">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="a1cec-634">若要将不明确时间映射到时区的标准时间，请参阅[如何：解决不明确时间](~/docs/standard/datetime/resolve-ambiguous-times.md)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-634">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-635"><paramref name="dateTimeOffset" /> 是明确的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-635"><paramref name="dateTimeOffset" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
        <related type="Article" href="https://msdn.microsoft.com/library/2cf5fb25-492c-4875-9245-98cac8348e97"><span data-ttu-id="a1cec-636">如何：解决不明确时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-636">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bca874ee-5b68-4654-8bbd-3711220ef332"><span data-ttu-id="a1cec-637">如何：让的用户解析不明确时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-637">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeZoneInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-638">用作哈希算法的哈希函数和数据结构（如哈希表）。</span><span class="sxs-lookup"><span data-stu-id="a1cec-638">Serves as a hash function for hashing algorithms and data structures such as hash tables.</span></span></summary>
        <returns><span data-ttu-id="a1cec-639">一个 32 位有符号整数，用作此 <see cref="T:System.TimeZoneInfo" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="a1cec-639">A 32-bit signed integer that serves as the hash code for this <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-640">有关更多详细信息<xref:System.TimeZoneInfo.GetHashCode%2A>方法，请参阅<xref:System.Object.GetHashCode%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-640">For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTimeZones">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt; GetSystemTimeZones ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.TimeZoneInfo&gt; GetSystemTimeZones() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetSystemTimeZones" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemTimeZones () As ReadOnlyCollection(Of TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;TimeZoneInfo ^&gt; ^ GetSystemTimeZones();" />
      <MemberSignature Language="F#" Value="static member GetSystemTimeZones : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt;" Usage="System.TimeZoneInfo.GetSystemTimeZones " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.TimeZoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-641">返回时区信息在本地系统上可用的所有时区的已排序集合。</span><span class="sxs-lookup"><span data-stu-id="a1cec-641">Returns a sorted collection of all the time zones about which information is available on the local system.</span></span></summary>
        <returns><span data-ttu-id="a1cec-642"><see cref="T:System.TimeZoneInfo" /> 对象的只读集合。</span><span class="sxs-lookup"><span data-stu-id="a1cec-642">A read-only collection of <see cref="T:System.TimeZoneInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-643"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A>方法从 Windows 系统上并从注册表的 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones 项的子项中检索所有可用的时区信息[ICU 库](http://userguide.icu-project.org/datetime/timezone)在 Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-643">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones key on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-644">如果无法成功检索和分析的特定字符串属性的单个值<xref:System.TimeZoneInfo>对象，此方法将其值设置为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="a1cec-644">If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string ("").</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a1cec-645"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A>方法返回的集合<xref:System.TimeZoneInfo>中定义的时区对象或 ICU 库。</span><span class="sxs-lookup"><span data-stu-id="a1cec-645">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the  or ICU library.</span></span> <span data-ttu-id="a1cec-646">它不包括使用的重载创建时区<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-646">It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a1cec-647">它们只能通过时区创建方法返回的对象引用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-647">These are accessible only through the object reference returned by the time zone creation method.</span></span>  
  
 <span data-ttu-id="a1cec-648">此方法返回的集合被按 UTC 偏移量，并且对于具有相同的 UTC 偏移量的时间范围按使用当前区域性的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-648">The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture.</span></span> <span data-ttu-id="a1cec-649">显示名称的信息，请参阅<xref:System.TimeZoneInfo.DisplayName%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1cec-649">For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="a1cec-650"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601>此方法返回的对象支持<xref:System.Collections.Generic.IEnumerable%601>接口，这意味着可以使用迭代它`foreach`（在 C# 中) 或`For Each…Next`（在 Visual Basic) 语句。</span><span class="sxs-lookup"><span data-stu-id="a1cec-650">The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements.</span></span> <span data-ttu-id="a1cec-651">循环每次迭代提供下一步<xref:System.TimeZoneInfo>集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-651">Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.</span></span>  
  
 <span data-ttu-id="a1cec-652">集合<xref:System.TimeZoneInfo>对象表示本地计算机上定义的时区; 它不一定提供所有时间段内所有时区的完整信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-652">The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods.</span></span> <span data-ttu-id="a1cec-653">如果应用程序需要在本地计算机上找不到的时区，则可以创建自定义时区使用的重载<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-653">If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a1cec-654">有关详细信息，请参阅[如何：创建不含调整规则的时区](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md)和[如何：创建含调整规则的时区](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-654">For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).</span></span>  
  
 <span data-ttu-id="a1cec-655">您还可以确定各个时区本地计算机上通过调用定义<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法并提供你想要作为参数检索时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-655">You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-656">下面的示例检索表示在计算机上定义的时区的时区对象的集合，并将它们的相关信息写入到文本文件。</span><span class="sxs-lookup"><span data-stu-id="a1cec-656">The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/getsystemtimezones1.cs#6)]
 [!code-vb[System.TimeZone2.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/getsystemtimezones1.vb#6)]
  [!code-powershell[System.TimeZone2.Class#6](~/samples/snippets/powershell/VS_Snippets_CLR_System/System.TimeZone2.Class/PS/Timezone2_Examples.ps1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a1cec-657">内存不足，无法存储所有时区信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-657">There is insufficient memory to store all time zone information.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1cec-658">用户没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="a1cec-658">The user does not have permission to read from the registry keys that contain time zone information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUtcOffset">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-659">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-659">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-660">要为其确定偏移量的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-660">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="a1cec-661">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-661">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="a1cec-662">一个对象，该对象指示两个时区之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-662">An object that indicates the time difference between the two time zones.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-663">返回的时间跨度包括应用到当前时区的调整规则导致的任何差异。</span><span class="sxs-lookup"><span data-stu-id="a1cec-663">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="a1cec-664">它不同于<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性，它返回协调世界时 (UTC) 和时区的标准时间之间的差异，因此，不考虑调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-664">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 <span data-ttu-id="a1cec-665">如果`dateTime`参数的<xref:System.DateTime.Kind%2A>属性不对应时区对象，此方法将执行必要的转换之前返回的结果。</span><span class="sxs-lookup"><span data-stu-id="a1cec-665">If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result.</span></span> <span data-ttu-id="a1cec-666">例如，发生这种情况<xref:System.DateTime.Kind%2A>属性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>但时区对象不是本地时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-666">For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the time zone object is not the local time zone.</span></span> <span data-ttu-id="a1cec-667">如果`dateTime`不明确，或如果不明确转换后的时间，此方法会解释为标准时间的不明确时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-667">If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time.</span></span> <span data-ttu-id="a1cec-668">如果`dateTime`是无效的此方法返回<xref:System.TimeSpan>反映 UTC 与时区的标准时间之间的差异的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-668">If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.</span></span>  
  
 <span data-ttu-id="a1cec-669"><xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType>方法是在对操作类似<xref:System.TimeZone.GetUtcOffset%2A>方法的<xref:System.TimeZone>类。</span><span class="sxs-lookup"><span data-stu-id="a1cec-669">The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-670">下面的示例演示如何使用<xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29>方法使用不同的时区和具有不同的日期值<xref:System.DateTime.Kind%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-670">The following example illustrates the use of the <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> method with different time zones and with date values that have different <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/cs/System.TimeZone2.GetUtcOffset.cs#1)]
 [!code-vb[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/vb/System.TimeZone2.GetUtcOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.BaseUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTimeOffset -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-671">要为其确定偏移量的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-671">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="a1cec-672">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-672">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="a1cec-673">一个对象，该对象指示协调世界时 (UTC) 与当前时区之间的时差。</span><span class="sxs-lookup"><span data-stu-id="a1cec-673">An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-674">返回的时间跨度包括应用到当前时区的调整规则导致的任何差异。</span><span class="sxs-lookup"><span data-stu-id="a1cec-674">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="a1cec-675">它不同于<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性，它返回协调世界时 (UTC) 和时区的标准时间之间的差异，因此，不考虑调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-675">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameRules">
      <MemberSignature Language="C#" Value="public bool HasSameRules (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameRules(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSameRules (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSameRules(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="member this.HasSameRules : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.HasSameRules other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a1cec-676">要与当前的 <see cref="T:System.TimeZoneInfo" /> 对象进行比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-676">A second object to compare with the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="a1cec-677">指示当前对象和另一个 <see cref="T:System.TimeZoneInfo" /> 对象是否具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-677">Indicates whether the current object and another <see cref="T:System.TimeZoneInfo" /> object have the same adjustment rules.</span></span></summary>
        <returns><span data-ttu-id="a1cec-678">如果两个时区具有相同的调整规则和相同的基本偏移量，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-678"><see langword="true" /> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-679">像<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType>方法，<xref:System.TimeZoneInfo.HasSameRules%2A>方法指示两个时区是否具有相同的基本偏移量 (由定义<xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性) 和相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-679">Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules.</span></span> <span data-ttu-id="a1cec-680">与不同<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType>方法，<xref:System.TimeZoneInfo.HasSameRules%2A>不会比较时区标识符 (由定义<xref:System.TimeZoneInfo.Id%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-680">Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-681">通常情况下，大量的 Windows 上的注册表中定义的时区和[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上具有相同的偏移量从协调世界时 (UTC) 和相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-681">Typically, a number of time zones defined in the registry on Windows and the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules.</span></span> <span data-ttu-id="a1cec-682">下面的示例向控制台显示这些时间区域的列表。</span><span class="sxs-lookup"><span data-stu-id="a1cec-682">The following example displays a list of these time zones to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.HasSameRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/cs/HasSameRules.cs#1)]
 [!code-vb[System.TimeZone2.HasSameRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/vb/HasSameRules.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-683"><paramref name="other" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-683">The <paramref name="other" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.TimeZoneInfo.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-684">获取时区标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-684">Gets the time zone identifier.</span></span></summary>
        <value><span data-ttu-id="a1cec-685">时区标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-685">The time zone identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-686">时区标识符是唯一标识特定时区的键字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-686">The time zone identifier is a key string that uniquely identifies a particular time zone.</span></span> <span data-ttu-id="a1cec-687">在 Windows 系统中，它对应于在 Windows 系统上并从注册表的 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time 区域分支的子项[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-687">On Windows systems, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone branch of the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a1cec-688">它可以作为参数传递<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法来实例化<xref:System.TimeZoneInfo>对象，表示特定时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-688">It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to instantiate a <xref:System.TimeZoneInfo> object that represents a particular time zone.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a1cec-689">尽管 Windows 注册表中的密钥名称最多可包含 255 个字符，但我们建议你将分配给自定义时区的标识符，是 32 个字符或更少。</span><span class="sxs-lookup"><span data-stu-id="a1cec-689">Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer.</span></span> <span data-ttu-id="a1cec-690">标识符的时间越长，概率就越大，不正确的密钥名称将为检索它时提供。</span><span class="sxs-lookup"><span data-stu-id="a1cec-690">The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.</span></span>  
  
 <span data-ttu-id="a1cec-691">值<xref:System.TimeZoneInfo.Id%2A>属性是通常情况下，但并不总是相同<xref:System.TimeZoneInfo.StandardName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-691">The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property.</span></span> <span data-ttu-id="a1cec-692">协调世界时时区的标识符是 UTC。</span><span class="sxs-lookup"><span data-stu-id="a1cec-692">The identifier of the Coordinated Universal Time zone is UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-693">下面的示例列出了每个本地计算机上定义的时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="a1cec-693">The following example lists the identifier of each of the time zones defined on the local computer.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#5)]
 [!code-vb[System.TimeZone2.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAmbiguousTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-694">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-694">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-695">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-695">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a1cec-696">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-696">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="a1cec-697">如果 <paramref name="dateTime" /> 参数不明确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-697"><see langword="true" /> if the <paramref name="dateTime" /> parameter is ambiguous; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-698">不明确时间之内的当前时区的时间范围。</span><span class="sxs-lookup"><span data-stu-id="a1cec-698">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="a1cec-699">这意味着它可以是标准时间或调整规则的应用程序而得出的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-699">This means it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="a1cec-700">通常情况下，时钟设置为从夏时制返回到标准时间时，将导致不明确时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-700">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="a1cec-701">请参阅示例部分的说明。</span><span class="sxs-lookup"><span data-stu-id="a1cec-701">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="a1cec-702">协调世界时 (UTC) 具有不明确的时间;既不执行操作的时间不支持夏时制的区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-702">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span> <span data-ttu-id="a1cec-703">因此，这些时间的时区有没有调整规则，并且调用<xref:System.TimeZoneInfo.IsAmbiguousTime%2A>方法将始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-703">Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.</span></span>  
  
 <span data-ttu-id="a1cec-704">对于确实发现夏令时的时区，此方法的确切行为取决于之间的关系<xref:System.DateTime.Kind%2A>属性和<xref:System.TimeZoneInfo>对象，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-704">For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-705">TimeZoneInfo 对象类型</span><span class="sxs-lookup"><span data-stu-id="a1cec-705">TimeZoneInfo object type</span></span>|<span data-ttu-id="a1cec-706">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="a1cec-706">Kind property value</span></span>|<span data-ttu-id="a1cec-707">行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-707">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-709">确定是否`dateTime`参数不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-709">Determines whether the `dateTime` parameter is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-710">将转换`dateTime`为本地时间，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-710">Converts `dateTime` to the local time and then determines whether that time is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-712">返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-712">Returns `false`.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-713">如果`dateTime`不明确，则假定它是标准时间，将其转换为 UTC，并返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-713">If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.</span></span>|  
|<span data-ttu-id="a1cec-714">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-714">Any other time zone.</span></span>|<span data-ttu-id="a1cec-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1cec-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a1cec-716">将转换`dateTime`为指定的时区中的时间，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-716">Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="a1cec-717">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-717">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-718">确定是否`dateTime`不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-718">Determines whether `dateTime` is ambiguous.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-719">在太平洋时区中夏时制结束于凌晨 2:00。</span><span class="sxs-lookup"><span data-stu-id="a1cec-719">In the Pacific Time zone, daylight saving time ends at 2:00 A.M.</span></span> <span data-ttu-id="a1cec-720">2007 年 11 月 4日日。</span><span class="sxs-lookup"><span data-stu-id="a1cec-720">on November 4, 2007.</span></span> <span data-ttu-id="a1cec-721">下面的示例按一分钟时间间隔从凌晨 12:59 传递时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-721">The following example passes the time at one-minute intervals from 12:59 A.M.</span></span> <span data-ttu-id="a1cec-722">2007 年 11 月 4日日到凌晨 2:01</span><span class="sxs-lookup"><span data-stu-id="a1cec-722">on November 4, 2007, to 2:01 A.M.</span></span> <span data-ttu-id="a1cec-723">2007 年 11 月 4 日，向<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29>方法的<xref:System.TimeZoneInfo>对象，表示太平洋时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-723">on November 4, 2007, to the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="a1cec-724">控制台输出指示从凌晨 1:00</span><span class="sxs-lookup"><span data-stu-id="a1cec-724">The console output indicates that all times from 1:00 A.M.</span></span> <span data-ttu-id="a1cec-725">2007 年 11 月 4日日至凌晨 1:59</span><span class="sxs-lookup"><span data-stu-id="a1cec-725">on November 4, 2007, to 1:59 A.M.</span></span> <span data-ttu-id="a1cec-726">2007 年 11 月 4 日，是不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-726">on November 4, 2007, are ambiguous.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#8)]
 [!code-vb[System.TimeZone2.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-727"><paramref name="dateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性的值为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="dateTime" /> 是无效时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-727">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-728">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-728">A date and time.</span></span></param>
        <summary><span data-ttu-id="a1cec-729">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-729">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="a1cec-730">如果 <paramref name="dateTimeOffset" /> 参数在当前时区中不明确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-730"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is ambiguous in the current time zone; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-731">不明确时间之内的当前时区的时间范围。</span><span class="sxs-lookup"><span data-stu-id="a1cec-731">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="a1cec-732">这意味着它可以是标准时间或时间调整规则的应用程序而得出的。</span><span class="sxs-lookup"><span data-stu-id="a1cec-732">This means that it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="a1cec-733">通常情况下，时钟设置为从夏时制返回到标准时间时，将导致不明确时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-733">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="a1cec-734">协调世界时 (UTC) 具有不明确的时间;既不执行操作的时间不支持夏时制的区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-734">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-735">该方法的确切行为取决于之间的关系<xref:System.DateTimeOffset.Offset%2A>属性的`dateTimeOffset`参数和当前所在的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-735">The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone.</span></span> <span data-ttu-id="a1cec-736">如果的值<xref:System.DateTimeOffset.Offset%2A>属性为可能发生的当前时区 UTC 偏移量，该方法确定是否该日期和时间不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-736">If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous.</span></span> <span data-ttu-id="a1cec-737">否则，它将为`dateTimeOffset`设为以当前所在的时区，时间，然后确定是否该日期和时间不明确。</span><span class="sxs-lookup"><span data-stu-id="a1cec-737">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cec-738">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏时制范围内。</span><span class="sxs-lookup"><span data-stu-id="a1cec-738">Indicates whether a specified date and time falls in the range of daylight saving time for the current <see cref="T:System.TimeZoneInfo" /> object's time zone.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-739">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-739">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a1cec-740">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏令制范围内。</span><span class="sxs-lookup"><span data-stu-id="a1cec-740">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a1cec-741">如果 <paramref name="dateTime" /> 参数为夏令制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-741"><see langword="true" /> if the <paramref name="dateTime" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-742">返回值<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>所表示的时区之间的关系影响<xref:System.TimeZoneInfo>对象和<xref:System.DateTime.Kind%2A>属性的`dateTime`参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-742">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-743">TimeZoneInfo 对象</span><span class="sxs-lookup"><span data-stu-id="a1cec-743">TimeZoneInfo object</span></span>|<span data-ttu-id="a1cec-744">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-744">DateTime.Kind property</span></span>|<span data-ttu-id="a1cec-745">结果</span><span class="sxs-lookup"><span data-stu-id="a1cec-745">Result</span></span>|  
|-------------------------|----------------------------|------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Local`|<span data-ttu-id="a1cec-746">确定是否`dateTime`是夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-746">Determines whether `dateTime` is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Utc`|<span data-ttu-id="a1cec-747">将转换`dateTime`与协调世界时 (UTC) 为本地时间，并确定它是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-747">Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Unspecified`|<span data-ttu-id="a1cec-748">假定`dateTime`表示本地时间，并确定它是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-748">Assumes that `dateTime` represents local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-749">`DateTimeKind.Local`、`DateTimeKind.Unspecified` 或 `DateTimeKind.Utc`</span><span class="sxs-lookup"><span data-stu-id="a1cec-749">`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`</span></span>|<span data-ttu-id="a1cec-750">返回`false`（UTC 不支持夏时制）。</span><span class="sxs-lookup"><span data-stu-id="a1cec-750">Returns `false` (UTC does not support daylight saving time).</span></span>|  
|<span data-ttu-id="a1cec-751">任何其他<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-751">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Local`|<span data-ttu-id="a1cec-752">将本地时间转换为等效的时间<xref:System.TimeZoneInfo>对象，然后确定是否后者为夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-752">Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="a1cec-753">任何其他<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-753">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Utc`|<span data-ttu-id="a1cec-754">将 UTC 转换为等效的时间的<xref:System.TimeZoneInfo>对象，然后确定是否后者为夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-754">Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="a1cec-755">任何其他<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-755">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Unspecified`|<span data-ttu-id="a1cec-756">确定是否`dateTime`是夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-756">Determines whether `dateTime` is daylight saving time.</span></span>|  
  
 <span data-ttu-id="a1cec-757">如果由表示时区<xref:System.TimeZoneInfo>对象不支持夏令时，此方法始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-757">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="a1cec-758">大量的时间区域，其中包括<xref:System.TimeZoneInfo.Utc%2A>，不会依循夏时制。</span><span class="sxs-lookup"><span data-stu-id="a1cec-758">A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.</span></span>  <span data-ttu-id="a1cec-759">若要确定是否时区支持夏令时，检索的值及其<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-759">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="a1cec-760">如果`dateTime`参数指定在当前对象的时间区域中，将不明确时间<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>方法将解释`dateTime`作为标准时间，并返回`false`如果其<xref:System.DateTime.Kind%2A>属性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>或<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a1cec-760">If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1cec-761">如果<xref:System.DateTime.Kind%2A>属性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>，此方法将选择正确的不明确时间，并且指示它是否是夏令时时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-761">If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-762">因为<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType>方法可返回`false`日期和时间不明确的 （即，日期和时间，可以表示标准时间还是夏令时中特定时区中），<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType>可以搭配方法<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>方法，以确定时间是否可能是夏令时时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-762">Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time.</span></span> <span data-ttu-id="a1cec-763">不明确时间是指可以是夏令时和标准时间，因为<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29>可以首先调用方法来确定日期和时间可能会是夏令时时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-763">Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time.</span></span> <span data-ttu-id="a1cec-764">如果该方法返回`false`，则<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>可以调用方法以确定是否<xref:System.DateTime>值是否为夏时制时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-764">If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time.</span></span> <span data-ttu-id="a1cec-765">下面的示例演示此方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-765">The following example illustrates this technique.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  
  
 <span data-ttu-id="a1cec-766">如果`dateTime`参数指定无效的时间，则方法调用将引发<xref:System.ArgumentException>如果的值`dateTime`参数的<xref:System.DateTime.Kind%2A>属性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>; 否则为该方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-766">If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>; otherwise, the method returns `false`.</span></span>  
  
 <span data-ttu-id="a1cec-767">调用<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>方法，以确定是否使用时区<xref:System.TimeZoneInfo.StandardName%2A>值或其<xref:System.TimeZoneInfo.DaylightName%2A>值时显示的时区名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-767">Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name.</span></span> <span data-ttu-id="a1cec-768">请参阅示例部分的说明。</span><span class="sxs-lookup"><span data-stu-id="a1cec-768">See the Example section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-769">下面的示例定义一个名为方法`DisplayDateWithTimeZoneName`，它使用<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>方法，以确定是否显示时区的标准时间名称或夏令时名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-769">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cec-770"><paramref name="dateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性的值为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="dateTime" /> 是无效时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-770">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a1cec-771">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-771">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a1cec-772">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏令制范围内。</span><span class="sxs-lookup"><span data-stu-id="a1cec-772">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a1cec-773">如果 <paramref name="dateTimeOffset" /> 参数为夏令制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-773"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-774">返回值<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>所表示的时区之间的关系影响<xref:System.TimeZoneInfo>对象和<xref:System.DateTimeOffset.Offset%2A>属性的`dateTimeOffset`参数。</span><span class="sxs-lookup"><span data-stu-id="a1cec-774">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter.</span></span> <span data-ttu-id="a1cec-775">如果`dateTimeOffset`不对应于当前时区的偏移量从协调世界时 (UTC)，该方法将转换的时间中当前时区的时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-775">If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone.</span></span> <span data-ttu-id="a1cec-776">然后，它确定是否该日期和时间夏时制节省时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-776">It then determines whether that date and time is a daylight saving time.</span></span>  
  
 <span data-ttu-id="a1cec-777">如果由表示时区<xref:System.TimeZoneInfo>对象不支持夏令时，此方法始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-777">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="a1cec-778">若要确定是否时区支持夏令时，检索的值及其<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-778">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalidTime">
      <MemberSignature Language="C#" Value="public bool IsInvalidTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInvalidTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInvalidTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsInvalidTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsInvalidTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a1cec-779">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-779">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a1cec-780">指示特定日期和时间是否无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-780">Indicates whether a particular date and time is invalid.</span></span></summary>
        <returns><span data-ttu-id="a1cec-781">如果 <paramref name="dateTime" /> 无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-781"><see langword="true" /> if <paramref name="dateTime" /> is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-782">无效的时间之内的无法映射为协调世界时 (UTC) 由于调整规则的应用程序在当前时区的时间范围。</span><span class="sxs-lookup"><span data-stu-id="a1cec-782">An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule.</span></span> <span data-ttu-id="a1cec-783">通常情况下，当时间继续移动夏时制时会出现无效时间。</span><span class="sxs-lookup"><span data-stu-id="a1cec-783">Typically, invalid times occur when the time moves ahead for daylight saving time.</span></span> <span data-ttu-id="a1cec-784">请参阅示例部分的说明。</span><span class="sxs-lookup"><span data-stu-id="a1cec-784">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="a1cec-785">值<xref:System.DateTime.Kind%2A>的属性`dateTime`参数会影响是否`dateTime`表示无效的时间，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a1cec-785">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.</span></span>  
  
|<span data-ttu-id="a1cec-786">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="a1cec-786">DateTime.Kind property</span></span>|<span data-ttu-id="a1cec-787">TimeZoneInfo 对象 （如果适用）</span><span class="sxs-lookup"><span data-stu-id="a1cec-787">TimeZoneInfo object (if applicable)</span></span>|<span data-ttu-id="a1cec-788">行为</span><span class="sxs-lookup"><span data-stu-id="a1cec-788">Behavior</span></span>|  
|----------------------------|-------------------------------------------|--------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a1cec-789">确定时间是否无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-789">Determines whether the time is invalid.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a1cec-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 或本地时间区域。</span><span class="sxs-lookup"><span data-stu-id="a1cec-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> or a non-local time zone.</span></span>|<span data-ttu-id="a1cec-791">将转换`dateTime`的时间<xref:System.TimeZoneInfo>对象，并返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-791">Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a1cec-792">不适用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-792">Not applicable.</span></span>|<span data-ttu-id="a1cec-793">假定`dateTime`的时间<xref:System.TimeZoneInfo>对象，并确定它是否无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-793">Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a1cec-794">不适用。</span><span class="sxs-lookup"><span data-stu-id="a1cec-794">Not applicable.</span></span>|<span data-ttu-id="a1cec-795">返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-795">Returns `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-796">在太平洋时区，夏时制开始在凌晨 2:00</span><span class="sxs-lookup"><span data-stu-id="a1cec-796">In the Pacific Time zone, daylight saving time begins at 2:00 A.M.</span></span> <span data-ttu-id="a1cec-797">2006 年 4 月 2日日。</span><span class="sxs-lookup"><span data-stu-id="a1cec-797">on April 2, 2006.</span></span> <span data-ttu-id="a1cec-798">下面的代码在一分钟时间间隔从凌晨 1:59 传递时间</span><span class="sxs-lookup"><span data-stu-id="a1cec-798">The following code passes the time at one-minute intervals from 1:59 A.M.</span></span> <span data-ttu-id="a1cec-799">2006 年 4 月 2日日，上午 3:01 到</span><span class="sxs-lookup"><span data-stu-id="a1cec-799">on April 2, 2006, to 3:01 A.M.</span></span> <span data-ttu-id="a1cec-800">2006 年 4 月 2 日，向<xref:System.TimeZoneInfo.IsInvalidTime%2A>方法的<xref:System.TimeZoneInfo>对象，表示太平洋时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-800">on April 2, 2006, to the <xref:System.TimeZoneInfo.IsInvalidTime%2A> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="a1cec-801">控制台输出指示从凌晨 2:00</span><span class="sxs-lookup"><span data-stu-id="a1cec-801">The console output indicates that all times from 2:00 A.M.</span></span> <span data-ttu-id="a1cec-802">2006 年 4 月 2日日至凌晨 2:59</span><span class="sxs-lookup"><span data-stu-id="a1cec-802">on April 2, 2006, to 2:59 A.M.</span></span> <span data-ttu-id="a1cec-803">2006 年 4 月 2 日均无效。</span><span class="sxs-lookup"><span data-stu-id="a1cec-803">on April 2, 2006, are invalid.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#9)]
 [!code-vb[System.TimeZone2.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Local { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Local" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Local" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Local As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Local { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Local : TimeZoneInfo" Usage="System.TimeZoneInfo.Local" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-804">获取表示本地时区的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-804">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the local time zone.</span></span></summary>
        <value><span data-ttu-id="a1cec-805">一个对象，表示本地时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-805">An object that represents the local time zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-806">本地时区是执行代码的计算机上的时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-806">The local time zone is the time zone on the computer where the code is executing.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a1cec-807">您应始终访问通过本地时区<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>属性，而不是无需分配本地时间时区分配给<xref:System.TimeZoneInfo>对象变量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-807">You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="a1cec-808">这可以防止<xref:System.TimeZoneInfo>调用而失效的对象变量<xref:System.TimeZoneInfo.ClearCachedData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-808">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-809">在 Windows 系统上<xref:System.TimeZoneInfo>返回的对象<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>属性会反映出的设置**自动调整夏令时时钟**控制面板中的复选框**日期和时间**应用程序。</span><span class="sxs-lookup"><span data-stu-id="a1cec-809">On Windows systems, the <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application.</span></span> <span data-ttu-id="a1cec-810">如果未选中该复选框，则本地时区的缓存的副本不包含夏令时信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-810">If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information.</span></span> <span data-ttu-id="a1cec-811">这表示：</span><span class="sxs-lookup"><span data-stu-id="a1cec-811">This means that:</span></span>  
  
-   <span data-ttu-id="a1cec-812">本地时区的<xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法返回一个数组，其长度为零。</span><span class="sxs-lookup"><span data-stu-id="a1cec-812">The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.</span></span>  
  
-   <span data-ttu-id="a1cec-813">本地时区的<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-813">The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.</span></span>  
  
-   <span data-ttu-id="a1cec-814">本地时区具有不明确或无效时间 (所有调用的<xref:System.TimeZoneInfo.IsAmbiguousTime%2A>或<xref:System.TimeZoneInfo.IsInvalidTime%2A>返回`false`)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-814">The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).</span></span>  
  
-   <span data-ttu-id="a1cec-815">对所有调用<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A>各个本地时间返回 false。</span><span class="sxs-lookup"><span data-stu-id="a1cec-815">All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.</span></span>  
  
 <span data-ttu-id="a1cec-816">这是不为 true，但是，如果使用检索到的本地时区的引用<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-816">This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-817"><xref:System.TimeZoneInfo.Local%2A>属性对应于<xref:System.TimeZone.CurrentTimeZone%2A>属性的<xref:System.TimeZone>类。</span><span class="sxs-lookup"><span data-stu-id="a1cec-817">The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-818">下面的示例检索<xref:System.TimeZoneInfo>对象，表示本地时区，并输出其显示名称、 标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-818">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/961fb70b-83f0-4dab-a042-cb5fcd817cf5"><span data-ttu-id="a1cec-819">如何：访问预定义的 UTC 和本地时区对象</span><span class="sxs-lookup"><span data-stu-id="a1cec-819">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZoneInfo.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-820">获取时区的标准时间的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-820">Gets the display name for the time zone's standard time.</span></span></summary>
        <value><span data-ttu-id="a1cec-821">时区的标准时间的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-821">The display name of the time zone's standard time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-822">根据随 Windows 操作系统一起安装的区域性进行本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-822">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a1cec-823"><xref:System.TimeZoneInfo.StandardName%2A>属性等于<xref:System.TimeZone.StandardName%2A>属性的<xref:System.TimeZone>类。</span><span class="sxs-lookup"><span data-stu-id="a1cec-823">The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
 <span data-ttu-id="a1cec-824">如果在操作系统语言为英语的值<xref:System.TimeZoneInfo.StandardName%2A>属性是通常情况下，但并不总是相同<xref:System.TimeZoneInfo.Id%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a1cec-824">If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-825">下面的示例定义一个名为方法`DisplayDateWithTimeZoneName`，它使用<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29>方法，以确定是否显示时区的标准时间名称或夏令时名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-825">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool SupportsDaylightSavingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDaylightSavingTime" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsDaylightSavingTime As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDaylightSavingTime { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDaylightSavingTime : bool" Usage="System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-826">获取一个值，该值指示时区是否具有任何夏时制规则。</span><span class="sxs-lookup"><span data-stu-id="a1cec-826">Gets a value indicating whether the time zone has any daylight saving time rules.</span></span></summary>
        <value><span data-ttu-id="a1cec-827">如果时区支持夏时制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-827"><see langword="true" /> if the time zone supports daylight saving time; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-828">值<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>属性返回的本地时区<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>属性反映控件面板设置**日期和时间**定义的应用程序的复选框是否系统自动针对夏令时进行调整。</span><span class="sxs-lookup"><span data-stu-id="a1cec-828">The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time.</span></span> <span data-ttu-id="a1cec-829">如果未选中，或如果时间区域不显示任何复选框，则此属性的值是`false`。</span><span class="sxs-lookup"><span data-stu-id="a1cec-829">If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-830">下面的示例检索所有本地系统上可用的时区的集合，并显示这些不支持夏令时名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-830">The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#4)]
 [!code-vb[System.TimeZone2.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a1cec-831">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-831">The object that initiated the callback.</span></span> <span data-ttu-id="a1cec-832">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="a1cec-832">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="a1cec-833">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="a1cec-833">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a1cec-834"><see cref="T:System.TimeZoneInfo" /> 对象包含无效或已损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="a1cec-834">The <see cref="T:System.TimeZoneInfo" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a1cec-835">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-835">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="a1cec-836">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="a1cec-836">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="a1cec-837">使用序列化当前的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的所有数据填充 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-837">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1cec-838"><paramref name="info" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1cec-838">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a1cec-839">直接调用方需要完全信任。</span><span class="sxs-lookup"><span data-stu-id="a1cec-839">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a1cec-840">不能由部分受信任的或透明的代码使用此成员。</span><span class="sxs-lookup"><span data-stu-id="a1cec-840">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToSerializedString">
      <MemberSignature Language="C#" Value="public string ToSerializedString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToSerializedString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToSerializedString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToSerializedString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToSerializedString();" />
      <MemberSignature Language="F#" Value="member this.ToSerializedString : unit -&gt; string" Usage="timeZoneInfo.ToSerializedString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-841">将当前的 <see cref="T:System.TimeZoneInfo" /> 对象转换为序列化字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-841">Converts the current <see cref="T:System.TimeZoneInfo" /> object to a serialized string.</span></span></summary>
        <returns><span data-ttu-id="a1cec-842">表示当前 <see cref="T:System.TimeZoneInfo" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-842">A string that represents the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-843">依赖于的 Windows 系统注册表中通常不定义的时区应用程序或[ICU 库](http://userguide.icu-project.org/datetime/timezone)在 Linux 和 macOScan 可以使用<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>方法必要时区化为<xref:System.TimeZoneInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-843">Applications that rely on time zones that are not typically defined in the registry of Windows systems or the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOScan can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="a1cec-844">然后，应用程序可以调用<xref:System.TimeZoneInfo.ToSerializedString%2A>方法，将时区对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="a1cec-844">The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.</span></span>  
  
 <span data-ttu-id="a1cec-845"><xref:System.TimeZoneInfo>对象也存储在其中应用程序中检索它时所需的位置。</span><span class="sxs-lookup"><span data-stu-id="a1cec-845">The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed.</span></span> <span data-ttu-id="a1cec-846">可能的位置包括：</span><span class="sxs-lookup"><span data-stu-id="a1cec-846">Possible locations include:</span></span>  
  
-   <span data-ttu-id="a1cec-847">在 Windows 系统注册表。</span><span class="sxs-lookup"><span data-stu-id="a1cec-847">The registry on Windows systems.</span></span>  
  
-   <span data-ttu-id="a1cec-848">应用程序资源文件。</span><span class="sxs-lookup"><span data-stu-id="a1cec-848">An application resource file.</span></span>  
  
-   <span data-ttu-id="a1cec-849">外部文件，例如文本文件。</span><span class="sxs-lookup"><span data-stu-id="a1cec-849">An external file, such as a text file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-850">下面的示例尝试检索南极从本地系统时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-850">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="a1cec-851">如果失败，该代码将尝试从应用程序目录中的文本文件中检索有关时区信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-851">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="a1cec-852">如果此尝试失败，代码将创建时区，并将其相关信息写入到文本文件。</span><span class="sxs-lookup"><span data-stu-id="a1cec-852">If this attempt fails, the code creates the time zone and writes information about it to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/3c96d83a-a057-4496-abb0-8f4b12712558"><span data-ttu-id="a1cec-853">如何：将时区保存到嵌入的资源</span><span class="sxs-lookup"><span data-stu-id="a1cec-853">How to: Save Time Zones to an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeZoneInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cec-854">返回当前 <see cref="T:System.TimeZoneInfo" /> 对象的显示名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-854">Returns the current <see cref="T:System.TimeZoneInfo" /> object's display name.</span></span></summary>
        <returns><span data-ttu-id="a1cec-855">当前 <see cref="P:System.TimeZoneInfo.DisplayName" /> 对象的 <see cref="T:System.TimeZoneInfo" /> 属性值。</span><span class="sxs-lookup"><span data-stu-id="a1cec-855">The value of the <see cref="P:System.TimeZoneInfo.DisplayName" /> property of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-856">当将集合分配包含<xref:System.TimeZoneInfo>如对象添加到列表控件<xref:System.Windows.Forms.ListBox>控件，该控件会自动调用<xref:System.TimeZoneInfo.ToString%2A>方法提取一个字符串，描述每个对象表示在列表中。</span><span class="sxs-lookup"><span data-stu-id="a1cec-856">When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list.</span></span> <span data-ttu-id="a1cec-857">结果是，不需要将对象的有意义说明存储为一个字符串，并且用户无需使用该字符串从集合中提取对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-857">As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection.</span></span> <span data-ttu-id="a1cec-858">请参阅[如何：枚举在计算机上存在的时区](~/docs/standard/datetime/enumerate-time-zones.md)以了解详细信息。</span><span class="sxs-lookup"><span data-stu-id="a1cec-858">See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utc">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Utc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Utc" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Utc" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Utc As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Utc { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Utc : TimeZoneInfo" Usage="System.TimeZoneInfo.Utc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cec-859">获取表示协调世界时 (UTC) 时区的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1cec-859">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the Coordinated Universal Time (UTC) zone.</span></span></summary>
        <value><span data-ttu-id="a1cec-860">一个对象，表示协调世界时 (UTC) 时区。</span><span class="sxs-lookup"><span data-stu-id="a1cec-860">An object that represents the Coordinated Universal Time (UTC) zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cec-861">这是一个内置的对象;此类信息<xref:System.TimeZoneInfo>从 Windows 系统上并从注册表检索不到对象[ICU 库](http://userguide.icu-project.org/datetime/timezone)Linux 和 macOS 上。</span><span class="sxs-lookup"><span data-stu-id="a1cec-861">This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a1cec-862">您应始终访问通过协调世界时 (UTC) 区域<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>属性，而无需分配到 UTC 时区<xref:System.TimeZoneInfo>对象变量。</span><span class="sxs-lookup"><span data-stu-id="a1cec-862">You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="a1cec-863">这可以防止<xref:System.TimeZoneInfo>调用而失效的对象变量<xref:System.TimeZoneInfo.ClearCachedData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a1cec-863">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="a1cec-864">协调世界时是以前称为格林威治标准时间 (GMT)。</span><span class="sxs-lookup"><span data-stu-id="a1cec-864">Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1cec-865">下面的示例检索<xref:System.TimeZoneInfo>对象，表示协调世界时 (UTC)，并输出其显示名称、 标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="a1cec-865">The following example retrieves a <xref:System.TimeZoneInfo> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#3)]
 [!code-vb[System.TimeZone2.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/961fb70b-83f0-4dab-a042-cb5fcd817cf5"><span data-ttu-id="a1cec-866">如何：访问预定义的 UTC 和本地时区对象</span><span class="sxs-lookup"><span data-stu-id="a1cec-866">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>