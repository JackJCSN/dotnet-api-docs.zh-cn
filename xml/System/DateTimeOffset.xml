<Type Name="DateTimeOffset" FullName="System.DateTimeOffset">
  <Metadata><Meta Name="ms.openlocfilehash" Value="036d33864dd6dbf94b2b4b39848522cd105f23f9" /><Meta Name="ms.sourcegitcommit" Value="81833381d2d0b5a8c55f71b43f00769fd38298af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/17/2019" /><Meta Name="ms.locfileid" Value="69572293" /></Metadata><TypeSignature Language="C#" Value="public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeOffset extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IEquatable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTimeOffset" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTimeOffset&#xA;Implements IComparable, IComparable(Of DateTimeOffset), IDeserializationCallback, IEquatable(Of DateTimeOffset), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTimeOffset = struct&#xA;    interface IFormattable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15062-101">表示一个时间点，通常以相对于协调世界时 (UTC) 的日期和时间来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-101">Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-102">结构包含一个<xref:System.DateTime>值和一个<xref:System.DateTimeOffset.Offset%2A>属性, 该属性定义当前<xref:System.DateTimeOffset>实例的日期和时间与协调世界时 (UTC) 之间的差异。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-102">The <xref:System.DateTimeOffset> structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current <xref:System.DateTimeOffset> instance's date and time and Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-103">由于它准确地定义了相对于 UTC 的日期和时间<xref:System.DateTimeOffset> , 因此结构不`Kind`包含成员, 正如<xref:System.DateTime>结构所做的那样。</span><span class="sxs-lookup"><span data-stu-id="15062-103">Because it exactly defines a date and time relative to UTC, the <xref:System.DateTimeOffset> structure does not include a `Kind` member, as the <xref:System.DateTime> structure does.</span></span> <span data-ttu-id="15062-104">它表示日期和时间, 其 UTC 范围为12:00:00 午夜, 0001 年1月1日午夜, 到 11:59:59 P.M, 年12月31日, 9999 公元</span><span class="sxs-lookup"><span data-stu-id="15062-104">It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="15062-105">(公历)。</span><span class="sxs-lookup"><span data-stu-id="15062-105">(C.E.).</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="15062-106"><xref:System.DateTimeOffset>值的时间部分以100毫微秒为单位进行度量, 其中, 特定日期为自公元0001年1月1日午夜12:00 午夜后的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-106">The time component of a <xref:System.DateTimeOffset> value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="15062-107">公元<xref:System.Globalization.GregorianCalendar>在日历中。</span><span class="sxs-lookup"><span data-stu-id="15062-107">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="15062-108"><xref:System.DateTimeOffset>值始终在显式或默认日历的上下文中表示。</span><span class="sxs-lookup"><span data-stu-id="15062-108">A <xref:System.DateTimeOffset> value is always expressed in the context of an explicit or default calendar.</span></span> <span data-ttu-id="15062-109">对于闰秒而言, 计时周期的总刻度不包括在内。</span><span class="sxs-lookup"><span data-stu-id="15062-109">Ticks that are attributable to leap seconds are not included in the total number of ticks.</span></span>  
  
 <span data-ttu-id="15062-110"><xref:System.DateTimeOffset>虽然值包含偏移量, 但它不是完整的时区感知数据结构。</span><span class="sxs-lookup"><span data-stu-id="15062-110">Although a <xref:System.DateTimeOffset> value includes an offset, it is not a fully time zone-aware data structure.</span></span> <span data-ttu-id="15062-111">尽管与 UTC 的偏移量是时区的一个特征, 但它不能明确标识时区。</span><span class="sxs-lookup"><span data-stu-id="15062-111">While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone.</span></span> <span data-ttu-id="15062-112">不仅有多个时区与 UTC 有相同的偏移, 而且单个时区的偏移量会随着夏令时的变化而变化。</span><span class="sxs-lookup"><span data-stu-id="15062-112">Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time.</span></span> <span data-ttu-id="15062-113">这意味着, 一旦<xref:System.DateTimeOffset>值与时区解除关联, 就不能再明确地链接回其原始时区。</span><span class="sxs-lookup"><span data-stu-id="15062-113">This means that, as soon as a <xref:System.DateTimeOffset> value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.</span></span>  
  
 <span data-ttu-id="15062-114">由于<xref:System.DateTimeOffset>是一个结构<xref:System.DateTimeOffset> , 已声明但未初始化的对象包含其每个成员字段的默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-114">Because <xref:System.DateTimeOffset> is a structure, a <xref:System.DateTimeOffset> object that has been declared but not otherwise initialized contains the default values for each of its member fields.</span></span> <span data-ttu-id="15062-115">也就是说, 其<xref:System.DateTimeOffset.DateTime%2A>属性设置为<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> , 其<xref:System.DateTimeOffset.Offset%2A>属性设置为<xref:System.TimeSpan.Zero?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-115">This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="15062-116">可以通过调用其构造<xref:System.DateTimeOffset>函数的任何重载来创建一个新值, 这与<xref:System.DateTime>结构的重载构造函数类似。</span><span class="sxs-lookup"><span data-stu-id="15062-116">You can create a new <xref:System.DateTimeOffset> value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="15062-117">你还可以通过为<xref:System.DateTimeOffset> <xref:System.DateTime>其分配值来创建新的值。</span><span class="sxs-lookup"><span data-stu-id="15062-117">You can also create a new <xref:System.DateTimeOffset> value by assigning it a <xref:System.DateTime> value.</span></span> <span data-ttu-id="15062-118">这是一个隐式转换;它不需要强制转换运算符 (在中C#) 或对转换方法的调用 (在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="15062-118">This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic).</span></span> <span data-ttu-id="15062-119">还可以通过调用一些<xref:System.DateTimeOffset>静态字符串分析方法 (包括<xref:System.DateTimeOffset.Parse%2A>、 <xref:System.DateTimeOffset.ParseExact%2A> <xref:System.DateTimeOffset.TryParse%2A>、和<xref:System.DateTimeOffset.TryParseExact%2A>), 从日期和时间的字符串表示形式初始化值。</span><span class="sxs-lookup"><span data-stu-id="15062-119">You can also initialize a <xref:System.DateTimeOffset> value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.</span></span>  
  
 <span data-ttu-id="15062-120"><xref:System.DateTimeOffset>结构的成员在以下方面提供功能:</span><span class="sxs-lookup"><span data-stu-id="15062-120">The members of the <xref:System.DateTimeOffset> structure provide functionality in the following areas:</span></span>  
  
-   <span data-ttu-id="15062-121">日期和时间算术。</span><span class="sxs-lookup"><span data-stu-id="15062-121">Date and time arithmetic.</span></span>  
  
     <span data-ttu-id="15062-122">可以从特定<xref:System.DateTimeOffset>值中添加或减少日期或时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-122">You can add or subtract either dates or time intervals from a particular <xref:System.DateTimeOffset> value.</span></span> <span data-ttu-id="15062-123">具有值的<xref:System.DateTimeOffset>算术运算与<xref:System.DateTime>值相同, 并调整返回结果时的时间偏移差异。</span><span class="sxs-lookup"><span data-stu-id="15062-123">Arithmetic operations with <xref:System.DateTimeOffset> values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result.</span></span> <span data-ttu-id="15062-124">例如, 下面的代码使用<xref:System.DateTime>变量从当前 UTC 时间减去当前本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-124">For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time.</span></span> <span data-ttu-id="15062-125">然后, 该代码<xref:System.DateTimeOffset>使用变量来执行相同的操作。</span><span class="sxs-lookup"><span data-stu-id="15062-125">The code then uses <xref:System.DateTimeOffset> variables to perform the same operation.</span></span> <span data-ttu-id="15062-126">与<xref:System.DateTime>值的减法返回与 UTC 的本地时区差异, 而<xref:System.DateTimeOffset>值的减法返回<xref:System.TimeSpan.Zero?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-126">The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with <xref:System.DateTimeOffset> values returns <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.</span></span>  
  
     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]
     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  
  
-   <span data-ttu-id="15062-127">类型转换操作。</span><span class="sxs-lookup"><span data-stu-id="15062-127">Type conversion operations.</span></span>  
  
     <span data-ttu-id="15062-128">您可以将<xref:System.DateTimeOffset>值转换<xref:System.DateTimeOffset.DateTime%2A>为值, 反之亦然。</span><span class="sxs-lookup"><span data-stu-id="15062-128">You can convert <xref:System.DateTimeOffset> values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa.</span></span>  
  
-   <span data-ttu-id="15062-129">时间操作和提取操作。</span><span class="sxs-lookup"><span data-stu-id="15062-129">Time manipulation and extraction operations.</span></span>  
  
     <span data-ttu-id="15062-130">可以提取<xref:System.DateTimeOffset>值的日期或时间。</span><span class="sxs-lookup"><span data-stu-id="15062-130">You can extract either the date or the time of a <xref:System.DateTimeOffset> value.</span></span> <span data-ttu-id="15062-131">您还可以检索特定<xref:System.DateTimeOffset>组件的值, 例如其年份或月份。</span><span class="sxs-lookup"><span data-stu-id="15062-131">You can also retrieve the value of a particular <xref:System.DateTimeOffset> component, such as its year or its month.</span></span>  

   > [!NOTE]
   >  <span data-ttu-id="15062-132">如果使用的计时周期值要转换为其他时间间隔 (如分钟或秒), 则应使用<xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>或<xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType>常量来执行转换。</span><span class="sxs-lookup"><span data-stu-id="15062-132">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="15062-133">例如, 若要将指定的刻度数表示的秒数添加到<xref:System.DateTimeOffset.Second%2A> <xref:System.DateTimeOffset>值的分量中, 则可以使用表达式`dateValue.Second + nTicks/Timespan.TicksPerSecond`。</span><span class="sxs-lookup"><span data-stu-id="15062-133">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a <xref:System.DateTimeOffset> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  
  

-   <span data-ttu-id="15062-134">日期和时间转换。</span><span class="sxs-lookup"><span data-stu-id="15062-134">Date and time conversion.</span></span>  
  
     <span data-ttu-id="15062-135">可以将任何<xref:System.DateTimeOffset>值转换<xref:System.DateTimeOffset>为另一个值, 该值表示另一个时区中的同一时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-135">You can convert any <xref:System.DateTimeOffset> value to another <xref:System.DateTimeOffset> value that represents the same point in time in another time zone.</span></span> <span data-ttu-id="15062-136">但是, 时区的调整规则仅<xref:System.DateTimeOffset.ToLocalTime%2A>适用于方法, 该方法<xref:System.DateTimeOffset>将值转换为本地系统区域中的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-136">However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a <xref:System.DateTimeOffset> value to the date and time in the local system zone.</span></span>  
  
-   <span data-ttu-id="15062-137">日期和时间的比较。</span><span class="sxs-lookup"><span data-stu-id="15062-137">Date and time comparison.</span></span>  
  
     <span data-ttu-id="15062-138">您可以确定任何特定<xref:System.DateTimeOffset>值是早于、等于还是晚于另一个<xref:System.DateTimeOffset>值。</span><span class="sxs-lookup"><span data-stu-id="15062-138">You can determine whether any particular <xref:System.DateTimeOffset> value is earlier than, the same as, or later than another <xref:System.DateTimeOffset> value.</span></span> <span data-ttu-id="15062-139">在执行比较之前, 所有值都将转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-139">Before the comparison is performed, all values are converted to UTC.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md"><span data-ttu-id="15062-140">在 DateTime、DateTimeOffset、TimeSpan 和 TimeZoneInfo 之间进行选择</span><span class="sxs-lookup"><span data-stu-id="15062-140">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="15062-141">示例：.NET Framework 4 格式设置实用工具</span><span class="sxs-lookup"><span data-stu-id="15062-141">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-142">初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-142">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime -&gt; DateTimeOffset" Usage="new System.DateTimeOffset dateTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="15062-143">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-143">A date and time.</span></span></param>
        <summary><span data-ttu-id="15062-144">使用指定的 <see cref="T:System.DateTime" /> 值初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-144">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-145">此构造函数的行为取决于<xref:System.DateTime.Kind%2A?displayProperty=nameWithType> `dateTime`参数的属性值:</span><span class="sxs-lookup"><span data-stu-id="15062-145">This constructor's behavior depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` parameter:</span></span>  
  
-   <span data-ttu-id="15062-146">如果<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>的<xref:System.TimeSpan.Zero>值<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>为, 则新<xref:System.DateTimeOffset.DateTime%2A> 实例的`dateTime`属性将设置为, 并将属性设置为等于。<xref:System.DateTimeOffset.Offset%2A></span><span class="sxs-lookup"><span data-stu-id="15062-146">If the value of <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to <xref:System.TimeSpan.Zero>.</span></span>  
  
-   <span data-ttu-id="15062-147">如果的<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>值为`dateTime` <xref:System.DateTimeOffset.DateTime%2A> <xref:System.DateTimeOffset.Offset%2A>或<xref:System.DateTimeKind.Local?displayProperty=nameWithType> <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, 则新实例的属性将设置为, 并将属性设置为与本地系统的当前时区的偏移量相同。</span><span class="sxs-lookup"><span data-stu-id="15062-147">If the value of <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-148">下面的示例演示<xref:System.DateTime.Kind%2A?displayProperty=nameWithType> `dateTime`参数的属性值如何影响此构造函数返回的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="15062-148">The following example illustrates how the value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` parameter affects the date and time value that is returned by this constructor.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]
 [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-149">通过应用偏移量得出的协调世界时 (UTC) 日期和时间早于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-149">The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-150">或</span><span class="sxs-lookup"><span data-stu-id="15062-150">-or-</span></span> 
<span data-ttu-id="15062-151">通过应用偏移量得出的 UTC 日期和时间晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-151">The UTC date and time that results from applying the offset is later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-152">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-152">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (dateTime, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="15062-153">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-153">A date and time.</span></span></param>
        <param name="offset"><span data-ttu-id="15062-154">与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-154">The time's offset from Coordinated Universal Time (UTC).</span></span></param>
        <summary><span data-ttu-id="15062-155">使用指定的 <see cref="T:System.DateTime" /> 值和偏移量初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-155">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified <see cref="T:System.DateTime" /> value and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-156">此构造函数的行为取决于<xref:System.DateTime.Kind%2A> `dateTime`参数的属性值:</span><span class="sxs-lookup"><span data-stu-id="15062-156">This constructor's behavior depends in part on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter:</span></span>  
  
-   <span data-ttu-id="15062-157">如果的<xref:System.DateTime.Kind%2A>值为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType> `offset` , 则参数的值必须为 0, 否则<xref:System.ArgumentException>将引发。</span><span class="sxs-lookup"><span data-stu-id="15062-157">If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, the value of the `offset` parameter must be 0 or an <xref:System.ArgumentException> is thrown.</span></span>  
  
-   <span data-ttu-id="15062-158">如果的<xref:System.DateTime.Kind%2A>值为<xref:System.DateTimeKind.Local?displayProperty=nameWithType> `offset` , 则参数的值必须等于该特定日期的本地时区与协调世界时 ( <xref:System.ArgumentException> UTC) 的偏移量, 否则将引发。</span><span class="sxs-lookup"><span data-stu-id="15062-158">If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, the value of the `offset` parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref:System.ArgumentException> is thrown.</span></span>  
  
-   <span data-ttu-id="15062-159">如果的<xref:System.DateTime.Kind%2A>值为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, 则该`offset`参数可以具有任何有效的值。</span><span class="sxs-lookup"><span data-stu-id="15062-159">If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, the `offset` parameter can have any valid value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-160">下面的示例演示如何使用日期和<xref:System.DateTimeOffset>时间以及本地时区的偏移量 (在该时区事先未知时) 初始化对象。</span><span class="sxs-lookup"><span data-stu-id="15062-160">The following example shows how to initialize a <xref:System.DateTimeOffset> object with a date and time and the offset of the local time zone when that time zone is not known in advance.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]
 [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-161"><paramref name="dateTime.Kind" /> 等于 <see cref="F:System.DateTimeKind.Utc" /> 且 <paramref name="offset" /> 不等于零。</span><span class="sxs-lookup"><span data-stu-id="15062-161"><paramref name="dateTime.Kind" /> equals <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="offset" /> does not equal zero.</span></span>  
  
<span data-ttu-id="15062-162">或</span><span class="sxs-lookup"><span data-stu-id="15062-162">-or-</span></span> 
 <span data-ttu-id="15062-163"><paramref name="dateTime.Kind" /> 等于 <see cref="F:System.DateTimeKind.Local" /> 且 <paramref name="offset" /> 不等于系统的本地时区偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-163"><paramref name="dateTime.Kind" /> equals <see cref="F:System.DateTimeKind.Local" /> and <paramref name="offset" /> does not equal the offset of the system's local time zone.</span></span>  
  
<span data-ttu-id="15062-164">或</span><span class="sxs-lookup"><span data-stu-id="15062-164">-or-</span></span> 
 <span data-ttu-id="15062-165">未使用整分钟数指定<paramref name="offset" /> 。</span><span class="sxs-lookup"><span data-stu-id="15062-165"><paramref name="offset" /> is not specified in whole minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-166"><paramref name="offset" /> 小于 -14 小时或大于 14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-166"><paramref name="offset" /> is less than -14 hours or greater than 14 hours.</span></span>  
  
<span data-ttu-id="15062-167">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-167">-or-</span></span> 
 <span data-ttu-id="15062-168"><see cref="P:System.DateTimeOffset.UtcDateTime" /> 小于 <see cref="F:System.DateTimeOffset.MinValue" /> 或大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-168"><see cref="P:System.DateTimeOffset.UtcDateTime" /> is less than <see cref="F:System.DateTimeOffset.MinValue" /> or greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-169">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-169">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (long ticks, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(long ticks, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int64 * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (ticks, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="15062-170">一个日期和时间，以 0001 年 1 月 1 日午夜 12:00:00 以来所经历的以 100 纳秒为间隔的间隔数来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-170">A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.</span></span></param>
        <param name="offset"><span data-ttu-id="15062-171">与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-171">The time's offset from Coordinated Universal Time (UTC).</span></span></param>
        <summary><span data-ttu-id="15062-172">使用指定的计时周期数和偏移量初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-172">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified number of ticks and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-173">通常, 尝试调用<xref:System.DateTimeOffset.%23ctor%2A>构造函数来实例化一个<xref:System.DateTimeOffset>具有本地时间的值, 而不是<xref:System.ArgumentException>本地时区的偏移量引发。</span><span class="sxs-lookup"><span data-stu-id="15062-173">Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="15062-174">可以使用<xref:System.DateTimeOffset>构造函数的此重载解决此限制。</span><span class="sxs-lookup"><span data-stu-id="15062-174">You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation.</span></span> <span data-ttu-id="15062-175">下面的示例使用本地时间的计时周期数来实例化一个<xref:System.DateTimeOffset>值, 其偏移量不一定表示本地时间:</span><span class="sxs-lookup"><span data-stu-id="15062-175">The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]
 [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="15062-176">下面的示例通过使用<xref:System.DateTimeOffset>偏移量为-5 的任意日期 (在本例中为 1:32 2007 年7月16日) 的任意日期计时周期数来初始化对象。</span><span class="sxs-lookup"><span data-stu-id="15062-176">The following example initializes a <xref:System.DateTimeOffset> object by using the number of ticks in an arbitrary date (in this case, July 16, 2007, at 1:32 PM) with an offset of -5.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]
 [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-177">未使用整分钟数指定 <paramref name="offset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-177"><paramref name="offset" /> is not specified in whole minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-178"><see cref="P:System.DateTimeOffset.UtcDateTime" /> 属性早于 <see cref="F:System.DateTimeOffset.MinValue" /> 或晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-178">The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span>  
  
<span data-ttu-id="15062-179">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-179">-or-</span></span> 
 <span data-ttu-id="15062-180"><paramref name="ticks" /> 小于 <see langword="DateTimeOffset.MinValue.Ticks" /> 或大于 <see langword="DateTimeOffset.MaxValue.Ticks" />。</span><span class="sxs-lookup"><span data-stu-id="15062-180"><paramref name="ticks" /> is less than <see langword="DateTimeOffset.MinValue.Ticks" /> or greater than <see langword="DateTimeOffset.MaxValue.Ticks" />.</span></span>  
  
<span data-ttu-id="15062-181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-181">-or-</span></span> 
 <span data-ttu-id="15062-182"><paramref name="Offset" /> 小于 -14 小时或大于 14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-182"><paramref name="Offset" /> s less than -14 hours or greater than 14 hours.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-183">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-183">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="15062-184">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="15062-184">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="15062-185">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="15062-185">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="15062-186">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="15062-186">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="15062-187">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="15062-187">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="15062-188">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-188">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="15062-189">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-189">The seconds (0 through 59).</span></span></param>
        <param name="offset"><span data-ttu-id="15062-190">与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-190">The time's offset from Coordinated Universal Time (UTC).</span></span></param>
        <summary><span data-ttu-id="15062-191">使用指定的年、月、日、小时、分钟、秒和偏移量初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-191">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-192">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="15062-192">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="15062-193">若要使用<xref:System.DateTimeOffset>另一个日历中的年、月和日来实例化某个值, <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="15062-193">To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-194">下面的示例<xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType>使用构造<xref:System.DateTimeOffset>函数重载来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="15062-194">The following example instantiates a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor overload.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]
 [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-195"><paramref name="offset" /> 不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="15062-195"><paramref name="offset" /> does not represent whole minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-196"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="15062-196"><paramref name="year" /> is less than one or greater than 9999.</span></span>  
  
<span data-ttu-id="15062-197">或</span><span class="sxs-lookup"><span data-stu-id="15062-197">-or-</span></span> 
 <span data-ttu-id="15062-198"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="15062-198"><paramref name="month" /> is less than one or greater than 12.</span></span>  
  
<span data-ttu-id="15062-199">或</span><span class="sxs-lookup"><span data-stu-id="15062-199">-or-</span></span> 
 <span data-ttu-id="15062-200"><paramref name="day" /> 小于 1 或大于 <paramref name="month" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="15062-200"><paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="15062-201">或</span><span class="sxs-lookup"><span data-stu-id="15062-201">-or-</span></span> 
 <span data-ttu-id="15062-202"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="15062-202"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="15062-203">或</span><span class="sxs-lookup"><span data-stu-id="15062-203">-or-</span></span> 
 <span data-ttu-id="15062-204"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-204"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-205">或</span><span class="sxs-lookup"><span data-stu-id="15062-205">-or-</span></span> 
 <span data-ttu-id="15062-206"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-206"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-207">或</span><span class="sxs-lookup"><span data-stu-id="15062-207">-or-</span></span> 
 <span data-ttu-id="15062-208"><paramref name="offset" /> 小于 -14 小时或大于 14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-208"><paramref name="offset" /> is less than -14 hours or greater than 14 hours.</span></span>  
  
<span data-ttu-id="15062-209">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-209">-or-</span></span> 
<span data-ttu-id="15062-210"><see cref="P:System.DateTimeOffset.UtcDateTime" /> 属性早于 <see cref="F:System.DateTimeOffset.MinValue" /> 或晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-210">The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-211">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-211">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="15062-212">年（1 到 9999）。</span><span class="sxs-lookup"><span data-stu-id="15062-212">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="15062-213">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="15062-213">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="15062-214">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="15062-214">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="15062-215">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="15062-215">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="15062-216">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-216">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="15062-217">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-217">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="15062-218">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="15062-218">The milliseconds (0 through 999).</span></span></param>
        <param name="offset"><span data-ttu-id="15062-219">与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-219">The time's offset from Coordinated Universal Time (UTC).</span></span></param>
        <summary><span data-ttu-id="15062-220">使用指定的年、月、日、小时、分钟、秒、毫秒和偏移量初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-220">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-221">此构造函数`year`将`month`、和`day`解释为公历年、月和日。</span><span class="sxs-lookup"><span data-stu-id="15062-221">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="15062-222">若要使用<xref:System.DateTimeOffset>另一个日历中的年、月和日来实例化某个值, <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29>请调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="15062-222">To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-223">下面的示例<xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType>使用构造<xref:System.DateTimeOffset>函数重载来实例化对象。</span><span class="sxs-lookup"><span data-stu-id="15062-223">The following example instantiates a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> constructor overload.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]
 [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-224"><paramref name="offset" /> 不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="15062-224"><paramref name="offset" /> does not represent whole minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-225"><paramref name="year" /> 小于 1 或大于 9999。</span><span class="sxs-lookup"><span data-stu-id="15062-225"><paramref name="year" /> is less than one or greater than 9999.</span></span>  
  
<span data-ttu-id="15062-226">或</span><span class="sxs-lookup"><span data-stu-id="15062-226">-or-</span></span> 
 <span data-ttu-id="15062-227"><paramref name="month" /> 小于 1 或大于 12。</span><span class="sxs-lookup"><span data-stu-id="15062-227"><paramref name="month" /> is less than one or greater than 12.</span></span>  
  
<span data-ttu-id="15062-228">或</span><span class="sxs-lookup"><span data-stu-id="15062-228">-or-</span></span> 
 <span data-ttu-id="15062-229"><paramref name="day" /> 小于 1 或大于 <paramref name="month" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="15062-229"><paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="15062-230">或</span><span class="sxs-lookup"><span data-stu-id="15062-230">-or-</span></span> 
 <span data-ttu-id="15062-231"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="15062-231"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="15062-232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-232">-or-</span></span> 
 <span data-ttu-id="15062-233"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-233"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-234">或</span><span class="sxs-lookup"><span data-stu-id="15062-234">-or-</span></span> 
 <span data-ttu-id="15062-235"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-235"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-236">或</span><span class="sxs-lookup"><span data-stu-id="15062-236">-or-</span></span> 
 <span data-ttu-id="15062-237"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="15062-237"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span>  
  
<span data-ttu-id="15062-238">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-238">-or-</span></span> 
 <span data-ttu-id="15062-239"><paramref name="offset" /> 小于 -14 或大于 14。</span><span class="sxs-lookup"><span data-stu-id="15062-239"><paramref name="offset" /> is less than -14 or greater than 14.</span></span>  
  
<span data-ttu-id="15062-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-240">-or-</span></span> 
<span data-ttu-id="15062-241"><see cref="P:System.DateTimeOffset.UtcDateTime" /> 属性早于 <see cref="F:System.DateTimeOffset.MinValue" /> 或晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-241">The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-242">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-242">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * System.Globalization.Calendar * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, calendar, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.TimeSpan" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="15062-243">年。</span><span class="sxs-lookup"><span data-stu-id="15062-243">The year.</span></span></param>
        <param name="month"><span data-ttu-id="15062-244">月（1 到 12）。</span><span class="sxs-lookup"><span data-stu-id="15062-244">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="15062-245">日（1 到 <paramref name="month" /> 中的天数）。</span><span class="sxs-lookup"><span data-stu-id="15062-245">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="15062-246">小时（0 到 23）。</span><span class="sxs-lookup"><span data-stu-id="15062-246">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="15062-247">分（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-247">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="15062-248">秒（0 到 59）。</span><span class="sxs-lookup"><span data-stu-id="15062-248">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="15062-249">毫秒（0 到 999）。</span><span class="sxs-lookup"><span data-stu-id="15062-249">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="15062-250">用于解释 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的日历。</span><span class="sxs-lookup"><span data-stu-id="15062-250">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <param name="offset"><span data-ttu-id="15062-251">与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-251">The time's offset from Coordinated Universal Time (UTC).</span></span></param>
        <summary><span data-ttu-id="15062-252">用指定日历的指定年、月、日、小时、分钟、秒、毫秒和偏移量初始化 <see cref="T:System.DateTimeOffset" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="15062-252">Initializes a new instance of the <see cref="T:System.DateTimeOffset" /> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-253">`year` 、`month`、 、`hour`、 、和参数`millisecond`均反映在参数所指定的日历中表示的值。`calendar` `second` `minute` `day`</span><span class="sxs-lookup"><span data-stu-id="15062-253">The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter.</span></span> <span data-ttu-id="15062-254">如果这些值构成无法使用此日历表示的日期和时间, 则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-254">An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]   

## Examples  
 <span data-ttu-id="15062-255">下面的示例使用<xref:System.Globalization.HebrewCalendar>类<xref:System.Globalization.HijriCalendar>和类的实例来实例化某个<xref:System.DateTimeOffset>值。</span><span class="sxs-lookup"><span data-stu-id="15062-255">The following example uses instances of both the <xref:System.Globalization.HebrewCalendar> class and the <xref:System.Globalization.HijriCalendar> class to instantiate a <xref:System.DateTimeOffset> value.</span></span> <span data-ttu-id="15062-256">然后, 使用相应的日历和公历向控制台显示该日期。</span><span class="sxs-lookup"><span data-stu-id="15062-256">That date is then displayed to the console using the respective calendars and the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]
 [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-257"><paramref name="offset" /> 不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="15062-257"><paramref name="offset" /> does not represent whole minutes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-258"><paramref name="calendar" /> 不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-258"><paramref name="calendar" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-259"><paramref name="year" /> 小于 <paramref name="calendar" /> 参数的 <see langword="MinSupportedDateTime.Year" /> 或大于 <see langword="MaxSupportedDateTime.Year" />。</span><span class="sxs-lookup"><span data-stu-id="15062-259"><paramref name="year" /> is less than the <paramref name="calendar" /> parameter's <see langword="MinSupportedDateTime.Year" /> or greater than <see langword="MaxSupportedDateTime.Year" />.</span></span>  
  
<span data-ttu-id="15062-260">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-260">-or-</span></span> 
 <span data-ttu-id="15062-261"><paramref name="month" /> 在 <paramref name="calendar" /> 中小于或大于 <paramref name="year" /> 中的月数。</span><span class="sxs-lookup"><span data-stu-id="15062-261"><paramref name="month" /> is either less than or greater than the number of months in <paramref name="year" /> in the <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="15062-262">或</span><span class="sxs-lookup"><span data-stu-id="15062-262">-or-</span></span> 
 <span data-ttu-id="15062-263"><paramref name="day" /> 小于 1 或大于 <paramref name="month" /> 中的天数。</span><span class="sxs-lookup"><span data-stu-id="15062-263"><paramref name="day" /> is less than one or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="15062-264">或</span><span class="sxs-lookup"><span data-stu-id="15062-264">-or-</span></span> 
 <span data-ttu-id="15062-265"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="15062-265"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="15062-266">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-266">-or-</span></span> 
 <span data-ttu-id="15062-267"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-267"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-268">或</span><span class="sxs-lookup"><span data-stu-id="15062-268">-or-</span></span> 
 <span data-ttu-id="15062-269"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="15062-269"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="15062-270">或</span><span class="sxs-lookup"><span data-stu-id="15062-270">-or-</span></span> 
 <span data-ttu-id="15062-271"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="15062-271"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span>  
  
<span data-ttu-id="15062-272">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-272">-or-</span></span> 
 <span data-ttu-id="15062-273"><paramref name="offset" /> 小于 -14 小时或大于 14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-273"><paramref name="offset" /> is less than -14 hours or greater than 14 hours.</span></span>  
  
<span data-ttu-id="15062-274">或</span><span class="sxs-lookup"><span data-stu-id="15062-274">-or-</span></span> 
<span data-ttu-id="15062-275"><paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 参数不能表示为日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="15062-275">The <paramref name="year" />, <paramref name="month" />, and <paramref name="day" /> parameters cannot be represented as a date and time value.</span></span>  
  
<span data-ttu-id="15062-276">或</span><span class="sxs-lookup"><span data-stu-id="15062-276">-or-</span></span> 
<span data-ttu-id="15062-277"><see cref="P:System.DateTimeOffset.UtcDateTime" /> 属性早于 <see cref="F:System.DateTimeOffset.MinValue" /> 或晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-277">The <see cref="P:System.DateTimeOffset.UtcDateTime" /> property is earlier than <see cref="F:System.DateTimeOffset.MinValue" /> or later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md"><span data-ttu-id="15062-278">实例化 DateTimeOffset 对象</span><span class="sxs-lookup"><span data-stu-id="15062-278">Instantiating a DateTimeOffset Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTimeOffset Add (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Add(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Add(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Add timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan"><span data-ttu-id="15062-279">一个 <see cref="T:System.TimeSpan" /> 对象，表示正时间间隔或负时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-279">A <see cref="T:System.TimeSpan" /> object that represents a positive or a negative time interval.</span></span></param>
        <summary><span data-ttu-id="15062-280">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它向此实例的值添加指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-280">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified time interval to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-281">一个对象，其值为当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="timeSpan" /> 所表示的时间间隔之和。</span><span class="sxs-lookup"><span data-stu-id="15062-281">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the time interval represented by <paramref name="timeSpan" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-282">可以在单个操作<xref:System.DateTimeOffset.Add%2A>中使用方法添加多种时间间隔 (天、小时、分钟、秒或毫秒)。</span><span class="sxs-lookup"><span data-stu-id="15062-282">You can use the <xref:System.DateTimeOffset.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="15062-283">此方法的行为与加法运算符相同。</span><span class="sxs-lookup"><span data-stu-id="15062-283">This method's behavior is identical to the addition operator.</span></span> <span data-ttu-id="15062-284">结构还支持每个时间间隔的专用加法<xref:System.DateTimeOffset.AddDays%2A>方法<xref:System.DateTimeOffset.AddHours%2A>(如<xref:System.DateTimeOffset.AddMinutes%2A>、和)。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-284">The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-285">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-285">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-286">它不会通过将添加`timeSpan`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-286">It does not modify the value of the current object by adding `timeSpan` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-287">方法不会影响当前<xref:System.DateTimeOffset>对象的<xref:System.DateTimeOffset.Offset%2A>属性的值。 <xref:System.DateTimeOffset.Add%2A></span><span class="sxs-lookup"><span data-stu-id="15062-287">The <xref:System.DateTimeOffset.Add%2A> method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-288">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.Add%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-288">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Add%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 <span data-ttu-id="15062-289">如果参数为`null`, 则此方法返回未更改的原始<xref:System.DateTimeOffset>对象的值。 `timeSpan`</span><span class="sxs-lookup"><span data-stu-id="15062-289">If the `timeSpan` parameter is `null`, this method returns the value of the original <xref:System.DateTimeOffset> object unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-290">下面的示例创建一个<xref:System.TimeSpan>对象的数组, 这些对象表示目标间的航班时间。</span><span class="sxs-lookup"><span data-stu-id="15062-290">The following example creates an array of <xref:System.TimeSpan> objects that represent the flight times between destinations.</span></span> <span data-ttu-id="15062-291">然后<xref:System.DateTimeOffset.Add%2A> , 方法将这些时间添加<xref:System.DateTimeOffset>到表示航班初始起飞时间的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-291">The <xref:System.DateTimeOffset.Add%2A> method then adds these times to a <xref:System.DateTimeOffset> object that represents a flight's initial takeoff time.</span></span> <span data-ttu-id="15062-292">结果反映每个目标的计划的到达时间。</span><span class="sxs-lookup"><span data-stu-id="15062-292">The result reflects the scheduled arrival time at each destination.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]
 [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-293">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-293">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-294">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-294">-or-</span></span> 
<span data-ttu-id="15062-295">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-295">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-296">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-296">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddDays (double days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddDays(float64 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (days As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddDays(double days);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddDays days" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="days"><span data-ttu-id="15062-297">由整数和小数部分组成的天数。</span><span class="sxs-lookup"><span data-stu-id="15062-297">A number of whole and fractional days.</span></span> <span data-ttu-id="15062-298">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-298">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-299">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将由整数和小数部分组成的指定天数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-299">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of whole and fractional days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-300">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="days" /> 所表示的天数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-300">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of days represented by <paramref name="days" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-301">`days`参数的小数部分是一天中的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-301">The fractional part of the `days` parameter is the fractional part of a day.</span></span> <span data-ttu-id="15062-302">例如, 4.5 相当于4天, 12 小时, 0 分钟, 0 毫秒, 0 毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-302">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds.</span></span> <span data-ttu-id="15062-303">`days`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-303">The `days` parameter is rounded to the nearest millisecond.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-304">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-304">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-305">它不会通过将添加`days`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-305">It does not modify the value of the current object by adding `days` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-306">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddDays%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-306">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddDays%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 <span data-ttu-id="15062-307">将少于一天的时间间隔转换为分数可能会损失精度。</span><span class="sxs-lookup"><span data-stu-id="15062-307">Converting time intervals of less than a day to a fraction can involve a loss of precision.</span></span> <span data-ttu-id="15062-308">如果这有问题, 你可以使用<xref:System.DateTimeOffset.Add%2A>方法, 该方法使你能够在单个方法调用中指定多个时间间隔, 并且无需将时间间隔转换为一天中的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-308">If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-309">下面的<xref:System.DateTimeOffset.AddDays%2A>示例使用方法列出了在2008年3月的星期一 (工作周开始时间) 开始的日期。</span><span class="sxs-lookup"><span data-stu-id="15062-309">The following example uses the <xref:System.DateTimeOffset.AddDays%2A> method to list the dates that fall on Monday, the start of the work week, in March 2008.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]
 [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-310">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-310">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-311">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-311">-or-</span></span> 
<span data-ttu-id="15062-312">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-312">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddHours (double hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddHours(float64 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (hours As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddHours(double hours);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddHours hours" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hours" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="hours"><span data-ttu-id="15062-313">由整数和小数部分组成的小时数。</span><span class="sxs-lookup"><span data-stu-id="15062-313">A number of whole and fractional hours.</span></span> <span data-ttu-id="15062-314">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-314">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-315">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将由整数和小数部分组成的指定小时数添加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-315">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of whole and fractional hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-316">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="hours" /> 所表示的小时数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-316">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of hours represented by <paramref name="hours" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-317">`hours`参数的小数部分是一个小时的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-317">The fractional part of the `hours` parameter is the fractional part of an hour.</span></span> <span data-ttu-id="15062-318">例如, 4.5 等效于4小时30分钟0秒0毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-318">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds.</span></span> <span data-ttu-id="15062-319">`hours`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-319">The `hours` parameter is rounded to the nearest millisecond.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-320">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-320">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-321">它不会通过将添加`hours`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-321">It does not modify the value of the current object by adding `hours` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-322">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddHours%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-322">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddHours%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 <span data-ttu-id="15062-323">将少于1小时的时间间隔转换为分数可能会损失精度。</span><span class="sxs-lookup"><span data-stu-id="15062-323">Converting time intervals of less than an hour to a fraction can involve a loss of precision.</span></span> <span data-ttu-id="15062-324">(例如, 一分钟为0.01666 小时。)如果这有问题, 您可以使用<xref:System.DateTimeOffset.Add%2A>方法, 该方法使您能够在单个方法调用中指定多个时间间隔, 并且无需将时间间隔转换为一小时的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-324">(For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-325">下面的示例使用<xref:System.DateTimeOffset.AddHours%2A>方法来列出办公室中特定周的工作班次的开始时间, 每周有 2 8 小时倒班。</span><span class="sxs-lookup"><span data-stu-id="15062-325">The following example uses the <xref:System.DateTimeOffset.AddHours%2A> method to list the start times of work shifts for a particular week at an office that has two eight-hour shifts per day.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]
 [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-326">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-326">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-327">或</span><span class="sxs-lookup"><span data-stu-id="15062-327">-or-</span></span> 
<span data-ttu-id="15062-328">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-328">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-329">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-329">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMilliseconds (double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMilliseconds(float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (milliseconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMilliseconds(double milliseconds);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="15062-330">由整数和小数部分组成的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-330">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="15062-331">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-331">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-332">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将指定的毫秒数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-332">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-333">一个对象，其值为当前 <see cref="T:System.DateTimeOffset" /> 对象表示的时间和日期与 <paramref name="milliseconds" /> 对象表示的整毫秒数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-333">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of whole milliseconds represented by <paramref name="milliseconds" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-334">`milliseconds`参数的小数部分是毫秒的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-334">The fractional part of the `milliseconds` parameter is the fractional part of a millisecond.</span></span> <span data-ttu-id="15062-335">例如, 4.5 等效于4毫秒, 5000 计时周期, 其中一毫秒等于10000刻度。</span><span class="sxs-lookup"><span data-stu-id="15062-335">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="15062-336">但是, `milliseconds`舍入为最接近的毫秒; 所有 .5 或更大的值都将向上舍入。</span><span class="sxs-lookup"><span data-stu-id="15062-336">However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-337">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-337">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-338">它不会通过将添加`milliseconds`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-338">It does not modify the value of the current object by adding `milliseconds` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-339">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddMilliseconds%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-339">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMilliseconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-340">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-340">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-341">或</span><span class="sxs-lookup"><span data-stu-id="15062-341">-or-</span></span> 
<span data-ttu-id="15062-342">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-342">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-343">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-343">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMinutes (double minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMinutes(float64 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (minutes As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMinutes(double minutes);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMinutes minutes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minutes" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minutes"><span data-ttu-id="15062-344">由整数和小数部分组成的分钟数。</span><span class="sxs-lookup"><span data-stu-id="15062-344">A number of whole and fractional minutes.</span></span> <span data-ttu-id="15062-345">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-345">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-346">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将由整数和小数部分组成的指定分钟数添加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-346">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of whole and fractional minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-347">一个对象，其值是当前 <see cref="T:System.DateTimeOffset" /> 对象表示的日期和时间与 <paramref name="minutes" /> 表示的分钟数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-347">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of minutes represented by <paramref name="minutes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-348">`minutes`参数的小数部分是一分钟的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-348">The fractional part of the `minutes` parameter is the fractional part of a minute.</span></span> <span data-ttu-id="15062-349">例如, 4.5 等效于4分钟30秒0毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-349">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds.</span></span> <span data-ttu-id="15062-350">`minutes`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-350">The `minutes` parameter is rounded to the nearest millisecond.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-351">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-351">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-352">它不会通过将添加`minutes`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-352">It does not modify the value of the current object by adding `minutes` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-353">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddMinutes%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-353">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddMinutes%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 <span data-ttu-id="15062-354">将少于一分钟的时间间隔转换为分数可能会损失精度。</span><span class="sxs-lookup"><span data-stu-id="15062-354">Converting time intervals of less than a minute to a fraction can involve a loss of precision.</span></span> <span data-ttu-id="15062-355">(例如, 一秒钟的时间为0.01666 分钟。)如果这有问题, 你可以使用<xref:System.DateTimeOffset.Add%2A>方法, 该方法使你能够在单个方法调用中指定多个时间间隔, 并且无需将时间间隔转换为一分钟的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-355">(For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-356">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-356">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-357">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-357">-or-</span></span> 
<span data-ttu-id="15062-358">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-358">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-359">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-359">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="15062-360">整月份数。</span><span class="sxs-lookup"><span data-stu-id="15062-360">A number of whole months.</span></span> <span data-ttu-id="15062-361">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-361">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-362">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将指定的月份数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-362">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-363">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="months" /> 所表示的月份数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-363">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of months represented by <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-364">与向日期和时间值添加单个时间间隔单位 (如分钟或天数) 的大多数其他方法不同, <xref:System.DateTimeOffset.AddMonths%2A>并不允许添加月的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-364">Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddMonths%2A> does not enable you to add fractional parts of a month.</span></span> <span data-ttu-id="15062-365">若要将除月<xref:System.DateTimeOffset>以外的其他时间单位以外的时间添加到对象中, 请<xref:System.DateTimeOffset.Add%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-365">To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-366">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-366">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-367">它不会通过将添加`months`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-367">It does not modify the value of the current object by adding `months` to its date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-368">下面的示例使用<xref:System.DateTimeOffset.AddMonths%2A>方法来显示2007年每个季度的开始日期。</span><span class="sxs-lookup"><span data-stu-id="15062-368">The following example uses the <xref:System.DateTimeOffset.AddMonths%2A> method to display the start date of each quarter of the year 2007.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]
 [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-369">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-369">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-370">或</span><span class="sxs-lookup"><span data-stu-id="15062-370">-or-</span></span> 
<span data-ttu-id="15062-371">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-371">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (seconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddSeconds(double seconds);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds"><span data-ttu-id="15062-372">由整数和小数部分组成的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-372">A number of whole and fractional seconds.</span></span> <span data-ttu-id="15062-373">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-373">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-374">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将由整数和小数部分组成的指定秒数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-374">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of whole and fractional seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-375">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="seconds" /> 所表示的秒数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-375">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of seconds represented by <paramref name="seconds" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-376">`seconds`参数的小数部分是秒的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-376">The fractional part of the `seconds` parameter is the fractional part of a second.</span></span> <span data-ttu-id="15062-377">下表显示了秒的小数部分的值。</span><span class="sxs-lookup"><span data-stu-id="15062-377">The value of fractional parts of a second are shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-378">第二个值</span><span class="sxs-lookup"><span data-stu-id="15062-378">Second value</span></span>|<span data-ttu-id="15062-379">等效</span><span class="sxs-lookup"><span data-stu-id="15062-379">Equivalent</span></span>|  
|------------------|----------------|  
|<span data-ttu-id="15062-380">1秒</span><span class="sxs-lookup"><span data-stu-id="15062-380">.1 second</span></span>|<span data-ttu-id="15062-381">100毫秒</span><span class="sxs-lookup"><span data-stu-id="15062-381">100 milliseconds</span></span>|  
|<span data-ttu-id="15062-382">01秒</span><span class="sxs-lookup"><span data-stu-id="15062-382">.01 second</span></span>|<span data-ttu-id="15062-383">10毫秒</span><span class="sxs-lookup"><span data-stu-id="15062-383">10 milliseconds</span></span>|  
|<span data-ttu-id="15062-384">001秒</span><span class="sxs-lookup"><span data-stu-id="15062-384">.001 second</span></span>|<span data-ttu-id="15062-385">1毫秒</span><span class="sxs-lookup"><span data-stu-id="15062-385">1 millisecond</span></span>|  
  
 <span data-ttu-id="15062-386">`seconds`参数舍入为最接近的毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-386">The `seconds` parameter is rounded to the nearest millisecond.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-387">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-387">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-388">它不会通过将添加`minutes`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-388">It does not modify the value of the current object by adding `minutes` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-389">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddSeconds%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-389">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddSeconds%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-390">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-390">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-391">或</span><span class="sxs-lookup"><span data-stu-id="15062-391">-or-</span></span> 
<span data-ttu-id="15062-392">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-392">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-393">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-393">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddTicks (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddTicks(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (ticks As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddTicks(long ticks);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTimeOffset" Usage="dateTimeOffset.AddTicks ticks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="15062-394">以 100 纳秒为单位的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-394">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="15062-395">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-395">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-396">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将指定的计时周期数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-396">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-397">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="ticks" /> 所表示的计时周期数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-397">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of ticks represented by <paramref name="ticks" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-398">勾选标记表示100毫微秒, 或 1-10 秒秒。</span><span class="sxs-lookup"><span data-stu-id="15062-398">A tick represents 100 nanoseconds, or one-ten millionth of a second.</span></span> <span data-ttu-id="15062-399">因为计时周期是非常小且精确的时间间隔, 所以任何更大的时间单位都可以表示为多个刻度, 而不会丢失精度。</span><span class="sxs-lookup"><span data-stu-id="15062-399">Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-400">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-400">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-401">它不会通过将添加`minutes`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-401">It does not modify the value of the current object by adding `minutes` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-402">下表列出了特定时间间隔内的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-402">The following table lists the number of ticks in a particular time interval.</span></span>  
  
|<span data-ttu-id="15062-403">时间间隔</span><span class="sxs-lookup"><span data-stu-id="15062-403">Time interval</span></span>|<span data-ttu-id="15062-404">计时周期数</span><span class="sxs-lookup"><span data-stu-id="15062-404">Number of ticks</span></span>|  
|-------------------|---------------------|  
|<span data-ttu-id="15062-405">秒</span><span class="sxs-lookup"><span data-stu-id="15062-405">Second</span></span>|<span data-ttu-id="15062-406">10,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-406">10,000,000</span></span>|  
|<span data-ttu-id="15062-407">分钟</span><span class="sxs-lookup"><span data-stu-id="15062-407">Minute</span></span>|<span data-ttu-id="15062-408">600,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-408">600,000,000</span></span>|  
|<span data-ttu-id="15062-409">小时</span><span class="sxs-lookup"><span data-stu-id="15062-409">Hour</span></span>|<span data-ttu-id="15062-410">36,000,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-410">36,000,000,000</span></span>|  
|<span data-ttu-id="15062-411">天</span><span class="sxs-lookup"><span data-stu-id="15062-411">Day</span></span>|<span data-ttu-id="15062-412">864,000,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-412">864,000,000,000</span></span>|  
|<span data-ttu-id="15062-413">周</span><span class="sxs-lookup"><span data-stu-id="15062-413">Week</span></span>|<span data-ttu-id="15062-414">6,048,000,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-414">6,048,000,000,000</span></span>|  
|<span data-ttu-id="15062-415">月份</span><span class="sxs-lookup"><span data-stu-id="15062-415">Month</span></span>|<span data-ttu-id="15062-416">取决于月中的天数。</span><span class="sxs-lookup"><span data-stu-id="15062-416">Depends on number of days in the month.</span></span>|  
|<span data-ttu-id="15062-417">非闰年</span><span class="sxs-lookup"><span data-stu-id="15062-417">Non-leap year</span></span>|<span data-ttu-id="15062-418">315,360,000,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-418">315,360,000,000,000</span></span>|  
|<span data-ttu-id="15062-419">闰年</span><span class="sxs-lookup"><span data-stu-id="15062-419">Leap year</span></span>|<span data-ttu-id="15062-420">316,224,000,000,000</span><span class="sxs-lookup"><span data-stu-id="15062-420">316,224,000,000,000</span></span>|  
  
 <span data-ttu-id="15062-421">由于对象不表示特定时区中的日期和时间, 因此在执行日期和<xref:System.DateTimeOffset.AddTicks%2A>时间算术时, 该方法不会考虑特定时区的调整规则。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-421">Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.AddTicks%2A> method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-422">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-422">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-423">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-423">-or-</span></span> 
<span data-ttu-id="15062-424">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-424">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-425">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-425">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddYears (int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddYears(int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (years As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddYears(int years);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddYears years" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years"><span data-ttu-id="15062-426">年份数。</span><span class="sxs-lookup"><span data-stu-id="15062-426">A number of years.</span></span> <span data-ttu-id="15062-427">此数值可以是负数也可以是正数。</span><span class="sxs-lookup"><span data-stu-id="15062-427">The number can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="15062-428">返回一个新的 <see cref="T:System.DateTimeOffset" /> 对象，它将指定的年份数加到此实例的值上。</span><span class="sxs-lookup"><span data-stu-id="15062-428">Returns a new <see cref="T:System.DateTimeOffset" /> object that adds a specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="15062-429">一个对象，其值为当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间与 <paramref name="years" /> 所表示的年数之和。</span><span class="sxs-lookup"><span data-stu-id="15062-429">An object whose value is the sum of the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object and the number of years represented by <paramref name="years" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-430">与向日期和时间值添加单个时间间隔单位 (如分钟或天数) 的大多数其他方法不同, <xref:System.DateTimeOffset.AddYears%2A>并不允许添加年份的小数部分。</span><span class="sxs-lookup"><span data-stu-id="15062-430">Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, <xref:System.DateTimeOffset.AddYears%2A> does not enable you to add fractional parts of a year.</span></span> <span data-ttu-id="15062-431">若要添加一个由其他时间单位 (除了年到<xref:System.DateTimeOffset>对象) 组成的时间, 请<xref:System.DateTimeOffset.Add%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-431">To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-432">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-432">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-433">它不会通过将添加`months`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-433">It does not modify the value of the current object by adding `months` to its date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-434">在美国中, 无法在16岁的期限内向人员颁发驱动程序的许可证。</span><span class="sxs-lookup"><span data-stu-id="15062-434">In the United States, driver's licenses cannot be issued to persons under 16 years of age.</span></span> <span data-ttu-id="15062-435">下面的示例显示了一个可能的最晚日期, 用户必须在该日期出生, 才能合法颁发驱动程序的许可证。</span><span class="sxs-lookup"><span data-stu-id="15062-435">The following example displays the latest possible date on which a person must be born in order to legally be issued a driver's license.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]
 [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-436">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-436">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-437">或</span><span class="sxs-lookup"><span data-stu-id="15062-437">-or-</span></span> 
<span data-ttu-id="15062-438">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-438">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (first As DateTimeOffset, second As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.DateTimeOffset.Compare (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first"><span data-ttu-id="15062-439">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-439">The first object to compare.</span></span></param>
        <param name="second"><span data-ttu-id="15062-440">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-440">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-441">对两个 <see cref="T:System.DateTimeOffset" /> 对象进行比较，并指明第一个对象是早于、等于还是晚于第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-441">Compares two <see cref="T:System.DateTimeOffset" /> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</span></span></summary>
        <returns><span data-ttu-id="15062-442">一个有符号的整数，它表示 <paramref name="first" /> 参数的值是早于、晚于还是等于 <paramref name="second" /> 参数的值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="15062-442">A signed integer that indicates whether the value of the <paramref name="first" /> parameter is earlier than, later than, or the same time as the value of the <paramref name="second" /> parameter, as the following table shows.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="15062-443">返回值</span><span class="sxs-lookup"><span data-stu-id="15062-443">Return value</span></span> 
 </term><description> <span data-ttu-id="15062-444">含义</span><span class="sxs-lookup"><span data-stu-id="15062-444">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="15062-445">小于零</span><span class="sxs-lookup"><span data-stu-id="15062-445">Less than zero</span></span> 
 </term><description><span data-ttu-id="15062-446"><paramref name="first" /> 早于 <paramref name="second" />。</span><span class="sxs-lookup"><span data-stu-id="15062-446"><paramref name="first" /> is earlier than <paramref name="second" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-447">零</span><span class="sxs-lookup"><span data-stu-id="15062-447">Zero</span></span> 
 </term><description><span data-ttu-id="15062-448"><paramref name="first" /> 等于 <paramref name="second" />。</span><span class="sxs-lookup"><span data-stu-id="15062-448"><paramref name="first" /> is equal to <paramref name="second" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-449">大于零</span><span class="sxs-lookup"><span data-stu-id="15062-449">Greater than zero</span></span> 
 </term><description><span data-ttu-id="15062-450"><paramref name="first" /> 晚于 <paramref name="second" />。</span><span class="sxs-lookup"><span data-stu-id="15062-450"><paramref name="first" /> is later than <paramref name="second" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-451">在执行比较时, 方法在执行比较之前`first`将`second`和参数转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-451">In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison.</span></span> <span data-ttu-id="15062-452">方法等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-452">The method is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]
 [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  
  
 <span data-ttu-id="15062-453">换言之, <xref:System.DateTimeOffset.Compare%2A>方法确定两个<xref:System.DateTimeOffset>对象是否表示单个时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-453">In other words, the <xref:System.DateTimeOffset.Compare%2A> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time.</span></span> <span data-ttu-id="15062-454">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-454">It directly compares neither dates and times nor offsets.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-455">下面的示例演示对方法的<xref:System.DateTimeOffset.Compare%2A>调用以比较<xref:System.DateTimeOffset>对象。</span><span class="sxs-lookup"><span data-stu-id="15062-455">The following example illustrates calls to the <xref:System.DateTimeOffset.Compare%2A> method to compare <xref:System.DateTimeOffset> objects.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]
 [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTimeOffset -&gt; int&#xA;override this.CompareTo : DateTimeOffset -&gt; int" Usage="dateTimeOffset.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="15062-456">将与当前的 <see cref="T:System.DateTimeOffset" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-456">An object to compare with the current <see cref="T:System.DateTimeOffset" /> object.</span></span></param>
        <summary><span data-ttu-id="15062-457">将当前的 <see cref="T:System.DateTimeOffset" /> 对象与指定的 <see cref="T:System.DateTimeOffset" /> 对象进行比较，并指明当前对象是早于、等于还是晚于另一个 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-457">Compares the current <see cref="T:System.DateTimeOffset" /> object to a specified <see cref="T:System.DateTimeOffset" /> object and indicates whether the current object is earlier than, the same as, or later than the second <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-458">一个有符号的整数，它指明了当前的 <see cref="T:System.DateTimeOffset" /> 对象与 <paramref name="other" /> 之间的关系，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="15062-458">A signed integer that indicates the relationship between the current <see cref="T:System.DateTimeOffset" /> object and <paramref name="other" />, as the following table shows.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="15062-459">返回值</span><span class="sxs-lookup"><span data-stu-id="15062-459">Return Value</span></span> 
 </term><description> <span data-ttu-id="15062-460">说明</span><span class="sxs-lookup"><span data-stu-id="15062-460">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="15062-461">小于零</span><span class="sxs-lookup"><span data-stu-id="15062-461">Less than zero</span></span> 
 </term><description> <span data-ttu-id="15062-462">当前的 <see cref="T:System.DateTimeOffset" /> 对象早于 <paramref name="other" />。</span><span class="sxs-lookup"><span data-stu-id="15062-462">The current <see cref="T:System.DateTimeOffset" /> object is earlier than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-463">零</span><span class="sxs-lookup"><span data-stu-id="15062-463">Zero</span></span> 
 </term><description> <span data-ttu-id="15062-464">当前的 <see cref="T:System.DateTimeOffset" /> 对象与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="15062-464">The current <see cref="T:System.DateTimeOffset" /> object is the same as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-465">大于零。</span><span class="sxs-lookup"><span data-stu-id="15062-465">Greater than zero.</span></span>  
  
 </term><description> <span data-ttu-id="15062-466">当前的 <see cref="T:System.DateTimeOffset" /> 对象晚于 <paramref name="other" />。</span><span class="sxs-lookup"><span data-stu-id="15062-466">The current <see cref="T:System.DateTimeOffset" /> object is later than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-467">此方法通过<xref:System.DateTimeOffset> <xref:System.DateTimeOffset.UtcDateTime%2A>比较对象的值来比较对象; 即, 它确定两个对象是否表示单个时间点, 并指示当前对象是早于、晚于还是`other`等于参数。</span><span class="sxs-lookup"><span data-stu-id="15062-467">This method compares <xref:System.DateTimeOffset> objects by comparing their <xref:System.DateTimeOffset.UtcDateTime%2A> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-468">下面的示例演示对方法的<xref:System.DateTimeOffset.CompareTo%2A>调用以比较<xref:System.DateTimeOffset>对象。</span><span class="sxs-lookup"><span data-stu-id="15062-468">The following example illustrates calls to the <xref:System.DateTimeOffset.CompareTo%2A> method to compare <xref:System.DateTimeOffset> objects.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]
 [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTimeOffset.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-469">获取 <see cref="T:System.DateTime" /> 值，该值表示当前 <see cref="T:System.DateTimeOffset" /> 对象的日期组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-469">Gets a <see cref="T:System.DateTime" /> value that represents the date component of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-470">一个 <see cref="T:System.DateTime" /> 值，该值表示当前 <see cref="T:System.DateTimeOffset" /> 对象的日期组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-470">A <see cref="T:System.DateTime" /> value that represents the date component of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-471">此属性从<xref:System.DateTimeOffset>对象中删除时间部分的任何重要部分, 并只返回其重要的日期部分。</span><span class="sxs-lookup"><span data-stu-id="15062-471">This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component.</span></span> <span data-ttu-id="15062-472">例如, 如果<xref:System.DateTimeOffset>对象的日期和时间值为 "1/12/07 4: 01pm + 7:30", 则属性<xref:System.DateTime>返回值 "1/12/07 12:00:00 AM"。</span><span class="sxs-lookup"><span data-stu-id="15062-472">For example, if the <xref:System.DateTimeOffset> object has a date and time value of "1/12/07 4:01pm +7:30", the property returns a <xref:System.DateTime> value of "1/12/07 12:00:00 AM".</span></span> <span data-ttu-id="15062-473">然后, 可以使用仅显示日期的任何标准或自定义格式说明符来显示该值。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="15062-473">The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only.</span></span> <span data-ttu-id="15062-474">(有关说明, 请参阅 "示例" 部分。)</span><span class="sxs-lookup"><span data-stu-id="15062-474">(See the Example section for an illustration.)</span></span>  
  
 <span data-ttu-id="15062-475"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>返回<xref:System.DateTime.Kind%2A?displayProperty=nameWithType> 的对象的属性的<xref:System.DateTime>值始终为。</span><span class="sxs-lookup"><span data-stu-id="15062-475">The value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="15062-476">它不受<xref:System.DateTimeOffset.Offset%2A>属性值的影响。</span><span class="sxs-lookup"><span data-stu-id="15062-476">It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-477">若要显示日期而不显示其时间组成部分, 还可以使用 "D" 或 "d" 格式说明符;有关说明, 请参阅 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="15062-477">To display a date without its time component, you can also use the "D" or "d" format specifiers; for an illustration, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-478">下面的示例检索特定日期的<xref:System.DateTimeOffset.Date%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-478">The following example retrieves the value of the <xref:System.DateTimeOffset.Date%2A> property for a specific date.</span></span> <span data-ttu-id="15062-479">然后, 它使用一些标准的和自定义的日期格式说明符向控制台显示该值。</span><span class="sxs-lookup"><span data-stu-id="15062-479">It then displays that value to the console using some standard and custom date-only format specifiers.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]
 [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-480">标准 DateTime 格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-480">Standard DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-481">自定义日期时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-481">Custom DateTime Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.DateTimeOffset.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-482">获取 <see cref="T:System.DateTime" /> 值，该值表示当前 <see cref="T:System.DateTimeOffset" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-482">Gets a <see cref="T:System.DateTime" /> value that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-483">当前 <see cref="T:System.DateTimeOffset" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-483">The date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-484">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.DateTime%2A></span><span class="sxs-lookup"><span data-stu-id="15062-484">The <xref:System.DateTimeOffset.DateTime%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-485">此属性返回<xref:System.DateTimeOffset>对象的日期和时间部分, 这使它对于<xref:System.DateTime>执行<xref:System.DateTimeOffset>转换很有用。</span><span class="sxs-lookup"><span data-stu-id="15062-485">This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion.</span></span> <span data-ttu-id="15062-486">例如, 如果<xref:System.DateTimeOffset>对象的日期和时间值为 "1/12/07 4: 01pm + 7:30", 则该属性返回日期 "1/12/07 4: 01pm"。</span><span class="sxs-lookup"><span data-stu-id="15062-486">For example, if the <xref:System.DateTimeOffset> object has a date and time value of "1/12/07 4:01pm + 7:30", the property returns a date of "1/12/07 4:01pm".</span></span>  
  
 <span data-ttu-id="15062-487"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>返回<xref:System.DateTime.Kind%2A?displayProperty=nameWithType> 的对象的<xref:System.DateTime>属性值为。</span><span class="sxs-lookup"><span data-stu-id="15062-487">The value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-488">下面的示例<xref:System.DateTimeOffset.DateTime%2A>演示如何使用属性将<xref:System.DateTimeOffset.Now%2A>和<xref:System.DateTimeOffset.UtcNow%2A>属性返回的时间转换为<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="15062-488">The following example illustrates the use of the <xref:System.DateTimeOffset.DateTime%2A> property to convert the time returned by the <xref:System.DateTimeOffset.Now%2A> and <xref:System.DateTimeOffset.UtcNow%2A> properties to <xref:System.DateTime> values.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]
 [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.LocalDateTime" />
        <related type="Article" href="~/docs/standard/datetime/converting-between-datetime-and-offset.md"><span data-ttu-id="15062-489">在 DateTime 与 DateTimeOffset 之间进行转换</span><span class="sxs-lookup"><span data-stu-id="15062-489">Converting Between DateTime and DateTimeOffset</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTimeOffset.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-490">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的月中的某一天。</span><span class="sxs-lookup"><span data-stu-id="15062-490">Gets the day of the month represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-491">当前 <see cref="T:System.DateTimeOffset" /> 对象的日组成部分，以 1 到 31 之间的一个值来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-491">The day component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-492">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Day%2A></span><span class="sxs-lookup"><span data-stu-id="15062-492">The <xref:System.DateTimeOffset.Day%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-493">还可以通过使用 "d" 或 " <xref:System.DateTimeOffset> dd" 自定义格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的日部分的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-493">You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "d" or "dd" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-494">下面的示例以三种不同的方式<xref:System.DateTimeOffset>显示对象的日部分:</span><span class="sxs-lookup"><span data-stu-id="15062-494">The following example displays the day component of a <xref:System.DateTimeOffset> object in three different ways:</span></span>  
  
-   <span data-ttu-id="15062-495">通过检索<xref:System.DateTimeOffset.Day%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-495">By retrieving the value of the <xref:System.DateTimeOffset.Day%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-496">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> d" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-496">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "d" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-497">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> dd" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-497">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "dd" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]
 [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTimeOffset.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-498">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的周中的某一天。</span><span class="sxs-lookup"><span data-stu-id="15062-498">Gets the day of the week represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-499">用于指示当前 <see cref="T:System.DateTimeOffset" /> 对象的星期几的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="15062-499">One of the enumeration values that indicates the day of the week of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-500"><xref:System.DayOfWeek>枚举中的常量的值范围从<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>到<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-500">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="15062-501">如果强制转换为整数, 则其值范围为 0 (指示<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) 到 6 (表示<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="15062-501">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="15062-502">还可以通过使用 "D" 格式说明符或 "dddd" 自定义格式说明符来显示特定日期的星期几名称。</span><span class="sxs-lookup"><span data-stu-id="15062-502">You can also display the weekday name of a particular date by using the "D" format specifier or the "dddd" custom format specifier.</span></span> <span data-ttu-id="15062-503">例如:</span><span class="sxs-lookup"><span data-stu-id="15062-503">For example:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]
 [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  
  
 <span data-ttu-id="15062-504">请注意, 通过调用`ToString`由该属性返回的<xref:System.DayOfWeek>枚举成员的方法返回的字符串未进行本地化。</span><span class="sxs-lookup"><span data-stu-id="15062-504">Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized.</span></span> <span data-ttu-id="15062-505">若要提取包含当前区域性或特定区域性的星期几名称的字符串, 请使用 "dddd" 自<xref:System.DateTimeOffset.ToString%2A>定义格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-505">To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the "dddd" custom format specifier.</span></span> <span data-ttu-id="15062-506">例如, 下面的代码使用`fr-fr`区域性显示日期的星期几名称。</span><span class="sxs-lookup"><span data-stu-id="15062-506">For example, the following code displays the weekday name for a date using the `fr-fr` culture.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]
 [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="15062-507">下面的示例显示2008年每个月的第一天的星期几名称。</span><span class="sxs-lookup"><span data-stu-id="15062-507">The following example displays the weekday name of the first day of each month of the year 2008.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]
 [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTimeOffset.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-508">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的年中的某一天。</span><span class="sxs-lookup"><span data-stu-id="15062-508">Gets the day of the year represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-509">当前 <see cref="T:System.DateTimeOffset" /> 对象的年中的某一天，以 1 到 366 之间的一个值来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-509">The day of the year of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a value between 1 and 366.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-510">确定两个 <see cref="T:System.DateTimeOffset" /> 对象是否相等，或者 <see cref="T:System.DateTimeOffset" /> 对象是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="15062-510">Determines whether two <see cref="T:System.DateTimeOffset" /> objects are equal, or a <see cref="T:System.DateTimeOffset" /> object is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="15062-511">要与当前 <see cref="T:System.DateTimeOffset" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-511">An object to compare to the current <see cref="T:System.DateTimeOffset" /> object.</span></span></param>
        <summary><span data-ttu-id="15062-512">确定当前的 <see cref="T:System.DateTimeOffset" /> 对象是否与指定的 <see cref="T:System.DateTimeOffset" /> 对象表示同一时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-512">Determines whether the current <see cref="T:System.DateTimeOffset" /> object represents the same point in time as a specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-513">如果两个 <see cref="T:System.DateTimeOffset" /> 对象具有相同的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-513"><see langword="true" /> if both <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-514">在执行比较之前, 此方法会将两个<xref:System.DateTimeOffset>对象的值转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-514">Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-515">方法等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-515">The method is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]
 [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  
  
 <span data-ttu-id="15062-516">换言之, <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29>方法确定两个<xref:System.DateTimeOffset>对象是否表示单个时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-516">In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time.</span></span> <span data-ttu-id="15062-517">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-517">It directly compares neither dates and times nor offsets.</span></span> <span data-ttu-id="15062-518">若要确定两<xref:System.DateTimeOffset>个对象是否表示相同时间并具有相同的偏移量值, <xref:System.DateTimeOffset.EqualsExact%2A>请使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-518">To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.</span></span>  
  
 <span data-ttu-id="15062-519">`null`不<xref:System.DateTimeOffset> 被视为晚于的`null`对象 (或更高版本)。</span><span class="sxs-lookup"><span data-stu-id="15062-519">A <xref:System.DateTimeOffset> object that is not `null` is considered to be later (or greater) than one that is `null`.</span></span>  
  
 <span data-ttu-id="15062-520">此<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29>方法的重载<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>实现方法。</span><span class="sxs-lookup"><span data-stu-id="15062-520">This overload of the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="15062-521">它提供比<xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType>重载更好的性能, 因为`other`无需从对象转换该参数。</span><span class="sxs-lookup"><span data-stu-id="15062-521">It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> overload because the `other` parameter does not have to be converted from an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-522">下面的示例演示对<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29>方法的调用, 以测试<xref:System.DateTimeOffset>对象是否与当前<xref:System.DateTimeOffset>对象相等。</span><span class="sxs-lookup"><span data-stu-id="15062-522">The following example illustrates calls to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> method to test <xref:System.DateTimeOffset> objects for equality with the current <xref:System.DateTimeOffset> object.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]
 [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTimeOffset.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="15062-523">要与当前 <see cref="T:System.DateTimeOffset" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-523">The object to compare to the current <see cref="T:System.DateTimeOffset" /> object.</span></span></param>
        <summary><span data-ttu-id="15062-524">确定 <see cref="T:System.DateTimeOffset" /> 对象是否与指定的对象表示同一时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-524">Determines whether a <see cref="T:System.DateTimeOffset" /> object represents the same point in time as a specified object.</span></span></summary>
        <returns><span data-ttu-id="15062-525">如果 <paramref name="obj" /> 参数是 <see cref="T:System.DateTimeOffset" /> 对象，并且与当前的 <see cref="T:System.DateTimeOffset" /> 对象表示同一时间点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-525"><see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.DateTimeOffset" /> object and represents the same point in time as the current <see cref="T:System.DateTimeOffset" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-526">在执行比较之前, 此方法会将当前<xref:System.DateTimeOffset>对象`obj`和参数的值转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-526">Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-527">方法等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-527">The method is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]
 [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  
  
 <span data-ttu-id="15062-528">换言之, <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType>方法确定当前<xref:System.DateTimeOffset>对象和指定的对象是否表示单个时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-528">In other words, the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time.</span></span> <span data-ttu-id="15062-529">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-529">It directly compares neither dates and times nor offsets.</span></span> <span data-ttu-id="15062-530">若要确定两<xref:System.DateTimeOffset>个对象是否表示相同时间并具有相同的偏移量值, <xref:System.DateTimeOffset.EqualsExact%2A>请使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-530">To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.</span></span>  
  
 <span data-ttu-id="15062-531">如果`obj` `obj`为`null`, 或者如果的运行时类型不<xref:System.DateTimeOffset>是, 则该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="15062-531">If `obj` is `null`, or if the run-time type of `obj` is not <xref:System.DateTimeOffset>, the method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-532">下面的示例指示当前<xref:System.DateTimeOffset>对象是否等于多个其他<xref:System.DateTimeOffset>对象以及空引用和<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="15062-532">The following example indicates whether the current <xref:System.DateTimeOffset> object is equal to several other <xref:System.DateTimeOffset> objects, as well as to a null reference and a <xref:System.DateTime> object.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]
 [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (first As DateTimeOffset, second As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.Equals (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first"><span data-ttu-id="15062-533">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-533">The first object to compare.</span></span></param>
        <param name="second"><span data-ttu-id="15062-534">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-534">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-535">确定两个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否表示同一时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-535">Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects represent the same point in time.</span></span></summary>
        <returns><span data-ttu-id="15062-536">如果这两个 <see cref="T:System.DateTimeOffset" /> 对象具有相同的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-536"><see langword="true" /> if the two <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-537">在执行比较之前, 此方法会将这<xref:System.DateTimeOffset>两个对象都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-537">Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-538">方法等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-538">The method is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 <span data-ttu-id="15062-539">换言之, <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29>方法确定两个<xref:System.DateTimeOffset>对象是否表示单个时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-539">In other words, the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time.</span></span> <span data-ttu-id="15062-540">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-540">It directly compares neither dates and times nor offsets.</span></span> <span data-ttu-id="15062-541">若要确定两<xref:System.DateTimeOffset>个对象是否表示相同时间并具有相同的偏移量值, <xref:System.DateTimeOffset.EqualsExact%2A>请使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-541">To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-542">下面的示例演示对<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29>方法的调用, 以测试各种<xref:System.DateTimeOffset>对象对是否相等。</span><span class="sxs-lookup"><span data-stu-id="15062-542">The following example illustrates calls to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> method to test various pairs of <xref:System.DateTimeOffset> objects for equality.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]
 [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="EqualsExact">
      <MemberSignature Language="C#" Value="public bool EqualsExact (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsExact(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsExact (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualsExact(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="member this.EqualsExact : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.EqualsExact other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="15062-543">要与当前 <see cref="T:System.DateTimeOffset" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-543">The object to compare to the current <see cref="T:System.DateTimeOffset" /> object.</span></span></param>
        <summary><span data-ttu-id="15062-544">确定当前的 <see cref="T:System.DateTimeOffset" /> 对象与指定的 <see cref="T:System.DateTimeOffset" /> 对象是否表示同一时间并且是否具有相同的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-544">Determines whether the current <see cref="T:System.DateTimeOffset" /> object represents the same time and has the same offset as a specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-545">如果当前的 <see cref="T:System.DateTimeOffset" /> 对象与 <paramref name="other" /> 具有相同的日期和时间值以及相同的 <see cref="P:System.DateTimeOffset.Offset" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-545"><see langword="true" /> if the current <see cref="T:System.DateTimeOffset" /> object and <paramref name="other" /> have the same date and time value and the same <see cref="P:System.DateTimeOffset.Offset" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-546">由于多个时区共享单个偏移量, 因此的`true`返回值不保证当前`other`和对象表示相同时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="15062-546">Because multiple time zones share a single offset, a return value of `true` does not guarantee that the current and the `other` object represent times in the same time zone.</span></span>  
  
 <span data-ttu-id="15062-547">与方法不同, <xref:System.DateTimeOffset.Equals%2A>方法的重载只确定两个<xref:System.DateTimeOffset>值是否表示单个时间点。 <xref:System.DateTimeOffset.EqualsExact%2A></span><span class="sxs-lookup"><span data-stu-id="15062-547">Unlike the <xref:System.DateTimeOffset.EqualsExact%2A> method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time.</span></span> <span data-ttu-id="15062-548">它们不表示两个值具有相同的日期和时间以及相同的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-548">They do not indicate that two values have the same date and time as well as the same offset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-549">下面的示例演示如何使用<xref:System.DateTimeOffset.EqualsExact%2A>方法来比较类似<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-549">The following example illustrates the use of the <xref:System.DateTimeOffset.EqualsExact%2A> method to compare similar <xref:System.DateTimeOffset> objects.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]
 [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="15062-550">以计时周期表示的 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="15062-550">A Windows file time, expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="15062-551">将指定的 Windows 文件时间转换为等效的本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-551">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="15062-552">一个对象，表示偏移量被设置为本地时间偏移量的 <paramref name="fileTime" /> 的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-552">An object that represents the date and time of <paramref name="fileTime" /> with the offset set to the local time offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-553">Windows 文件时间是一个64位的值, 它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="15062-553">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="15062-554">公元协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-554">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-555">当应用程序创建、访问或写入到文件时, Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="15062-555">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="15062-556">Windows 文件时间通过调用`GetFileTime`函数 (该函数将`FILETIME`返回结构) 直接通过 windows API 进行访问。</span><span class="sxs-lookup"><span data-stu-id="15062-556">A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure.</span></span> <span data-ttu-id="15062-557">单个函数参数是要检索其文件时间信息的文件的句柄。</span><span class="sxs-lookup"><span data-stu-id="15062-557">The single function parameter is the handle of the file whose file time information is to be retrieved.</span></span> <span data-ttu-id="15062-558">文件句柄是通过调用`CreateFile`函数来检索的。</span><span class="sxs-lookup"><span data-stu-id="15062-558">The file handle is retrieved by calling the `CreateFile` function.</span></span> <span data-ttu-id="15062-559">结构成员包含文件时间的四个高序位字节, 其`dwLowDateTime`成员包含四个低序位字节。 `dwHighDateTime` `FILETIME`</span><span class="sxs-lookup"><span data-stu-id="15062-559">The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes.</span></span> <span data-ttu-id="15062-560">下面的示例演示了如何检索 Windows 文件时间值并将其转换为<xref:System.DateTimeOffset>值。</span><span class="sxs-lookup"><span data-stu-id="15062-560">The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values.</span></span>  
  
 <span data-ttu-id="15062-561"><xref:System.DateTime>还可以通过<xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType>调用<xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType>和方法,<xref:System.DateTimeOffset>以及通过调用方法从值创建Windows文件时间值。<xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-561">Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-562">下面的示例使用 Windows API 检索 WordPad 可执行文件的 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="15062-562">The following example uses the Windows API to retrieve the Windows file times for the WordPad executable.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]
 [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-563"><paramref name="filetime" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="15062-563"><paramref name="filetime" /> is less than zero.</span></span>  
  
<span data-ttu-id="15062-564">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-564">-or-</span></span> 
 <span data-ttu-id="15062-565"><paramref name="filetime" /> 大于 <see langword="DateTimeOffset.MaxValue.Ticks" />。</span><span class="sxs-lookup"><span data-stu-id="15062-565"><paramref name="filetime" /> is greater than <see langword="DateTimeOffset.MaxValue.Ticks" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeMilliseconds(int64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeMilliseconds (milliseconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeMilliseconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="15062-566">一个 Unix 时间，它表示为从 1970-01-01T00:00:00Z（1970 年 1 月 1 日，UTC 时间上午 12:00）开始已经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-566">A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).</span></span> <span data-ttu-id="15062-567">对于在此日期之前的 Unix 时间，其值为负数。</span><span class="sxs-lookup"><span data-stu-id="15062-567">For Unix times before this date, its value is negative.</span></span></param>
        <summary><span data-ttu-id="15062-568">将表示为从 1970-01-01T00:00:00Z 开始已经过的毫秒数的 Unix 时间转换为 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-568">Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <returns><span data-ttu-id="15062-569">一个日期和时间值，以 Unix 时间表示同一时刻。</span><span class="sxs-lookup"><span data-stu-id="15062-569">A date and time value that represents the same moment in time as the Unix time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-570"><xref:System.TimeSpan.Zero?displayProperty=nameWithType>返回<xref:System.DateTimeOffset.Offset%2A> 的实例<xref:System.DateTimeOffset>的属性值为, 表示协调世界时。</span><span class="sxs-lookup"><span data-stu-id="15062-570">The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, which represents Coordinated Universal Time.</span></span> <span data-ttu-id="15062-571">可以通过调用<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法将其转换为特定时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="15062-571">You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-572"><paramref name="milliseconds" /> 小于 -62,135,596,800,000。</span><span class="sxs-lookup"><span data-stu-id="15062-572"><paramref name="milliseconds" /> is less than  -62,135,596,800,000.</span></span>  
  
<span data-ttu-id="15062-573">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-573">-or-</span></span> 
 <span data-ttu-id="15062-574"><paramref name="milliseconds" /> 大于 253,402,300,799,999。</span><span class="sxs-lookup"><span data-stu-id="15062-574"><paramref name="milliseconds" /> is greater than 253,402,300,799,999.</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeSeconds (seconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeSeconds(long seconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeSeconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="seconds"><span data-ttu-id="15062-575">一个 Unix 时间，它表示为从 1970-01-01T00:00:00Z（1970 年 1 月 1 日，UTC 时间上午 12:00）开始已经过的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-575">A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).</span></span> <span data-ttu-id="15062-576">对于在此日期之前的 Unix 时间，其值为负数。</span><span class="sxs-lookup"><span data-stu-id="15062-576">For Unix times before this date, its value is negative.</span></span></param>
        <summary><span data-ttu-id="15062-577">将表示为从 1970-01-01T00:00:00Z 开始已经过的秒数的 Unix 时间转换为 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-577">Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <returns><span data-ttu-id="15062-578">一个日期和时间值，以 Unix 时间表示同一时刻。</span><span class="sxs-lookup"><span data-stu-id="15062-578">A date and time value that represents the same moment in time as the Unix time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-579"><xref:System.TimeSpan.Zero?displayProperty=nameWithType>返回<xref:System.DateTimeOffset.Offset%2A> 的实例<xref:System.DateTimeOffset>的属性值为, 表示协调世界时。</span><span class="sxs-lookup"><span data-stu-id="15062-579">The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, which represents Coordinated Universal Time.</span></span> <span data-ttu-id="15062-580">可以通过调用<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法将其转换为特定时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="15062-580">You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-581"><paramref name="seconds" /> 小于 -62,135,596,800。</span><span class="sxs-lookup"><span data-stu-id="15062-581"><paramref name="seconds" /> is less than  -62,135,596,800.</span></span>  
  
<span data-ttu-id="15062-582">或</span><span class="sxs-lookup"><span data-stu-id="15062-582">-or-</span></span> 
 <span data-ttu-id="15062-583"><paramref name="seconds" /> 大于 253,402,300,799。</span><span class="sxs-lookup"><span data-stu-id="15062-583"><paramref name="seconds" /> is greater than 253,402,300,799.</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTimeOffset.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-584">返回当前 <see cref="T:System.DateTimeOffset" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="15062-584">Returns the hash code for the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-585">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="15062-585">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTimeOffset.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-586">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的时间的小时组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-586">Gets the hour component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-587">当前 <see cref="T:System.DateTimeOffset" /> 对象的小时组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-587">The hour component of the current <see cref="T:System.DateTimeOffset" /> object.</span></span> <span data-ttu-id="15062-588">此属性使用 24 小时制；值介于 0 到 23 之间。</span><span class="sxs-lookup"><span data-stu-id="15062-588">This property uses a 24-hour clock; the value ranges from 0 to 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-589">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Hour%2A></span><span class="sxs-lookup"><span data-stu-id="15062-589">The <xref:System.DateTimeOffset.Hour%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-590">还可以通过使用 "H" 或 " <xref:System.DateTimeOffset> HH" 自定义格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的小时部分的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-590">You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "H", or "HH" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-591">下面的示例以三种不同的方式<xref:System.DateTimeOffset>显示对象的小时部分:</span><span class="sxs-lookup"><span data-stu-id="15062-591">The following example displays the hour component of a <xref:System.DateTimeOffset> object in three different ways:</span></span>  
  
-   <span data-ttu-id="15062-592">通过检索<xref:System.DateTimeOffset.Hour%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-592">By retrieving the value of the <xref:System.DateTimeOffset.Hour%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-593">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> H" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-593">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "H" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-594">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> HH" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-594">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "HH" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]
 [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="C#" Value="public DateTime LocalDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LocalDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.LocalDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LocalDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalDateTime : DateTime" Usage="System.DateTimeOffset.LocalDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-595">获取 <see cref="T:System.DateTime" /> 值，该值表示当前 <see cref="T:System.DateTimeOffset" /> 对象的本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-595">Gets a <see cref="T:System.DateTime" /> value that represents the local date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-596">当前的 <see cref="T:System.DateTimeOffset" /> 对象的本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-596">The local date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-597">如有必要, <xref:System.DateTimeOffset.LocalDateTime%2A>属性会将当前<xref:System.DateTimeOffset>对象的日期和时间转换为本地系统的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-597">If necessary, the <xref:System.DateTimeOffset.LocalDateTime%2A> property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time.</span></span> <span data-ttu-id="15062-598">转换是一个两步操作:</span><span class="sxs-lookup"><span data-stu-id="15062-598">The conversion is a two-step operation:</span></span>  
  
1.  <span data-ttu-id="15062-599">属性将当前<xref:System.DateTimeOffset>对象的时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-599">The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC).</span></span>  
  
2.  <span data-ttu-id="15062-600">然后, 属性将 UTC 转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-600">The property then converts UTC to local time.</span></span>  
  
 <span data-ttu-id="15062-601">没有无效的时间, 不明确的时间将映射到本地区域的标准时间。</span><span class="sxs-lookup"><span data-stu-id="15062-601">There are no invalid times and ambiguous times are mapped to the local zone's standard time.</span></span> <span data-ttu-id="15062-602">(但是, 转换可能会产生异常: 如果<xref:System.DateTimeOffset>从本地计算机派生的值反映了不明确的日期和时间, 则可以将该值转换为 UTC, 然后恢复到与原始时间不同的本地时间。)当执行此转换时, 属性将在本地时区中应用任何调整规则。</span><span class="sxs-lookup"><span data-stu-id="15062-602">(However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.</span></span>  
  
 <span data-ttu-id="15062-603">此属性返回<xref:System.DateTimeOffset>对象的日期和时间部分, 这使得它<xref:System.DateTime>对于<xref:System.DateTimeOffset>转换很有用。</span><span class="sxs-lookup"><span data-stu-id="15062-603">This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion.</span></span> <span data-ttu-id="15062-604">除了执行任何必要的时间转换以外, 此属性还通过将<xref:System.DateTimeOffset.DateTime%2A>返回<xref:System.DateTime>对象的<xref:System.DateTime.Kind%2A>属性的值设置为来<xref:System.DateTimeKind.Local?displayProperty=nameWithType>与属性不同。</span><span class="sxs-lookup"><span data-stu-id="15062-604">In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-605">下面的示例演示<xref:System.DateTimeOffset>了在美国太平洋标准时区运行。</span><span class="sxs-lookup"><span data-stu-id="15062-605">The following example illustrates several conversions of <xref:System.DateTimeOffset> values to local times in the U.S. Pacific Standard Time zone.</span></span> <span data-ttu-id="15062-606">请注意, 最后三次都不明确;属性将所有这些属性映射到太平洋标准时区中的单个日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-606">Note that the last three times are all ambiguous; the property maps all of them to a single date and time in the Pacific Standard Time zone.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]
 [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTimeOffset" Usage="System.DateTimeOffset.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-607">表示 <see cref="T:System.DateTimeOffset" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="15062-607">Represents the greatest possible value of <see cref="T:System.DateTimeOffset" />.</span></span> <span data-ttu-id="15062-608">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="15062-608">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-609">此常量的值为 12/31/9999 11:59:59 PM + 00:00。</span><span class="sxs-lookup"><span data-stu-id="15062-609">The value of this constant is 12/31/9999 11:59:59 PM +00:00.</span></span>  
  
 <span data-ttu-id="15062-610">属性用于确定新<xref:System.DateTimeOffset>对象的值或<xref:System.DateTimeOffset>算术运算返回的值是否与此最大范围值相同或更早。 <xref:System.DateTimeOffset.MaxValue></span><span class="sxs-lookup"><span data-stu-id="15062-610">The <xref:System.DateTimeOffset.MaxValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value.</span></span> <span data-ttu-id="15062-611">如果不是, 则该方法将引发<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="15062-611">If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="15062-612">在<xref:System.DateTimeOffset>将任何值与<xref:System.DateTimeOffset.MaxValue>进行比较之前, 任何值都将转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-612">Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with <xref:System.DateTimeOffset.MaxValue>.</span></span>  <span data-ttu-id="15062-613">这意味着<xref:System.DateTimeOffset> , 如果值的日期和时间接近于最大范围, 但其偏移量为负, 则可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-613">This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception.</span></span> <span data-ttu-id="15062-614">例如, 值 12/31/9999 11:00 PM-02:00 超出范围, 因为它比<xref:System.DateTimeOffset.MaxValue>转换为 UTC 的时间晚一小时。</span><span class="sxs-lookup"><span data-stu-id="15062-614">For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than <xref:System.DateTimeOffset.MaxValue> when it is converted to UTC.</span></span>  
  
 <span data-ttu-id="15062-615">某些日历 (如<xref:System.Globalization.UmAlQuraCalendar>) 支持早于<xref:System.DateTime.MaxValue>的日期范围。</span><span class="sxs-lookup"><span data-stu-id="15062-615">Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="15062-616">在这些情况下, 尝试在<xref:System.DateTime.MaxValue>变量赋值或格式设置和分析操作中进行访问<xref:System.ArgumentOutOfRangeException>可能会引发。</span><span class="sxs-lookup"><span data-stu-id="15062-616">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="15062-617"><xref:System.DateTime.MaxValue?displayProperty=nameWithType>可以<xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType>从属性中检索指定区域性的最新有效日期值, 而不是检索的值。</span><span class="sxs-lookup"><span data-stu-id="15062-617">Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-618"><see cref="F:System.DateTime.MaxValue" /> 位于当前或指定区域性的默认日历的范围之外。</span><span class="sxs-lookup"><span data-stu-id="15062-618"><see cref="F:System.DateTime.MaxValue" /> is outside the range of the current or specified culture's default calendar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTimeOffset.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-619">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的时间的毫秒组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-619">Gets the millisecond component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-620">当前 <see cref="T:System.DateTimeOffset" /> 对象的毫秒组成部分，以 0 到 999 之间的一个整数来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-620">The millisecond component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-621">还可以通过使用 "fff" 自定义<xref:System.DateTimeOffset>格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的毫秒部分的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-621">You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "fff" custom format specifier.</span></span>  
  
 <span data-ttu-id="15062-622">如果依赖属性 (如<xref:System.DateTimeOffset.Now%2A>或<xref:System.DateTimeOffset.UtcNow%2A> ) 来准确地跟踪已用毫秒数, 则时间的毫秒部分的精度取决于系统时钟的分辨率。</span><span class="sxs-lookup"><span data-stu-id="15062-622">If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock.</span></span> <span data-ttu-id="15062-623">在 Windows NT 3.5 及更高版本以及 Windows Vista 操作系统上, 时钟的分辨率大约为10-15 毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-623">On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-624">下面的示例通过使用自定义格式说明符和<xref:System.DateTimeOffset>直接<xref:System.DateTimeOffset.Millisecond%2A>访问属性来显示对象的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-624">The following example displays the number of milliseconds of a <xref:System.DateTimeOffset> object by using a custom format specifier and by directly accessing the <xref:System.DateTimeOffset.Millisecond%2A> property.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]
 [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTimeOffset.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-625">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的时间的分钟组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-625">Gets the minute component of the time represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-626">当前 <see cref="T:System.DateTimeOffset" /> 对象的分钟组成部分，以 0 到 59 之间的一个整数来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-626">The minute component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-627">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Minute%2A></span><span class="sxs-lookup"><span data-stu-id="15062-627">The <xref:System.DateTimeOffset.Minute%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-628">还可以通过使用 "m" 或 " <xref:System.DateTimeOffset> mm" 自定义格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的分钟部分的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-628">You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "m", or "mm" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-629">下面的示例以三种不同的方式<xref:System.DateTimeOffset>显示对象的分钟部分:</span><span class="sxs-lookup"><span data-stu-id="15062-629">The following example displays the minute component of a <xref:System.DateTimeOffset> object in three different ways:</span></span>  
  
-   <span data-ttu-id="15062-630">通过检索<xref:System.DateTimeOffset.Minute%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-630">By retrieving the value of the <xref:System.DateTimeOffset.Minute%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-631">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> m" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-631">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "m" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-632">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> mm" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-632">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "mm" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]
 [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTimeOffset" Usage="System.DateTimeOffset.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-633">表示可能的最早 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-633">Represents the earliest possible <see cref="T:System.DateTimeOffset" /> value.</span></span> <span data-ttu-id="15062-634">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="15062-634">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-635">此常量的值为 1/1/0001 12:00:00 AM + 00:00。</span><span class="sxs-lookup"><span data-stu-id="15062-635">The value of this constant is 1/1/0001 12:00:00 AM +00:00.</span></span>  
  
 <span data-ttu-id="15062-636">属性用于确定新<xref:System.DateTimeOffset>对象或<xref:System.DateTimeOffset>算术运算返回的值是否与此最小范围值相同或之后的值相同。 <xref:System.DateTimeOffset.MinValue></span><span class="sxs-lookup"><span data-stu-id="15062-636">The <xref:System.DateTimeOffset.MinValue> property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value.</span></span> <span data-ttu-id="15062-637">如果不是, 则该方法将引发<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="15062-637">If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="15062-638">在<xref:System.DateTimeOffset>执行与<xref:System.DateTimeOffset.MinValue>的比较之前, 任何值都将转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-638">Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with <xref:System.DateTimeOffset.MinValue>.</span></span>  <span data-ttu-id="15062-639">这意味着<xref:System.DateTimeOffset> , 如果值的日期和时间接近于最小范围, 但其偏移量为正值, 则可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-639">This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception.</span></span> <span data-ttu-id="15062-640">例如, 值 1/1/0001 1:00:00 AM + 02:00 超出范围, 因为它比<xref:System.DateTimeOffset.MinValue>转换为 UTC 早一小时。</span><span class="sxs-lookup"><span data-stu-id="15062-640">For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than <xref:System.DateTimeOffset.MinValue> when it is converted to UTC.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTimeOffset.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-641">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期的月份组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-641">Gets the month component of the date represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-642">当前 <see cref="T:System.DateTimeOffset" /> 对象的月份组成部分，以 1 到 12 之间的一个整数来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-642">The month component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-643">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Month%2A></span><span class="sxs-lookup"><span data-stu-id="15062-643">The <xref:System.DateTimeOffset.Month%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-644">还可以通过使用 "M" 或 " <xref:System.DateTimeOffset> MM" 自定义格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的月组件的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-644">You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "M" or "MM" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-645">下面的示例以三种不同的方式<xref:System.DateTimeOffset>显示值的月份部分:</span><span class="sxs-lookup"><span data-stu-id="15062-645">The following example displays the month component of a <xref:System.DateTimeOffset> value in three different ways:</span></span>  
  
-   <span data-ttu-id="15062-646">通过检索<xref:System.DateTimeOffset.Month%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-646">By retrieving the value of the <xref:System.DateTimeOffset.Month%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-647">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> M" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-647">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "M" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-648">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> MM" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-648">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "MM" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]
 [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset Now { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTimeOffset" Usage="System.DateTimeOffset.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-649">获取一个 <see cref="T:System.DateTimeOffset" /> 对象，该对象设置为当前计算机上的当前日期和时间，偏移量设置为本地时间与协调世界时 (UTC) 之间的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-649">Gets a <see cref="T:System.DateTimeOffset" /> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="15062-650">一个 <see cref="T:System.DateTimeOffset" /> 对象，其日期和时间为当前的本地时间，其偏移量为本地时区与协调世界时 (UTC) 之间的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-650">A <see cref="T:System.DateTimeOffset" /> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-651">当前本地时间的毫秒部分的精度取决于系统时钟的分辨率。</span><span class="sxs-lookup"><span data-stu-id="15062-651">The precision of the current local time's millisecond component depends on the resolution of the system clock.</span></span> <span data-ttu-id="15062-652">在 Windows NT 3.5 及更高版本以及 Windows Vista 操作系统上, 时钟的分辨率大约为10-15 毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-652">On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-653">下面的示例使用<xref:System.DateTimeOffset.Now%2A>属性检索当前日期和时间, 并使用该<xref:System.DateTimeOffset>类型支持的每个[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)来显示它。</span><span class="sxs-lookup"><span data-stu-id="15062-653">The following example uses the <xref:System.DateTimeOffset.Now%2A> property to retrieve the current date and time and displays it by using each of the [standard date and time format strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) supported by the <xref:System.DateTimeOffset> type.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]
 [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  
  
 <span data-ttu-id="15062-654">下面的示例使用<xref:System.DateTimeOffset.Now%2A>和<xref:System.DateTimeOffset.Millisecond%2A>属性来确定系统时钟的分辨率。</span><span class="sxs-lookup"><span data-stu-id="15062-654">The following example uses the <xref:System.DateTimeOffset.Now%2A> and <xref:System.DateTimeOffset.Millisecond%2A> properties to determine the resolution of the system clock.</span></span> <span data-ttu-id="15062-655">仅当其毫秒部分的值发生更改时, 它才会显示时间。</span><span class="sxs-lookup"><span data-stu-id="15062-655">It displays the time only when the value of its millisecond component has changed.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]
 [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TimeSpan Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Offset" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Offset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : TimeSpan" Usage="System.DateTimeOffset.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-656">获取与协调世界时 (UTC) 之间的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-656">Gets the time's offset from Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="15062-657">当前的 <see cref="T:System.DateTimeOffset" /> 对象的时间值与协调世界时 (UTC) 之差。</span><span class="sxs-lookup"><span data-stu-id="15062-657">The difference between the current <see cref="T:System.DateTimeOffset" /> object's time value and Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-658"><xref:System.TimeSpan.Hours%2A> 返回<xref:System.TimeSpan>的对象的属性值可以介于-14 小时到14小时之间。</span><span class="sxs-lookup"><span data-stu-id="15062-658">The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours.</span></span>  
  
 <span data-ttu-id="15062-659"><xref:System.DateTimeOffset.Offset%2A>属性的值精确到分钟。</span><span class="sxs-lookup"><span data-stu-id="15062-659">The value of the <xref:System.DateTimeOffset.Offset%2A> property is precise to the minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-660">下面的示例使用<xref:System.DateTimeOffset.Offset%2A>属性显示本地时间与协调世界时 (UTC) 之间的差异。</span><span class="sxs-lookup"><span data-stu-id="15062-660">The following example uses the <xref:System.DateTimeOffset.Offset%2A> property to display the local time's difference from Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]
 [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset + timeSpan" FrameworkAlternate="netframework-2.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz + timeSpan" FrameworkAlternate="netframework-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;dotnet-uwp-10.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="15062-661">要向其加上时间间隔的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-661">The object to add the time interval to.</span></span></param>
        <param name="dateTimeTz"><span data-ttu-id="15062-662">要向其加上时间间隔的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-662">The object to add the time interval to.</span></span></param>
        <param name="timeSpan"><span data-ttu-id="15062-663">待添加的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-663">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="15062-664">将指定的时间间隔与具有指定日期和时间的 <see cref="T:System.DateTimeOffset" /> 对象相加，产生一个具有新的日期和时间的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-664">Adds a specified time interval to a <see cref="T:System.DateTimeOffset" /> object that has a specified date and time, and yields a <see cref="T:System.DateTimeOffset" /> object that has new a date and time.</span></span></summary>
        <returns><span data-ttu-id="15062-665">一个对象，其值为 <paramref name="dateTimeTz" /> 与 <paramref name="timeSpan" /> 的值之和。</span><span class="sxs-lookup"><span data-stu-id="15062-665">An object whose value is the sum of the values of <paramref name="dateTimeTz" /> and <paramref name="timeSpan" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-666">方法定义了<xref:System.DateTimeOffset>值的加法运算。 <xref:System.DateTimeOffset.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="15062-666">The <xref:System.DateTimeOffset.op_Addition%2A> method defines the addition operation for <xref:System.DateTimeOffset> values.</span></span> <span data-ttu-id="15062-667">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-667">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]
 [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  
  
 <span data-ttu-id="15062-668">不支持自定义运算符和运算符重载的语言可以改为<xref:System.DateTimeOffset.Add%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-668">Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="15062-669">此运算符的等效方法为<xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-669">The equivalent method for this operator is <xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-670">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-670">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-671">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-671">-or-</span></span> 
<span data-ttu-id="15062-672">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-672">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-673">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-673">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-674">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-674">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-675">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-675">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-676">确定两个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否表示同一时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-676">Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects represent the same point in time.</span></span></summary>
        <returns><span data-ttu-id="15062-677">如果两个 <see cref="T:System.DateTimeOffset" /> 对象具有相同的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-677"><see langword="true" /> if both <see cref="T:System.DateTimeOffset" /> objects have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-678">方法定义<xref:System.DateTimeOffset>对象的相等运算符的运算。 <xref:System.DateTimeOffset.op_Equality%2A></span><span class="sxs-lookup"><span data-stu-id="15062-678">The <xref:System.DateTimeOffset.op_Equality%2A> method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-679">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-679">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]
 [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  
  
 <span data-ttu-id="15062-680">在计算`left`和`right`操作数的相等性之前, 运算符会将这两个值都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-680">Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-681">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-681">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 <span data-ttu-id="15062-682">换言之, <xref:System.DateTimeOffset.op_Equality%2A>方法确定两个<xref:System.DateTimeOffset>对象是否表示单个时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-682">In other words, the <xref:System.DateTimeOffset.op_Equality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time.</span></span> <span data-ttu-id="15062-683">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-683">It directly compares neither dates and times nor offsets.</span></span> <span data-ttu-id="15062-684">若要确定两<xref:System.DateTimeOffset>个对象是否表示相同时间并具有相同的偏移量值, <xref:System.DateTimeOffset.EqualsExact%2A>请使用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-684">To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.</span></span>  
  
 <span data-ttu-id="15062-685">此运算符的等效方法是<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-685">The equivalent method for this operator is <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-686">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-686">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-687">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-687">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-688">确定一个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否大于（或晚于）另一个指定的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-688">Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is greater than (or later than) a second specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-689">如果 <paramref name="left" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值晚于 <paramref name="right" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-689"><see langword="true" /> if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is later than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-690"><xref:System.DateTimeOffset.op_GreaterThan%2A>方法为<xref:System.DateTimeOffset>对象定义大于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="15062-690">The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-691">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-691">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]
 [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  
  
 <span data-ttu-id="15062-692">不支持自定义运算符的语言可以改为<xref:System.DateTimeOffset.Compare%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-692">Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead.</span></span> <span data-ttu-id="15062-693">它们还可以直接调用<xref:System.DateTimeOffset.op_GreaterThan%2A>方法, 如下例所示。</span><span class="sxs-lookup"><span data-stu-id="15062-693">They can also call the <xref:System.DateTimeOffset.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  
  
 <span data-ttu-id="15062-694">在计算`left`和`right`操作数之前, 运算符会将这两个值都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-694">Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-695">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-695">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]
 [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  
  
 <span data-ttu-id="15062-696">此运算符的等效方法是<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-696">The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-697">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-697">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-698">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-698">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-699">确定一个指定的 <see cref="T:System.DateTimeOffset" /> 对象是大于还是等于另一个指定的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-699">Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is greater than or equal to a second specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-700">如果 <paramref name="left" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值等于或晚于 <paramref name="right" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-700"><see langword="true" /> if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is the same as or later than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-701"><xref:System.DateTimeOffset.op_GreaterThan%2A>方法为<xref:System.DateTimeOffset>对象定义大于或等于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="15062-701">The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-702">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-702">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]
 [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  
  
 <span data-ttu-id="15062-703">不支持自定义运算符的语言可以改为<xref:System.DateTimeOffset.Compare%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-703">Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead.</span></span> <span data-ttu-id="15062-704">某些语言还可以直接调用<xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A>方法, 如下例所示。</span><span class="sxs-lookup"><span data-stu-id="15062-704">Some languages can also call the <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  
  
 <span data-ttu-id="15062-705">在计算`left`和`right`操作数之前, 运算符会将这两个值都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-705">Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-706">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-706">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]
 [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  
  
 <span data-ttu-id="15062-707">此运算符的等效方法是<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-707">The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Implicit(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DateTime -&gt; DateTimeOffset" Usage="System.DateTimeOffset.op_Implicit dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="15062-708">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-708">The object to convert.</span></span></param>
        <summary><span data-ttu-id="15062-709">定义从 <see cref="T:System.DateTime" /> 对象到 <see cref="T:System.DateTimeOffset" /> 对象的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="15062-709">Defines an implicit conversion of a <see cref="T:System.DateTime" /> object to a <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-710">被转换的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-710">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-711">使用<xref:System.DateTimeOffset.op_Implicit%2A>方法, 编译器可以自动<xref:System.DateTime>将对象转换为<xref:System.DateTimeOffset>对象, 而无需使用显式强制转换运算符C#(在中) 或调用转换函数 (在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="15062-711">The <xref:System.DateTimeOffset.op_Implicit%2A> method enables the compiler to automatically convert a <xref:System.DateTime> object to a <xref:System.DateTimeOffset> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="15062-712">它定义了不涉及数据丢失且不引发的<xref:System.OverflowException>扩大转换。</span><span class="sxs-lookup"><span data-stu-id="15062-712">It defines a widening conversion that does not involve data loss and does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="15062-713">此<xref:System.DateTimeOffset.op_Implicit%2A>方法可使代码如下所示:</span><span class="sxs-lookup"><span data-stu-id="15062-713">The <xref:System.DateTimeOffset.op_Implicit%2A> method makes code such as the following possible:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#7)]
 [!code-vb[System.DateTimeOffset.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#7)]  
  
 <span data-ttu-id="15062-714">此方法等效于<xref:System.DateTimeOffset.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="15062-714">This method is equivalent to the <xref:System.DateTimeOffset.%23ctor%2A> constructor.</span></span> <span data-ttu-id="15062-715">生成<xref:System.DateTimeOffset>的对象的偏移量取决于`dateTime`参数的<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>属性的值:</span><span class="sxs-lookup"><span data-stu-id="15062-715">The offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` parameter:</span></span>  
  
-   <span data-ttu-id="15062-716">如果<xref:System.DateTime.Kind%2A?displayProperty=nameWithType>属性的值为<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, 则将<xref:System.DateTimeOffset>对象的日期和时间设置为等于`dateTime`, 其<xref:System.DateTimeOffset.Offset%2A>属性设置为等于0。</span><span class="sxs-lookup"><span data-stu-id="15062-716">If the value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, the date and time of the <xref:System.DateTimeOffset> object is set equal to `dateTime`, and its <xref:System.DateTimeOffset.Offset%2A> property is set equal to 0.</span></span>  
  
-   <span data-ttu-id="15062-717"><xref:System.DateTime.Kind%2A?displayProperty=nameWithType>如果`dateTime`属性的值为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTimeKind.Local?displayProperty=nameWithType>或, 则将<xref:System.DateTimeOffset>对象的日期和时间设置为等于, 并将其<xref:System.DateTimeOffset.Offset%2A>属性设置为等于本地系统的当前时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-717">If the value of the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, the date and time of the <xref:System.DateTimeOffset> object is set equal to `dateTime`, and its <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone.</span></span>  
  
 <span data-ttu-id="15062-718">此运算符的等效方法是<xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-718">The equivalent method for this operator is <xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-719">通过应用偏移量得出的协调世界时 (UTC) 日期和时间早于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-719">The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-720">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-720">-or-</span></span> 
<span data-ttu-id="15062-721">通过应用偏移量得出的 UTC 日期和时间晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-721">The UTC date and time that results from applying the offset is later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-722">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-722">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-723">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-723">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-724">确定两个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否表示不同的时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-724">Determines whether two specified <see cref="T:System.DateTimeOffset" /> objects refer to different points in time.</span></span></summary>
        <returns><span data-ttu-id="15062-725">如果 <paramref name="left" /> 和 <paramref name="right" /> 不具有相同的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-725"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> do not have the same <see cref="P:System.DateTimeOffset.UtcDateTime" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-726">方法定义<xref:System.DateTimeOffset>对象的不相等运算符的运算。 <xref:System.DateTimeOffset.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="15062-726">The <xref:System.DateTimeOffset.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-727">它始终从<xref:System.DateTimeOffset.op_Equality%2A>返回相反的结果。</span><span class="sxs-lookup"><span data-stu-id="15062-727">It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>.</span></span> <span data-ttu-id="15062-728"><xref:System.DateTimeOffset.op_Inequality%2A>方法启用如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-728">The <xref:System.DateTimeOffset.op_Inequality%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]
 [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  
  
 <span data-ttu-id="15062-729">在计算`left`和`right`操作数的相等性之前, 运算符会将这两个值都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-729">Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-730">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-730">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 <span data-ttu-id="15062-731">换言之, <xref:System.DateTimeOffset.op_Inequality%2A>方法确定两个<xref:System.DateTimeOffset>对象是否表示不同的时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-731">In other words, the <xref:System.DateTimeOffset.op_Inequality%2A> method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time.</span></span> <span data-ttu-id="15062-732">它直接比较日期和时间以及偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-732">It directly compares neither dates and times nor offsets.</span></span>  
  
 <span data-ttu-id="15062-733">不支持自定义运算符的语言可以改为<xref:System.DateTimeOffset.Compare%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-733">Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead.</span></span> <span data-ttu-id="15062-734">此外, 某些语言还可以直接调用<xref:System.DateTimeOffset.op_Inequality%2A>方法, 如下例所示。</span><span class="sxs-lookup"><span data-stu-id="15062-734">In addition, some languages can also call the <xref:System.DateTimeOffset.op_Inequality%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  
  
 <span data-ttu-id="15062-735">此运算符的等效方法是<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-735">The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-736">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-736">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-737">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-737">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-738">确定一个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否小于另一个指定的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-738">Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is less than a second specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-739">如果 <paramref name="left" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值早于 <paramref name="right" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-739"><see langword="true" /> if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is earlier than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-740"><xref:System.DateTimeOffset.op_LessThan%2A>方法为<xref:System.DateTimeOffset>对象定义小于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="15062-740">The <xref:System.DateTimeOffset.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-741">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-741">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]
 [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  
  
 <span data-ttu-id="15062-742">在计算`left`和`right`操作数之前, 运算符将两个操作数都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-742">Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-743">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-743">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]
 [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  
  
 <span data-ttu-id="15062-744">不支持自定义运算符的语言可以改为<xref:System.DateTimeOffset.Compare%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-744">Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead.</span></span> <span data-ttu-id="15062-745">此外, 某些语言还可以直接调用<xref:System.DateTimeOffset.op_LessThan%2A>方法, 如下例所示。</span><span class="sxs-lookup"><span data-stu-id="15062-745">In addition, some languages can also call the <xref:System.DateTimeOffset.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  
  
 <span data-ttu-id="15062-746">此运算符的等效方法是<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-746">The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-747">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-747">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="15062-748">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-748">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="15062-749">确定一个指定的 <see cref="T:System.DateTimeOffset" /> 对象是否小于另一个指定的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-749">Determines whether one specified <see cref="T:System.DateTimeOffset" /> object is less than a second specified <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-750">如果 <paramref name="left" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值早于 <paramref name="right" /> 的 <see cref="P:System.DateTimeOffset.UtcDateTime" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-750"><see langword="true" /> if the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="left" /> is earlier than the <see cref="P:System.DateTimeOffset.UtcDateTime" /> value of <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-751">方法定义<xref:System.DateTimeOffset>对象的小于或等于运算符的运算。 <xref:System.DateTimeOffset.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="15062-751">The <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-752">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-752">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]
 [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  
  
 <span data-ttu-id="15062-753">不支持自定义运算符的语言可以改为<xref:System.DateTimeOffset.Compare%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-753">Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead.</span></span> <span data-ttu-id="15062-754">某些语言还可以直接调用<xref:System.DateTimeOffset.op_LessThanOrEqual%2A>方法, 如下例所示。</span><span class="sxs-lookup"><span data-stu-id="15062-754">Some languages can also call the <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  
  
 <span data-ttu-id="15062-755">在计算`left`和`right`操作数之前, 运算符会将这两个值都转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-755">Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-756">操作等效于以下内容:</span><span class="sxs-lookup"><span data-stu-id="15062-756">The operation is equivalent to the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]
 [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  
  
 <span data-ttu-id="15062-757">此运算符的等效方法是<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-757">The equivalent method for this operator is <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-758">从 <see cref="T:System.DateTimeOffset" /> 对象中减去指定的 <see cref="T:System.TimeSpan" /> 或 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-758">Subtracts a specified <see cref="T:System.DateTimeOffset" /> or <see cref="T:System.TimeSpan" /> object from a <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As DateTimeOffset, right As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * DateTimeOffset -&gt; TimeSpan" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="15062-759">被减数。</span><span class="sxs-lookup"><span data-stu-id="15062-759">The minuend.</span></span></param>
        <param name="right"><span data-ttu-id="15062-760">减数。</span><span class="sxs-lookup"><span data-stu-id="15062-760">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="15062-761">从一个 <see cref="T:System.DateTimeOffset" /> 对象中减去另一个对象并生成时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-761">Subtracts one <see cref="T:System.DateTimeOffset" /> object from another and yields a time interval.</span></span></summary>
        <returns><span data-ttu-id="15062-762">一个表示 <paramref name="left" /> 与 <paramref name="right" /> 之差的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-762">An object that represents the difference between <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-763"><xref:System.DateTimeOffset.op_Subtraction%2A>方法为<xref:System.DateTimeOffset>对象定义减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-763">The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-764">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-764">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]
 [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  
  
 <span data-ttu-id="15062-765">不支持自定义运算符和运算符重载的语言可以改为<xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-765">Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="15062-766">此运算符的等效方法为<xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-766">The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-767">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-767">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset - timeSpan" FrameworkAlternate="netframework-2.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz - timeSpan" FrameworkAlternate="netframework-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;dotnet-uwp-10.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="15062-768">要从其减去的日期和时间对象。</span><span class="sxs-lookup"><span data-stu-id="15062-768">The date and time object to subtract from.</span></span></param>
        <param name="dateTimeTz"><span data-ttu-id="15062-769">要从其减去的日期和时间对象。</span><span class="sxs-lookup"><span data-stu-id="15062-769">The date and time object to subtract from.</span></span></param>
        <param name="timeSpan"><span data-ttu-id="15062-770">待减去的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-770">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="15062-771">从指定的日期和时间减去指定的时间间隔，并生成新的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-771">Subtracts a specified time interval from a specified date and time, and yields a new date and time.</span></span></summary>
        <returns><span data-ttu-id="15062-772">一个对象，它等于 <paramref name="dateTimeOffset" /> 减 <paramref name="timeSpan" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="15062-772">An object that is equal to the value of <paramref name="dateTimeOffset" /> minus <paramref name="timeSpan" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-773"><xref:System.DateTimeOffset.op_Subtraction%2A>方法为<xref:System.DateTimeOffset>对象定义减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-773">The <xref:System.DateTimeOffset.op_Subtraction%2A> method defines the subtraction operation for <xref:System.DateTimeOffset> objects.</span></span> <span data-ttu-id="15062-774">它可以实现如下所示的代码:</span><span class="sxs-lookup"><span data-stu-id="15062-774">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]
 [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  
  
 <span data-ttu-id="15062-775">不支持自定义运算符和运算符重载的语言可以改为<xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-775">Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="15062-776">此运算符的等效方法为<xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-776">The equivalent method for this operator is <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-777">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" /> 或大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-777">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" /> or greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-778">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-778">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-779">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-779">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-780">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-780">A string that contains a date and time to convert.</span></span></param>
        <summary><span data-ttu-id="15062-781">将日期、时间和偏移量的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-781">Converts the specified string representation of a date, time, and offset to its <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="15062-782">一个对象，它等效于 <paramref name="input" /> 中包含的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-782">An object that is equivalent to the date and time that is contained in <paramref name="input" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-783"><xref:System.DateTimeOffset.Parse%28System.String%29>分析一个字符串, 其中包含三个元素, 这些元素可按任意顺序出现并由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="15062-783"><xref:System.DateTimeOffset.Parse%28System.String%29> parses a string with three elements that can appear in any order and are delimited by white space.</span></span> <span data-ttu-id="15062-784">这三个元素如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="15062-784">These three elements are as shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-785">元素</span><span class="sxs-lookup"><span data-stu-id="15062-785">Element</span></span>|<span data-ttu-id="15062-786">示例</span><span class="sxs-lookup"><span data-stu-id="15062-786">Example</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="15062-787">\<日期 ></span><span class="sxs-lookup"><span data-stu-id="15062-787">\<Date></span></span>|<span data-ttu-id="15062-788">"2/10/2007"</span><span class="sxs-lookup"><span data-stu-id="15062-788">"2/10/2007"</span></span>|  
|<span data-ttu-id="15062-789">\<时间 ></span><span class="sxs-lookup"><span data-stu-id="15062-789">\<Time></span></span>|<span data-ttu-id="15062-790">"1:02:03 PM"</span><span class="sxs-lookup"><span data-stu-id="15062-790">"1:02:03 PM"</span></span>|  
|<span data-ttu-id="15062-791">\<Offset></span><span class="sxs-lookup"><span data-stu-id="15062-791">\<Offset></span></span>|<span data-ttu-id="15062-792">"-7:30"</span><span class="sxs-lookup"><span data-stu-id="15062-792">"-7:30"</span></span>|  
  
 <span data-ttu-id="15062-793">尽管这些元素中的每个元素\<都是可选的, 但 Offset > 不能单独出现。</span><span class="sxs-lookup"><span data-stu-id="15062-793">Although each of these elements is optional, \<Offset> cannot appear by itself.</span></span> <span data-ttu-id="15062-794">它必须与\<日期 > 或\<时间 > 一起提供。</span><span class="sxs-lookup"><span data-stu-id="15062-794">It must be provided together with either \<Date> or \<Time>.</span></span> <span data-ttu-id="15062-795">如果\<缺少日期 >, 则其默认值为当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-795">If \<Date> is missing, its default value is the current day.</span></span> <span data-ttu-id="15062-796">如果\<缺少时间 >, 则其默认值为 12:00:00 AM。</span><span class="sxs-lookup"><span data-stu-id="15062-796">If \<Time> is missing, its default value is 12:00:00 AM.</span></span> <span data-ttu-id="15062-797">如果\<存在日期 > 但其年份组成部分只包含两个数字, 则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换为当前区域性当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="15062-797">If \<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="15062-798">如果\<缺少 Offset >, 则其默认值为本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-798">If \<Offset> is missing, its default value is the offset of the local time zone.</span></span> <span data-ttu-id="15062-799">\<偏移量 > 可以表示与协调世界时 (UTC) 之间的负值或正偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-799">\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-800">在任一情况下\<, 偏移 > 都必须包含一个符号符号。</span><span class="sxs-lookup"><span data-stu-id="15062-800">In either case, \<Offset> must include a sign symbol.</span></span>  
  
 <span data-ttu-id="15062-801">通过使用为当前区域性初始化的<xref:System.Globalization.DateTimeFormatInfo>对象中的格式设置信息对字符串进行分析。`input`</span><span class="sxs-lookup"><span data-stu-id="15062-801">The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture.</span></span> <span data-ttu-id="15062-802">若要分析包含指定格式的字符串, 该字符串不一定对应于当前区域性的格式设置, 请使用<xref:System.DateTimeOffset.ParseExact%2A>方法并提供格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-802">To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-803">下面的示例调用<xref:System.DateTimeOffset.Parse%28System.String%29>方法来分析多个日期和时间字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-803">The following example calls the <xref:System.DateTimeOffset.Parse%28System.String%29> method to parse several date and time strings.</span></span> <span data-ttu-id="15062-804">该示例包括从2007年3月22日到区域性为 en-us 的系统的输出。</span><span class="sxs-lookup"><span data-stu-id="15062-804">The example includes output from March 22, 2007, on a system whose culture is en-us.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]
 [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-805">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-805">The offset is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-806"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-806"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-807"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-807"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-808">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-808">-or-</span></span> 
 <span data-ttu-id="15062-809"><paramref name="input" /> 包含不带日期或时间的偏移量值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-809"><paramref name="input" /> contains the string representation of an offset value without a date or time.</span></span></exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-810">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-810">A string that contains a date and time to convert.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-811">一个对象，提供有关 <paramref name="input" /> 的区域性特定的格式信息。</span><span class="sxs-lookup"><span data-stu-id="15062-811">An object that provides culture-specific format information about <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-812">使用指定的特定于区域性的格式信息，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-812">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="15062-813">一个对象，它等效于 <paramref name="input" /> 中包含的日期和时间，由 <paramref name="formatProvider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="15062-813">An object that is equivalent to the date and time that is contained in <paramref name="input" />, as specified by <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-814">此方法分析一个字符串, 其中包含三个元素, 这些元素可按任意顺序出现并由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="15062-814">This method parses a string with three elements that can appear in any order and are delimited by white space.</span></span> <span data-ttu-id="15062-815">下表显示了这三个元素。</span><span class="sxs-lookup"><span data-stu-id="15062-815">These three elements are shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-816">元素</span><span class="sxs-lookup"><span data-stu-id="15062-816">Element</span></span>|<span data-ttu-id="15062-817">示例</span><span class="sxs-lookup"><span data-stu-id="15062-817">Example</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="15062-818">\<日期 ></span><span class="sxs-lookup"><span data-stu-id="15062-818">\<Date></span></span>|<span data-ttu-id="15062-819">"2/10/2007"</span><span class="sxs-lookup"><span data-stu-id="15062-819">"2/10/2007"</span></span>|  
|<span data-ttu-id="15062-820">\<时间 ></span><span class="sxs-lookup"><span data-stu-id="15062-820">\<Time></span></span>|<span data-ttu-id="15062-821">"1:02:03 PM"</span><span class="sxs-lookup"><span data-stu-id="15062-821">"1:02:03 PM"</span></span>|  
|<span data-ttu-id="15062-822">\<Offset></span><span class="sxs-lookup"><span data-stu-id="15062-822">\<Offset></span></span>|<span data-ttu-id="15062-823">"-7:30"</span><span class="sxs-lookup"><span data-stu-id="15062-823">"-7:30"</span></span>|  
  
 <span data-ttu-id="15062-824">尽管这些元素中的每个元素\<都是可选的, 但 Offset > 不能单独出现。</span><span class="sxs-lookup"><span data-stu-id="15062-824">Although each of these elements is optional, \<Offset> cannot appear by itself.</span></span> <span data-ttu-id="15062-825">它必须与\<日期 > 或\<时间 > 一起提供。</span><span class="sxs-lookup"><span data-stu-id="15062-825">It must be provided together with either \<Date> or \<Time>.</span></span> <span data-ttu-id="15062-826">如果\<缺少日期 >, 则其默认值为当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-826">If \<Date> is missing, its default value is the current day.</span></span> <span data-ttu-id="15062-827">如果\<存在日期 > 但其年份组成部分只包含两个数字, 则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换`provider`为参数的当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="15062-827">If \<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="15062-828">如果\<缺少时间 >, 则其默认值为 12:00:00 AM。</span><span class="sxs-lookup"><span data-stu-id="15062-828">If \<Time> is missing, its default value is 12:00:00 AM.</span></span> <span data-ttu-id="15062-829">如果\<缺少 Offset >, 则其默认值为本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-829">If \<Offset> is missing, its default value is the offset of the local time zone.</span></span> <span data-ttu-id="15062-830">\<偏移量 > 可以表示与协调世界时 (UTC) 之间的负值或正偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-830">\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-831">在任一情况下\<, 偏移 > 都必须包含一个符号符号。</span><span class="sxs-lookup"><span data-stu-id="15062-831">In either case, \<Offset> must include a sign symbol.</span></span>  
  
 <span data-ttu-id="15062-832">这三个元素的格式由`formatProvider`参数定义, 可以是以下之一:</span><span class="sxs-lookup"><span data-stu-id="15062-832">The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-833">一个<xref:System.Globalization.CultureInfo>对象, 它表示在`input`参数中使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-833">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter.</span></span> <span data-ttu-id="15062-834">由属性返回的`input`对象定义中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-834">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `input`.</span></span>  
  
-   <span data-ttu-id="15062-835">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-835">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-836">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-836">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-837">Offset > 中\<使用的正号或负号必须是 + 或-。</span><span class="sxs-lookup"><span data-stu-id="15062-837">The positive or negative sign used in \<Offset> must be either + or -.</span></span> <span data-ttu-id="15062-838">它<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>不由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> 参数`formatProvider`的<xref:System.Globalization.NumberFormatInfo>对象的或属性定义。</span><span class="sxs-lookup"><span data-stu-id="15062-838">It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-839">下面的示例分析为 fr-fr 区域性设置格式的日期和时间字符串, 并使用本地系统的默认 en-us 区域性显示它们。</span><span class="sxs-lookup"><span data-stu-id="15062-839">The following example parses date and time strings that are formatted for the fr-fr culture and displays them using the local system's default en-us culture.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]
 [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-840">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-840">The offset is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-841"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-841"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-842"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-842"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-843">或</span><span class="sxs-lookup"><span data-stu-id="15062-843">-or-</span></span> 
 <span data-ttu-id="15062-844"><paramref name="input" /> 包含不带日期或时间的偏移量值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-844"><paramref name="input" /> contains the string representation of an offset value without a date or time.</span></span></exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-845">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-845">A string that contains a date and time to convert.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-846">一个对象，提供有关 <paramref name="input" /> 的区域性特定的格式信息。</span><span class="sxs-lookup"><span data-stu-id="15062-846">An object that provides culture-specific format information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-847">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-847">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span> <span data-ttu-id="15062-848">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="15062-848">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="15062-849">使用指定的区域性特定格式信息和格式设置样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-849">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified culture-specific format information and formatting style.</span></span></summary>
        <returns><span data-ttu-id="15062-850">一个对象，它等效于 <paramref name="input" /> 中包含的日期和时间，由 <paramref name="formatProvider" /> 和 <paramref name="styles" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="15062-850">An object that is equivalent to the date and time that is contained in <paramref name="input" /> as specified by <paramref name="formatProvider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-851">此方法分析一个字符串, 其中包含三个元素, 这些元素可按任意顺序出现并由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="15062-851">This method parses a string with three elements that can appear in any order and are delimited by white space.</span></span> <span data-ttu-id="15062-852">下表显示了这三个元素。</span><span class="sxs-lookup"><span data-stu-id="15062-852">These three elements are shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-853">元素</span><span class="sxs-lookup"><span data-stu-id="15062-853">Element</span></span>|<span data-ttu-id="15062-854">示例</span><span class="sxs-lookup"><span data-stu-id="15062-854">Example</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="15062-855">\<日期 ></span><span class="sxs-lookup"><span data-stu-id="15062-855">\<Date></span></span>|<span data-ttu-id="15062-856">"2/10/2007"</span><span class="sxs-lookup"><span data-stu-id="15062-856">"2/10/2007"</span></span>|  
|<span data-ttu-id="15062-857">\<时间 ></span><span class="sxs-lookup"><span data-stu-id="15062-857">\<Time></span></span>|<span data-ttu-id="15062-858">"1:02:03 PM"</span><span class="sxs-lookup"><span data-stu-id="15062-858">"1:02:03 PM"</span></span>|  
|<span data-ttu-id="15062-859">\<Offset></span><span class="sxs-lookup"><span data-stu-id="15062-859">\<Offset></span></span>|<span data-ttu-id="15062-860">"-7:30"</span><span class="sxs-lookup"><span data-stu-id="15062-860">"-7:30"</span></span>|  
  
 <span data-ttu-id="15062-861">尽管这些元素中的每个元素\<都是可选的, 但 Offset > 不能单独出现。</span><span class="sxs-lookup"><span data-stu-id="15062-861">Although each of these elements is optional, \<Offset> cannot appear by itself.</span></span> <span data-ttu-id="15062-862">它必须与\<日期 > 或\<时间 > 一起提供。</span><span class="sxs-lookup"><span data-stu-id="15062-862">It must be provided together with either \<Date> or \<Time>.</span></span> <span data-ttu-id="15062-863">如果\<缺少日期 >, 则其默认值为当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-863">If \<Date> is missing, its default value is the current day.</span></span> <span data-ttu-id="15062-864">如果\<存在日期 > 但其年份组成部分只包含两个数字, 则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换`provider`为参数的当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="15062-864">If \<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="15062-865">如果\<缺少时间 >, 则其默认值为 12:00:00 AM。</span><span class="sxs-lookup"><span data-stu-id="15062-865">If \<Time> is missing, its default value is 12:00:00 AM.</span></span> <span data-ttu-id="15062-866">如果\<缺少 Offset >, 则其默认值为本地时区的偏移量, 或者<xref:System.TimeSpan.Zero?displayProperty=nameWithType> , 如果在`styles`参数中<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>指定<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>了或值, 则为。</span><span class="sxs-lookup"><span data-stu-id="15062-866">If \<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=nameWithType> if either the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> or <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> value is specified in the `styles` parameter.</span></span> <span data-ttu-id="15062-867">如果\<> 存在偏移量, 则它可以表示与协调世界时 (UTC) 之间的负值或正偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-867">If \<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-868">在任一情况下\<, 偏移 > 都必须包含一个符号符号。</span><span class="sxs-lookup"><span data-stu-id="15062-868">In either case, \<Offset> must include a sign symbol.</span></span>  
  
 <span data-ttu-id="15062-869">这三个元素的格式由`formatProvider`参数定义, 可以是以下之一:</span><span class="sxs-lookup"><span data-stu-id="15062-869">The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-870">一个<xref:System.Globalization.CultureInfo>对象, 它表示在`input`参数中使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-870">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter.</span></span> <span data-ttu-id="15062-871">由属性返回的`input`对象定义中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-871">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `input`.</span></span>  
  
-   <span data-ttu-id="15062-872">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-872">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-873">每个元素还可以用前导或尾随空格括起来, \<日期 > 和\<时间 > 元素可以包含内部空格 (如 6: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-873">Each element can also be enclosed by leading or trailing white space, and the \<Date> and \<Time> elements can include inner white space (such as 6:   00:00).</span></span> <span data-ttu-id="15062-874">\<只有偏移 > 组件不能包含内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-874">Only the \<Offset> component cannot include inner white space.</span></span>  
  
 <span data-ttu-id="15062-875">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-875">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-876">Offset > 中\<使用的正号或负号必须是 + 或-。</span><span class="sxs-lookup"><span data-stu-id="15062-876">The positive or negative sign used in \<Offset> must be either + or -.</span></span> <span data-ttu-id="15062-877"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>它不是由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> 参数`formatProvider`返回的<xref:System.Globalization.NumberFormatInfo>对象的或属性定义的。</span><span class="sxs-lookup"><span data-stu-id="15062-877">It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter.</span></span>  
  
 <span data-ttu-id="15062-878">下表显示了支持的<xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType>枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="15062-878">The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType> enumeration that are supported.</span></span>  
  
|<span data-ttu-id="15062-879">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="15062-879">DateTimeStyles member</span></span>|<span data-ttu-id="15062-880">说明</span><span class="sxs-lookup"><span data-stu-id="15062-880">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-881">分析由`input`表示的字符串, 如有必要, 将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-881">Parses the string represented by `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-882">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-882">It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-883">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-883">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-884">\<日期 > 和\<时间 > 元素中允许有内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-884">Inner white space is permitted in the \<Date> and \<Time> elements.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-885">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-885">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-886">在分析字符串中的每个组件前面都允许使用前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-886">Leading white space is permitted in front of each component in the parsed string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-887">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-887">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-888">在分析字符串中的每个组件前面都允许尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-888">Trailing white space is permitted in front of each component in the parsed string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-889">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-889">This is the default behavior.</span></span> <span data-ttu-id="15062-890">不能通过提供限制性更强<xref:System.Globalization.DateTimeStyles>的枚举值 ( <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>如) 来重写它。</span><span class="sxs-lookup"><span data-stu-id="15062-890">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-891">指示如果`input`参数\<缺少偏移 > 元素, 则应提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-891">Indicates that, if the `input` parameter lacks an \<Offset> element, the offset of the local time zone should be provided.</span></span> <span data-ttu-id="15062-892">这是<xref:System.DateTimeOffset.Parse%2A>方法的默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-892">This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-893">指示如果`input`参数\<缺少偏移 > 元素, 则应提供 UTC 偏移量 (00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-893">Indicates that, if the `input` parameter lacks an \<Offset> element, the UTC offset (00:00) should be provided.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-894">虽然有效, 但此值将被忽略且不起作用。</span><span class="sxs-lookup"><span data-stu-id="15062-894">Although valid, this value is ignored and has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-895">由于结构不`Kind`包含属性, 因此此值不起作用。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-895">Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.</span></span>|  
  
 <span data-ttu-id="15062-896">只支持<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="15062-896">Only the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> value is not supported.</span></span> <span data-ttu-id="15062-897">如果参数`styles`中包含此值, 则<xref:System.ArgumentException>会引发。</span><span class="sxs-lookup"><span data-stu-id="15062-897">An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-898">下面的示例演示了将<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>、 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>和<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>值传递给`styles` <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法的参数的影响。</span><span class="sxs-lookup"><span data-stu-id="15062-898">The following example illustrates the effect of passing the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> values to the `styles` parameter of the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]
 [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-899">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-899">The offset is greater than 14 hours or less than -14 hours.</span></span>  
  
<span data-ttu-id="15062-900">或</span><span class="sxs-lookup"><span data-stu-id="15062-900">-or-</span></span> 
 <span data-ttu-id="15062-901"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-901"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="15062-902">或</span><span class="sxs-lookup"><span data-stu-id="15062-902">-or-</span></span> 
 <span data-ttu-id="15062-903"><paramref name="styles" /> 包含不支持的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-903"><paramref name="styles" /> includes an unsupported <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="15062-904">或</span><span class="sxs-lookup"><span data-stu-id="15062-904">-or-</span></span> 
 <span data-ttu-id="15062-905"><paramref name="styles" /> 包含不能一起使用的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-905"><paramref name="styles" /> includes <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-906"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-906"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-907"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-907"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-908">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-908">-or-</span></span> 
 <span data-ttu-id="15062-909"><paramref name="input" /> 包含不带日期或时间的偏移量值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-909"><paramref name="input" /> contains the string representation of an offset value without a date or time.</span></span></exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-910">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-910">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent.</span></span> <span data-ttu-id="15062-911">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-911">The format of the string representation must match a specified format exactly.</span></span></summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-912">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-912">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="15062-913">用于定义所需的 <paramref name="input" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-913">A format specifier that defines the expected format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-914">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-914">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-915">使用指定的格式和区域性特定格式信息，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-915">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="15062-916">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-916">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-917">一个对象，它等效于 <paramref name="input" /> 中包含的日期和时间，由 <paramref name="format" /> 和 <paramref name="formatProvider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="15062-917">An object that is equivalent to the date and time that is contained in <paramref name="input" /> as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-918">方法分析日期的字符串表示形式, 该日期必须采用`format`参数定义的格式。 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="15062-918">The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="15062-919">还要求\<日期\<和时间\<的字符串表示形式的日期 >、时间 > 和偏移 > 元素按指定的顺序出现。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-919">It also requires that the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time appear in the order specified by `format`.</span></span> <span data-ttu-id="15062-920">如果字符串与此`format`参数不匹配<xref:System.FormatException>, 则该方法将引发。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-920">If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>.</span></span>  <span data-ttu-id="15062-921">与<xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>此相反, 方法会分析格式提供程序的<xref:System.Globalization.DateTimeFormatInfo>对象识别的任何格式的日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-921">In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="15062-922"><xref:System.DateTimeOffset.Parse%2A>还允许\<日期和时间字符串表示形式的日期\<>、 \<时间 > 和偏移量 > 元素按任意顺序显示。</span><span class="sxs-lookup"><span data-stu-id="15062-922"><xref:System.DateTimeOffset.Parse%2A> also allows the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time to appear in any order.</span></span>  
  
 <span data-ttu-id="15062-923">参数是一个字符串, 其中包含单个标准格式说明符, 或者包含一个或多个定义`input`参数所需格式的自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-923">The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter.</span></span> <span data-ttu-id="15062-924">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-924">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-925">如果`format` `input`包括、或`zzz`自定义格式说明符以指示偏移量必须存在于中, 则该偏移量必须包括负号或正号。 `zz` `z`</span><span class="sxs-lookup"><span data-stu-id="15062-925">If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-926">如果缺少符号, 则方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="15062-926">If the sign is missing, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="15062-927">如果`format` <xref:System.DateTimeOffset>需要包含日期但不包含时间, 则会将生成的对象分配为午夜 (0:00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-927">If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-928">如果`format` <xref:System.DateTimeOffset>要求包含时间而不包含日期, 则生成的对象将在本地系统上分配当前日期。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-928">If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-929">如果`format`不<xref:System.DateTimeOffset>要求包含偏移量, 则为生成的对象分配本地系统的时区偏移量。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-929">If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.</span></span>  
  
 <span data-ttu-id="15062-930">`input`如果`formatProvider` `input` 是标准格式说明符字符串,则中使用的特定日期和时间符号和字符串由参数定义。`format`</span><span class="sxs-lookup"><span data-stu-id="15062-930">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="15062-931">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-931">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-932">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-932">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-933">`input`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="15062-933">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-934">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-934">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-935">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-935">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-936">下面的示例使用<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>带有标准和自定义格式说明符的方法以及用于分析多个日期和时间字符串的固定区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-936">The following example uses the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with standard and custom format specifiers and the invariant culture to parse several date and time strings.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]  

<span data-ttu-id="15062-937">下面的示例分析应符合[ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier)的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="15062-937">The following example parses an array of strings that are expected to conform to [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier).</span></span> <span data-ttu-id="15062-938">如示例中的输出所示, 具有前导空格或尾随空格的字符串未能成功分析, 这是指具有超出范围的日期和时间元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-938">As the output from the example shows, strings with leading or trailing spaces fail to parse successfully, as do strings with date and time elements that are out of range.</span></span>

[!code-csharp[Parsing an ISO 8601 string](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601.cs)]
[!code-vb[Parsing an ISO 8601 string](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-939">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-939">The offset is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-940"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-940"><paramref name="input" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15062-941">或</span><span class="sxs-lookup"><span data-stu-id="15062-941">-or-</span></span> 
 <span data-ttu-id="15062-942"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-942"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-943"><paramref name="input" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="15062-943"><paramref name="input" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="15062-944">或</span><span class="sxs-lookup"><span data-stu-id="15062-944">-or-</span></span> 
 <span data-ttu-id="15062-945"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-945"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-946">或</span><span class="sxs-lookup"><span data-stu-id="15062-946">-or-</span></span> 
 <span data-ttu-id="15062-947"><paramref name="format" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-947"><paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="15062-948">或</span><span class="sxs-lookup"><span data-stu-id="15062-948">-or-</span></span> 
<span data-ttu-id="15062-949"><paramref name="input" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="15062-949">The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-950">在中<see cref="Overload:System.DateTimeOffset.ParseExact" /> <see cref="T:System.FormatException" /> , 如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符, 则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15062-950">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTimeOffset.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="15062-951">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中, 将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="15062-951">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-952">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-952">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-953">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-953">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-954">一个表示日期和时间的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-954">A character span that represents a date and time.</span></span></param>
        <param name="format"><span data-ttu-id="15062-955">包含格式说明符的字符范围，用于定义 <paramref name="input" /> 的预期格式。</span><span class="sxs-lookup"><span data-stu-id="15062-955">A character span that contains a format specifier that defines the expected format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-956">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-956">An object that provides culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-957">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-957">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-958">使用指定的格式、区域性特定的格式信息和样式将表示日期和时间的字符范围转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-958">Converts a character span that represents a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-959">日期和时间表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-959">The format of the date and time representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-960">一个对象，它等效于 <paramref name="input" /> 参数中包含的日期和时间，由 <paramref name="format" />、<paramref name="formatProvider" /> 和 <paramref name="styles" /> 参数指定。</span><span class="sxs-lookup"><span data-stu-id="15062-960">An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="15062-961">此方法分析表示日期的字符跨度, 该日期必须采用`format`参数定义的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-961">This method parses a character span that represents a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="15062-962">还要求\<日期\<和时间\<的字符串表示形式的日期 >、时间 > 和偏移 > 元素按指定的顺序出现。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-962">It also requires that the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time appear in the order specified by `format`.</span></span> <span data-ttu-id="15062-963">如果`input`与此`format`模式不匹配<xref:System.FormatException>, 则该方法将引发。</span><span class="sxs-lookup"><span data-stu-id="15062-963">If `input` does not match the `format` pattern, the method throws a <xref:System.FormatException>.</span></span>  <span data-ttu-id="15062-964">与<xref:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType>此相反, 方法会分析格式提供程序的<xref:System.Globalization.DateTimeFormatInfo>对象识别的任何格式的日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-964">In contrast, the <xref:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="15062-965"><xref:System.DateTimeOffset.Parse%2A>还允许\<日期和时间字符串表示形式的日期\<>、 \<时间 > 和偏移量 > 元素按任意顺序显示。</span><span class="sxs-lookup"><span data-stu-id="15062-965"><xref:System.DateTimeOffset.Parse%2A> also allows the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time to appear in any order.</span></span>  
  
 <span data-ttu-id="15062-966">参数是一个字符跨度, 其中包含单字符标准格式说明符, 或者包含一个或多个定义`input`参数所需格式的自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-966">The `format` parameter is a character span that contains either a single-character standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter.</span></span> <span data-ttu-id="15062-967">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-967">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-968">如果`format` `input`包括、或`zzz`自定义格式说明符以指示偏移量必须存在于中, 则该偏移量必须包括负号或正号。 `zz` `z`</span><span class="sxs-lookup"><span data-stu-id="15062-968">If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-969">如果缺少符号, 则方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="15062-969">If the sign is missing, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="15062-970">如果`format` <xref:System.DateTimeOffset>需要包含日期但不包含时间, 则会将生成的对象分配为午夜 (0:00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-970">If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-971">如果`format` <xref:System.DateTimeOffset>要求包含时间而不包含日期, 则生成的对象将在本地系统上分配当前日期。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-971">If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-972">如果`format`不<xref:System.DateTimeOffset>要求包含偏移量, 则为生成的对象分配本地系统的时区偏移量。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-972">If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.</span></span>  
  
 <span data-ttu-id="15062-973">`input`如果`formatProvider` `input` 是标准格式说明符,则中使用的特定日期和时间符号和字符串由参数定义。`format`</span><span class="sxs-lookup"><span data-stu-id="15062-973">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier.</span></span> <span data-ttu-id="15062-974">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-974">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-975">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-975">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-976">`input`其<xref:System.Globalization.DateTimeFormatInfo> 属性返回<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>的对象定义中的符号和格式设置。</span><span class="sxs-lookup"><span data-stu-id="15062-976">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-977">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-977">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-978">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-978">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-979">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-979">The offset is greater than 14 hours or less than -14 hours.</span></span>  
<span data-ttu-id="15062-980">或</span><span class="sxs-lookup"><span data-stu-id="15062-980">-or-</span></span>  
<span data-ttu-id="15062-981"><paramref name="styles" /> 参数包含不支持的值。</span><span class="sxs-lookup"><span data-stu-id="15062-981">The <paramref name="styles" /> parameter includes an unsupported value.</span></span>  
<span data-ttu-id="15062-982">或</span><span class="sxs-lookup"><span data-stu-id="15062-982">-or-</span></span>  
<span data-ttu-id="15062-983"><paramref name="styles" /> 参数包含不能一起使用的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-983">The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-984"><paramref name="input" /> 是一个空的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-984"><paramref name="input" /> is an empty character span.</span></span>  
 <span data-ttu-id="15062-985">-或- <paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-985">-or- <paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
 <span data-ttu-id="15062-986">-或- <paramref name="format" /> 是一个空的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-986">-or- <paramref name="format" /> is an empty character span.</span></span>  
 <span data-ttu-id="15062-987">或</span><span class="sxs-lookup"><span data-stu-id="15062-987">-or-</span></span>  
 <span data-ttu-id="15062-988"><paramref name="input" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="15062-988">The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-989">包含要转换的日期和时间的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-989">A character span that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="15062-990">一个由格式说明符组成的数组，格式说明符用于定义 <paramref name="input" /> 的期望格式。</span><span class="sxs-lookup"><span data-stu-id="15062-990">An array of format specifiers that define the expected formats of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-991">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-991">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-992">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-992">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-993">使用指定的格式、区域性特定的格式信息和样式将包含日期和时间的字符串表示形式的字符范围转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-993">Converts a character span that contains the string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified formats, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-994">日期和时间表示形式的格式必须与一种指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-994">The format of the date and time representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-995">一个对象，它等效于 <paramref name="input" /> 参数中包含的日期和时间，由 <paramref name="formats" />、<paramref name="formatProvider" /> 和 <paramref name="styles" /> 参数指定。</span><span class="sxs-lookup"><span data-stu-id="15062-995">An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="15062-996">此方法分析表示日期的字符跨度, 该日期与分配`formats`给参数的模式之一匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-996">This method parses a character span representing a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="15062-997">如果`input`与这些`styles` 模式<xref:System.FormatException>中的任何一种模式都不匹配, 则该方法将引发。</span><span class="sxs-lookup"><span data-stu-id="15062-997">If `input` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="15062-998">除了与多`input`个格式设置模式比较以外, 此重载的<xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType>行为与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-998">Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="15062-999">参数是一个字符串数组, 其元素包含单个标准格式说明符, 或者一个或多个定义`input`参数的可能模式的自定义格式说明符。 `formats`</span><span class="sxs-lookup"><span data-stu-id="15062-999">The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter.</span></span> <span data-ttu-id="15062-1000">调用方法时, `input`必须与这些模式之一匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1000">When the method is called, `input` must match one of these patterns.</span></span> <span data-ttu-id="15062-1001">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1001">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1002">如果`formats`中的匹配元素`zz` `z`包含、或`zzz`自定义格式说明符以指示中`input`必须存在偏移量, 则该偏移量必须包括负号或正负号。</span><span class="sxs-lookup"><span data-stu-id="15062-1002">If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1003">如果缺少符号, 则方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="15062-1003">If the sign is missing, the method throws a <xref:System.FormatException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15062-1004">使用此`formats`重载的参数指定多种格式可帮助减少许多用户在输入日期和时间时遇到的不满。</span><span class="sxs-lookup"><span data-stu-id="15062-1004">Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.</span></span> <span data-ttu-id="15062-1005">特别是, 定义多个输入模式的功能使应用程序能够处理日期和时间表示形式, 该表示形式可以包括或缺少前导零 (以月、天、小时、分钟和秒为单位)。</span><span class="sxs-lookup"><span data-stu-id="15062-1005">In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.</span></span>
  
 <span data-ttu-id="15062-1006">如果中`formats`的匹配元素`input`需要包含日期但不包含时间, 则将为生成<xref:System.DateTimeOffset>的对象分配一个午夜时间 (0:00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1006">If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1007">如果中`formats`的匹配元素`input`需要包含时间而不包含日期, 则生成<xref:System.DateTimeOffset>的对象将在本地系统上分配当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1007">If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1008">如果中`formats`的匹配元素不`input`需要包含偏移量, 则生成<xref:System.DateTimeOffset>的对象的偏移量取决于`styles`参数的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1008">If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1009">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1009">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1010">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1010">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1011">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1011">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1012">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1012">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1013">如果的匹配`formats`元素是标准格式说明符字符串`input`, 则对于的精确格式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1013">The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1014">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1014">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1015">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1015">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1016">由属性返回的`input`对象定义中的符号和格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1016">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1017">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1017">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1018">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1018">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1019">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1019">The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1020">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1020">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1021">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1021">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1022">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1022">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1023">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1023">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1024">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1024">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1025">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1025">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1026">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1026">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1027">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-1027">This is the default value.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1028">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供 UTC 偏移量 (+ 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1028">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1029">允许`input`包含未指定的`format`内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1029">Allows `input` to include inner white space not specified by `format`.</span></span> <span data-ttu-id="15062-1030">在对字符串进行分析时, 日期和时间部分之间以及单个组件中可能出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1030">Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1031">允许`input`包含未指定的`formats`前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1031">Allows `input` to include leading spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1032">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1032">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1033">允许`input`包含未指定的`formats`尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1033">Allows `input` to include trailing spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1034">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1034">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1035">允许`input`包含未指定的`formats`前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1035">Allows `input` to include leading, trailing, and inner spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1036">分析字符串时, 将忽略未在中`formats`的匹配元素中指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1036">All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1037">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1037">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1038">空格必须完全按照的特定元素`formats`中的指定显示, 才能发生匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1038">White space must appear exactly as specified in a particular element of `formats` for a match to occur.</span></span> <span data-ttu-id="15062-1039">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1039">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1040">不起作用, <xref:System.DateTimeOffset>因为结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1040">Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1041">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1041">The offset is greater than 14 hours or less than -14 hours.</span></span>  
<span data-ttu-id="15062-1042">-或- <paramref name="styles" /> 包含不支持的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1042">-or- <paramref name="styles" /> includes an unsupported value.</span></span>  
<span data-ttu-id="15062-1043">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1043">-or-</span></span>  
<span data-ttu-id="15062-1044"><paramref name="styles" /> 参数包含不能一起使用的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1044">The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-1045"><paramref name="input" /> 是一个空的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1045"><paramref name="input" /> is an empty character span.</span></span>  
<span data-ttu-id="15062-1046">-或- <paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1046">-or- <paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
<span data-ttu-id="15062-1047">或</span><span class="sxs-lookup"><span data-stu-id="15062-1047">-or-</span></span>  
<span data-ttu-id="15062-1048"><paramref name="formats" /> 的元素均不包含有效的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1048">No element of <paramref name="formats" /> contains a valid format specifier.</span></span>  
<span data-ttu-id="15062-1049">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1049">-or-</span></span>  
<span data-ttu-id="15062-1050"><paramref name="input" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="15062-1050">The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1051">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1051">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="15062-1052">用于定义所需的 <paramref name="input" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1052">A format specifier that defines the expected format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1053">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1053">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1054">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1054">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-1055">使用指定的格式、区域性特定的格式信息和样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1055">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-1056">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1056">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-1057">一个对象，它等效于 <paramref name="input" /> 参数中包含的日期和时间，由 <paramref name="format" />、<paramref name="formatProvider" /> 和 <paramref name="styles" /> 参数指定。</span><span class="sxs-lookup"><span data-stu-id="15062-1057">An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1058">方法分析日期的字符串表示形式, 该日期必须采用`format`参数定义的格式。 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1058">The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="15062-1059">还要求\<日期\<和时间\<的字符串表示形式的日期 >、时间 > 和偏移 > 元素按指定的顺序出现。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-1059">It also requires that the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time appear in the order specified by `format`.</span></span> <span data-ttu-id="15062-1060">如果字符串与`format`参数的模式不匹配, 并且`styles`参数定义了任何变体, 则该方法将引发<xref:System.FormatException>。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1060">If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span>  <span data-ttu-id="15062-1061">与<xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>此相反, 方法会分析格式提供程序的<xref:System.Globalization.DateTimeFormatInfo>对象识别的任何格式的日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1061">In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="15062-1062"><xref:System.DateTimeOffset.Parse%2A>还允许\<日期和时间字符串表示形式的日期\<>、 \<时间 > 和偏移量 > 元素按任意顺序显示。</span><span class="sxs-lookup"><span data-stu-id="15062-1062"><xref:System.DateTimeOffset.Parse%2A> also allows the \<Date>, \<Time>, and \<Offset> elements of the string representation of a date and time to appear in any order.</span></span>  
  
 <span data-ttu-id="15062-1063">参数是一个字符串, 其中包含单个标准格式说明符, 或者包含一个或多个定义`input`参数所需模式的自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-1063">The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter.</span></span> <span data-ttu-id="15062-1064">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1064">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1065">如果`format` `input`包括、或`zzz`自定义格式说明符以指示偏移量必须存在于中, 则该偏移量必须包括负号或正号。 `zz` `z`</span><span class="sxs-lookup"><span data-stu-id="15062-1065">If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1066">如果缺少符号, 则方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="15062-1066">If the sign is missing, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="15062-1067">如果`format` <xref:System.DateTimeOffset>需要包含日期但不包含时间, 则会将生成的对象分配为午夜 (0:00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1067">If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1068">如果`format` <xref:System.DateTimeOffset>要求包含时间而不包含日期, 则生成的对象将在本地系统上分配当前日期。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1068">If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1069">如果`format`不<xref:System.DateTimeOffset> `styles`要求包含偏移量, 则生成的对象的偏移量取决于参数的值。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1069">If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1070">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1070">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1071">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1071">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1072">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1072">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1073">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1073">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1074">`input`如果`format`是标准格式说明符字符串, 则对于的精确格式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1074">The same is true for the precise format of `input`, if `format` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1075">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1075">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1076">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1076">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1077">由属性返回的`input`对象定义中的符号和格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1077">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1078">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1078">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1079">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1079">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1080">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1080">The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1081">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1081">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1082">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1082">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1083">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1083">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1084">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1084">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1085">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1085">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1086">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1086">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1087">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则会为返回的对象提供本地时区的偏移量。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1087">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1088">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-1088">This is the default value.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1089">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则将为返回的对象指定 UTC 偏移量 (+ 00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1089">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1090">允许`input`包含未指定的`format`内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1090">Allows `input` to include inner white space not specified by `format`.</span></span> <span data-ttu-id="15062-1091">日期和时间部分之间以及单个组件中可能出现额外空白, 分析字符串时将忽略此空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1091">Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1092">允许`input`包含未指定的`format`前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1092">Allows `input` to include leading spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1093">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1093">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1094">允许`input`包含未指定的`format`尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1094">Allows `input` to include trailing spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1095">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1095">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1096">允许`input`包含未指定的`format`前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1096">Allows `input` to include leading, trailing, and inner spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1097">分析字符串时, 将忽略未在中`format`指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1097">All extra white-space characters not specified in `format` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1098">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1098">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1099">空格必须与中指定的`format`完全相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1099">White space must appear exactly as specified in `format`.</span></span> <span data-ttu-id="15062-1100">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1100">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1101">不起作用, <xref:System.DateTimeOffset>因为结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1101">Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="15062-1102">下面的示例将<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法与标准和自定义格式说明符、固定区域性以及用于分析多个日期和时间字符串的各种<xref:System.Globalization.DateTimeStyles>值结合使用。</span><span class="sxs-lookup"><span data-stu-id="15062-1102">The following example uses the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]  

<span data-ttu-id="15062-1103">下面的示例使用各种<xref:System.Globalization.DateTimeStyles>值来分析应符合[ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier)的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="15062-1103">The following example uses a variety of <xref:System.Globalization.DateTimeStyles> values to parse an array of strings that are expected to conform to [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier).</span></span> <span data-ttu-id="15062-1104">如示例的输出所示, 格式正确的字符串在以下情况下无法分析:</span><span class="sxs-lookup"><span data-stu-id="15062-1104">As the output from the example shows, strings that are in the proper format fail to parse if:</span></span>

- <span data-ttu-id="15062-1105">它们包含空格和适当<xref:System.Globalization.DateTimeStyles>的标志 ( <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>如未在方法调用中提供)。</span><span class="sxs-lookup"><span data-stu-id="15062-1105">they contain white space, and an appropriate <xref:System.Globalization.DateTimeStyles> flag (such as <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> has not been supplied in the method call.</span></span>

- <span data-ttu-id="15062-1106">它们包含超出范围的日期和时间元素。</span><span class="sxs-lookup"><span data-stu-id="15062-1106">they contain date and time elements that are out of range.</span></span>

<span data-ttu-id="15062-1107">除非在方法调用中提供了<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志, 否则不指定 UTC 偏移量的字符串将采用本地时区的偏移量 (在本例中为-07:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1107">Strings that do not specify a UTC offset are assumed to have the offset of the local time zone (in this case, -07:00) unless the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag is supplied in the method call.</span></span> <span data-ttu-id="15062-1108">在这种情况下, 假定它们是协调世界时。</span><span class="sxs-lookup"><span data-stu-id="15062-1108">In that case, they are assumed to be Universal Coordinated Time.</span></span>

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1109">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1109">The offset is greater than 14 hours or less than -14 hours.</span></span>  
  
<span data-ttu-id="15062-1110">或</span><span class="sxs-lookup"><span data-stu-id="15062-1110">-or-</span></span> 
<span data-ttu-id="15062-1111"><paramref name="styles" /> 参数包含不支持的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1111">The <paramref name="styles" /> parameter includes an unsupported value.</span></span>  
  
<span data-ttu-id="15062-1112">或</span><span class="sxs-lookup"><span data-stu-id="15062-1112">-or-</span></span> 
<span data-ttu-id="15062-1113"><paramref name="styles" /> 参数包含不能一起使用的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1113">The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-1114"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1114"><paramref name="input" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15062-1115">或</span><span class="sxs-lookup"><span data-stu-id="15062-1115">-or-</span></span> 
 <span data-ttu-id="15062-1116"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1116"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-1117"><paramref name="input" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="15062-1117"><paramref name="input" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="15062-1118">或</span><span class="sxs-lookup"><span data-stu-id="15062-1118">-or-</span></span> 
 <span data-ttu-id="15062-1119"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1119"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-1120">或</span><span class="sxs-lookup"><span data-stu-id="15062-1120">-or-</span></span> 
 <span data-ttu-id="15062-1121"><paramref name="format" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1121"><paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="15062-1122">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1122">-or-</span></span> 
<span data-ttu-id="15062-1123"><paramref name="input" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="15062-1123">The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1124">在中<see cref="Overload:System.DateTimeOffset.ParseExact" /> <see cref="T:System.FormatException" /> , 如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符, 则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15062-1124">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTimeOffset.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="15062-1125">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中, 将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="15062-1125">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-1126">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1126">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-1127">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1127">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1128">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1128">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="15062-1129">一个由格式说明符组成的数组，格式说明符用于定义 <paramref name="input" /> 的期望格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1129">An array of format specifiers that define the expected formats of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1130">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1130">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1131">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1131">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="15062-1132">使用指定的格式、区域性特定的格式信息和样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1132">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified formats, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-1133">字符串表示形式的格式必须与一种指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1133">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-1134">一个对象，它等效于 <paramref name="input" /> 参数中包含的日期和时间，由 <paramref name="formats" />、<paramref name="formatProvider" /> 和 <paramref name="styles" /> 参数指定。</span><span class="sxs-lookup"><span data-stu-id="15062-1134">An object that is equivalent to the date and time that is contained in the <paramref name="input" /> parameter, as specified by the <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1135">方法分析与分配`formats`给参数的模式之一匹配的日期的字符串表示形式。 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1135">The <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="15062-1136">如果字符串与`styles`这些模式<xref:System.FormatException>中的任何一种模式都不匹配, 则该方法将引发。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1136">If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="15062-1137">除了与多`input`个格式设置模式比较以外, 此重载的<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>行为与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1137">Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="15062-1138">参数是一个字符串数组, 其元素包含单个标准格式说明符, 或者一个或多个定义`input`参数的可能模式的自定义格式说明符。 `formats`</span><span class="sxs-lookup"><span data-stu-id="15062-1138">The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter.</span></span> <span data-ttu-id="15062-1139">调用方法时, `input`必须与这些模式之一匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1139">When the method is called, `input` must match one of these patterns.</span></span> <span data-ttu-id="15062-1140">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1140">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1141">如果`formats`中的匹配元素`zz` `z`包含、或`zzz`自定义格式说明符以指示中`input`必须存在偏移量, 则该偏移量必须包括负号或正负号。</span><span class="sxs-lookup"><span data-stu-id="15062-1141">If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1142">如果缺少符号, 则方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="15062-1142">If the sign is missing, the method throws a <xref:System.FormatException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15062-1143">使用此`formats`重载的参数指定多种格式可帮助减少许多用户在输入日期和时间时遇到的不满。</span><span class="sxs-lookup"><span data-stu-id="15062-1143">Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.</span></span> <span data-ttu-id="15062-1144">特别是, 定义多个输入模式的功能使应用程序能够处理日期和时间表示形式, 该表示形式可以包括或缺少前导零 (以月、天、小时、分钟和秒为单位)。</span><span class="sxs-lookup"><span data-stu-id="15062-1144">In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.</span></span> <span data-ttu-id="15062-1145">该示例提供了此的说明。</span><span class="sxs-lookup"><span data-stu-id="15062-1145">The example provides an illustration of this.</span></span>  
  
 <span data-ttu-id="15062-1146">如果中`formats`的匹配元素`input`需要包含日期但不包含时间, 则将为生成<xref:System.DateTimeOffset>的对象分配一个午夜时间 (0:00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1146">If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1147">如果中`formats`的匹配元素`input`需要包含时间而不包含日期, 则生成<xref:System.DateTimeOffset>的对象将在本地系统上分配当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1147">If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1148">如果中`formats`的匹配元素不`input`需要包含偏移量, 则生成<xref:System.DateTimeOffset>的对象的偏移量取决于`styles`参数的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1148">If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1149">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1149">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1150">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1150">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1151">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1151">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1152">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1152">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1153">如果的匹配`formats`元素是标准格式说明符字符串`input`, 则对于的精确格式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1153">The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1154">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1154">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1155">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1155">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1156">由属性返回的`input`对象定义中的符号和格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1156">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1157">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1157">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1158">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1158">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1159">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1159">The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1160">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1160">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1161">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1161">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1162">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1162">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1163">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1163">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1164">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1164">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1165">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1165">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1166">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1166">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1167">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-1167">This is the default value.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1168">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供 UTC 偏移量 (+ 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1168">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1169">允许`input`包含未指定的`format`内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1169">Allows `input` to include inner white space not specified by `format`.</span></span> <span data-ttu-id="15062-1170">在对字符串进行分析时, 日期和时间部分之间以及单个组件中可能出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1170">Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1171">允许`input`包含未指定的`formats`前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1171">Allows `input` to include leading spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1172">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1172">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1173">允许`input`包含未指定的`formats`尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1173">Allows `input` to include trailing spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1174">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1174">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1175">允许`input`包含未指定的`formats`前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1175">Allows `input` to include leading, trailing, and inner spaces not specified by `formats`.</span></span> <span data-ttu-id="15062-1176">分析字符串时, 将忽略未在中`formats`的匹配元素中指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1176">All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1177">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1177">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1178">空格必须完全按照的特定元素`formats`中的指定显示, 才能发生匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1178">White space must appear exactly as specified in a particular element of `formats` for a match to occur.</span></span> <span data-ttu-id="15062-1179">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1179">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1180">不起作用, <xref:System.DateTimeOffset>因为结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1180">Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="15062-1181">下面的示例为日期和时间和偏移量值的字符串表示形式定义多个输入格式, 然后将用户输入的字符串传递给<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1181">The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]
 [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1182">偏移量大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1182">The offset is greater than 14 hours or less than -14 hours.</span></span>  
  
<span data-ttu-id="15062-1183">或</span><span class="sxs-lookup"><span data-stu-id="15062-1183">-or-</span></span> 
 <span data-ttu-id="15062-1184"><paramref name="styles" /> 包含不支持的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1184"><paramref name="styles" /> includes an unsupported value.</span></span>  
  
<span data-ttu-id="15062-1185">或</span><span class="sxs-lookup"><span data-stu-id="15062-1185">-or-</span></span> 
<span data-ttu-id="15062-1186"><paramref name="styles" /> 参数包含不能一起使用的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1186">The <paramref name="styles" /> parameter contains <see cref="T:System.Globalization.DateTimeStyles" /> values that cannot be used together.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-1187"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1187"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-1188"><paramref name="input" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="15062-1188"><paramref name="input" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="15062-1189">或</span><span class="sxs-lookup"><span data-stu-id="15062-1189">-or-</span></span> 
 <span data-ttu-id="15062-1190"><paramref name="input" /> 不包含日期和时间的有效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1190"><paramref name="input" /> does not contain a valid string representation of a date and time.</span></span>  
  
<span data-ttu-id="15062-1191">或</span><span class="sxs-lookup"><span data-stu-id="15062-1191">-or-</span></span> 
<span data-ttu-id="15062-1192"><paramref name="formats" /> 的元素均不包含有效的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1192">No element of <paramref name="formats" /> contains a valid format specifier.</span></span>  
  
<span data-ttu-id="15062-1193">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1193">-or-</span></span> 
<span data-ttu-id="15062-1194"><paramref name="input" /> 中的小时组成部分和 AM/PM 指示符不一致。</span><span class="sxs-lookup"><span data-stu-id="15062-1194">The hour component and the AM/PM designator in <paramref name="input" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1195">在中<see cref="Overload:System.DateTimeOffset.ParseExact" /> <see cref="T:System.FormatException" /> , 如果要分析的字符串包含不在协议中的小时组件和 AM/PM 指示符, 则方法将引发。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15062-1195">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTimeOffset.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="15062-1196">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中, 将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="15062-1196">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-1197">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1197">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-1198">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1198">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTimeOffset.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1199">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的时钟时间的秒组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-1199">Gets the second component of the clock time represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-1200"><see cref="T:System.DateTimeOffset" /> 对象的秒组成部分，以 0 到 59 之间的一个整数值来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-1200">The second component of the <see cref="T:System.DateTimeOffset" /> object, expressed as an integer value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1201">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Second%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1201">The <xref:System.DateTimeOffset.Second%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-1202">还可以通过使用 "s" 或 " <xref:System.DateTimeOffset> ss" 自定义格式说明符<xref:System.DateTimeOffset.ToString%2A>调用方法, 创建对象的第二个组件的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1202">You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "s", or "ss" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1203">下面的示例以三种不同的方式<xref:System.DateTimeOffset>显示对象的第二个组件:</span><span class="sxs-lookup"><span data-stu-id="15062-1203">The following example displays the second component of a <xref:System.DateTimeOffset> object in three different ways:</span></span>  
  
-   <span data-ttu-id="15062-1204">通过检索<xref:System.DateTimeOffset.Second%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1204">By retrieving the value of the <xref:System.DateTimeOffset.Second%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-1205">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> s" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1205">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "s" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-1206">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> ss" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1206">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "ss" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]
 [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-1207">从当前的 <see cref="T:System.DateTimeOffset" /> 对象中减去指定的时间或持续时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1207">Subtracts a specified time or duration from the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTimeOffset -&gt; TimeSpan" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15062-1208">一个对象，表示要减去的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1208">An object that represents the value to subtract.</span></span></param>
        <summary><span data-ttu-id="15062-1209">从当前的 <see cref="T:System.DateTimeOffset" /> 对象中减去表示特定日期和时间的 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1209">Subtracts a <see cref="T:System.DateTimeOffset" /> value that represents a specific date and time from the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-1210">一个对象，指定两个 <see cref="T:System.DateTimeOffset" /> 对象之间的间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1210">An object that specifies the interval between the two <see cref="T:System.DateTimeOffset" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1211">此方法将两<xref:System.DateTimeOffset>个对象转换为协调世界时 (UTC), 然后计算分隔它们的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1211">This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them.</span></span> <span data-ttu-id="15062-1212">这消除了不同于 UTC 的偏移量可能对比较产生的任何影响。</span><span class="sxs-lookup"><span data-stu-id="15062-1212">This removes any effect that different offsets from UTC may have on the comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-1213">对于支持自定义运算符的语言, 还可以使用减法运算符来执行日期和时间减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-1213">For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator.</span></span> <span data-ttu-id="15062-1214">有关详细信息, 请<xref:System.DateTimeOffset.op_Subtraction%2A>参阅方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1214">For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.</span></span>  
  
 <span data-ttu-id="15062-1215">由于当前<xref:System.DateTimeOffset>的对象`value`和参数都不表示特定时区中的日期和时间, 因此当它<xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29>减去日期和时间时, 该方法不会考虑特定时区的调整规则。</span><span class="sxs-lookup"><span data-stu-id="15062-1215">Because neither the current <xref:System.DateTimeOffset> object nor the `value` parameter represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method does not consider a particular time zone's adjustment rules when it subtracts dates and times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1216">下面的示例演示了使用<xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29>方法的减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-1216">The following example illustrates subtraction that uses the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> method.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]
 [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-1217">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-1217">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTimeOffset Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="15062-1218">待减去的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1218">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="15062-1219">从当前的 <see cref="T:System.DateTimeOffset" /> 对象中减去指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1219">Subtracts a specified time interval from the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="15062-1220">一个对象，它等于当前的 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期和时间减去 <paramref name="value" /> 所表示的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1220">An object that is equal to the date and time represented by the current <see cref="T:System.DateTimeOffset" /> object, minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1221">在单个操作中<xref:System.DateTimeOffset.Subtract%2A> , 可以使用方法来减少多个时间间隔 (天、小时、分钟、秒或毫秒)。</span><span class="sxs-lookup"><span data-stu-id="15062-1221">You can use the <xref:System.DateTimeOffset.Subtract%2A> method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="15062-1222">它的行为与定义减法<xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29>运算符的方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1222">Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator.</span></span> <span data-ttu-id="15062-1223">该<xref:System.DateTimeOffset>结构还支持专用加法方法 ( <xref:System.DateTimeOffset.AddDays%2A>如、 <xref:System.DateTimeOffset.AddHours%2A>和<xref:System.DateTimeOffset.AddMinutes%2A>), 通过将负值赋给 method 参数来执行减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-1223">The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15062-1224">此方法返回一个新<xref:System.DateTimeOffset>的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1224">This method returns a new <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1225">它不会通过将添加`timeSpan`到当前对象的日期和时间来修改其值。</span><span class="sxs-lookup"><span data-stu-id="15062-1225">It does not modify the value of the current object by adding `timeSpan` to its date and time.</span></span>  
  
 <span data-ttu-id="15062-1226">方法不影响<xref:System.DateTimeOffset>对象的<xref:System.DateTimeOffset.Offset%2A>属性的值。 <xref:System.DateTimeOffset.Subtract%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1226">The <xref:System.DateTimeOffset.Subtract%2A> method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.</span></span> <span data-ttu-id="15062-1227">返回<xref:System.DateTimeOffset>的对象与原始对象具有相同的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1227">The returned <xref:System.DateTimeOffset> object has the same offset as the original object.</span></span>  
  
 <span data-ttu-id="15062-1228">由于当前<xref:System.DateTimeOffset>对象不表示特定时区中的日期和时间, 因此在执行减法运算<xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29>时, 该方法不会考虑特定时区的调整规则。</span><span class="sxs-lookup"><span data-stu-id="15062-1228">Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> method does not consider a particular time zone's adjustment rules when it performs the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1229">下面的示例演示了使用<xref:System.DateTimeOffset.Subtract%2A>方法的减法运算。</span><span class="sxs-lookup"><span data-stu-id="15062-1229">The following example illustrates subtraction that uses the <xref:System.DateTimeOffset.Subtract%2A> method.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]
 [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1230">生成的 <see cref="T:System.DateTimeOffset" /> 值小于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1230">The resulting <see cref="T:System.DateTimeOffset" /> value is less than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-1231">或</span><span class="sxs-lookup"><span data-stu-id="15062-1231">-or-</span></span> 
<span data-ttu-id="15062-1232">生成的 <see cref="T:System.DateTimeOffset" /> 值大于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1232">The resulting <see cref="T:System.DateTimeOffset" /> value is greater than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="15062-1233">使用日期和时间执行算术运算</span><span class="sxs-lookup"><span data-stu-id="15062-1233">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="15062-1234">要与当前 <see cref="T:System.DateTimeOffset" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1234">The object to compare with the current <see cref="T:System.DateTimeOffset" /> object.</span></span></param>
        <summary><span data-ttu-id="15062-1235">将当前 <see cref="T:System.DateTimeOffset" /> 对象的值与相同类型的另一个对象进行比较。</span><span class="sxs-lookup"><span data-stu-id="15062-1235">Compares the value of the current <see cref="T:System.DateTimeOffset" /> object with another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="15062-1236">一个 32 位带符号整数，它指示当前的 <see cref="T:System.DateTimeOffset" /> 对象是小于、等于还是大于 <paramref name="obj" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1236">A 32-bit signed integer that indicates whether the current <see cref="T:System.DateTimeOffset" /> object is less than, equal to, or greater than <paramref name="obj" />.</span></span> <span data-ttu-id="15062-1237">此方法的返回值的说明如下：</span><span class="sxs-lookup"><span data-stu-id="15062-1237">The return values of the method are interpreted as follows:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="15062-1238">返回值</span><span class="sxs-lookup"><span data-stu-id="15062-1238">Return Value</span></span> 
 </term><description> <span data-ttu-id="15062-1239">说明</span><span class="sxs-lookup"><span data-stu-id="15062-1239">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="15062-1240">小于零</span><span class="sxs-lookup"><span data-stu-id="15062-1240">Less than zero</span></span> 
 </term><description> <span data-ttu-id="15062-1241">当前的 <see cref="T:System.DateTimeOffset" /> 对象小于（早于）<paramref name="obj" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1241">The current <see cref="T:System.DateTimeOffset" /> object is less than (earlier than) <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-1242">零</span><span class="sxs-lookup"><span data-stu-id="15062-1242">Zero</span></span> 
 </term><description> <span data-ttu-id="15062-1243">当前的 <see cref="T:System.DateTimeOffset" /> 对象与 <paramref name="obj" /> 相等（表示同一时间点）。</span><span class="sxs-lookup"><span data-stu-id="15062-1243">The current <see cref="T:System.DateTimeOffset" /> object is equal to (the same point in time as) <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="15062-1244">大于零</span><span class="sxs-lookup"><span data-stu-id="15062-1244">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="15062-1245">当前的 <see cref="T:System.DateTimeOffset" /> 对象大于（晚于）<paramref name="obj" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1245">The current <see cref="T:System.DateTimeOffset" /> object is greater than (later than) <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="15062-1246">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1246">The object that initiated the callback.</span></span> <span data-ttu-id="15062-1247">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="15062-1247">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="15062-1248">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="15062-1248">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="15062-1249">要填充数据的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1249">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="15062-1250">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="15062-1250">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="15062-1251">使用序列化当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的数据来填充 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1251">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data required to serialize the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15062-1252"><paramref name="info" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1252">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="15062-1253">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="15062-1253">requires full trust for the immediate caller.</span></span> <span data-ttu-id="15062-1254">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1254">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTimeOffset.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1255">获取计时周期数，此计时周期数表示时钟时间中当前 <see cref="T:System.DateTimeOffset" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1255">Gets the number of ticks that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object in clock time.</span></span></summary>
        <value><span data-ttu-id="15062-1256"><see cref="T:System.DateTimeOffset" /> 对象的时钟时间中的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-1256">The number of ticks in the <see cref="T:System.DateTimeOffset" /> object's clock time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1257">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Ticks%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1257">The <xref:System.DateTimeOffset.Ticks%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-1258"><xref:System.DateTimeOffset.Ticks%2A>属性的值表示自0001年1月1日午夜12:00:00 开始经过的100纳秒间隔数 (的<xref:System.DateTimeOffset.MinValue>值)。</span><span class="sxs-lookup"><span data-stu-id="15062-1258">The value of the <xref:System.DateTimeOffset.Ticks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>).</span></span> <span data-ttu-id="15062-1259">它不包括闰秒将添加的时间刻度。</span><span class="sxs-lookup"><span data-stu-id="15062-1259">It does not include ticks that would be added by leap seconds.</span></span> <span data-ttu-id="15062-1260">毫微秒为一秒的十亿分之一;第二个计时周期为10000000。</span><span class="sxs-lookup"><span data-stu-id="15062-1260">A nanosecond is one billionth of a second; there are ten million ticks in a second.</span></span> <span data-ttu-id="15062-1261"><xref:System.DateTimeOffset.Ticks%2A>属性的值范围从`DateTimeOffset.MinValue.Ticks`到`DateTimeOffset.MaxValue.Ticks`。</span><span class="sxs-lookup"><span data-stu-id="15062-1261">The value of the <xref:System.DateTimeOffset.Ticks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.</span></span>  
  
 <span data-ttu-id="15062-1262"><xref:System.DateTimeOffset> 可以<xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29>使用构造函数重载将计时周期数分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1262">You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1263">下面的示例通过逼近<xref:System.DateTimeOffset> 1:23:07 2008 年7月1日中的计时周期数来初始化一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1263">The following example initializes a <xref:System.DateTimeOffset> object by approximating the number of ticks in the date July 1, 2008 1:23:07.</span></span> <span data-ttu-id="15062-1264">然后, 它会将日期和该日期所表示的计时周期数显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="15062-1264">It then displays the date and the number of ticks represented by that date to the console.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]
 [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcDateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTimeOffset.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1265">获取当前 <see cref="T:System.DateTimeOffset" /> 对象的日时。</span><span class="sxs-lookup"><span data-stu-id="15062-1265">Gets the time of day for the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-1266">表示当前日期自午夜以来的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1266">The time interval of the current date that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1267">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.TimeOfDay%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1267">The <xref:System.DateTimeOffset.TimeOfDay%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-1268">属性以对象的形式返回<xref:System.DateTimeOffset>对象的时间部分。 <xref:System.TimeSpan> <xref:System.DateTimeOffset.TimeOfDay%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1268">The <xref:System.DateTimeOffset.TimeOfDay%2A> property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="15062-1269">它等效于<xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1269">It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1270">下面的示例使用<xref:System.DateTimeOffset.TimeOfDay%2A>属性提取时间并将其显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="15062-1270">The following example uses the <xref:System.DateTimeOffset.TimeOfDay%2A> property to extract the time and display it to the console.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]
 [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTimeOffset.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1271">将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为 Windows 文件时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1271">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="15062-1272">用 Windows 文件时间来表示的当前 <see cref="T:System.DateTimeOffset" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1272">The value of the current <see cref="T:System.DateTimeOffset" /> object, expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1273">Windows 文件时间是一个64位的值, 它表示自公元1900年1月 1601 1 日午夜12:00 之后经过的100纳秒间隔数</span><span class="sxs-lookup"><span data-stu-id="15062-1273">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="15062-1274">公元协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1274">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-1275">当应用程序创建、访问或写入到文件时, Windows 将使用文件时间来记录。</span><span class="sxs-lookup"><span data-stu-id="15062-1275">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="15062-1276">方法在执行转换之前<xref:System.DateTimeOffset> , 将当前对象的日期和时间转换为 UTC。 <xref:System.DateTimeOffset.ToFileTime%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1276">The <xref:System.DateTimeOffset.ToFileTime%2A> method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion.</span></span> <span data-ttu-id="15062-1277">换言之, 调用<xref:System.DateTimeOffset.ToFileTime%2A>方法等效于以下方法调用:</span><span class="sxs-lookup"><span data-stu-id="15062-1277">In other words, calling the <xref:System.DateTimeOffset.ToFileTime%2A> method is equivalent to the following method call:</span></span>  
  
```csharp
this.ToUtcDateTime().ToFileTime();  
```  
  
```vb  
Me.ToUtcDateTime().ToFileTime()  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1278">所生成的文件时间将表示协调世界时 (UTC) 公元 1601 年 1 月 1 日午夜之前的日期和时间</span><span class="sxs-lookup"><span data-stu-id="15062-1278">The resulting file time would represent a date and time before midnight on January 1, 1601 C.E.</span></span> <span data-ttu-id="15062-1279">协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1279">Coordinated Universal Time (UTC).</span></span></exception>
        <altmember cref="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1280">将当前的 <see cref="T:System.DateTimeOffset" /> 对象转换为表示本地时间的 <see cref="T:System.DateTimeOffset" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1280">Converts the current <see cref="T:System.DateTimeOffset" /> object to a <see cref="T:System.DateTimeOffset" /> object that represents the local time.</span></span></summary>
        <returns><span data-ttu-id="15062-1281">一个对象，表示当前的 <see cref="T:System.DateTimeOffset" /> 对象的日期和时间，已转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1281">An object that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object converted to local time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1282">在执行到本地时间的转换时, 方法首先通过从时间<xref:System.DateTimeOffset>中减去偏移量, 将当前对象的日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1282">In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time.</span></span> <span data-ttu-id="15062-1283">然后, 它通过添加本地时区偏移量将 UTC 日期和时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1283">It then converts the UTC date and time to local time by adding the local time zone offset.</span></span> <span data-ttu-id="15062-1284">在执行此操作时, 它会考虑本地时区的任何调整规则。</span><span class="sxs-lookup"><span data-stu-id="15062-1284">In doing this, it takes account of any adjustment rules for the local time zone.</span></span>  
  
 <span data-ttu-id="15062-1285">当前<xref:System.DateTimeOffset>对象的值与<xref:System.DateTimeOffset>方法调用所返回的对象的值都表示相同的时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-1285">Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time.</span></span> <span data-ttu-id="15062-1286">也就是说, 如果两个传递给<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>方法, 则方法将返回。 `true`</span><span class="sxs-lookup"><span data-stu-id="15062-1286">That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method, the method will return `true`.</span></span>  
  
 <span data-ttu-id="15062-1287">如果转换导致超出<xref:System.DateTimeOffset>类型范围的时间, 则该<xref:System.DateTimeOffset.ToLocalTime%2A>方法将返回一个<xref:System.DateTimeOffset>对象, 该对象的日期和时间设置为<xref:System.DateTimeOffset.MaxValue>或<xref:System.DateTimeOffset.MinValue> , 偏移量设置为本地时区偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1287">If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the <xref:System.DateTimeOffset.ToLocalTime%2A> method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1288">下面的示例使用<xref:System.DateTimeOffset.ToLocalTime%2A>方法<xref:System.DateTimeOffset>将值转换为太平洋标准时区中的本地时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1288">The following example uses the <xref:System.DateTimeOffset.ToLocalTime%2A> method to convert a <xref:System.DateTimeOffset> value to local time in the Pacific Standard Time zone.</span></span> <span data-ttu-id="15062-1289">它还阐释了方法对本地时区的调整规则的支持。</span><span class="sxs-lookup"><span data-stu-id="15062-1289">It also illustrates the method's support for the local time zone's adjustment rules.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]
 [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToOffset (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToOffset(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOffset (offset As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToOffset(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.ToOffset : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.ToOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="15062-1290"><see cref="T:System.DateTimeOffset" /> 值所转换成的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1290">The offset to convert the <see cref="T:System.DateTimeOffset" /> value to.</span></span></param>
        <summary><span data-ttu-id="15062-1291">将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为偏移量值所指定的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1291">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to the date and time specified by an offset value.</span></span></summary>
        <returns><span data-ttu-id="15062-1292">一个对象，它等于原始的 <see cref="T:System.DateTimeOffset" /> 对象（也就是说，它们的 <see cref="M:System.DateTimeOffset.ToUniversalTime" /> 方法返回的时间点相同），但其 <see cref="P:System.DateTimeOffset.Offset" /> 属性设置为 <paramref name="offset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1292">An object that is equal to the original <see cref="T:System.DateTimeOffset" /> object (that is, their <see cref="M:System.DateTimeOffset.ToUniversalTime" /> methods return identical points in time) but whose <see cref="P:System.DateTimeOffset.Offset" /> property is set to <paramref name="offset" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1293"><xref:System.DateTimeOffset.ToOffset%2A>方法是<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>调用方法的替代方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1293">The <xref:System.DateTimeOffset.ToOffset%2A> method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="15062-1294">当时区与协调世界时 (UTC) 的偏移量已知时, 此方法可用于执行从一个时区到另一个时区的简单转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1294">It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known.</span></span> <span data-ttu-id="15062-1295">但是, 因为原始<xref:System.DateTimeOffset>对象和方法调用返回的新<xref:System.DateTimeOffset>对象都不明确地与特定时区相关, 所以此方法不会在转换中应用任何时区调整规则。</span><span class="sxs-lookup"><span data-stu-id="15062-1295">However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1296">下面的示例演示如何使用<xref:System.DateTimeOffset.ToOffset%2A>方法<xref:System.DateTimeOffset>将对象转换为<xref:System.DateTimeOffset>具有不同偏移量的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1296">The following example illustrates how to use the <xref:System.DateTimeOffset.ToOffset%2A> method to convert a <xref:System.DateTimeOffset> object to a <xref:System.DateTimeOffset> object with a different offset.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]
 [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1297">所生成的 <see cref="T:System.DateTimeOffset" /> 对象的值 <see cref="P:System.DateTimeOffset.DateTime" /> 值早于 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1297">The resulting <see cref="T:System.DateTimeOffset" /> object has a <see cref="P:System.DateTimeOffset.DateTime" /> value earlier than <see cref="F:System.DateTimeOffset.MinValue" />.</span></span>  
  
<span data-ttu-id="15062-1298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1298">-or-</span></span> 
<span data-ttu-id="15062-1299">所生成的 <see cref="T:System.DateTimeOffset" /> 对象的 <see cref="P:System.DateTimeOffset.DateTime" /> 值晚于 <see cref="F:System.DateTimeOffset.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1299">The resulting <see cref="T:System.DateTimeOffset" /> object has a <see cref="P:System.DateTimeOffset.DateTime" /> value later than <see cref="F:System.DateTimeOffset.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1300"><paramref name="offset" /> 小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1300"><paramref name="offset" /> is less than -14 hours.</span></span>  
  
<span data-ttu-id="15062-1301">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1301">-or-</span></span> 
 <span data-ttu-id="15062-1302"><paramref name="offset" /> 大于 14 小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1302"><paramref name="offset" /> is greater than 14 hours.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-1303">将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1303">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation.</span></span></summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTimeOffset.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1304">将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1304">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="15062-1305">一个 <see cref="T:System.DateTimeOffset" /> 对象的字符串表示形式，并在字符串末尾追加了偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1305">A string representation of a <see cref="T:System.DateTimeOffset" /> object that includes the offset appended at the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1306">此方法的返回值与<xref:System.DateTime.ToString?displayProperty=nameWithType>方法的返回值相同, 不同之处在于, 它包括一个空格, 并在字符串末尾追加了偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1306">The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=nameWithType> method, except that it includes a space followed by the offset appended at the end of the string.</span></span> <span data-ttu-id="15062-1307">换句话说, 它使用短日期模式、长时间模式和`zzz`自定义格式字符串来设置输出的格式, 每个元素都由一个空格与上一个元素隔开。</span><span class="sxs-lookup"><span data-stu-id="15062-1307">In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.</span></span> <span data-ttu-id="15062-1308">例如, 如果<xref:System.DateTime.ToString?displayProperty=nameWithType>返回值 1/12/2008 6:15:50 pm, 则返回的<xref:System.DateTimeOffset.ToString>值为 1/12/2008 6:15:50 pm-08:00, 时间是协调世界时 (UTC) 后八小时。</span><span class="sxs-lookup"><span data-stu-id="15062-1308">For example, if <xref:System.DateTime.ToString?displayProperty=nameWithType> returns a value of 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).</span></span>  
  
 <span data-ttu-id="15062-1309">此方法使用派生自当前区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1309">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="15062-1310">有关详细信息，请参阅 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>。</span><span class="sxs-lookup"><span data-stu-id="15062-1310">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.</span></span> <span data-ttu-id="15062-1311"><xref:System.DateTimeOffset.ToString%2A>方法的其他重载使你能够指定要使用其格式设置的区域性, 并定义<xref:System.DateTimeOffset>值的输出模式。</span><span class="sxs-lookup"><span data-stu-id="15062-1311">Other overloads of the <xref:System.DateTimeOffset.ToString%2A> method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1312">下面的示例演示对方法的<xref:System.DateTimeOffset.ToString>调用, 并在当前区域性为 en-us 的系统上显示其输出。</span><span class="sxs-lookup"><span data-stu-id="15062-1312">The following example illustrates calls to the <xref:System.DateTimeOffset.ToString> method and displays its output on a system whose current culture is en-us.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1313">此日期和时间超出了当前区域性所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1313">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1314"><see cref="M:System.DateTimeOffset.ToString" />方法返回当前区域性使用的日历中的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1314">The <see cref="M:System.DateTimeOffset.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="15062-1315">如果当前<see cref="T:System.DateTimeOffset" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1315">If the value of the current <see cref="T:System.DateTimeOffset" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="15062-1316">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="15062-1316">The following example provides an illustration.</span></span> <span data-ttu-id="15062-1317">当当前区域性为阿拉伯语 (叙利亚) 时, 它会尝试<see cref="T:System.Globalization.HijriCalendar" />设置位于类范围之外的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1317">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
<span data-ttu-id="15062-1318">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="15062-1318">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="15062-1319">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1319">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="15062-1320">使用指定的区域性特定格式设置信息将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1320">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="15062-1321">由 <paramref name="formatProvider" /> 指定的当前 <see cref="T:System.DateTimeOffset" /> 对象值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1321">A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1322">此方法的返回值与其等效的<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>方法重载相同, 不同之处在于, 它包括一个空格, 并在字符串末尾追加了偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1322">The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> method, except that it includes a space followed by the offset appended at the end of the string.</span></span> <span data-ttu-id="15062-1323">换句话说, 它使用短日期模式、长时间模式和`zzz`自定义格式字符串来设置输出的格式, 每个元素都由一个空格与上一个元素隔开。</span><span class="sxs-lookup"><span data-stu-id="15062-1323">In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.</span></span>  
  
 <span data-ttu-id="15062-1324">这三个元素的格式由`formatProvider`参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1324">The format of these three elements is defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1325">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1325">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1326">一个<xref:System.Globalization.CultureInfo>对象, 该对象表示其格式设置约定应用于返回的字符串的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1326">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string.</span></span> <span data-ttu-id="15062-1327">由属性返回的<xref:System.Globalization.DateTimeFormatInfo>对象定义返回的字符串的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>格式设置。</span><span class="sxs-lookup"><span data-stu-id="15062-1327">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="15062-1328">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1328">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1329">如果`formatProvider` <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.CurrentCulture%2A>为`null`, 则使用与当前区域性关联的对象 (请参见)。</span><span class="sxs-lookup"><span data-stu-id="15062-1329">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1330">下面的示例显示一个<xref:System.DateTimeOffset>对象, <xref:System.Globalization.CultureInfo>该对象使用表示固定区域性的对象以及四个其他区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1330">The following example displays a <xref:System.DateTimeOffset> object using <xref:System.Globalization.CultureInfo> objects that represent the invariant culture, as well as four other cultures.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1331">日期和时间超出了 <paramref name="formatProvider" /> 所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1331">The date and time is outside the range of dates supported by the calendar used by <paramref name="formatProvider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1332">方法返回由<paramref name="formatProvider" />参数所表示的区域性使用的日历中的日期和时间的字符串表示形式。 <see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /></span><span class="sxs-lookup"><span data-stu-id="15062-1332">The <see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="formatProvider" /> parameter.</span></span> <span data-ttu-id="15062-1333">其日历由<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />属性定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1333">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="15062-1334">如果当前<see cref="T:System.DateTimeOffset" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1334">If the value of the current <see cref="T:System.DateTimeOffset" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="15062-1335">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="15062-1335">The following example provides an illustration.</span></span> <span data-ttu-id="15062-1336">它尝试设置超出<see cref="T:System.Globalization.JapaneseCalendar" />类范围的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1336">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
<span data-ttu-id="15062-1337">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="15062-1337">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTimeOffset.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="15062-1338">一个格式字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1338">A format string.</span></span></param>
        <summary><span data-ttu-id="15062-1339">使用指定的格式将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1339">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="15062-1340">由 <paramref name="format" /> 指定的当前 <see cref="T:System.DateTimeOffset" /> 对象值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1340">A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1341">参数应包含单个格式说明符 (请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 或自定义格式模式 (请参阅[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)), 该模式定义了返回的格式`format`类似.</span><span class="sxs-lookup"><span data-stu-id="15062-1341">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="15062-1342">如果`format`为 null 或空字符串 ("") <xref:System.DateTimeOffset> , 则使用默认格式输出值。</span><span class="sxs-lookup"><span data-stu-id="15062-1342">If `format` is a null or empty string (""), the <xref:System.DateTimeOffset> value is output using the default format.</span></span>  
  
 <span data-ttu-id="15062-1343">下表显示了在与<xref:System.DateTimeOffset>一起使用时, 特定格式说明符的确切操作: 与一起使用时<xref:System.DateTime>的行为不同。</span><span class="sxs-lookup"><span data-stu-id="15062-1343">The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.</span></span>  
  
|<span data-ttu-id="15062-1344">现有格式说明符</span><span class="sxs-lookup"><span data-stu-id="15062-1344">Existing format specifier</span></span>|<span data-ttu-id="15062-1345">新行为</span><span class="sxs-lookup"><span data-stu-id="15062-1345">New behavior</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="15062-1346">“K”</span><span class="sxs-lookup"><span data-stu-id="15062-1346">"K"</span></span>|<span data-ttu-id="15062-1347">旨在往返日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1347">Designed to round-trip a date and time.</span></span> <span data-ttu-id="15062-1348">对于<xref:System.DateTimeOffset>, 映射到 "zzz" (偏移量始终显示为小时和分钟)。</span><span class="sxs-lookup"><span data-stu-id="15062-1348">With <xref:System.DateTimeOffset>, maps to "zzz" (the offset is always displayed with hours and minutes).</span></span> <span data-ttu-id="15062-1349">请注意, "K" 是一个自定义格式说明符;它不能显示为中`format`的单个字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1349">Note that "K" is a custom format specifier; it cannot appear as the single character in `format`.</span></span>|  
|<span data-ttu-id="15062-1350">“U”</span><span class="sxs-lookup"><span data-stu-id="15062-1350">"U"</span></span>|<span data-ttu-id="15062-1351">不支持。</span><span class="sxs-lookup"><span data-stu-id="15062-1351">Not supported.</span></span>|  
|<span data-ttu-id="15062-1352">迅驰</span><span class="sxs-lookup"><span data-stu-id="15062-1352">"r"</span></span>|<span data-ttu-id="15062-1353">将对象转换为协调世界时 (UTC), 并使用自定义格式字符串`ddd, dd MMM yyyy HH:mm:ss GMT`输出该对象。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-1353">Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.</span></span>|  
|<span data-ttu-id="15062-1354">“u”</span><span class="sxs-lookup"><span data-stu-id="15062-1354">"u"</span></span>|<span data-ttu-id="15062-1355">将对象转换为 UTC, 并使用格式`yyyy-MM-dd HH:mm:ssZ`输出该对象。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-1355">Converts the <xref:System.DateTimeOffset> object to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.</span></span>|  
  
 <span data-ttu-id="15062-1356">其余标准日期和时间格式说明符与<xref:System.DateTimeOffset.ToString%28System.String%29>方法<xref:System.DateTime.ToString%2A>的行为相同, 与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1356">The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.</span></span>  
  
 <span data-ttu-id="15062-1357">此方法使用派生自当前区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1357">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="15062-1358">有关详细信息，请参阅 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>。</span><span class="sxs-lookup"><span data-stu-id="15062-1358">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1359">下面的示例使用每<xref:System.DateTimeOffset>个标准日期和时间格式说明符向控制台显示一个对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1359">The following example displays a <xref:System.DateTimeOffset> object to the console using each of the standard date and time format specifiers.</span></span> <span data-ttu-id="15062-1360">使用 en-us 区域性设置输出的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1360">The output is formatted by using the en-us culture.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-1361"><paramref name="format" /> 的长度为 1，它不属于为 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定义的标准格式说明符字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1361">The length of <paramref name="format" /> is one, and it is not one of the standard format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="15062-1362">或</span><span class="sxs-lookup"><span data-stu-id="15062-1362">-or-</span></span> 
 <span data-ttu-id="15062-1363"><paramref name="format" /> 不包含有效的自定义格式模式。</span><span class="sxs-lookup"><span data-stu-id="15062-1363"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1364">此日期和时间超出了当前区域性所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1364">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1365"><see cref="M:System.DateTimeOffset.ToString(System.String)" />方法返回当前区域性使用的日历中的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1365">The <see cref="M:System.DateTimeOffset.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="15062-1366">如果当前<see cref="T:System.DateTimeOffset" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1366">If the value of the current <see cref="T:System.DateTimeOffset" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="15062-1367">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="15062-1367">The following example provides an illustration.</span></span> <span data-ttu-id="15062-1368">当当前区域性为希伯来语 (以色列) 时, 它会<see cref="T:System.Globalization.HebrewCalendar" />尝试设置位于类范围之外的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1368">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
<span data-ttu-id="15062-1369">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="15062-1369">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-1370">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1370">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-1371">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1371">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="15062-1372">一个格式字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1372">A format string.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1373">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1373">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="15062-1374">使用指定的格式和区域性特定格式信息将当前 <see cref="T:System.DateTimeOffset" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1374">Converts the value of the current <see cref="T:System.DateTimeOffset" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="15062-1375">当前 <see cref="T:System.DateTimeOffset" /> 对象的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="15062-1375">A string representation of the value of the current <see cref="T:System.DateTimeOffset" /> object, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1376">参数应包含单个格式说明符 (请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 或自定义格式模式 (请参阅[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md))。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-1376">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="15062-1377">如果`format`为 null 或空字符串 ("") <xref:System.DateTimeOffset> , 则使用默认格式输出对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1377">If `format` is a null or empty string (""), the <xref:System.DateTimeOffset> object is output using the default format.</span></span>  
  
 <span data-ttu-id="15062-1378">下表显示了在与<xref:System.DateTimeOffset>一起使用时, 特定格式说明符的确切操作: 与一起使用时<xref:System.DateTime>的行为不同。</span><span class="sxs-lookup"><span data-stu-id="15062-1378">The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.</span></span>  
  
|<span data-ttu-id="15062-1379">现有格式说明符</span><span class="sxs-lookup"><span data-stu-id="15062-1379">Existing format specifier</span></span>|<span data-ttu-id="15062-1380">新行为</span><span class="sxs-lookup"><span data-stu-id="15062-1380">New behavior</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="15062-1381">“K”</span><span class="sxs-lookup"><span data-stu-id="15062-1381">"K"</span></span>|<span data-ttu-id="15062-1382">旨在往返日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1382">Designed to round-trip a date and time.</span></span> <span data-ttu-id="15062-1383">对于<xref:System.DateTimeOffset>, 映射到 "zzz" (偏移量始终显示为小时和分钟)。</span><span class="sxs-lookup"><span data-stu-id="15062-1383">With <xref:System.DateTimeOffset>, maps to "zzz" (the offset is always displayed with hours and minutes).</span></span> <span data-ttu-id="15062-1384">请注意, "K" 是一个自定义格式说明符;它不能显示为中`format`的单个字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1384">Note that "K" is a custom format specifier; it cannot appear as the single character in `format`.</span></span>|  
|<span data-ttu-id="15062-1385">“U”</span><span class="sxs-lookup"><span data-stu-id="15062-1385">"U"</span></span>|<span data-ttu-id="15062-1386">不支持。</span><span class="sxs-lookup"><span data-stu-id="15062-1386">Not supported.</span></span>|  
|<span data-ttu-id="15062-1387">迅驰</span><span class="sxs-lookup"><span data-stu-id="15062-1387">"r"</span></span>|<span data-ttu-id="15062-1388">将对象转换为协调世界时 (UTC), 并使用自定义格式字符串`ddd, dd MMM yyyy HH:mm:ss GMT`输出该对象。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-1388">Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.</span></span>|  
|<span data-ttu-id="15062-1389">“u”</span><span class="sxs-lookup"><span data-stu-id="15062-1389">"u"</span></span>|<span data-ttu-id="15062-1390">将值转换为 UTC, 并使用格式`yyyy-MM-dd HH:mm:ssZ`输出。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-1390">Converts the <xref:System.DateTimeOffset> value to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.</span></span>|  
  
 <span data-ttu-id="15062-1391">其余标准日期和时间格式说明符与<xref:System.DateTimeOffset.ToString%28System.String%29>方法<xref:System.DateTime.ToString%2A>的行为相同, 与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1391">The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.</span></span>  
  
 <span data-ttu-id="15062-1392">对应于标准格式说明符的模式以及日期和时间部分的符号和名称由`formatProvider`参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1392">The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1393">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1393">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1394">一个<xref:System.Globalization.CultureInfo>对象, 表示在中`input`使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1394">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`.</span></span> <span data-ttu-id="15062-1395">由属性返回的`input`对象定义中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1395">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1396">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1396">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1397">如果`formatProvider` <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.CurrentCulture%2A>为`null`, 则使用与当前区域性关联的对象 (请参见)。</span><span class="sxs-lookup"><span data-stu-id="15062-1397">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1398">下面的示例使用<xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29>方法来显示一个<xref:System.DateTimeOffset>对象, 该对象对多个不同的区域性使用自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1398">The following example uses the <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> method to display a <xref:System.DateTimeOffset> object using a custom format string for several different cultures.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="15062-1399"><paramref name="format" /> 的长度为 1，它不属于为 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定义的标准格式说明符字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1399">The length of <paramref name="format" /> is one, and it is not one of the standard format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="15062-1400">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1400">-or-</span></span> 
 <span data-ttu-id="15062-1401"><paramref name="format" /> 不包含有效的自定义格式模式。</span><span class="sxs-lookup"><span data-stu-id="15062-1401"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15062-1402">日期和时间超出了 <paramref name="formatProvider" /> 所用日历支持的日期范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1402">The date and time is outside the range of dates supported by the calendar used by <paramref name="formatProvider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1403">方法返回<paramref name="formatProvider" />参数使用的日历中的日期和时间的字符串表示形式。 <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /></span><span class="sxs-lookup"><span data-stu-id="15062-1403">The <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="formatProvider" /> parameter.</span></span> <span data-ttu-id="15062-1404">其日历由<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />属性定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1404">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="15062-1405">如果当前<see cref="T:System.DateTimeOffset" />实例的值早于<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或晚于<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 则该方法将引发<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1405">If the value of the current <see cref="T:System.DateTimeOffset" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="15062-1406">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="15062-1406">The following example provides an illustration.</span></span> <span data-ttu-id="15062-1407">它尝试设置超出<see cref="T:System.Globalization.UmAlQuraCalendar" />类范围的日期的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1407">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
<span data-ttu-id="15062-1408">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="15062-1408">[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="15062-1409">标准日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1409">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="15062-1410">自定义日期和时间格式字符串</span><span class="sxs-lookup"><span data-stu-id="15062-1410">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="15062-1411">示例：.NET Framework 4 格式设置实用工具</span><span class="sxs-lookup"><span data-stu-id="15062-1411">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1412">将当前的 <see cref="T:System.DateTimeOffset" /> 对象转换为一个表示协调世界时 (UTC) 的 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1412">Converts the current <see cref="T:System.DateTimeOffset" /> object to a <see cref="T:System.DateTimeOffset" /> value that represents the Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="15062-1413">一个对象，它表示转换为协调世界时 (UTC) 的当前 <see cref="T:System.DateTimeOffset" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1413">An object that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object converted to Coordinated Universal Time (UTC).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1414">此方法返回一个<xref:System.DateTimeOffset>对象, <xref:System.DateTimeOffset.Offset%2A>其属性设置为零。</span><span class="sxs-lookup"><span data-stu-id="15062-1414">This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero.</span></span>  
  
 <span data-ttu-id="15062-1415">当前<xref:System.DateTimeOffset>对象的值与<xref:System.DateTimeOffset>方法调用所返回的对象的值都表示相同的时间点。</span><span class="sxs-lookup"><span data-stu-id="15062-1415">Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time.</span></span> <span data-ttu-id="15062-1416">也就是说, 如果两个传递给<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>方法, 则方法将返回。 `true`</span><span class="sxs-lookup"><span data-stu-id="15062-1416">That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method, the method will return `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1417">下面的示例调用<xref:System.DateTimeOffset.ToUniversalTime%2A>方法, 将本地时间和几个其他时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1417">The following example calls the <xref:System.DateTimeOffset.ToUniversalTime%2A> method to convert a local time and several other times to Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]
 [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToLocalTime" />
        <altmember cref="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeMilliseconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeMilliseconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeMilliseconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeMilliseconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1418">返回自 1970-01-01T00:00:00.000Z 起已经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1418">Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.</span></span></summary>
        <returns><span data-ttu-id="15062-1419">自 1970-01-01T00:00:00.000Z 起已经过的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1419">The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1420">Unix time 表示自 1970-01-01T00:00: 00Z (1970 年1月1日上午 12:00 AM UTC) 起已过去的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1420">Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).</span></span> <span data-ttu-id="15062-1421">它不会考虑闰秒的时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1421">It does not take leap seconds into account.</span></span> <span data-ttu-id="15062-1422">此方法返回 Unix 时间中的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1422">This method returns the number of milliseconds in Unix time.</span></span>  
  
 <span data-ttu-id="15062-1423">此方法首先将当前实例转换为 UTC, 然后再返回其 Unix 时间中的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1423">This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time.</span></span> <span data-ttu-id="15062-1424">对于 1970-01-01T00:00: 00Z 之前的日期和时间值, 此方法返回一个负值。</span><span class="sxs-lookup"><span data-stu-id="15062-1424">For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeSeconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeSeconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeSeconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeSeconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15062-1425">返回自 1970-01-01T00:00:00.00Z 起已经过的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1425">Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.</span></span></summary>
        <returns><span data-ttu-id="15062-1426">自 1970-01-01T00:00:00.00Z 起已经过的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1426">The number of seconds that have elapsed since 1970-01-01T00:00:00Z.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1427">Unix time 表示自 1970-01-01T00:00: 00Z (1970 年1月1日上午 12:00 AM UTC) 起已过去的秒数。</span><span class="sxs-lookup"><span data-stu-id="15062-1427">Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC).</span></span> <span data-ttu-id="15062-1428">它不会考虑闰秒的时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1428">It does not take leap seconds into account.</span></span>  
  
 <span data-ttu-id="15062-1429">此方法首先将当前实例转换为 UTC, 然后再返回其 Unix 时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1429">This method first converts the current instance to UTC before returning its Unix time.</span></span> <span data-ttu-id="15062-1430">对于 1970-01-01T00:00: 00Z 之前的日期和时间值, 此方法返回一个负值。</span><span class="sxs-lookup"><span data-stu-id="15062-1430">For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1431">下面的示例调用<xref:System.DateTimeOffset.ToUnixTimeSeconds%2A>方法以返回等于、早于 1970-01-01T00:00: 00Z 的值的 Unix 时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1431">The following example calls the <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> method to return the Unix time of values that are equal to, shortly before, and shortly after 1970-01-01T00:00:00Z.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTimeOffset.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-1432">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1432">Converts a specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent.</span></span></summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1433">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1433">A string that contains a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="15062-1434">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 的日期和时间等效的 <see cref="T:System.DateTimeOffset" />；如果转换失败，则包含 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1434">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed.</span></span> <span data-ttu-id="15062-1435">如果 <paramref name="input" /> 参数为 <see langword="null" />，或者不包含日期和时间的有效字符串表示形式，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="15062-1435">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="15062-1436">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="15062-1436">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="15062-1437">尝试将日期和时间的指定字符串表示形式转换为它的等效 <see cref="T:System.DateTimeOffset" />，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1437">Tries to converts a specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="15062-1438">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1438"><see langword="true" /> if the <paramref name="input" /> parameter is successfully converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1439">此<xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29>方法的重载<xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType>与方法类似, 不同之处在于, 如果转换失败, 则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-1439">This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="15062-1440">它分析一个字符串, 其中包含三个元素, 这些元素可按任意顺序出现并由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1440">It parses a string with three elements that can appear in any order and are delimited by white space.</span></span> <span data-ttu-id="15062-1441">下表显示了这三个元素。</span><span class="sxs-lookup"><span data-stu-id="15062-1441">These three elements are shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-1442">元素</span><span class="sxs-lookup"><span data-stu-id="15062-1442">Element</span></span>|<span data-ttu-id="15062-1443">示例</span><span class="sxs-lookup"><span data-stu-id="15062-1443">Example</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="15062-1444">\<日期 ></span><span class="sxs-lookup"><span data-stu-id="15062-1444">\<Date></span></span>|<span data-ttu-id="15062-1445">"2/10/2007"</span><span class="sxs-lookup"><span data-stu-id="15062-1445">"2/10/2007"</span></span>|  
|<span data-ttu-id="15062-1446">\<时间 ></span><span class="sxs-lookup"><span data-stu-id="15062-1446">\<Time></span></span>|<span data-ttu-id="15062-1447">"1:02:03 PM"</span><span class="sxs-lookup"><span data-stu-id="15062-1447">"1:02:03 PM"</span></span>|  
|<span data-ttu-id="15062-1448">\<Offset></span><span class="sxs-lookup"><span data-stu-id="15062-1448">\<Offset></span></span>|<span data-ttu-id="15062-1449">"-7:30"</span><span class="sxs-lookup"><span data-stu-id="15062-1449">"-7:30"</span></span>|  
  
 <span data-ttu-id="15062-1450">尽管这些元素中的每个元素\<都是可选的, 但 Offset > 不能单独出现。</span><span class="sxs-lookup"><span data-stu-id="15062-1450">Although each of these elements is optional, \<Offset> cannot appear by itself.</span></span> <span data-ttu-id="15062-1451">它必须与\<日期 > 或\<时间 > 一起提供。</span><span class="sxs-lookup"><span data-stu-id="15062-1451">It must be provided together with either \<Date> or \<Time>.</span></span> <span data-ttu-id="15062-1452">如果\<缺少日期 >, 则其默认值为当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1452">If \<Date> is missing, its default value is the current day.</span></span> <span data-ttu-id="15062-1453">如果\<存在日期 > 但其年份组成部分只包含两个数字, 则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换为当前区域性当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="15062-1453">If \<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="15062-1454">如果\<缺少时间 >, 则其默认值为 12:00:00 AM。</span><span class="sxs-lookup"><span data-stu-id="15062-1454">If \<Time> is missing, its default value is 12:00:00 AM.</span></span> <span data-ttu-id="15062-1455">如果\<缺少 Offset >, 则其默认值为本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1455">If \<Offset> is missing, its default value is the offset of the local time zone.</span></span> <span data-ttu-id="15062-1456">如果\<> 存在偏移量, 则它可以表示与协调世界时 (UTC) 之间的负值或正偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1456">If \<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-1457">在任一情况下\<, 偏移 > 都必须包含符号符号或方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="15062-1457">In either case, \<Offset> must include a sign symbol or the method returns `false`.</span></span>  
  
 <span data-ttu-id="15062-1458">通过使用为当前区域性初始化的<xref:System.Globalization.DateTimeFormatInfo>对象中的格式设置信息对字符串进行分析。`input`</span><span class="sxs-lookup"><span data-stu-id="15062-1458">The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture.</span></span> <span data-ttu-id="15062-1459">若要分析包含指定格式的字符串, 该字符串不一定对应于当前区域性的指定格式设置, <xref:System.DateTimeOffset.TryParseExact%2A>请使用方法并提供格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1459">To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1460">下面的示例调用<xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29>方法以分析多个具有各种日期和时间格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1460">The following example calls the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> method to parse several strings with various date and time formats.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="15062-1461">示例：.NET Framework 4 格式设置实用工具</span><span class="sxs-lookup"><span data-stu-id="15062-1461">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1462">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1462">A string that contains a date and time to convert.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1463">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1463">An object that provides culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1464">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1464">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span></param>
        <param name="result"><span data-ttu-id="15062-1465">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 的日期和时间等效的 <see cref="T:System.DateTimeOffset" />；如果转换失败，则包含 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1465">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> value equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed.</span></span> <span data-ttu-id="15062-1466">如果 <paramref name="input" /> 参数为 <see langword="null" />，或者不包含日期和时间的有效字符串表示形式，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="15062-1466">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="15062-1467">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="15062-1467">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="15062-1468">尝试将日期和时间的指定字符串表示形式转换为其等效 <see cref="T:System.DateTimeOffset" />，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1468">Tries to convert a specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="15062-1469">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1469"><see langword="true" /> if the <paramref name="input" /> parameter is successfully converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1470">此<xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29>方法的重载<xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>与方法类似, 不同之处在于, 如果转换失败, 则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-1470">This overload of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="15062-1471">方法分析一个字符串, 其中包含三个元素, 这些元素可按任意顺序出现并由空格分隔。</span><span class="sxs-lookup"><span data-stu-id="15062-1471">The method parses a string with three elements that can appear in any order and are delimited by white space.</span></span> <span data-ttu-id="15062-1472">下表显示了这三个元素。</span><span class="sxs-lookup"><span data-stu-id="15062-1472">These three elements are shown in the following table.</span></span>  
  
|<span data-ttu-id="15062-1473">元素</span><span class="sxs-lookup"><span data-stu-id="15062-1473">Element</span></span>|<span data-ttu-id="15062-1474">示例</span><span class="sxs-lookup"><span data-stu-id="15062-1474">Example</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="15062-1475">\<日期 ></span><span class="sxs-lookup"><span data-stu-id="15062-1475">\<Date></span></span>|<span data-ttu-id="15062-1476">"2/10/2007"</span><span class="sxs-lookup"><span data-stu-id="15062-1476">"2/10/2007"</span></span>|  
|<span data-ttu-id="15062-1477">\<时间 ></span><span class="sxs-lookup"><span data-stu-id="15062-1477">\<Time></span></span>|<span data-ttu-id="15062-1478">"1:02:03 PM"</span><span class="sxs-lookup"><span data-stu-id="15062-1478">"1:02:03 PM"</span></span>|  
|<span data-ttu-id="15062-1479">\<Offset></span><span class="sxs-lookup"><span data-stu-id="15062-1479">\<Offset></span></span>|<span data-ttu-id="15062-1480">"-7:30"</span><span class="sxs-lookup"><span data-stu-id="15062-1480">"-7:30"</span></span>|  
  
 <span data-ttu-id="15062-1481">尽管这些元素中的每个元素\<都是可选的, 但 Offset > 不能单独出现。</span><span class="sxs-lookup"><span data-stu-id="15062-1481">Although each of these elements is optional, \<Offset> cannot appear by itself.</span></span> <span data-ttu-id="15062-1482">它必须与\<日期 > 或\<时间 > 一起提供。</span><span class="sxs-lookup"><span data-stu-id="15062-1482">It must be provided together with either \<Date> or \<Time>.</span></span> <span data-ttu-id="15062-1483">如果\<缺少日期 >, 则其默认值为当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1483">If \<Date> is missing, its default value is the current day.</span></span> <span data-ttu-id="15062-1484">如果\<存在日期 > 但其年份组成部分只包含两个数字, 则将根据<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>属性的值将其转换`provider`为参数的当前日历中的年份。</span><span class="sxs-lookup"><span data-stu-id="15062-1484">If \<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="15062-1485">如果\<缺少时间 >, 则其默认值为 12:00:00 AM。</span><span class="sxs-lookup"><span data-stu-id="15062-1485">If \<Time> is missing, its default value is 12:00:00 AM.</span></span> <span data-ttu-id="15062-1486">如果\<缺少 Offset >, 则其默认值为本地时区的偏移量, 或者<xref:System.TimeSpan.Zero> , 如果在中`styles`指定<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>了<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>或值, 则为。</span><span class="sxs-lookup"><span data-stu-id="15062-1486">If \<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> or <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> value is specified in `styles`.</span></span> <span data-ttu-id="15062-1487">如果\<> 存在偏移量, 则它可以表示与协调世界时 (UTC) 之间的负值或正偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1487">If \<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-1488">在任一情况下\<, 偏移 > 都必须包含符号符号或方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="15062-1488">In either case, \<Offset> must include a sign symbol or the method returns `false`.</span></span>  
  
 <span data-ttu-id="15062-1489">使用参数提供<xref:System.Globalization.DateTimeFormatInfo>的对象中的区域性特定格式设置信息对字符串进行分析。`input` `formatProvider`</span><span class="sxs-lookup"><span data-stu-id="15062-1489">The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1490">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1490">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1491">一个<xref:System.Globalization.CultureInfo>对象, 表示在中`input`使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1491">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`.</span></span> <span data-ttu-id="15062-1492">由属性返回的`input`对象定义在中使用的格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1492">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the format that is used in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1493">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1493">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1494">此外, 每个元素可以用前导或尾随空格分隔, 并且 > 组件的\<日期 > 和\<时间可以包含内部空格 (如 6: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1494">In addition, each element can be delimited by leading or trailing white space, and the \<Date> and \<Time> components can include inner white space (such as 6:   00:00).</span></span> <span data-ttu-id="15062-1495">\<只有偏移 > 组件不能包含内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1495">Only the \<Offset> component cannot include inner white space.</span></span>  
  
 <span data-ttu-id="15062-1496">如果`provider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1496">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1497">Offset > 中\<使用的正号或负号必须是 + 或-。</span><span class="sxs-lookup"><span data-stu-id="15062-1497">The positive or negative sign used in \<Offset> must be either + or -.</span></span> <span data-ttu-id="15062-1498"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>它不由`formatprovider`参数<xref:System.Globalization.NumberFormatInfo>的<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> 属性所返回的对象的<xref:System.Globalization.CultureInfo.NumberFormat%2A>或属性定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1498">It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span>  
  
 <span data-ttu-id="15062-1499">支持以下<xref:System.Globalization.DateTimeStyles>枚举的成员:</span><span class="sxs-lookup"><span data-stu-id="15062-1499">The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:</span></span>  
  
|<span data-ttu-id="15062-1500">DateTimeStyles 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1500">DateTimeStyles Member</span></span>|<span data-ttu-id="15062-1501">注释</span><span class="sxs-lookup"><span data-stu-id="15062-1501">Comments</span></span>|  
|---------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1502">分析由`input`表示的字符串, 如有必要, 将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1502">Parses the string represented by `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1503">它等效于分析字符串, 然后调用返回对象的<xref:System.DateTimeOffset.ToUniversalTime>方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1503">It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1504">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-1504">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-1505">> 和\< \<时间 > 组件的日期中允许有内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1505">Inner white space is allowed in the \<Date> and \<Time> components.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1506">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-1506">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-1507">分析字符串中的每个组件的前面都允许使用前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1507">Leading white space is allowed in front of each component in the parsed string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1508">虽然有效, 但会忽略此值。</span><span class="sxs-lookup"><span data-stu-id="15062-1508">Although valid, this value is ignored.</span></span> <span data-ttu-id="15062-1509">分析字符串中的每个组件的前面都允许尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1509">Trailing white space is allowed in front of each component in the parsed string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1510">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1510">This is the default behavior.</span></span> <span data-ttu-id="15062-1511">不能通过提供限制性更强<xref:System.Globalization.DateTimeStyles>的枚举值 ( <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>如) 来重写它。</span><span class="sxs-lookup"><span data-stu-id="15062-1511">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1512">指示如果`input`参数\<缺少偏移 > 元素, 则应提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1512">Indicates that, if the `input` parameter lacks an \<Offset> element, the offset of the local time zone should be provided.</span></span> <span data-ttu-id="15062-1513">这是<xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29>方法的默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1513">This is the default behavior of the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1514">指示如果`input`参数\<缺少偏移 > 元素, 则应提供 UTC 偏移量 (00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1514">Indicates that, if the `input` parameter lacks an \<Offset> element, the UTC offset (00:00) should be provided.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1515">虽然有效, 但此值将被忽略且不起作用。</span><span class="sxs-lookup"><span data-stu-id="15062-1515">Although valid, this value is ignored and has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1516">由于结构不`Kind`包含属性, 因此此值不起作用。 <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="15062-1516">Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.</span></span>|  
  
 <span data-ttu-id="15062-1517">只支持<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="15062-1517">Only the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> value is not supported.</span></span> <span data-ttu-id="15062-1518">如果参数`styles`中包含此值, 则<xref:System.ArgumentException>会引发。</span><span class="sxs-lookup"><span data-stu-id="15062-1518">An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1519">下面的示例使用<xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> <xref:System.Globalization.DateTimeStyles>各种值调用方法, 以分析某些带有各种日期和时间格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1519">The following example calls the <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method with a variety of <xref:System.Globalization.DateTimeStyles> values to parse some strings with various date and time formats.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1520"><paramref name="styles" /> 包括未定义的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1520"><paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="15062-1521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1521">-or-</span></span> 
 <span data-ttu-id="15062-1522">不支持 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1522"><see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> is not supported.</span></span>  
  
<span data-ttu-id="15062-1523">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1523">-or-</span></span> 
 <span data-ttu-id="15062-1524"><paramref name="styles" /> 包括互斥的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1524"><paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span></exception>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15062-1525">将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1525">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent.</span></span> <span data-ttu-id="15062-1526">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1526">The format of the string representation must match a specified format exactly.</span></span></summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1527">包含要转换的日期和时间表示形式的字符范围。</span><span class="sxs-lookup"><span data-stu-id="15062-1527">A character span that contains the representation of a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="15062-1528">用于定义所需的 <paramref name="input" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1528">A format specifier that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1529">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1529">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1530">枚举值的一个按位组合，指示 <paramref name="input" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1530">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="input" />.</span></span> <span data-ttu-id="15062-1531">要指定的一个典型值为 <see cref="F:System.Globalization.DateTimeStyles.None" /></span><span class="sxs-lookup"><span data-stu-id="15062-1531">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" /></span></span></param>
        <param name="result"><span data-ttu-id="15062-1532">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 的日期和时间等效的 <see cref="T:System.DateTimeOffset" />；如果转换失败，则包含 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1532">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="15062-1533">如果出现以下情况，转换将失败</span><span class="sxs-lookup"><span data-stu-id="15062-1533">The conversion fails if the</span></span></param>
        <summary><span data-ttu-id="15062-1534">使用指定的格式、区域性特定的格式信息和样式将字符范围中的日期和时间的表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1534">Converts the representation of a date and time in a character span to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-1535">日期和时间表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1535">The format of the date and time representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-1536">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1536"><see langword="true" /> if the <paramref name="input" /> parameter is successfully converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="15062-1537">此重载与<xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType>方法类似, 不同的是, 如果转换失败, 则此方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-1537">This overload is like the <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> method, except that this method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="15062-1538">它分析必须与`format`参数指定的模式完全匹配的日期和时间的表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1538">It parses the representation of a date and time that must exactly match the pattern specified by the `format` parameter.</span></span> <span data-ttu-id="15062-1539">如果`input`与此模式不匹配, 并且`styles`参数定义的空白中有一些可能的变体, 则分析操作将失败, 并且`false`该方法将返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1539">If `input` does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.</span></span>  
  
<span data-ttu-id="15062-1540">参数是一个字符跨度, 其中包含单个标准格式说明符, 或者包含一个或多个定义的所需模式的`input`自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-1540">The `format` parameter is a character span that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`.</span></span> <span data-ttu-id="15062-1541">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1541">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1542">如果`format` `input`包括、或`zzz`自定义格式说明符以指示偏移量必须存在于中, 则该偏移量必须包括负号或正号。 `zz` `z`</span><span class="sxs-lookup"><span data-stu-id="15062-1542">If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1543">如果缺少符号, 则分析操作将失败, 并且该方法将`false`返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1543">If the sign is missing, the parsing operation fails and the method returns `false`.</span></span>  
  
<span data-ttu-id="15062-1544">如果`format` <xref:System.DateTimeOffset>需要包含日期但不包含时间, 则会将生成的对象分配为午夜 (0:00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1544">If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1545">如果`format` <xref:System.DateTimeOffset>要求包含时间而不包含日期, 则生成的对象将在本地系统上分配当前日期。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1545">If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1546">如果`format`不<xref:System.DateTimeOffset> `styles`要求包含偏移量, 则生成的对象的偏移量取决于参数的值。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1546">If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1547">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1547">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1548">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1548">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1549">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1549">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
<span data-ttu-id="15062-1550">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1550">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1551">`input` 如果`format`为标准格式说明符字符串, 则的精确模式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1551">The same is true for the precise pattern of `input` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1552">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1552">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1553">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1553">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1554">由属性返回的`input`对象定义中允许的符号和标准格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1554">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and standard formats allowed in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1555">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1555">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1556">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1556">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1557">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1557">The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1558">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1558">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1559">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1559">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1560">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1560">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1561">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1561">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1562">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1562">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1563">它等效于分析日期和时间表示形式, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1563">It is equivalent to parsing a date and time representation, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1564">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则会为返回的对象提供本地时区的偏移量。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1564">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1565">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1565">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1566">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则将为返回的对象指定 UTC 偏移量 (+ 00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1566">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1567">允许`input`包含格式未指定的内部空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1567">Allows `input` to include inner white space not specified by format.</span></span> <span data-ttu-id="15062-1568">在对字符串进行分析时, 日期和时间部分之间以及单个组件 (而不是偏移量) 之间可能会出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1568">Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1569">允许`input`包含未指定的`format`前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1569">Allows `input` to include leading spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1570">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1570">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1571">允许`input`包含未指定的`format`尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1571">Allows `input` to include trailing spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1572">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1572">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1573">允许`input`包含未指定的`format`前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1573">Allows `input` to include leading, trailing, and inner spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1574">分析字符串时, 将忽略未在中`format`指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1574">All extra white-space characters not specified in `format` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1575">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1575">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1576">空格必须与中指定的`format`完全相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1576">White space must appear exactly as specified in `format`.</span></span> <span data-ttu-id="15062-1577">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1577">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1578">不起作用, 因为<xref:System.DateTimeOffset>结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1578">Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1579"><paramref name="styles" /> 包括未定义的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1579"><paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
<span data-ttu-id="15062-1580">-或- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> 不受支持。</span><span class="sxs-lookup"><span data-stu-id="15062-1580">-or- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> is not supported.</span></span>  
<span data-ttu-id="15062-1581">-或- <paramref name="styles" /> 包括相互排斥的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1581">-or- <paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
<span data-ttu-id="15062-1582">此方法分析与分配`formats`给数组的模式之一匹配的日期的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1582">This method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array.</span></span> <span data-ttu-id="15062-1583">如果`input` `false`与`styles`这些模式中的任何一种模式都不匹配, 则分析操作将失败, 并且该方法将返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1583">If `input` does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`.</span></span> <span data-ttu-id="15062-1584">除了与包含`input`格式说明符的多个字符串进行比较以外, 此重载的<xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType>行为与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1584">Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="15062-1585">参数是一个字符串数组, 其元素包含单个标准格式说明符, 或者一个或多个定义的可能模式的`input`自定义格式说明符。 `formats`</span><span class="sxs-lookup"><span data-stu-id="15062-1585">The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`.</span></span> <span data-ttu-id="15062-1586">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1586">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1587">如果`formats`中的匹配元素`zz` `z`包含、或`zzz`自定义格式说明符以指示中`input`必须存在偏移量, 则该偏移量必须包括负号或正负号。</span><span class="sxs-lookup"><span data-stu-id="15062-1587">If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1588">如果缺少符号, 则分析操作将失败, 并且该方法将`false`返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1588">If the sign is missing, the parse operation fails and the method returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15062-1589">使用此`formats`重载的参数指定多种格式可帮助减少许多用户在输入日期和时间时遇到的不满。</span><span class="sxs-lookup"><span data-stu-id="15062-1589">Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.</span></span> <span data-ttu-id="15062-1590">特别是, 定义多个输入模式的功能使应用程序能够处理日期和时间表示形式, 该表示形式可以包括或缺少前导零 (以月、天、小时、分钟和秒为单位)。</span><span class="sxs-lookup"><span data-stu-id="15062-1590">In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.</span></span> <span data-ttu-id="15062-1591">该示例提供了此的说明。</span><span class="sxs-lookup"><span data-stu-id="15062-1591">The example provides an illustration of this.</span></span>  
  
 <span data-ttu-id="15062-1592">如果中`formats`的匹配元素`input`需要包含日期但不包含时间, 则将为生成<xref:System.DateTimeOffset>的对象分配一个午夜时间 (0:00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1592">If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1593">如果中`formats`的匹配元素要求输入包含时间而不包含日期, 则生成<xref:System.DateTimeOffset>的对象将在本地系统上分配当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1593">If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1594">如果中`formats`的匹配元素不`input`需要包含偏移量, 则生成<xref:System.DateTimeOffset>的对象的偏移量取决于`styles`参数的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1594">If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1595">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1595">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1596">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1596">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1597">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1597">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1598">中`input`使用的特定日期和时间符号`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1598">The particular date and time symbols used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1599">`input`如果的匹配`formats`元素是标准格式说明符字符串, 则对于的精确模式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1599">The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1600">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1600">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1601">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1601">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1602">由属性返回的`input`对象定义中的符号和格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1602">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1603">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1603">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1604">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1604">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1605">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1605">The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1606">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1606">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1607">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1607">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1608">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1608">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1609">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1609">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1610">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1610">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1611">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1611">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1612">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1612">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1613">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-1613">This is the default value.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1614">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供 UTC 偏移量 (+ 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1614">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1615">允许`input`包括中`formats`的元素未指定的内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1615">Allows `input` to include inner white space not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1616">在对字符串进行分析时, 日期和时间部分以及单个组件 (除偏移量以外) 中都可以出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1616">Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1617">允许`input`包括中`formats`的元素未指定的前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1617">Allows `input` to include leading spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1618">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1618">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1619">允许`input`包括中`formats`的元素未指定的尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1619">Allows `input` to include trailing spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1620">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1620">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1621">允许`input`包括中`formats`的元素未指定的前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1621">Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1622">分析字符串时, 将忽略未在中`formats`的匹配元素中指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1622">All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1623">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1623">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1624">空格必须完全按照中`formats`的特定元素指定, 才能成功匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1624">White space must appear exactly as specified in a particular element in `formats` for a successful match to occur.</span></span> <span data-ttu-id="15062-1625">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1625">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1626">不起作用, <xref:System.DateTimeOffset>因为结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1626">Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1627"><paramref name="styles" /> 包括未定义的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1627"><paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
<span data-ttu-id="15062-1628">-或- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> 不受支持。</span><span class="sxs-lookup"><span data-stu-id="15062-1628">-or- <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> is not supported.</span></span>  
<span data-ttu-id="15062-1629">-或- <paramref name="styles" /> 包括相互排斥的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1629">-or- <paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1630">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1630">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="15062-1631">用于定义所需的 <paramref name="input" /> 格式的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="15062-1631">A format specifier that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1632">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1632">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1633">枚举值的一个按位组合，指示输入所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1633">A bitwise combination of enumeration values that indicates the permitted format of input.</span></span> <span data-ttu-id="15062-1634">要指定的一个典型值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1634">A typical value to specify is <see langword="None" />.</span></span></param>
        <param name="result"><span data-ttu-id="15062-1635">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 的日期和时间等效的 <see cref="T:System.DateTimeOffset" />；如果转换失败，则包含 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1635">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed.</span></span> <span data-ttu-id="15062-1636">如果 <paramref name="input" /> 参数为 <see langword="null" />，或者不包含 <paramref name="format" /> 和 <c>provider</c> 所定义的所需格式的日期和时间的有效字符串表示形式，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="15062-1636">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" />, or does not contain a valid string representation of a date and time in the expected format defined by <paramref name="format" /> and <c>provider</c>.</span></span> <span data-ttu-id="15062-1637">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="15062-1637">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="15062-1638">使用指定的格式、区域性特定的格式信息和样式将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1638">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-1639">字符串表示形式的格式必须与指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1639">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-1640">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1640"><see langword="true" /> if the <paramref name="input" /> parameter is successfully converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1641">此<xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29>方法的重载<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>与方法类似, 不同之处在于, 如果转换失败, 则此方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="15062-1641">This overload of the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that this method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="15062-1642">它分析必须与`format`参数指定的模式完全匹配的日期和时间的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1642">It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter.</span></span> <span data-ttu-id="15062-1643">如果字符串与此模式不匹配, 并且`styles`由参数定义的空白中有一些可能的变体, 则分析操作将失败, 并且该方法将返回。 `false` `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1643">If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="15062-1644">参数是一个字符串, 其中包含单个标准格式说明符, 或者一个或多个定义所需模式的`input`自定义格式说明符。 `format`</span><span class="sxs-lookup"><span data-stu-id="15062-1644">The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`.</span></span> <span data-ttu-id="15062-1645">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1645">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1646">如果`format` `input`包括、或`zzz`自定义格式说明符以指示偏移量必须存在于中, 则该偏移量必须包括负号或正号。 `zz` `z`</span><span class="sxs-lookup"><span data-stu-id="15062-1646">If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1647">如果缺少符号, 则分析操作将失败, 并且该方法将`false`返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1647">If the sign is missing, the parsing operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="15062-1648">如果`format` <xref:System.DateTimeOffset>需要包含日期但不包含时间, 则会将生成的对象分配为午夜 (0:00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1648">If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1649">如果`format` <xref:System.DateTimeOffset>要求包含时间而不包含日期, 则生成的对象将在本地系统上分配当前日期。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1649">If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1650">如果`format`不<xref:System.DateTimeOffset> `styles`要求包含偏移量, 则生成的对象的偏移量取决于参数的值。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1650">If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1651">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1651">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1652">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1652">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1653">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1653">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1654">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1654">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1655">`input` 如果`format`为标准格式说明符字符串, 则的精确模式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1655">The same is true for the precise pattern of `input` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1656">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1656">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1657">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1657">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1658">由属性返回的`input`对象定义中允许的符号和标准格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1658">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and standard formats allowed in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1659">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1659">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1660">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1660">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1661">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1661">The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1662">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1662">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1663">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1663">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1664">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1664">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1665">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1665">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1666">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1666">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1667">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1667">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1668">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则会为返回的对象提供本地时区的偏移量。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1668">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1669">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1669">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1670">如果`format`不<xref:System.DateTimeOffset>要求包含 offset 值, 则将为返回的对象指定 UTC 偏移量 (+ 00:00)。 `input`</span><span class="sxs-lookup"><span data-stu-id="15062-1670">If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1671">允许`input`包含格式未指定的内部空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1671">Allows `input` to include inner white space not specified by format.</span></span> <span data-ttu-id="15062-1672">在对字符串进行分析时, 日期和时间部分之间以及单个组件 (而不是偏移量) 之间可能会出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1672">Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1673">允许`input`包含未指定的`format`前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1673">Allows `input` to include leading spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1674">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1674">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1675">允许`input`包含未指定的`format`尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1675">Allows `input` to include trailing spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1676">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1676">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1677">允许`input`包含未指定的`format`前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1677">Allows `input` to include leading, trailing, and inner spaces not specified by `format`.</span></span> <span data-ttu-id="15062-1678">分析字符串时, 将忽略未在中`format`指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1678">All extra white-space characters not specified in `format` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1679">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1679">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1680">空格必须与中指定的`format`完全相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1680">White space must appear exactly as specified in `format`.</span></span> <span data-ttu-id="15062-1681">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1681">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1682">不起作用, 因为<xref:System.DateTimeOffset>结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1682">Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
## Examples 

 <span data-ttu-id="15062-1683">下面的示例将<xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29>方法与标准和自定义格式说明符、固定区域性以及用于分析多个日期和时间字符串的各种<xref:System.Globalization.DateTimeStyles>值结合使用。</span><span class="sxs-lookup"><span data-stu-id="15062-1683">The following example uses the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]  

<span data-ttu-id="15062-1684">下面的示例使用各种<xref:System.Globalization.DateTimeStyles>值来分析应符合[ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier)的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="15062-1684">The following example uses a variety of <xref:System.Globalization.DateTimeStyles> values to parse an array of strings that are expected to conform to [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier).</span></span> <span data-ttu-id="15062-1685">如示例的输出所示, 格式正确的字符串在以下情况下无法分析:</span><span class="sxs-lookup"><span data-stu-id="15062-1685">As the output from the example shows, strings that are in the proper format fail to parse if:</span></span>

- <span data-ttu-id="15062-1686">它们包含空格和适当<xref:System.Globalization.DateTimeStyles>的标志 ( <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>如未在方法调用中提供)。</span><span class="sxs-lookup"><span data-stu-id="15062-1686">they contain white space, and an appropriate <xref:System.Globalization.DateTimeStyles> flag (such as <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> has not been supplied in the method call.</span></span>

- <span data-ttu-id="15062-1687">它们包含超出范围的日期和时间元素。</span><span class="sxs-lookup"><span data-stu-id="15062-1687">they contain date and time elements that are out of range.</span></span>

<span data-ttu-id="15062-1688">除非在方法调用中提供了<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>标志, 否则不指定 UTC 偏移量的字符串将采用本地时区的偏移量 (在本例中为-07:00, 表示太平洋夏令时时区的偏移量)。</span><span class="sxs-lookup"><span data-stu-id="15062-1688">Strings that do not specify a UTC offset are assumed to have the offset of the local time zone (in this case, -07:00, which reflects the offset of the Pacific Daylight Time zone) unless the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag is supplied in the method call.</span></span> <span data-ttu-id="15062-1689">在这种情况下, 假定它们是协调世界时。</span><span class="sxs-lookup"><span data-stu-id="15062-1689">In that case, they are assumed to be Universal Coordinated Time.</span></span>

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.vb)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1690"><paramref name="styles" /> 包括未定义的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1690"><paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="15062-1691">或</span><span class="sxs-lookup"><span data-stu-id="15062-1691">-or-</span></span> 
 <span data-ttu-id="15062-1692">不支持 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1692"><see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> is not supported.</span></span>  
  
<span data-ttu-id="15062-1693">或</span><span class="sxs-lookup"><span data-stu-id="15062-1693">-or-</span></span> 
 <span data-ttu-id="15062-1694"><paramref name="styles" /> 包括互斥的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1694"><paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1695">在中<see cref="Overload:System.DateTimeOffset.TryParseExact" /> <see langword="false" /> , 如果要分析的字符串包含一个小时部分和一个不在协议中的 AM/PM 指示符, 则返回。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15062-1695">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTimeOffset.TryParseExact" /> returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="15062-1696">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中, 将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="15062-1696">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="15062-1697">包含要转换的日期和时间的字符串。</span><span class="sxs-lookup"><span data-stu-id="15062-1697">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="15062-1698">一个用于定义 <paramref name="input" /> 的所需格式的数组。</span><span class="sxs-lookup"><span data-stu-id="15062-1698">An array that defines the expected formats of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="15062-1699">一个对象，提供有关 <paramref name="input" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="15062-1699">An object that supplies culture-specific formatting information about <paramref name="input" />.</span></span></param>
        <param name="styles"><span data-ttu-id="15062-1700">枚举值的一个按位组合，指示输入所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1700">A bitwise combination of enumeration values that indicates the permitted format of input.</span></span> <span data-ttu-id="15062-1701">要指定的一个典型值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1701">A typical value to specify is <see langword="None" />.</span></span></param>
        <param name="result"><span data-ttu-id="15062-1702">当此方法返回时，如果转换成功，则包含与 <paramref name="input" /> 的日期和时间等效的 <see cref="T:System.DateTimeOffset" />；如果转换失败，则包含 <see cref="F:System.DateTimeOffset.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1702">When the method returns, contains the <see cref="T:System.DateTimeOffset" /> equivalent to the date and time of <paramref name="input" />, if the conversion succeeded, or <see cref="F:System.DateTimeOffset.MinValue" />, if the conversion failed.</span></span> <span data-ttu-id="15062-1703">如果 <paramref name="input" /> 不包含日期和时间的有效字符串表示形式，或者不包含 <paramref name="format" /> 所定义的所需格式的日期和时间，或者 <paramref name="formats" /> 为 <see langword="null" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="15062-1703">The conversion fails if the <paramref name="input" /> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <paramref name="format" />, or if <paramref name="formats" /> is <see langword="null" />.</span></span> <span data-ttu-id="15062-1704">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="15062-1704">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="15062-1705">使用指定的格式数组、区域性特定格式信息和样式，将日期和时间的指定字符串表示形式转换为其等效的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1705">Converts the specified string representation of a date and time to its <see cref="T:System.DateTimeOffset" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="15062-1706">字符串表示形式的格式必须与一种指定的格式完全匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1706">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="15062-1707">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1707"><see langword="true" /> if the <paramref name="input" /> parameter is successfully converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1708">方法分析与分配`formats`给数组的模式之一匹配的日期的字符串表示形式。 <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29></span><span class="sxs-lookup"><span data-stu-id="15062-1708">The <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array.</span></span> <span data-ttu-id="15062-1709">如果该`input`字符串与`styles`这些模式中的任何一种模式都不匹配, 则分析操作将失败, 并且该方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="15062-1709">If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`.</span></span> <span data-ttu-id="15062-1710">除了与包含`input`格式说明符的多个字符串进行比较以外, 此重载的<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>行为与方法相同。</span><span class="sxs-lookup"><span data-stu-id="15062-1710">Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="15062-1711">参数是一个字符串数组, 其元素包含单个标准格式说明符, 或者一个或多个定义的可能模式的`input`自定义格式说明符。 `formats`</span><span class="sxs-lookup"><span data-stu-id="15062-1711">The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`.</span></span> <span data-ttu-id="15062-1712">有关有效格式设置代码的详细信息, 请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="15062-1712">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="15062-1713">如果`formats`中的匹配元素`zz` `z`包含、或`zzz`自定义格式说明符以指示中`input`必须存在偏移量, 则该偏移量必须包括负号或正负号。</span><span class="sxs-lookup"><span data-stu-id="15062-1713">If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign.</span></span> <span data-ttu-id="15062-1714">如果缺少符号, 则分析操作将失败, 并且该方法将`false`返回。</span><span class="sxs-lookup"><span data-stu-id="15062-1714">If the sign is missing, the parse operation fails and the method returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15062-1715">使用此`formats`重载的参数指定多种格式可帮助减少许多用户在输入日期和时间时遇到的不满。</span><span class="sxs-lookup"><span data-stu-id="15062-1715">Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times.</span></span> <span data-ttu-id="15062-1716">特别是, 定义多个输入模式的功能使应用程序能够处理日期和时间表示形式, 该表示形式可以包括或缺少前导零 (以月、天、小时、分钟和秒为单位)。</span><span class="sxs-lookup"><span data-stu-id="15062-1716">In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds.</span></span> <span data-ttu-id="15062-1717">该示例提供了此的说明。</span><span class="sxs-lookup"><span data-stu-id="15062-1717">The example provides an illustration of this.</span></span>  
  
 <span data-ttu-id="15062-1718">如果中`formats`的匹配元素`input`需要包含日期但不包含时间, 则将为生成<xref:System.DateTimeOffset>的对象分配一个午夜时间 (0:00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1718">If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00).</span></span> <span data-ttu-id="15062-1719">如果中`formats`的匹配元素要求输入包含时间而不包含日期, 则生成<xref:System.DateTimeOffset>的对象将在本地系统上分配当前日期。</span><span class="sxs-lookup"><span data-stu-id="15062-1719">If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system.</span></span> <span data-ttu-id="15062-1720">如果中`formats`的匹配元素不`input`需要包含偏移量, 则生成<xref:System.DateTimeOffset>的对象的偏移量取决于`styles`参数的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1720">If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter.</span></span> <span data-ttu-id="15062-1721">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeLocal>, 则将本地时区的偏移量分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1721">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeLocal>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1722">如果`styles` <xref:System.DateTimeOffset>包含<xref:System.Globalization.DateTimeStyles.AssumeUniversal>, 则将协调世界时 (UTC) 偏移量或 + 00:00 分配给对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1722">If `styles` includes <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object.</span></span> <span data-ttu-id="15062-1723">如果这两个值均未指定, 则使用本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1723">If neither value is specified, the offset of the local time zone is used.</span></span>  
  
 <span data-ttu-id="15062-1724">中`input`使用的特定日期和时间符号和字符串`formatProvider`由参数定义。</span><span class="sxs-lookup"><span data-stu-id="15062-1724">The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter.</span></span> <span data-ttu-id="15062-1725">`input`如果的匹配`formats`元素是标准格式说明符字符串, 则对于的精确模式也是如此。</span><span class="sxs-lookup"><span data-stu-id="15062-1725">The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string.</span></span> <span data-ttu-id="15062-1726">`formatProvider`参数可以是以下项之一:</span><span class="sxs-lookup"><span data-stu-id="15062-1726">The `formatProvider` parameter can be either of the following:</span></span>  
  
-   <span data-ttu-id="15062-1727">一个<xref:System.Globalization.CultureInfo>对象, 它表示基于其`input`进行解释的区域性。</span><span class="sxs-lookup"><span data-stu-id="15062-1727">A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted.</span></span> <span data-ttu-id="15062-1728">由属性返回的`input`对象定义中的符号和格式。 <xref:System.Globalization.DateTimeFormatInfo> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15062-1728">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the symbols and formatting in `input`.</span></span>  
  
-   <span data-ttu-id="15062-1729">一个<xref:System.Globalization.DateTimeFormatInfo>对象, 该对象定义日期和时间数据的格式。</span><span class="sxs-lookup"><span data-stu-id="15062-1729">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
 <span data-ttu-id="15062-1730">如果`formatprovider`为`null` ,<xref:System.Globalization.CultureInfo>则使用对应于当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="15062-1730">If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="15062-1731">`styles`参数定义在输入字符串中是否允许空格, 指示如何分析没有显式偏移量组件的字符串, 并支持在分析操作中进行 UTC 转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1731">The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation.</span></span> <span data-ttu-id="15062-1732">除外<xref:System.Globalization.DateTimeStyles> <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>, 还支持枚举的所有成员。</span><span class="sxs-lookup"><span data-stu-id="15062-1732">All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>.</span></span> <span data-ttu-id="15062-1733">下表列出了每个受支持的成员的效果。</span><span class="sxs-lookup"><span data-stu-id="15062-1733">The following table lists the effect of each supported member.</span></span>  
  
|<span data-ttu-id="15062-1734">`DateTimeStyles` 成员</span><span class="sxs-lookup"><span data-stu-id="15062-1734">`DateTimeStyles` member</span></span>|<span data-ttu-id="15062-1735">行为</span><span class="sxs-lookup"><span data-stu-id="15062-1735">Behavior</span></span>|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="15062-1736">分析`input`并根据需要将其转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="15062-1736">Parses `input` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="15062-1737">它等效于分析字符串, 然后调用<xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType>返回<xref:System.DateTimeOffset>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1737">It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> method of the returned <xref:System.DateTimeOffset> object.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="15062-1738">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供本地时区的偏移量。</span><span class="sxs-lookup"><span data-stu-id="15062-1738">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone.</span></span> <span data-ttu-id="15062-1739">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="15062-1739">This is the default value.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="15062-1740">如果中`formats`的匹配元素不`input`需要包含偏移量值, 则将为返回<xref:System.DateTimeOffset>的对象提供 UTC 偏移量 (+ 00:00)。</span><span class="sxs-lookup"><span data-stu-id="15062-1740">If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="15062-1741">允许`input`包括中`formats`的元素未指定的内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1741">Allows `input` to include inner white space not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1742">在对字符串进行分析时, 日期和时间部分以及单个组件 (除偏移量以外) 中都可以出现额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1742">Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="15062-1743">允许`input`包括中`formats`的元素未指定的前导空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1743">Allows `input` to include leading spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1744">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1744">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="15062-1745">允许`input`包括中`formats`的元素未指定的尾随空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1745">Allows `input` to include trailing spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1746">分析字符串时, 将忽略这些字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1746">These are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="15062-1747">允许`input`包括中`formats`的元素未指定的前导空格、尾随空格和内部空格。</span><span class="sxs-lookup"><span data-stu-id="15062-1747">Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`.</span></span> <span data-ttu-id="15062-1748">分析字符串时, 将忽略未在中`formats`的匹配元素中指定的所有额外空白字符。</span><span class="sxs-lookup"><span data-stu-id="15062-1748">All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="15062-1749">指示中`input`不允许使用额外的空白。</span><span class="sxs-lookup"><span data-stu-id="15062-1749">Indicates that additional white space is not permitted in `input`.</span></span> <span data-ttu-id="15062-1750">空格必须完全按照中`formats`的特定元素指定, 才能成功匹配。</span><span class="sxs-lookup"><span data-stu-id="15062-1750">White space must appear exactly as specified in a particular element in `formats` for a successful match to occur.</span></span> <span data-ttu-id="15062-1751">这是默认行为。</span><span class="sxs-lookup"><span data-stu-id="15062-1751">This is the default behavior.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="15062-1752">不起作用, <xref:System.DateTimeOffset>因为结构不`Kind`包括属性。</span><span class="sxs-lookup"><span data-stu-id="15062-1752">Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="15062-1753">下面的示例为日期和时间和偏移量值的字符串表示形式定义多个输入格式, 然后将用户输入的字符串传递给<xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1753">The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> method.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15062-1754"><paramref name="styles" /> 包括未定义的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1754"><paramref name="styles" /> includes an undefined <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="15062-1755">或</span><span class="sxs-lookup"><span data-stu-id="15062-1755">-or-</span></span> 
 <span data-ttu-id="15062-1756">不支持 <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1756"><see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> is not supported.</span></span>  
  
<span data-ttu-id="15062-1757">- 或 -</span><span class="sxs-lookup"><span data-stu-id="15062-1757">-or-</span></span> 
 <span data-ttu-id="15062-1758"><paramref name="styles" /> 包括互斥的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="15062-1758"><paramref name="styles" /> includes mutually exclusive <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="15062-1759">在中<see cref="Overload:System.DateTimeOffset.TryParseExact" /> <see langword="false" /> , 如果要分析的字符串包含一个小时部分和一个不在协议中的 AM/PM 指示符, 则返回。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15062-1759">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTimeOffset.TryParseExact" /> returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="15062-1760">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]在和早期版本中, 将忽略 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="15062-1760">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTimeOffset" Usage="System.DateTimeOffset.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcDateTime">
      <MemberSignature Language="C#" Value="public DateTime UtcDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcDateTime : DateTime" Usage="System.DateTimeOffset.UtcDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1761">获取一个 <see cref="T:System.DateTime" /> 值，该值表示当前 <see cref="T:System.DateTimeOffset" /> 对象的协调世界时 (UTC) 日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1761">Gets a <see cref="T:System.DateTime" /> value that represents the Coordinated Universal Time (UTC) date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-1762">当前 <see cref="T:System.DateTimeOffset" /> 对象的协调世界时 (UTC) 日期和时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1762">The Coordinated Universal Time (UTC) date and time of the current <see cref="T:System.DateTimeOffset" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1763"><xref:System.DateTimeOffset.UtcDateTime%2A>属性执行双重转换:</span><span class="sxs-lookup"><span data-stu-id="15062-1763">The <xref:System.DateTimeOffset.UtcDateTime%2A> property performs a dual conversion:</span></span>  
  
-   <span data-ttu-id="15062-1764">它将当前<xref:System.DateTimeOffset>对象的日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1764">It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="15062-1765">通过从当前<xref:System.DateTimeOffset.Offset%2A> <xref:System.DateTimeOffset>对象的日期和时间减去属性的值来执行转换。</span><span class="sxs-lookup"><span data-stu-id="15062-1765">The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.</span></span>  
  
-   <span data-ttu-id="15062-1766">它将<xref:System.DateTimeOffset>值转换<xref:System.DateTime>为值。</span><span class="sxs-lookup"><span data-stu-id="15062-1766">It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value.</span></span>  
  
 <span data-ttu-id="15062-1767"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType>返回<xref:System.DateTime.Kind%2A> 的值的<xref:System.DateTimeOffset.DateTime%2A>属性设置为。</span><span class="sxs-lookup"><span data-stu-id="15062-1767">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="15062-1768"><xref:System.DateTimeOffset.UtcDateTime%2A>检索属性的值等效于调用当前<xref:System.DateTime.Kind%2A> <xref:System.DateTimeOffset>对象的`ToUniversalTime.DateTime`属性, 只不过后<xref:System.DateTime>一个值的属性为<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="15062-1768">Retrieving the value of the <xref:System.DateTimeOffset.UtcDateTime%2A> property is equivalent to calling the current <xref:System.DateTimeOffset> object's `ToUniversalTime.DateTime` property, except that the <xref:System.DateTime.Kind%2A> property of the latter <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1769">下面的示例演示如何使用<xref:System.DateTimeOffset.UtcDateTime%2A>属性来<xref:System.DateTimeOffset>显示值及其相应的 UTC 时间。</span><span class="sxs-lookup"><span data-stu-id="15062-1769">The following example shows how to use of the <xref:System.DateTimeOffset.UtcDateTime%2A> property to display a <xref:System.DateTimeOffset> value and its corresponding UTC time.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]
 [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTimeOffset UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset UtcNow { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTimeOffset" Usage="System.DateTimeOffset.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1770">获取一个 <see cref="T:System.DateTimeOffset" /> 对象，其日期和时间设置为当前的协调世界时 (UTC) 日期和时间，其偏移量为 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1770">Gets a <see cref="T:System.DateTimeOffset" /> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <see cref="F:System.TimeSpan.Zero" />.</span></span></summary>
        <value><span data-ttu-id="15062-1771">一个对象，其日期和时间为当前的协调世界时 (UTC)，其偏移量为 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="15062-1771">An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <see cref="F:System.TimeSpan.Zero" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1772"><xref:System.DateTimeOffset.UtcNow%2A>属性根据本地系统的时钟时间和本地系统时区定义的偏移量计算当前协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="15062-1772">The <xref:System.DateTimeOffset.UtcNow%2A> property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.</span></span>  
  
 <span data-ttu-id="15062-1773">当前 UTC 时间的毫秒部分的精度取决于系统时钟的分辨率。</span><span class="sxs-lookup"><span data-stu-id="15062-1773">The precision of the current UTC time's millisecond component depends on the resolution of the system clock.</span></span> <span data-ttu-id="15062-1774">在 Windows NT 3.5 及更高版本以及 Windows Vista 操作系统上, 时钟的分辨率大约为10-15 毫秒。</span><span class="sxs-lookup"><span data-stu-id="15062-1774">On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1775">下面的示例说明协调世界时 (UTC) 与本地时间之间的关系。</span><span class="sxs-lookup"><span data-stu-id="15062-1775">The following example illustrates the relationship between Coordinated Universal Time (UTC) and local time.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]
 [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
      </Docs>
    </Member>
    <Member MemberName="UtcTicks">
      <MemberSignature Language="C#" Value="public long UtcTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UtcTicks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UtcTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcTicks : int64" Usage="System.DateTimeOffset.UtcTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1776">获取表示当前 <see cref="T:System.DateTimeOffset" /> 对象的协调世界时 (UTC) 日期和时间的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-1776">Gets the number of ticks that represents the date and time of the current <see cref="T:System.DateTimeOffset" /> object in Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="15062-1777"><see cref="T:System.DateTimeOffset" /> 对象的协调世界时 (UTC) 中的计时周期数。</span><span class="sxs-lookup"><span data-stu-id="15062-1777">The number of ticks in the <see cref="T:System.DateTimeOffset" /> object's Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1778"><xref:System.DateTimeOffset.UtcTicks%2A>属性的值表示自0001年1月1日午夜12:00:00 开始经过的100纳秒间隔数 (的<xref:System.DateTimeOffset.MinValue>值)。</span><span class="sxs-lookup"><span data-stu-id="15062-1778">The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>).</span></span> <span data-ttu-id="15062-1779">它不包括闰秒将添加的时间刻度。</span><span class="sxs-lookup"><span data-stu-id="15062-1779">It does not include ticks that would be added by leap seconds.</span></span> <span data-ttu-id="15062-1780">毫微秒为一秒的十亿分之一;第二个计时周期为10000000。</span><span class="sxs-lookup"><span data-stu-id="15062-1780">A nanosecond is one billionth of a second; there are ten million ticks in a second.</span></span> <span data-ttu-id="15062-1781"><xref:System.DateTimeOffset.UtcTicks%2A>属性的值范围从`DateTimeOffset.MinValue.Ticks`到`DateTimeOffset.MaxValue.Ticks`。</span><span class="sxs-lookup"><span data-stu-id="15062-1781">The value of the <xref:System.DateTimeOffset.UtcTicks%2A> property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTimeOffset.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15062-1782">获取由当前 <see cref="T:System.DateTimeOffset" /> 对象所表示的日期的年份组成部分。</span><span class="sxs-lookup"><span data-stu-id="15062-1782">Gets the year component of the date represented by the current <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <value><span data-ttu-id="15062-1783">当前 <see cref="T:System.DateTimeOffset" /> 对象的年份组成部分，以 0 到 9999 之间的一个整数值来表示。</span><span class="sxs-lookup"><span data-stu-id="15062-1783">The year component of the current <see cref="T:System.DateTimeOffset" /> object, expressed as an integer value between 0 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15062-1784">属性的值<xref:System.DateTimeOffset.Offset%2A>不会影响属性。 <xref:System.DateTimeOffset.Year%2A></span><span class="sxs-lookup"><span data-stu-id="15062-1784">The <xref:System.DateTimeOffset.Year%2A> property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.</span></span>  
  
 <span data-ttu-id="15062-1785">您还可以通过使用 "y"、 <xref:System.DateTimeOffset> "yy" 或 "yyyy" <xref:System.DateTimeOffset.ToString%2A>自定义格式说明符调用方法, 创建对象的年组成部分的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="15062-1785">You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the "y", "yy", or "yyyy" custom format specifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15062-1786">下面的示例以四种不同的方式<xref:System.DateTimeOffset>显示值的年份部分:</span><span class="sxs-lookup"><span data-stu-id="15062-1786">The following example displays the year component of a <xref:System.DateTimeOffset> value in four different ways:</span></span>  
  
-   <span data-ttu-id="15062-1787">通过检索<xref:System.DateTimeOffset.Year%2A>属性的值。</span><span class="sxs-lookup"><span data-stu-id="15062-1787">By retrieving the value of the <xref:System.DateTimeOffset.Year%2A> property.</span></span>  
  
-   <span data-ttu-id="15062-1788">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> y" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1788">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "y" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-1789">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> yy" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1789">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "yy" format specifier.</span></span>  
  
-   <span data-ttu-id="15062-1790">通过使用 " <xref:System.DateTimeOffset.ToString%28System.String%29> yyyy" 格式说明符调用方法。</span><span class="sxs-lookup"><span data-stu-id="15062-1790">By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the "yyyy" format specifier.</span></span>  
  
 [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]
 [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
