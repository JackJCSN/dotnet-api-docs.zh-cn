<Type Name="StringComparison" FullName="System.StringComparison">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9d3c109a21747c824d2b7799f2f6ba33e2c0743" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759202" /></Metadata><TypeSignature Language="C#" Value="public enum StringComparison" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed StringComparison extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.StringComparison" />
  <TypeSignature Language="VB.NET" Value="Public Enum StringComparison" />
  <TypeSignature Language="C++ CLI" Value="public enum class StringComparison" />
  <TypeSignature Language="F#" Value="type StringComparison = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0718f-101">指定供 <see cref="M:System.String.Compare(System.String,System.String)" /> 和 <see cref="M:System.String.Equals(System.Object)" /> 方法的特定重载使用的区域性、大小写和排序规则。</span><span class="sxs-lookup"><span data-stu-id="0718f-101">Specifies the culture, case, and sort rules to be used by certain overloads of the <see cref="M:System.String.Compare(System.String,System.String)" /> and <see cref="M:System.String.Equals(System.Object)" /> methods.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0718f-102"><xref:System.StringComparison>枚举用于指定字符串比较是否应使用当前区域性或固定区域性、 word 或序号排序规则，并为区分大小写或不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0718f-102">The <xref:System.StringComparison> enumeration is used to specify whether a string comparison should use the current culture or the invariant culture, word or ordinal sort rules, and be case-sensitive or case-insensitive.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0718f-103">当您调用字符串比较方法，如<xref:System.String.Compare%2A?displayProperty=nameWithType>， <xref:System.String.Equals%2A?displayProperty=nameWithType>，或<xref:System.String.IndexOf%2A?displayProperty=nameWithType>，你应始终调用包含类型的参数的重载<xref:System.StringComparison>，以便您可以指定该方法所执行的比较的类型。</span><span class="sxs-lookup"><span data-stu-id="0718f-103">When you call a string comparison method such as <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.Equals%2A?displayProperty=nameWithType>, or <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, you should always call an overload that includes a parameter of type <xref:System.StringComparison> so that you can specify the type of comparison that the method performs.</span></span> <span data-ttu-id="0718f-104">有关详细信息，请参阅[有关使用字符串的最佳实践](~/docs/standard/base-types/best-practices-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0718f-104">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="0718f-105">使用单词排序规则的操作执行区分区域性的比较其中某些非字母数字 Unicode 字符可能会有特殊的权重分配给他们。</span><span class="sxs-lookup"><span data-stu-id="0718f-105">An operation that uses word sort rules performs a culture-sensitive comparison wherein certain nonalphanumeric Unicode characters might have special weights assigned to them.</span></span> <span data-ttu-id="0718f-106">使用 word 排序规则和约定的特定区域性，连字符 ("-") 可能具有很小的权重分配给它，以便"coop"和"co-op"显示彼此排序列表中。</span><span class="sxs-lookup"><span data-stu-id="0718f-106">Using word sort rules and the conventions of a specific culture, the hyphen ("-") might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</span></span>  
  
[!INCLUDE[platform-note](~/includes/c-and-posix-cultures.md)]  
  
 <span data-ttu-id="0718f-107">使用序号排序规则的操作执行基于每个数字值 （Unicode 码位） 的比较<xref:System.Char>字符串中。</span><span class="sxs-lookup"><span data-stu-id="0718f-107">An operation that uses ordinal sort rules performs a comparison based on the numeric value (Unicode code point) of each <xref:System.Char> in the string.</span></span> <span data-ttu-id="0718f-108">序号比较是速度，但不区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="0718f-108">An ordinal comparison is fast but culture-insensitive.</span></span> <span data-ttu-id="0718f-109">当使用序号排序规则进行排序以 Unicode 字符 （U +） 开头的字符串时，字符串 U + xxxx 先找到字符串 U + yyyy 如果 xxxx 的值是数字小于 yyyy。</span><span class="sxs-lookup"><span data-stu-id="0718f-109">When you use ordinal sort rules to sort strings that start with Unicode characters (U+), the string U+xxxx comes before the string U+yyyy if the value of xxxx is numerically less than yyyy.</span></span>  
  
 <span data-ttu-id="0718f-110">有关比较的详细信息，请参阅<xref:System.String?displayProperty=nameWithType>类备注。</span><span class="sxs-lookup"><span data-stu-id="0718f-110">For more information about comparisons, see the <xref:System.String?displayProperty=nameWithType> class remarks.</span></span> <span data-ttu-id="0718f-111">有关区域性的详细信息，请参阅<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>类备注。</span><span class="sxs-lookup"><span data-stu-id="0718f-111">For more information about culture, see the <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class remarks.</span></span> <span data-ttu-id="0718f-112">有关何时使用序号或区分区域性的比较规则或固定区域性的规则的指南，请参阅[字符串使用最佳做法](~/docs/standard/base-types/best-practices-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0718f-112">For guidelines on when to use ordinal or culture-sensitive comparison rules or the rules of the invariant culture, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span> <span data-ttu-id="0718f-113">包含有关在 Windows 操作系统的排序和比较操作中使用的字符权重的信息的文本文件的一组，请参阅[排序权重表](https://www.microsoft.com/download/details.aspx?id=10921)。</span><span class="sxs-lookup"><span data-stu-id="0718f-113">For a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, see [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921).</span></span> <span data-ttu-id="0718f-114">适用于 Linux 和 macOS 的排序权重表，请参阅[默认 Unicode 排序规则元素表](https://www.unicode.org/Public/UCA/latest/allkeys.txt)。</span><span class="sxs-lookup"><span data-stu-id="0718f-114">For the sort weight table for Linux and macOS, see the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt).</span></span>   
  
## Examples  
 <span data-ttu-id="0718f-115">下面的示例使用的每个成员比较字的四个集<xref:System.StringComparison>枚举。</span><span class="sxs-lookup"><span data-stu-id="0718f-115">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="0718f-116">比较使用英语 （美国） 和萨米语，北 （瑞典） 区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="0718f-116">The comparisons use the conventions of the English (United States) and Sami, Northern (Sweden) cultures.</span></span> <span data-ttu-id="0718f-117">请注意，字符串"encyclopædia"和"百科全书"都视为等效 EN-US 区域性中但不是在萨米语，北 （瑞典） 区域性。</span><span class="sxs-lookup"><span data-stu-id="0718f-117">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami, Northern (Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex3.cs#3)]
 [!code-vb[System.String.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex3.vb#3)]  

 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="M:System.String.Compare(System.String,System.String)" />
    <altmember cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
    <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
    <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
  </Docs>
  <Members>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="CurrentCulture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison CurrentCulture = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="CurrentCulture" />
      <MemberSignature Language="C++ CLI" Value="CurrentCulture" />
      <MemberSignature Language="F#" Value="CurrentCulture = 0" Usage="System.StringComparison.CurrentCulture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-118">使用区分区域性的排序规则和当前区域性比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-118">Compare strings using culture-sensitive sort rules and the current culture.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="CurrentCultureIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison CurrentCultureIgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="CurrentCultureIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="CurrentCultureIgnoreCase" />
      <MemberSignature Language="F#" Value="CurrentCultureIgnoreCase = 1" Usage="System.StringComparison.CurrentCultureIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-119">通过使用区分区域性的排序规则、当前区域性，并忽略所比较的字符串的大小写，来比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-119">Compare strings using culture-sensitive sort rules, the current culture, and ignoring the case of the strings being compared.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="InvariantCulture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison InvariantCulture = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="InvariantCulture" />
      <MemberSignature Language="C++ CLI" Value="InvariantCulture" />
      <MemberSignature Language="F#" Value="InvariantCulture = 2" Usage="System.StringComparison.InvariantCulture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-120">使用区分区域性的排序规则和固定区域性比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-120">Compare strings using culture-sensitive sort rules and the invariant culture.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="InvariantCultureIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison InvariantCultureIgnoreCase = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="InvariantCultureIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="InvariantCultureIgnoreCase" />
      <MemberSignature Language="F#" Value="InvariantCultureIgnoreCase = 3" Usage="System.StringComparison.InvariantCultureIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-121">通过使用区分区域性的排序规则、固定区域性，并忽略所比较的字符串的大小写，来比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-121">Compare strings using culture-sensitive sort rules, the invariant culture, and ignoring the case of the strings being compared.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="Ordinal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison Ordinal = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Ordinal" />
      <MemberSignature Language="C++ CLI" Value="Ordinal" />
      <MemberSignature Language="F#" Value="Ordinal = 4" Usage="System.StringComparison.Ordinal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-122">使用序号（二进制）排序规则比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-122">Compare strings using ordinal (binary) sort rules.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison OrdinalIgnoreCase = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="F#" Value="OrdinalIgnoreCase = 5" Usage="System.StringComparison.OrdinalIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0718f-123">通过使用序号（二进制）区分区域性的排序规则并忽略所比较的字符串的大小写，来比较字符串。</span><span class="sxs-lookup"><span data-stu-id="0718f-123">Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
