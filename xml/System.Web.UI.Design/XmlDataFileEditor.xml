<Type Name="XmlDataFileEditor" FullName="System.Web.UI.Design.XmlDataFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e564922931b94cc635b312db71172020552e4888" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64085967" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type XmlDataFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于选择 XML 数据文件的设计时用户界面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor>对象用于在设计时选择和编辑 XML 数据文件 (.xml) 的 URL，然后将 URL 分配给控件属性。 例如，<xref:System.Web.UI.WebControls.XmlDataSource>控件使用<xref:System.Web.UI.Design.XmlDataFileEditor>类在设计时设置的值<xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>属性。  
  
 使用<xref:System.ComponentModel.EditorAttribute>特性将相关联<xref:System.Web.UI.Design.XmlDataFileEditor>的属性。 当在设计图面上编辑关联的属性时，设计器宿主调用<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>方法。 <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>方法使用<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>方法，这将依次显示用于选择 URL 的用户界面，然后返回用户选定的 URL。 <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A>方法指示的用户界面的显示样式。  
  
 从派生类<xref:System.Web.UI.Design.XmlDataFileEditor>来定义 XML 数据属性的自定义编辑器。 例如，派生的类可以重写<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>方法，，然后调用<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>方法使用自定义<xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>或<xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A>值。  
  
   
  
## Examples  
 下面的代码示例演示如何将相关联的实例<xref:System.Web.UI.Design.XmlDataFileEditor>类包含在自定义控件的属性。 当在设计图面上，编辑控件属性<xref:System.Web.UI.Design.XmlDataFileEditor>类提供了用户界面，可选择和编辑属性值的 XML 文件名称。  
  
 [!code-csharp[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要在选择对话框中显示的标题。</summary>
        <value>要在选择对话框中显示的标题文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A>属性可供<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>方法调用时<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>方法，用于在设计时向用户显示 URL 选择对话框。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取编辑器的 URL 筛选选项，用于对 URL 选择对话框中出现的项进行筛选。</summary>
        <value>一个字符串，表示对话框的一个或多个 URL 筛选选项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>属性可供<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>方法调用时<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>方法，用于在设计时向用户显示 URL 选择对话框。  
  
 <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>属性默认值，表示为对话框中的两个 URL 筛选器： 一个用于 XML 数据文件 (*.xml)，另一个用于所有文件 (\*。\*)。  
  
 筛选器字符串包含一个或多个筛选器选项。 每个筛选器选项包含说明的筛选器后, 接垂直条 (&#124;) 和筛选器模式。 由竖线分隔不同的筛选选项的字符串。  
  
 下面是一个包含两个筛选器选项的筛选器字符串的示例：  
  
 "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 通过用分号分隔的筛选器模式，可以在筛选器选项中指定多个筛选器模式。 下面是筛选器字符串，其中第一个筛选器选项指定两个筛选器模式的示例：  
  
 "`Custom XML Files (*.xd1; *.xd2)|*.xd1;*.xd2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>