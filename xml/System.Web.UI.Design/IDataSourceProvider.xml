<Type Name="IDataSourceProvider" FullName="System.Web.UI.Design.IDataSourceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a75f11a312d9f9c8eafee1548058eb2928c1c7d3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70542708" /></Metadata><TypeSignature Language="C#" Value="public interface IDataSourceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSourceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.IDataSourceProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSourceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSourceProvider" />
  <TypeSignature Language="F#" Value="type IDataSourceProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义经控件设计器实现后可访问数据源的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 能够提供数据源的类可以通过使用<xref:System.Web.UI.Design.IDataSourceProvider>接口的对象实现此接口，以启用对其数据源的访问。 此接口由<xref:System.Web.UI.Design.DataFieldConverter>和<xref:System.Web.UI.Design.DataMemberConverter>类使用。  
  
   
  
## Examples  
 下面的代码示例演示一个名为`TemplatedListDesigner`的自定义类，该类继承<xref:System.Web.UI.Design.TemplatedControlDesigner>自类并实现`IDataSourceProvider`接口。  
  
 [!code-xml[System.Web.UI.Design_Samples1#1](~/samples/snippets/common/VS_Snippets_WebNet/system.web.ui.design_samples1/Common/System.Web.UI.Design_Samples1.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetResolvedSelectedDataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable GetResolvedSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerable GetResolvedSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResolvedSelectedDataSource () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ GetResolvedSelectedDataSource();" />
      <MemberSignature Language="F#" Value="abstract member GetResolvedSelectedDataSource : unit -&gt; System.Collections.IEnumerable" Usage="iDataSourceProvider.GetResolvedSelectedDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从所选的数据源中获取选定的数据成员。</summary>
        <returns>从选择的数据源中选择的数据成员 -- 如果控件允许用户为数据源选择 <see cref="T:System.ComponentModel.IListSource" />（例如 <see cref="T:System.Data.DataSet" />），并提供 <see langword="DataMember" /> 属性来选择数据源内的特定列表（或 <see cref="T:System.Data.DataTable" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例实现了`GetResolvedSelectedDataSource` <xref:System.Web.UI.Design.IDataSourceProvider>接口<xref:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource%2A>的和方法。 方法获取作为数据源的任意对象，而此`GetResolvedSelectedDataSource`方法的实现<xref:System.Collections.IEnumerable>将该对象转换为对象。 `GetSelectedDataSource`  
  
 [!code-xml[System.Web.UI.Design_Samples1#17](~/samples/snippets/common/VS_Snippets_WebNet/system.web.ui.design_samples1/Common/System.Web.UI.Design_Samples1.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedDataSource">
      <MemberSignature Language="C#" Value="public object GetSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedDataSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSelectedDataSource();" />
      <MemberSignature Language="F#" Value="abstract member GetSelectedDataSource : unit -&gt; obj" Usage="iDataSourceProvider.GetSelectedDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取对数据源提供程序的选定数据源的引用。</summary>
        <returns>此数据源提供程序的当前选定的数据源对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例实现了`GetSelectedDataSource` <xref:System.Web.UI.Design.IDataSourceProvider>接口的<xref:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource%2A>和方法。 方法用于确保设计时与该控件关联的数据源是<xref:System.Collections.IEnumerable>实现接口的对象。 `GetSelectedDataSource` 这允许用户循环访问数据源。  
  
 [!code-xml[System.Web.UI.Design_Samples1#17](~/samples/snippets/common/VS_Snippets_WebNet/system.web.ui.design_samples1/Common/System.Web.UI.Design_Samples1.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
