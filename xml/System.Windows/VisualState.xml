<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94d52fadbbe5ee0176549400999a58e3ae14fb10" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70571768" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="de790-101">表示特定状态下控件的可视外观。</span><span class="sxs-lookup"><span data-stu-id="de790-101">Represents the visual appearance of the control when it is in a specific state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de790-102"><xref:System.Windows.VisualState>指定控件在处于某种状态时的外观。</span><span class="sxs-lookup"><span data-stu-id="de790-102">A <xref:System.Windows.VisualState> specifies how the control looks when it is in a certain state.</span></span> <span data-ttu-id="de790-103">例如，在按下<xref:System.Windows.Controls.Button>时，其边框可能不同于正常颜色。</span><span class="sxs-lookup"><span data-stu-id="de790-103">For example, when a <xref:System.Windows.Controls.Button> is pressed, its border might be a different color than normal.</span></span>  <span data-ttu-id="de790-104">类具有一个<xref:System.Windows.VisualState.Storyboard%2A>属性，该属性更改控件的外观。 <xref:System.Windows.VisualState></span><span class="sxs-lookup"><span data-stu-id="de790-104">The <xref:System.Windows.VisualState> class has a <xref:System.Windows.VisualState.Storyboard%2A> property that changes the appearance of the control.</span></span> <span data-ttu-id="de790-105">当控件输入<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>属性指定的状态时，将<xref:System.Windows.VisualState.Storyboard%2A>开始。</span><span class="sxs-lookup"><span data-stu-id="de790-105">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="de790-106">当控件退出状态时，将<xref:System.Windows.VisualState.Storyboard%2A>停止。</span><span class="sxs-lookup"><span data-stu-id="de790-106">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
 <span data-ttu-id="de790-107"><xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType>属性包含 <xref:System.Windows.VisualState> 对象。</span><span class="sxs-lookup"><span data-stu-id="de790-107">The <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> property contains <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="de790-108"><xref:System.Windows.VisualStateGroup>对象将添加到<xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType>在<xref:System.Windows.FrameworkElement>上定义的附加属性中。</span><span class="sxs-lookup"><span data-stu-id="de790-108"><xref:System.Windows.VisualStateGroup> objects are added to the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> attached property, which is defined on the on a <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="de790-109">您可以将<xref:System.Windows.VisualState>对象添加到<xref:System.Windows.FrameworkElement>任何对象，但这些对象<xref:System.Windows.Controls.ControlTemplate>通常<xref:System.Windows.Controls.Control>用于的中。</span><span class="sxs-lookup"><span data-stu-id="de790-109">You can add <xref:System.Windows.VisualState> objects to any <xref:System.Windows.FrameworkElement>, but they are typically are used in a <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="de790-110">有关如何为现有控件创建<xref:System.Windows.Controls.ControlTemplate>和<xref:System.Windows.VisualState>对象的信息，请参阅[通过创建 system.windows.controls.controltemplate> 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de790-110">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span> <span data-ttu-id="de790-111">有关使用<xref:System.Windows.VisualState>之外<xref:System.Windows.Controls.ControlTemplate>的对象的示例，请参阅<xref:System.Windows.VisualStateManager>类。</span><span class="sxs-lookup"><span data-stu-id="de790-111">For an example of using <xref:System.Windows.VisualState> objects outside of a <xref:System.Windows.Controls.ControlTemplate>, see the <xref:System.Windows.VisualStateManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de790-112">下面的示例<xref:System.Windows.VisualStateGroup> <xref:System.Windows.Controls.ControlTemplate>在<xref:System.Windows.Controls.Button>名`Pressed` <xref:System.Windows.VisualState> `MouseOver` `Normal`为的中创建一个，并为状态、、和添加对象。 `CommonStates`</span><span class="sxs-lookup"><span data-stu-id="de790-112">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="de790-113">还定义了一个名`Disabled`为的状态<xref:System.Windows.VisualStateGroup>，在`CommonStates`中，该示例为简洁起见省略了该状态。 <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="de790-113">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="de790-114">有关完整示例，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de790-114">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de790-115">初始化 <see cref="T:System.Windows.VisualState" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de790-115">Initializes a new instance of the <see cref="T:System.Windows.VisualState" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de790-116">获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="de790-116">Gets or sets the name of the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="de790-117"><see cref="T:System.Windows.VisualState" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="de790-117">The name of the <see cref="T:System.Windows.VisualState" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de790-118">通过将<xref:System.Windows.VisualState.Name%2A> <xref:System.Windows.VisualState>的传递给，指定元素应输入的可视状态。 <xref:System.Windows.VisualStateManager></span><span class="sxs-lookup"><span data-stu-id="de790-118">You specify which visual state an element should enter by passing the <xref:System.Windows.VisualState.Name%2A> of the <xref:System.Windows.VisualState> to the <xref:System.Windows.VisualStateManager>.</span></span>  
  
 <span data-ttu-id="de790-119"><xref:System.Windows.VisualStateManager> <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.TemplateVisualStateAttribute> <xref:System.Windows.VisualState>当在中<xref:System.Windows.Controls.Control> 使用时，控件作者应通过将置于其类签名上来指定控件希望在其中 <xref:System.Windows.Controls.ControlTemplate> 查找的对象。</span><span class="sxs-lookup"><span data-stu-id="de790-119">When a <xref:System.Windows.Controls.Control> uses the <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.ControlTemplate>, the control author should specify which <xref:System.Windows.VisualState> objects the control expects to find in its <xref:System.Windows.Controls.ControlTemplate> by putting the <xref:System.Windows.TemplateVisualStateAttribute> on its class signature.</span></span> <span data-ttu-id="de790-120"><xref:System.Windows.Controls.ControlTemplate>作者定义新<xref:System.Windows.VisualState>的对象， <xref:System.Windows.VisualState.Name%2A> 并将属性设置为属性指定的值。 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de790-120"><xref:System.Windows.Controls.ControlTemplate> authors define new <xref:System.Windows.VisualState> objects and set the <xref:System.Windows.VisualState.Name%2A> property to the value specified by the <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="de790-121">若要查找附带[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]的控件的可视状态的名称，请参阅[控件样式和模板](~/docs/framework/wpf/controls/control-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="de790-121">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="de790-122">有关如何为现有控件创建<xref:System.Windows.Controls.ControlTemplate>和<xref:System.Windows.VisualState>对象的信息，请参阅[通过创建 system.windows.controls.controltemplate> 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de790-122">For information about how to create a <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.VisualState> objects for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de790-123">下面的示例<xref:System.Windows.VisualStateGroup> <xref:System.Windows.Controls.ControlTemplate>在<xref:System.Windows.Controls.Button>名`Pressed` <xref:System.Windows.VisualState> `MouseOver` `Normal`为的中创建一个，并为状态、、和添加对象。 `CommonStates`</span><span class="sxs-lookup"><span data-stu-id="de790-123">The following example creates a <xref:System.Windows.VisualStateGroup> in the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.Button> called `CommonStates` and adds <xref:System.Windows.VisualState> objects for the states, `Normal`, `Pressed`, and `MouseOver`.</span></span> <span data-ttu-id="de790-124">还定义了一个名`Disabled`为的状态<xref:System.Windows.VisualStateGroup>，在`CommonStates`中，该示例为简洁起见省略了该状态。 <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="de790-124">The <xref:System.Windows.Controls.Button> also defines a state called `Disabled` that is in the `CommonStates`<xref:System.Windows.VisualStateGroup>, but the example omits it for brevity.</span></span> <span data-ttu-id="de790-125">有关完整示例，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de790-125">For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de790-126">获取或设置一个 <see cref="T:System.Windows.Media.Animation.Storyboard" />，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span><span class="sxs-lookup"><span data-stu-id="de790-126">Gets or sets a <see cref="T:System.Windows.Media.Animation.Storyboard" /> that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span></summary>
        <value><span data-ttu-id="de790-127">一个演示图板，它定义控件在 <see cref="T:System.Windows.VisualState" /> 所表示的状态下的外观。</span><span class="sxs-lookup"><span data-stu-id="de790-127">A storyboard that defines the appearance of the control when it is in the state that is represented by the <see cref="T:System.Windows.VisualState" />.</span></span> <span data-ttu-id="de790-128">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de790-128">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de790-129">当控件输入<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>属性指定的状态时，将<xref:System.Windows.VisualState.Storyboard%2A>开始。</span><span class="sxs-lookup"><span data-stu-id="de790-129">When the control enters the state that is specified by the <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> property, the <xref:System.Windows.VisualState.Storyboard%2A> begins.</span></span> <span data-ttu-id="de790-130">当控件退出状态时，将<xref:System.Windows.VisualState.Storyboard%2A>停止。</span><span class="sxs-lookup"><span data-stu-id="de790-130">When the control exits the state, the <xref:System.Windows.VisualState.Storyboard%2A> stops.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de790-131">下面的示例<xref:System.Windows.Controls.Button>为包含一个<xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.Grid>的创建了一个简单的。</span><span class="sxs-lookup"><span data-stu-id="de790-131">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span>  <span data-ttu-id="de790-132">如果用户`MouseOver`将鼠标放在上，则调用的<xref:System.Windows.Controls.Grid> <xref:System.Windows.VisualState>演示图板会将的颜色从绿色更改为红色。 <xref:System.Windows.Controls.Button></span><span class="sxs-lookup"><span data-stu-id="de790-132">The <xref:System.Windows.VisualState> called `MouseOver` has a Storyboard that changes the color of the <xref:System.Windows.Controls.Grid> from green to red when the user puts the mouse over the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="de790-133">包括<xref:System.Windows.VisualState>调用`Normal`的，以便在用户将鼠标移出按钮时，将<xref:System.Windows.Controls.Grid>返回到绿色。</span><span class="sxs-lookup"><span data-stu-id="de790-133">The <xref:System.Windows.VisualState> called `Normal` is included so that when the user moves the mouse off the button, the <xref:System.Windows.Controls.Grid> returns to green.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
