<Type Name="FontStyles" FullName="System.Windows.FontStyles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6461d644d8640411fd5522d75f4dafa6a030a1d" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64186652" /></Metadata><TypeSignature Language="C#" Value="public static class FontStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FontStyles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FontStyles" />
  <TypeSignature Language="VB.NET" Value="Public Class FontStyles" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontStyles abstract sealed" />
  <TypeSignature Language="F#" Value="type FontStyles = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一组静态预定义 <see cref="T:System.Windows.FontStyle" /> 值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字体样式引用字体的倾斜度： 普通、 斜体和倾斜。  
  
|字体样式|描述|  
|----------------|-----------------|  
|普通|正常的或 roman，字体中字符是竖直的情况下。|  
|斜体|斜体字体中的字符真正倾斜，并按它们的设计意图显示。|  
|倾斜|倾斜字体中的字符是人为倾斜|  
  
 有关<xref:System.Windows.FontStyles.Oblique%2A>，倾斜度获得通过普通字体中字符进行扭曲变换。 不在计算机或打印机上可用，则返回 true 的倾斜字体时，可以从普通字体生成倾斜字体，并将其用于模拟倾斜字体中。  
  
 下图显示 Palatino Linotype 字体的正常、 斜体和倾斜字体样式。 请注意如何倾斜字体样式有更平滑和具有视觉冲击力的比倾斜字体样式，只需创建倾斜的文本的普通字体样式版本的外观。  
  
 ![常规、 斜体和倾斜字体样式](~/add/media/fontstyle01.PNG "正常、 斜体和倾斜字体样式")  
字体样式的示例  
  
   
  
## Examples  
 在下面的代码示例中， <xref:System.Windows.FontStyles.Normal%2A>， <xref:System.Windows.FontStyles.Italic%2A>，并<xref:System.Windows.FontStyles.Oblique%2A>用于定义的字体样式<xref:System.Windows.Controls.TextBlock>对象。  
  
 [!code-xaml[FontSnippets#FontStyleSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml#fontstylesnippet1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FontStretches" />
    <altmember cref="T:System.Windows.FontWeights" />
  </Docs>
  <Members>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public static System.Windows.FontStyle Italic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.FontStyle Italic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FontStyles.Italic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Italic As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::FontStyle Italic { System::Windows::FontStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.Italic : System.Windows.FontStyle" Usage="System.Windows.FontStyles.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定一个斜体 <see cref="T:System.Windows.FontStyle" />。</summary>
        <value>一个表示斜体 <see cref="T:System.Windows.FontStyle" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 斜体字体中的字符真正倾斜，并按它们的设计意图显示。  
  
   
  
## Examples  
 在下面的代码示例中，<xref:System.Windows.FontStyles.Italic%2A>属性用于返回<xref:System.Windows.FontStyle>。  
  
 [!code-csharp[FontSnippets#FontStyleSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml.cs#fontstylesnippet3)]
 [!code-vb[FontSnippets#FontStyleSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontstylesnippets.xaml.vb#fontstylesnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="public static System.Windows.FontStyle Normal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.FontStyle Normal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FontStyles.Normal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Normal As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::FontStyle Normal { System::Windows::FontStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.Normal : System.Windows.FontStyle" Usage="System.Windows.FontStyles.Normal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定一个普通 <see cref="T:System.Windows.FontStyle" />。</summary>
        <value>一个表示普通 <see cref="T:System.Windows.FontStyle" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 正常的或 roman，字体中字符是竖直的情况下。  
  
   
  
## Examples  
 在下面的代码示例中，<xref:System.Windows.FontStyles.Normal%2A>属性用于返回<xref:System.Windows.FontStyle>。  
  
 [!code-csharp[FontSnippets#FontStyleSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml.cs#fontstylesnippet2)]
 [!code-vb[FontSnippets#FontStyleSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontstylesnippets.xaml.vb#fontstylesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oblique">
      <MemberSignature Language="C#" Value="public static System.Windows.FontStyle Oblique { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.FontStyle Oblique" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FontStyles.Oblique" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Oblique As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::FontStyle Oblique { System::Windows::FontStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.Oblique : System.Windows.FontStyle" Usage="System.Windows.FontStyles.Oblique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定一个倾斜 <see cref="T:System.Windows.FontStyle" />。</summary>
        <value>一个表示倾斜 <see cref="T:System.Windows.FontStyle" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 倾斜字体中的字符是人为倾斜。 倾斜度获得通过普通字体中字符进行扭曲变换。 不在计算机或打印机上可用，则返回 true 的倾斜字体时，可以从普通字体生成倾斜字体，并将其用于模拟倾斜字体中。  
  
   
  
## Examples  
 在下面的代码示例中，<xref:System.Windows.FontStyles.Oblique%2A>属性用于返回<xref:System.Windows.FontStyle>。  
  
 [!code-csharp[FontSnippets#FontStyleSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml.cs#fontstylesnippet4)]
 [!code-vb[FontSnippets#FontStyleSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontstylesnippets.xaml.vb#fontstylesnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>