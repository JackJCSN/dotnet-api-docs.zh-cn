<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="210035747360431159231deead302140e8df9cba" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444143" /></Metadata><TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RoutedEventHandler = delegate of obj * RoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="cde5d-101">事件处理程序所附加到的对象。</span><span class="sxs-lookup"><span data-stu-id="cde5d-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="cde5d-102">事件数据。</span><span class="sxs-lookup"><span data-stu-id="cde5d-102">The event data.</span></span></param>
    <summary><span data-ttu-id="cde5d-103">表示将处理各种路由事件的方法，这些路由事件不包含除所有路由事件共有数据之外的其他特定事件数据。</span><span class="sxs-lookup"><span data-stu-id="cde5d-103">Represents the method that will handle various routed events that do not have specific event data beyond the data that is common for all routed events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cde5d-104"><xref:System.Windows.RoutedEventHandler>委托用于任何不报告事件数据中特定于事件的信息的路由事件。</span><span class="sxs-lookup"><span data-stu-id="cde5d-104">The <xref:System.Windows.RoutedEventHandler> delegate is used for any routed event that does not report event-specific information in the event data.</span></span> <span data-ttu-id="cde5d-105">这类路由事件很多;突出的示例<xref:System.Windows.Controls.Primitives.ButtonBase.Click>包括<xref:System.Windows.FrameworkElement.Loaded>和。</span><span class="sxs-lookup"><span data-stu-id="cde5d-105">There are many such routed events; prominent examples include <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded>.</span></span>  
  
 <span data-ttu-id="cde5d-106">写入路由事件的处理程序与常规[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]事件相比, 最值得注意的区别在于`sender` , 事件 (附加和调用处理程序的元素) 不一定是源事件的。</span><span class="sxs-lookup"><span data-stu-id="cde5d-106">The most noteworthy difference between writing a handler for a routed event as opposed to a general [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event is that the `sender` of the event (the element where the handler is attached and invoked) cannot be considered to necessarily be the source of the event.</span></span> <span data-ttu-id="cde5d-107">源在事件数据 (<xref:System.Windows.RoutedEventArgs.Source%2A>) 中报告为属性。</span><span class="sxs-lookup"><span data-stu-id="cde5d-107">The source is reported as a property in the event data (<xref:System.Windows.RoutedEventArgs.Source%2A>).</span></span> <span data-ttu-id="cde5d-108">`sender` 与<xref:System.Windows.RoutedEventArgs.Source%2A>之间的区别在于, 在通过元素树遍历路由事件的过程中, 将事件路由到不同的元素。</span><span class="sxs-lookup"><span data-stu-id="cde5d-108">A difference between `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> is the result of the event being routed to different elements, during the traversal of the routed event through an element tree.</span></span>  
  
 <span data-ttu-id="cde5d-109">如果对直接或`sender`冒泡<xref:System.Windows.RoutedEventArgs.Source%2A>路由事件的路由行为感兴趣, 并且仅打算在第一次引发元素的元素上处理路由事件, 则可以将或用于对象引用。</span><span class="sxs-lookup"><span data-stu-id="cde5d-109">You can use either `sender` or <xref:System.Windows.RoutedEventArgs.Source%2A> for an object reference if you are deliberately not interested in the routing behavior of a direct or bubbling routed event and you only intend to handle routed events on the elements where they are first raised.</span></span> <span data-ttu-id="cde5d-110">在这种情况`sender`下<xref:System.Windows.RoutedEventArgs.Source%2A> , 和是相同的对象。</span><span class="sxs-lookup"><span data-stu-id="cde5d-110">In this circumstance, `sender` and <xref:System.Windows.RoutedEventArgs.Source%2A> are the same object.</span></span>  
  
 <span data-ttu-id="cde5d-111">如果您确实要利用路由事件的固有功能并相应地编写处理程序, 则在编写事件处理程序时将使用的事件数据的两个最重要的属性为<xref:System.Windows.RoutedEventArgs.Source%2A>和。 <xref:System.Windows.RoutedEventArgs.Handled%2A></span><span class="sxs-lookup"><span data-stu-id="cde5d-111">If you do intend to take advantage of the inherent features of routed events and write your handlers accordingly, the two most important properties of the event data that you will work with when writing event handlers are <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.Handled%2A>.</span></span>  
  
 <span data-ttu-id="cde5d-112">对于某些输入事件和[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]控件类的组合, 引发事件的元素不是有机会处理该事件的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="cde5d-112">For certain combinations of input events and [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control classes, the element that raises the event is not the first element that has the opportunity to handle it.</span></span> <span data-ttu-id="cde5d-113">如果输入事件具有事件的预览版本, 则元素树的根具有第一次机会, 可以在共享事件数据<xref:System.Windows.RoutedEventArgs.Handled%2A>中`true`将其设置为, 并且可能会影响将输入事件报告给其事件路由中的剩余元素的方式。</span><span class="sxs-lookup"><span data-stu-id="cde5d-113">If the input event has a Preview version of the event, then the root of the element tree has first opportunity, can set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true` in the shared event data, and can influence how the input event is reported to remaining elements in its event route.</span></span> <span data-ttu-id="cde5d-114">预览处理行为可以使特定路由事件不会按预期方式引发。</span><span class="sxs-lookup"><span data-stu-id="cde5d-114">The Preview handling behavior can give the appearance that a particular routed event is not raised as expected.</span></span> <span data-ttu-id="cde5d-115">有关详细信息, 请参阅[预览事件](~/docs/framework/wpf/advanced/preview-events.md)和[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="cde5d-115">For more information, see [Preview Events](~/docs/framework/wpf/advanced/preview-events.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
