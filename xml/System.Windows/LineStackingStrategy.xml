<Type Name="LineStackingStrategy" FullName="System.Windows.LineStackingStrategy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55b6fd83aa277b7dca45ab01dec1c78107a20fd1" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64185471" /></Metadata><TypeSignature Language="C#" Value="public enum LineStackingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LineStackingStrategy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LineStackingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LineStackingStrategy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LineStackingStrategy" />
  <TypeSignature Language="F#" Value="type LineStackingStrategy = " />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="e95fb-101">描述一种机制，将根据该机制来为每一行确定行框。</span><span class="sxs-lookup"><span data-stu-id="e95fb-101">Describes a mechanism by which a line box is determined for each line.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e95fb-102">下面的示例演示如何使用<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>属性来确定行框的文本行的创建方式<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="e95fb-102">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="e95fb-103">第一个<xref:System.Windows.Controls.TextBlock>已<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A>MaxHeight，第二个值<xref:System.Windows.Controls.TextBlock>BlockLineHeight 的值。</span><span class="sxs-lookup"><span data-stu-id="e95fb-103">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of MaxHeight and the second <xref:System.Windows.Controls.TextBlock> has a value of BlockLineHeight.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="e95fb-104">下图显示了上面的代码的结果。</span><span class="sxs-lookup"><span data-stu-id="e95fb-104">The following illustration shows the result of the code above.</span></span>  
  
 <span data-ttu-id="e95fb-105">![屏幕快照：比较 LineStackingStrategy 值](~/add/media/flow-linestackingstrategy.gif "屏幕快照：比较 LineStackingStrategy 值")</span><span class="sxs-lookup"><span data-stu-id="e95fb-105">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockLineHeight">
      <MemberSignature Language="C#" Value="BlockLineHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineStackingStrategy BlockLineHeight = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineStackingStrategy.BlockLineHeight" />
      <MemberSignature Language="VB.NET" Value="BlockLineHeight" />
      <MemberSignature Language="C++ CLI" Value="BlockLineHeight" />
      <MemberSignature Language="F#" Value="BlockLineHeight = 0" Usage="System.Windows.LineStackingStrategy.BlockLineHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e95fb-106">堆栈高度由块元素行高属性值确定。</span><span class="sxs-lookup"><span data-stu-id="e95fb-106">The stack height is determined by the block element line-height property value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="MaxHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineStackingStrategy MaxHeight = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineStackingStrategy.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="MaxHeight" />
      <MemberSignature Language="C++ CLI" Value="MaxHeight" />
      <MemberSignature Language="F#" Value="MaxHeight = 1" Usage="System.Windows.LineStackingStrategy.MaxHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e95fb-107">当该行上所有内联元素均正确对齐时，堆栈高度是包含所有这些元素的最小值。</span><span class="sxs-lookup"><span data-stu-id="e95fb-107">The stack height is the smallest value that containing all the inline elements on that line when those elements are properly aligned.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>