<Type Name="DataTemplate" FullName="System.Windows.DataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a406976b584aa7dd6b02474f4fa22aaf1f2e0379" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70705692" /></Metadata><TypeSignature Language="C#" Value="public class DataTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplate : System::Windows::FrameworkTemplate" />
  <TypeSignature Language="F#" Value="type DataTemplate = class&#xA;    inherit FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="02b5f-101">描述数据对象的可视结构。</span><span class="sxs-lookup"><span data-stu-id="02b5f-101">Describes the visual structure of a data object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-102">您可以使用<xref:System.Windows.DataTemplate>指定数据对象的可视化。</span><span class="sxs-lookup"><span data-stu-id="02b5f-102">You use a <xref:System.Windows.DataTemplate> to specify the visualization of your data objects.</span></span> <span data-ttu-id="02b5f-103"><xref:System.Windows.DataTemplate>将<xref:System.Windows.Controls.ItemsControl> 等 <xref:System.Windows.Controls.ListBox> 绑定到整个集合时，对象特别有用。</span><span class="sxs-lookup"><span data-stu-id="02b5f-103"><xref:System.Windows.DataTemplate> objects are particularly useful when you are binding an <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox> to an entire collection.</span></span> <span data-ttu-id="02b5f-104">如果没有特定说明， <xref:System.Windows.Controls.ListBox>则会显示集合中对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="02b5f-104">Without specific instructions, a <xref:System.Windows.Controls.ListBox> displays the string representation of the objects in a collection.</span></span> <span data-ttu-id="02b5f-105">在这种情况下，可以使用<xref:System.Windows.DataTemplate>来定义数据对象的外观。</span><span class="sxs-lookup"><span data-stu-id="02b5f-105">In that case, you can use a <xref:System.Windows.DataTemplate> to define the appearance of your data objects.</span></span> <span data-ttu-id="02b5f-106">的内容<xref:System.Windows.DataTemplate>成为数据对象的可视结构。</span><span class="sxs-lookup"><span data-stu-id="02b5f-106">The content of your <xref:System.Windows.DataTemplate> becomes the visual structure of your data objects.</span></span>  
  
 <span data-ttu-id="02b5f-107">有关详细讨论，请参阅[数据模板化概述](~/docs/framework/wpf/data/data-templating-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-107">For an in-depth discussion, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b5f-108">下面的示例演示如何创建<xref:System.Windows.DataTemplate>内联。</span><span class="sxs-lookup"><span data-stu-id="02b5f-108">The following example shows how to create a <xref:System.Windows.DataTemplate> inline.</span></span> <span data-ttu-id="02b5f-109">指定每个数据项在中<xref:System.Windows.Controls.StackPanel>显示为三<xref:System.Windows.Controls.TextBlock>个元素。 <xref:System.Windows.DataTemplate></span><span class="sxs-lookup"><span data-stu-id="02b5f-109">The <xref:System.Windows.DataTemplate> specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="02b5f-110">在此示例中，数据对象是一个名`Task`为的类。</span><span class="sxs-lookup"><span data-stu-id="02b5f-110">In this example, the data object is a class called `Task`.</span></span> <span data-ttu-id="02b5f-111">请注意， <xref:System.Windows.Controls.TextBlock>此模板中的每个元素都绑定到`Task`类的属性。</span><span class="sxs-lookup"><span data-stu-id="02b5f-111">Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 <span data-ttu-id="02b5f-112">更常见的是<xref:System.Windows.DataTemplate>在 resources 节中定义，因此它可以是可重复使用的对象，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="02b5f-112">It is more common to define a <xref:System.Windows.DataTemplate> in the resources section so it can be a reusable object, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="02b5f-113">现在可以将 `myTaskTemplate` 用作资源，如以下示例所示：</span><span class="sxs-lookup"><span data-stu-id="02b5f-113">Now you can use `myTaskTemplate` as a resource, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 <span data-ttu-id="02b5f-114">有关完整示例，请参阅[数据模板化示例简介](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/DataTemplatingIntro)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-114">For the complete sample, see [Introduction to Data Templating Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/DataTemplatingIntro).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.Binding" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
    <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=163703"><span data-ttu-id="02b5f-115">数据绑定演示</span><span class="sxs-lookup"><span data-stu-id="02b5f-115">Data Binding Demo</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02b5f-116">初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02b5f-116">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02b5f-117">初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02b5f-117">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.DataTemplate : obj -&gt; System.Windows.DataTemplate" Usage="new System.Windows.DataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType"><span data-ttu-id="02b5f-118">如果模板专用于对象数据，则这是数据对象的类型名称。</span><span class="sxs-lookup"><span data-stu-id="02b5f-118">If the template is intended for object data, this is the Type name of the data object.</span></span></param>
        <summary><span data-ttu-id="02b5f-119">使用指定的 <see cref="T:System.Windows.DataTemplate" /> 属性初始化 <see cref="P:System.Windows.DataTemplate.DataType" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02b5f-119">Initializes a new instance of the <see cref="T:System.Windows.DataTemplate" /> class with the specified <see cref="P:System.Windows.DataTemplate.DataType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-120">若要引用类的类型名称，请使用[X:Type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-120">To refer to the Type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="02b5f-121">如果模板[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]用于数据，则该字符串表示数据的标记名称。</span><span class="sxs-lookup"><span data-stu-id="02b5f-121">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this is the string that represents the tag name of the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTemplateKey">
      <MemberSignature Language="C#" Value="public object DataTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTemplateKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataTemplateKey { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataTemplateKey : obj" Usage="System.Windows.DataTemplate.DataTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02b5f-122">获取 <see cref="T:System.Windows.DataTemplate" /> 的默认键。</span><span class="sxs-lookup"><span data-stu-id="02b5f-122">Gets the default key of the <see cref="T:System.Windows.DataTemplate" />.</span></span></summary>
        <value><span data-ttu-id="02b5f-123"><see cref="T:System.Windows.DataTemplate" /> 的默认键。</span><span class="sxs-lookup"><span data-stu-id="02b5f-123">The default key of the <see cref="T:System.Windows.DataTemplate" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-124">如果未在的<xref:System.Windows.DataTemplate>  <xref:System.Windows.ResourceDictionary> 中设置" [x：Key" 指令](~/docs/framework/xaml-services/x-key-directive.md)，则将用作键。 <xref:System.Windows.DataTemplate.DataTemplateKey%2A></span><span class="sxs-lookup"><span data-stu-id="02b5f-124">If you do not set the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md) on a <xref:System.Windows.DataTemplate> that is in a <xref:System.Windows.ResourceDictionary>, the <xref:System.Windows.DataTemplate.DataTemplateKey%2A> is used as the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public object DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataType { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : obj with get, set" Usage="System.Windows.DataTemplate.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02b5f-125">获取或设置此 <see cref="T:System.Windows.DataTemplate" /> 所针对的类型。</span><span class="sxs-lookup"><span data-stu-id="02b5f-125">Gets or sets the type for which this <see cref="T:System.Windows.DataTemplate" /> is intended.</span></span></summary>
        <value><span data-ttu-id="02b5f-126">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02b5f-126">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-127">此属性与<xref:System.Windows.Style.TargetType%2A> <xref:System.Windows.Style>类的属性非常相似。</span><span class="sxs-lookup"><span data-stu-id="02b5f-127">This property is very similar to the <xref:System.Windows.Style.TargetType%2A> property of the <xref:System.Windows.Style> class.</span></span> <span data-ttu-id="02b5f-128">如果在不指定的`x:Key`情况下将此属性设置为数据类型，将<xref:System.Windows.DataTemplate>自动应用到该类型的数据对象。</span><span class="sxs-lookup"><span data-stu-id="02b5f-128">When you set this property to the data type without specifying an `x:Key`, the <xref:System.Windows.DataTemplate> gets applied automatically to data objects of that type.</span></span> <span data-ttu-id="02b5f-129">请注意，当你执行此`x:Key`操作时，将隐式设置。</span><span class="sxs-lookup"><span data-stu-id="02b5f-129">Note that when you do that the `x:Key` is set implicitly.</span></span> <span data-ttu-id="02b5f-130">因此<xref:System.Windows.DataTemplate> ，如果为此`x:Key`赋值，则将<xref:System.Windows.DataTemplate>重写隐式`x:Key` ，不会自动应用。</span><span class="sxs-lookup"><span data-stu-id="02b5f-130">Therefore, if you assign this <xref:System.Windows.DataTemplate> an `x:Key` value, you are overriding the implicit `x:Key` and the <xref:System.Windows.DataTemplate> would not be applied automatically.</span></span>  
  
 <span data-ttu-id="02b5f-131">另请注意，如果您正在将<xref:System.Windows.Controls.ContentControl>绑定到`Task`对象的集合， <xref:System.Windows.DataTemplate>则<xref:System.Windows.Controls.ContentControl>不会自动使用。</span><span class="sxs-lookup"><span data-stu-id="02b5f-131">Also note that if you are binding a <xref:System.Windows.Controls.ContentControl> to a collection of `Task` objects, the <xref:System.Windows.Controls.ContentControl> does not use the <xref:System.Windows.DataTemplate> automatically.</span></span> <span data-ttu-id="02b5f-132">这是因为，上的绑定<xref:System.Windows.Controls.ContentControl>需要更多的信息来区分是否要绑定到整个集合或单个对象。</span><span class="sxs-lookup"><span data-stu-id="02b5f-132">This is because the binding on a <xref:System.Windows.Controls.ContentControl> needs more information to distinguish whether you want to bind to an entire collection or the individual objects.</span></span> <span data-ttu-id="02b5f-133"><xref:System.Windows.Controls.ItemsControl> <xref:System.Windows.Data.Binding.Path%2A> <xref:System.Windows.Controls.ContentControl>如果正在跟踪类型选择，则可以将绑定的属性设置为 "`/`"，以指示你对当前项感兴趣。 <xref:System.Windows.Controls.ContentControl></span><span class="sxs-lookup"><span data-stu-id="02b5f-133">If your <xref:System.Windows.Controls.ContentControl> is tracking the selection of an <xref:System.Windows.Controls.ItemsControl> type, you can set the <xref:System.Windows.Data.Binding.Path%2A> property of the <xref:System.Windows.Controls.ContentControl> binding to "`/`" to indicate that you are interested in the current item.</span></span> <span data-ttu-id="02b5f-134">有关示例，请参阅[如何：绑定到集合并基于选择显示信息](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-134">For an example, see [How to: Bind to a Collection and Display Information Based on Selection](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md).</span></span> <span data-ttu-id="02b5f-135">否则，需要通过<xref:System.Windows.DataTemplate> <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>设置属性显式指定。</span><span class="sxs-lookup"><span data-stu-id="02b5f-135">Otherwise, you need to specify the <xref:System.Windows.DataTemplate> explicitly by setting the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> property.</span></span>  
  
 <span data-ttu-id="02b5f-136"><xref:System.Windows.DataTemplate.DataType%2A> 当 <xref:System.Windows.Data.CompositeCollection> 具有不同类型的数据对象时，属性特别有用。</span><span class="sxs-lookup"><span data-stu-id="02b5f-136">The <xref:System.Windows.DataTemplate.DataType%2A> property is particularly useful when you have a <xref:System.Windows.Data.CompositeCollection> of different types of data objects.</span></span>  
  
 <span data-ttu-id="02b5f-137">如果此属性的目标是不在默认命名空间中的 XML 元素，则必须在元素名称之前加上命名空间或命名空间指示符。</span><span class="sxs-lookup"><span data-stu-id="02b5f-137">If this property targets an XML element that is not in the default namespace, you must precede the element name with the namespace or a namespace designator.</span></span> <span data-ttu-id="02b5f-138">对于通过 LINQ for XML 公开的 XML，命名空间出现在大括号中，前面有一个大括号转义序列：</span><span class="sxs-lookup"><span data-stu-id="02b5f-138">For XML exposed through LINQ for XML, the namespace appears in braces, preceded by a brace escape sequence:</span></span>  
  
```xaml  
<DataTemplate DataType="{}{http://myNamespace}Details">  
```  
  
 <span data-ttu-id="02b5f-139">对于通过 XPath 公开的 XML，元素名称前面有一个由实例<xref:System.Windows.Data.XmlNamespaceMapping>建立的命名空间指示符：</span><span class="sxs-lookup"><span data-stu-id="02b5f-139">For XML exposed through XPath, the element name is preceded by a namespace designator established by an instance of <xref:System.Windows.Data.XmlNamespaceMapping>:</span></span>  
  
```xaml  
<DataTemplate DataType="mn:Details">  
```  
  
<a name="xamlAttributeUsage_DataType"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="02b5f-140">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="02b5f-140">XAML Attribute Usage</span></span>  
  
```  
<object DataType="typeName"/>  
```  
  
<a name="xamlValues_DataType"></a>   
## <a name="xaml-values"></a><span data-ttu-id="02b5f-141">XAML 值</span><span class="sxs-lookup"><span data-stu-id="02b5f-141">XAML Values</span></span>  
 <span data-ttu-id="02b5f-142">*typeName*</span><span class="sxs-lookup"><span data-stu-id="02b5f-142">*typeName*</span></span>  
 <span data-ttu-id="02b5f-143">如果模板用于对象数据，则此属性包含数据对象的类型名称（以字符串形式）。</span><span class="sxs-lookup"><span data-stu-id="02b5f-143">If the template is intended for object data, this property contains the type name of the data object (as a string).</span></span> <span data-ttu-id="02b5f-144">若要引用类的类型名称，请使用[X:Type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-144">To refer to the type name of the class, use the [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).</span></span> <span data-ttu-id="02b5f-145">如果模板[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]用于数据，则此属性包含 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="02b5f-145">If the template is intended for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data, this property contains the XML element name.</span></span> <span data-ttu-id="02b5f-146">有关为 XML 元素指定非默认命名空间的详细信息，请参阅文档备注。</span><span class="sxs-lookup"><span data-stu-id="02b5f-146">See the documentation remarks for details about specifying a non-default namespace for the XML element.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009"><span data-ttu-id="02b5f-147">数据模板化示例简介</span><span class="sxs-lookup"><span data-stu-id="02b5f-147">Introduction to Data Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.DataTemplate.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02b5f-148">获取触发器的集合，这些触发器根据一个或多个条件应用属性值或执行操作。</span><span class="sxs-lookup"><span data-stu-id="02b5f-148">Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</span></span></summary>
        <value><span data-ttu-id="02b5f-149">触发器对象的集合。</span><span class="sxs-lookup"><span data-stu-id="02b5f-149">A collection of trigger objects.</span></span> <span data-ttu-id="02b5f-150">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02b5f-150">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-151">如果要在数据模板中创建触发器，则触发器的资源库应设置数据模板范围内的属性。</span><span class="sxs-lookup"><span data-stu-id="02b5f-151">If you are creating triggers within a data template, the setters of the triggers should be setting properties that are within the scope of the data template.</span></span> <span data-ttu-id="02b5f-152">否则，使用面向包含数据的类型的样式创建触发器可能更合适。</span><span class="sxs-lookup"><span data-stu-id="02b5f-152">Otherwise, it may be more suitable to create triggers using a style that targets the type that contains the data.</span></span> <span data-ttu-id="02b5f-153">例如，如果要绑定<xref:System.Windows.Controls.ListBox>控件，则容器是<xref:System.Windows.Controls.ListBoxItem>对象。</span><span class="sxs-lookup"><span data-stu-id="02b5f-153">For example, if you are binding a <xref:System.Windows.Controls.ListBox> control, the containers are <xref:System.Windows.Controls.ListBoxItem> objects.</span></span> <span data-ttu-id="02b5f-154">如果使用触发器来设置不在的<xref:System.Windows.DataTemplate>范围内的属性，则更适合<xref:System.Windows.Controls.ListBoxItem>创建样式并在该样式中创建触发器。</span><span class="sxs-lookup"><span data-stu-id="02b5f-154">If you are using triggers to set properties that are not within the scope of the <xref:System.Windows.DataTemplate>, then it may be more suitable to create a <xref:System.Windows.Controls.ListBoxItem> style and create triggers within that style.</span></span> <span data-ttu-id="02b5f-155">有关详细信息，请参阅什么是在 System.windows.datatemplate> 中？[数据模板化概述](~/docs/framework/wpf/data/data-templating-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-155">For more information, see What Belongs in a DataTemplate? in the [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02b5f-156">此属性只能[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]通过显示的集合语法来设置，或者通过访问集合对象并使用它的各种方法（如 Add）来设置。</span><span class="sxs-lookup"><span data-stu-id="02b5f-156">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="02b5f-157">用于访问集合对象本身的属性是只读的，集合本身是可读写的。</span><span class="sxs-lookup"><span data-stu-id="02b5f-157">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="02b5f-158">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="02b5f-158">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    OneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="02b5f-159">XAML 值</span><span class="sxs-lookup"><span data-stu-id="02b5f-159">XAML Values</span></span>  
 <span data-ttu-id="02b5f-160">*OneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="02b5f-160">*OneOrMoreTriggers*</span></span>  
 <span data-ttu-id="02b5f-161">零个或<xref:System.Windows.TriggerBase>多个对象。</span><span class="sxs-lookup"><span data-stu-id="02b5f-161">Zero or more <xref:System.Windows.TriggerBase> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02b5f-162">下面<xref:System.Windows.DataTemplate>演示了<xref:System.Windows.DataTemplate.Triggers%2A>属性的用法。</span><span class="sxs-lookup"><span data-stu-id="02b5f-162">The following <xref:System.Windows.DataTemplate> demonstrates the use of the <xref:System.Windows.DataTemplate.Triggers%2A> property.</span></span>  
  
 [!code-xaml[DataBindingLab#AuctionItemDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemdatatemplate)]  
  
 <span data-ttu-id="02b5f-163">有关完整示例，请参阅[数据绑定演示](https://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="02b5f-163">For the complete sample, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.MultiDataTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009"><span data-ttu-id="02b5f-164">数据模板化示例简介</span><span class="sxs-lookup"><span data-stu-id="02b5f-164">Introduction to Data Templating Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberSignature Language="F#" Value="override this.ValidateTemplatedParent : System.Windows.FrameworkElement -&gt; unit" Usage="dataTemplate.ValidateTemplatedParent templatedParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent"><span data-ttu-id="02b5f-165">要应用此模板的元素。</span><span class="sxs-lookup"><span data-stu-id="02b5f-165">The element this template is applied to.</span></span></param>
        <summary><span data-ttu-id="02b5f-166">根据一组规则检查模板化父级。</span><span class="sxs-lookup"><span data-stu-id="02b5f-166">Checks the templated parent against a set of rules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b5f-167">方法使用以下规则：</span><span class="sxs-lookup"><span data-stu-id="02b5f-167">The method uses the following rules:</span></span>  
  
-   <span data-ttu-id="02b5f-168">必须为非 null  <xref:System.Windows.FrameworkElement> 。  `templatedParent`</span><span class="sxs-lookup"><span data-stu-id="02b5f-168">The `templatedParent` must be a non-null <xref:System.Windows.FrameworkElement>.</span></span>  
  
-   <span data-ttu-id="02b5f-169"><xref:System.Windows.DataTemplate>必须应用<xref:System.Windows.Controls.ContentPresenter>于。</span><span class="sxs-lookup"><span data-stu-id="02b5f-169">The <xref:System.Windows.DataTemplate> must be applied to a <xref:System.Windows.Controls.ContentPresenter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
