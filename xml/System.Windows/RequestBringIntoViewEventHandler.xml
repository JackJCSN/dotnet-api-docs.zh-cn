<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b2bebc4347724651ad241b6ae267701b98787ca" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70473553" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="b8eea-101">事件处理程序所附加到的对象。</span><span class="sxs-lookup"><span data-stu-id="b8eea-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="b8eea-102">事件数据。</span><span class="sxs-lookup"><span data-stu-id="b8eea-102">The event data.</span></span></param>
    <summary><span data-ttu-id="b8eea-103">表示将处理 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的方法。</span><span class="sxs-lookup"><span data-stu-id="b8eea-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8eea-104">处理此事件通常只在支持可滚动区域的元素内完成，或者有意将其呈现大小设置得小于其子元素内容所需的大小，只需特意处理事件在元素树中向上路由，并且已到达提供滚动区域支持的第一个父级。</span><span class="sxs-lookup"><span data-stu-id="b8eea-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="b8eea-105">以用户控件通常需要的方式处理滚动区域的现有实现就是<xref:System.Windows.Controls.ScrollViewer>。</span><span class="sxs-lookup"><span data-stu-id="b8eea-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="b8eea-106">如果派生自<xref:System.Windows.Controls.ScrollViewer>，则可以为<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>注册类处理程序，并补充事件的基类处理。</span><span class="sxs-lookup"><span data-stu-id="b8eea-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="b8eea-107">还应考虑使用或类处理类定义<xref:System.Windows.Controls.ScrollViewer.ScrollChanged>的事件， <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>而不是。</span><span class="sxs-lookup"><span data-stu-id="b8eea-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b8eea-108">或者，如果你创建了一个不是从<xref:System.Windows.Controls.ScrollViewer>派生的完全自定义类，则仍可以通过在类实例化中调用<xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>来添加类处理。</span><span class="sxs-lookup"><span data-stu-id="b8eea-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="b8eea-109">有关类处理的详细信息，请参阅将[路由事件标记为 "已处理" 和 "类处理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)"。</span><span class="sxs-lookup"><span data-stu-id="b8eea-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="b8eea-110">内容元素可能会导致事件由其内容宿主引发（通过调用<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>内容宿主并从内容主机进行引发<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> ）。</span><span class="sxs-lookup"><span data-stu-id="b8eea-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="b8eea-111">同样，可以通过 helper 方法<xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>请求使逻辑树元素进入视图。</span><span class="sxs-lookup"><span data-stu-id="b8eea-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b8eea-112">实现一个相关但不同的方法 <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> 。  <xref:System.Windows.Controls.ListBox></span><span class="sxs-lookup"><span data-stu-id="b8eea-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>
