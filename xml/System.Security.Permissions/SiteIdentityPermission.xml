<Type Name="SiteIdentityPermission" FullName="System.Security.Permissions.SiteIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85436bf0a4a1f034271ffe20afef542fd15fb585" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66817902" /></Metadata><TypeSignature Language="C#" Value="public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SiteIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.SiteIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SiteIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type SiteIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为作为代码来源地的网站定义标识权限。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此类，就可以以确保调用方，从特定的 Web 站点。 仅为 Url 中使用的 HTTP、 HTTPS 和 FTP 协议的代码定义站点标识。 站点是之间的字符串"/ /"后的 URL 和以下协议"/"，如果存在，例如，`www.fourthcoffee.com`在 URL 中`http://www.fourthcoffee.com/process/grind.htm`。 这不包括端口号。 如果给定的 URL 是`http://www.fourthcoffee.com:8000/`，站点`www.fourthcoffee.com`，而不`www.fourthcoffee.com:8000`。  
  
 站点可以匹配，完全正确，或使用通配符 ("\*") 在点分隔符的前缀。 例如，站点名称字符串`*.fourthcoffee.com`匹配`fourthcoffee.com`以及`www.fourthcoffee.com`。 如果没有通配符，站点名称必须是精确匹配。 站点名称字符串\*将匹配任何站点，但将与无站点证据的代码不匹配。  
  
> [!IMPORTANT]
>  从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，不使用标识权限。  
>   
>  在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，即使调用程序集是完全受信任。 也就是说，尽管调用程序集具有完全信任，但如果程序集不符合要求的条件故障的标识权限的需求。 从.NET Framework 2.0 版开始，标识权限的要求是如果调用程序集具有完全信任关系无效。 这可确保所有权限，消除标识权限的处理方式的一致性。  
  
> [!NOTE]
>  在之前的.NET framework 版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，可以使用<xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType>方法，以防止对系统资源的意外访问受信任的代码。 <xref:System.Security.CodeAccessPermission.Deny%2A> 现已过时，并对资源的访问现在只能由授予的权限集的程序集来决定。 若要限制访问文件，必须运行沙盒中部分受信任的代码，并将它分配给代码可以访问的资源的权限。 有关在沙盒中运行的应用程序的信息，请参阅[如何：运行沙盒中部分受信任的代码](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)中所述。  
  
> [!NOTE]
>  在.NET framework 1.0 和 1.1 版中，标识的权限不能具有<xref:System.Security.Permissions.PermissionState.Unrestricted>权限状态值。 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着在 2.0 及更高版本中，标识权限具有相同的行为与实现<xref:System.Security.Permissions.IUnrestrictedPermission>接口。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Site" />
    <altmember cref="T:System.Security.Policy.SiteMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.SiteIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.SiteIdentityPermission" Usage="new System.Security.Permissions.SiteIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
        <summary>使用指定的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完全受限的状态<xref:System.Security.Permissions.SiteIdentityPermission>不匹配任何站点。 此构造函数包含为了与其他权限的设计保持一致，但并不十分有用的做法。  
  
> [!NOTE]
>  在.NET framework 1.0 和 1.1 版中，标识的权限不能具有<xref:System.Security.Permissions.PermissionState.Unrestricted>权限状态值。 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着在 2.0 及更高版本中，标识权限具有相同的行为与实现<xref:System.Security.Permissions.IUnrestrictedPermission>接口。 即，请求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。  
  
 在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，即使调用程序集是完全受信任。 也就是说，尽管调用程序集具有完全信任，但如果程序集不符合要求的条件故障的标识权限的需求。 从.NET Framework 2.0 版开始，标识权限的要求是如果调用程序集具有完全信任关系无效。 这可确保所有权限，消除标识权限的处理方式的一致性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.SiteIdentityPermission : string -&gt; System.Security.Permissions.SiteIdentityPermission" Usage="new System.Security.Permissions.SiteIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">站点名称或通配符表达式。</param>
        <summary>初始化 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 类的新实例，以表示指定的站点标识。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅为 Url 中使用的 HTTP、 HTTPS 和 FTP 协议的代码定义站点标识。 站点是之间的字符串"/ /"后的 URL 和以下协议"/"，如果存在，例如，`www.fourthcoffee.com`在 URL 中`http://www.fourthcoffee.com/process/grind.htm/`。 这不包括端口号。 如果给定的 URL 是`http://www.fourthcoffee.com:8000/`，站点`www.fourthcoffee.com`，而不`www.fourthcoffee.com:8000`。  
  
 站点可以匹配，完全正确，或使用通配符 ("\*") 在点分隔符的前缀。 例如，站点名称字符串`*.fourthcoffee.com`匹配`fourthcoffee.com`以及`www.fourthcoffee.com`。 如果没有通配符，站点名称必须是精确匹配。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="site" /> 参数不是有效的字符串，也不与有效的通配符站点名称匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="siteIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回当前权限的相同副本。</summary>
        <returns>当前权限的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 权限的副本对资源或原始权限相同的站点标识表示相同的访问权限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="siteIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">用于重新构造权限的 XML 编码。</param>
        <summary>从 XML 编码重新构造具有指定状态的权限。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="esd" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="siteIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
        <returns>表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个权限的交集是描述两者共同描述的站点的权限。 只有传递两个原始权限的请求将通过该交集。 例如，交集的权限，表示访问`www.fourthcoffee.com`，另一个表示访问`*.fourthcoffee.com`是一个权限，表示访问`www.fourthcoffee.com`。  
  
 两个完全相同的站点标识权限的交集是相同的权限。 （不是通配符） 的两个不同的交集表达式是空的权限。 通配符表达式和匹配的站点的交集是站点。 两个匹配的通配符表达式的交集是更长的时间，更具体的两个表达式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="siteIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
        <summary>确定当前权限是否为指定权限的子集。</summary>
        <returns>如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前权限指定的站点，且全部包含在指定的权限，则当前权限是指定权限的子集。  
  
 下表显示的值<xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A>范围的当前权限和指定的权限的值。  
  
|当前权限|指定的权限|IsSubsetOf|  
|------------------------|--------------------------|----------------|  
|`www.fourthcoffee.com`|`www.fourthcoffee.com`|`true`|  
|`www.fourthcoffee.com`|`www.tailspintoys.com`|`false`|  
|`www.fourthcoffee.com`|`*.fourthcoffee.com`|`true`|  
|`www.fourthcoffee.com`|`*.com`|`true`|  
|`*.fourthcoffee.com`|`www.fourthcoffee.com`|`false`|  
|`*.fourthcoffee.com`|`*.fourthcoffee.com`|`true`|  
|`*.fourthcoffee.com`|`*.com`|`true`|  
|除 `None`|`*`|`true`|  
|`None`|任何内容|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public string Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Site" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SiteIdentityPermission.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Site { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : string with get, set" Usage="System.Security.Permissions.SiteIdentityPermission.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前站点。</summary>
        <value>当前站点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅为 Url 中使用的 HTTP、 HTTPS 和 FTP 协议的代码定义站点标识。 站点是之间的字符串"/ /"后的 URL 和以下协议"/"，如果存在，例如，`www.fourthcoffee.com`在 URL 中`http://www.fourthcoffee.com/process/grind.htm/`。 这不包括端口号。 如果给定的 URL 是`http://www.fourthcoffee.com:8000/`，站点`www.fourthcoffee.com`，而不`www.fourthcoffee.com:8000`。  
  
 站点可以匹配，完全正确，或使用通配符 ("\*") 在点分隔符的前缀。 例如，站点名称字符串`*.fourthcoffee.com`匹配`fourthcoffee.com`以及`www.fourthcoffee.com`。 如果没有通配符，站点名称必须是精确匹配。 站点名称字符串\*将匹配任何站点，但将与无站点证据的代码不匹配。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">无法检索该站点标识，因为其标识不明确。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="siteIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建权限及其当前状态的 XML 编码。</summary>
        <returns>权限的 XML 编码，包括任何状态信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="siteIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建一个权限，该权限是当前权限与指定权限的并集。</summary>
        <returns>表示同时兼具当前权限和指定权限的新权限。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对的调用结果<xref:System.Security.Permissions.SiteIdentityPermission.Union%2A>是当前权限和指定的权限表示所表示的所有站点的权限。 任何请求都会通过任一权限传递其联合。 例如，表示对访问权限的并集`www.fourthcoffee.com`，另一个表示访问`*.fourthcoffee.com`是一个权限，表示访问`*.fourthcoffee.com`。  
  
 权限的并集和`null`是不是权限`null`。 权限的并集和该权限的子集是包含的子集的权限。 任何其他组合会导致<xref:System.ArgumentException>所引发。 例如，站点标识的并集`www.fourthcoffee.com`和站点标识`www.tailspintoys.com`因为都不会导致异常的另一个子集。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
这两个权限不相等，而且其中一个不是另一个的子集。</exception>
      </Docs>
    </Member>
  </Members>
</Type>