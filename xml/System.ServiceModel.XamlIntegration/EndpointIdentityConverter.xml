<Type Name="EndpointIdentityConverter" FullName="System.ServiceModel.XamlIntegration.EndpointIdentityConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d6edf94e3f8c0b59925a18d1e8755ca43639024" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69103076" /></Metadata><TypeSignature Language="C#" Value="public class EndpointIdentityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointIdentityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointIdentityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointIdentityConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type EndpointIdentityConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad4e4-101">将 <see cref="T:System.ServiceModel.EndpointIdentity" /> 实例转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-101">Converts an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointIdentityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointIdentityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad4e4-102">初始化 <see cref="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-102">Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="endpointIdentityConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ad4e4-103">一个提供格式上下文的类型描述符上下文。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-103">A type descriptor context that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="ad4e4-104">要转换到的类型。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-104">The type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="ad4e4-105">获取一个值，该值确定转换器是否可将 <see cref="T:System.ServiceModel.EndpointIdentity" /> 实例转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-105">Gets a value that determines whether the converter can convert an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</span></span></summary>
        <returns><span data-ttu-id="ad4e4-106">如果此转换器能够执行请求的转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-106"><see langword="true" /> if the converter can perform the conversion requested; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="endpointIdentityConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ad4e4-107">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-107">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="ad4e4-108">区域性信息。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-108">The culture information.</span></span> <span data-ttu-id="ad4e4-109">如果传递 <see langword="null" />，则采用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-109">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="ad4e4-110">要转换的对象。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-110">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="ad4e4-111"><paramref name="value" /> 参数所要转换成的类型。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-111">The type to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="ad4e4-112">使用指定的上下文和区域性信息将给定对象转换为指定的类型。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-112">Converts the given object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="ad4e4-113">转换后的值。</span><span class="sxs-lookup"><span data-stu-id="ad4e4-113">The converted value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
