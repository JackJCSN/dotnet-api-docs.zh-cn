<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d67d78234cf945fc39bb84dc0185d16c407a110" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64273176" /></Metadata><TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供有关 <see cref="E:System.Windows.Forms.Binding.Format" /> 和 <see cref="E:System.Windows.Forms.Binding.Parse" /> 事件的数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs>用于格式化和取消它们通过数据绑定 Windows 窗体控件显示的值<xref:System.Windows.Forms.Binding>对象。 <xref:System.Windows.Forms.Binding.Format>事件发生时的控件属性绑定到一个值和<xref:System.Windows.Forms.Binding.Parse>每当绑定的值更改时发生的事件。  
  
 <xref:System.Windows.Forms.Binding.Format>和<xref:System.Windows.Forms.Binding.Parse>事件使您能够创建自定义格式来显示数据。 例如，如果表中的数据的类型<xref:System.Decimal>，可以指定数据应在本地货币的格式-显示通过设置<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>的属性<xref:System.Windows.Forms.ConvertEventArgs>中的格式化值<xref:System.Windows.Forms.Binding.Format>事件。 因此必须取消它们中的显示的值<xref:System.Windows.Forms.Binding.Parse>事件。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例将创建<xref:System.Windows.Forms.Binding>，添加<xref:System.Windows.Forms.ConvertEventHandler>委托<xref:System.Windows.Forms.Binding.Parse>和<xref:System.Windows.Forms.Binding.Format>事件，并使用<xref:System.Windows.Forms.Control.DataBindings%2A>属性将添加<xref:System.Windows.Forms.Binding>到<xref:System.Windows.Forms.BindingsCollection>的<xref:System.Windows.Forms.TextBox>控件。 `DecimalToCurrencyString`添加到的事件委托<xref:System.Windows.Forms.Binding.Format>事件，使用<xref:System.Decimal.ToString%2A>要绑定的值的格式设置方法 (<xref:System.Decimal>类型) 为货币。 `CurrencyStringToDecimal`添加到的事件委托<xref:System.Windows.Forms.Binding.Parse>事件，将由控件显示的值转换回<xref:System.Decimal>类型。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">包含当前属性值的 <see cref="T:System.Object" />。</param>
        <param name="desiredType">值的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ConvertEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所需值的数据类型。</summary>
        <value>所需值的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>属性使您能够检查的属性的值转换为的类型。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>属性来确定是否可以继续执行到另一种类型的转换。 `DecimalToCurrencyString`方法测试是否<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>是一个字符串。 否则，在代码退出该方法。 同样，`CurrencyStringToDecimal`方法测试是否<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>是<xref:System.Decimal>，如果不是退出`true`。  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ConvertEventArgs" /> 的值。</summary>
        <value><see cref="T:System.Windows.Forms.ConvertEventArgs" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所包含的值<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>属性依赖于在其中事件<xref:System.Windows.Forms.ConvertEventArgs>返回。 <xref:System.Windows.Forms.ConvertEventArgs>可以在返回<xref:System.Windows.Forms.Binding.Format>事件或<xref:System.Windows.Forms.Binding.Parse>事件。  
  
 当<xref:System.Windows.Forms.ConvertEventArgs>中返回<xref:System.Windows.Forms.Binding.Format>事件，<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>属性包含的数据源未格式化的属性值。 内<xref:System.Windows.Forms.Binding.Format>事件，可以读取属性值、 值的格式设置和重置<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>属性设置为新的 （格式化） 值，从而将数据绑定控件中显示的值。  
  
 当<xref:System.Windows.Forms.ConvertEventArgs>中返回<xref:System.Windows.Forms.Binding.Parse>事件，该属性包含的数据绑定控件的自定义格式值。 在<xref:System.Windows.Forms.Binding.Parse>事件，您必须读取带格式的值，分析它，并将其转换回数据源的数据类型相同。 然后可以重置<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>到未格式化的属性值，并因此设置数据源的值。 若要确定数据源的类型，请检查<xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>属性值。  
  
   
  
## Examples  
 下面的代码示例将创建<xref:System.Windows.Forms.Binding>，添加<xref:System.Windows.Forms.ConvertEventHandler>委托<xref:System.Windows.Forms.Binding.Parse>和<xref:System.Windows.Forms.Binding.Format>事件，并使用<xref:System.Windows.Forms.Control.DataBindings%2A>属性将添加<xref:System.Windows.Forms.Binding>到<xref:System.Windows.Forms.BindingsCollection>的<xref:System.Windows.Forms.TextBox>控件。 `DecimalToCurrencyString`添加到的事件委托<xref:System.Windows.Forms.Binding.Format>事件，使用<xref:System.Decimal.ToString%2A>要绑定的值的格式设置方法 (<xref:System.Decimal>类型) 为货币。 `CurrencyStringToDecimal`添加到的事件委托<xref:System.Windows.Forms.Binding.Parse>事件，将由控件显示的值转换回<xref:System.Decimal>类型。  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>