<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e17014706f0bc08fefb8c6ceeca5f194e4d1f7de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69180365" /></Metadata><TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <TypeSignature Language="F#" Value="type SendKeys = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4bd00-101">提供将键击发送到应用程序的方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd00-102">用于<xref:System.Windows.Forms.SendKeys>向活动应用程序发送击键和击键组合。</span><span class="sxs-lookup"><span data-stu-id="4bd00-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="4bd00-103">此类无法实例化。</span><span class="sxs-lookup"><span data-stu-id="4bd00-103">This class cannot be instantiated.</span></span> <span data-ttu-id="4bd00-104">若要将击键发送到类并立即继续处理程序, 请使用<xref:System.Windows.Forms.SendKeys.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bd00-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="4bd00-105">若要等待击键启动的任何进程, 请使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>。</span><span class="sxs-lookup"><span data-stu-id="4bd00-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="4bd00-106">每个键由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="4bd00-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="4bd00-107">若要指定单个键盘字符, 请使用字符本身。</span><span class="sxs-lookup"><span data-stu-id="4bd00-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="4bd00-108">例如, 若要表示字母 A, 请将字符串 "A" 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="4bd00-109">若要表示多个字符, 请将每个附加字符追加到其前面的字符。</span><span class="sxs-lookup"><span data-stu-id="4bd00-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="4bd00-110">若要表示字母 A、B 和 C, 请将参数指定为 "ABC"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="4bd00-111">加号 (+)、插入符号 (^)、百分号 (%)、颚化符 (~) 和括号 () 对<xref:System.Windows.Forms.SendKeys>具有特殊意义。</span><span class="sxs-lookup"><span data-stu-id="4bd00-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="4bd00-112">若要指定其中一个字符, 请将其括在{}大括号 () 中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="4bd00-113">例如, 若要指定加号, 请使用 "{+}"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="4bd00-114">若要指定大括号字符, 请{}使用 "{{}" 和 "}"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="4bd00-115">方括号 ([]) 对<xref:System.Windows.Forms.SendKeys>不具有特殊含义, 但必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="4bd00-116">在其他应用程序中, 括号确实具有在动态数据交换 (DDE) 出现时可能很重要的特殊含义。</span><span class="sxs-lookup"><span data-stu-id="4bd00-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4bd00-117">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="4bd00-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="4bd00-118">若要指定按下某个键时未显示的字符 (如 ENTER 或 TAB) 以及表示操作而不是字符的键, 请使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="4bd00-119">键</span><span class="sxs-lookup"><span data-stu-id="4bd00-119">Key</span></span>|<span data-ttu-id="4bd00-120">代码</span><span class="sxs-lookup"><span data-stu-id="4bd00-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="4bd00-121">符</span><span class="sxs-lookup"><span data-stu-id="4bd00-121">BACKSPACE</span></span>|<span data-ttu-id="4bd00-122">{BACKSPACE}、{BS.1770} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="4bd00-123">分</span><span class="sxs-lookup"><span data-stu-id="4bd00-123">BREAK</span></span>|<span data-ttu-id="4bd00-124">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-124">{BREAK}</span></span>|  
|<span data-ttu-id="4bd00-125">大写锁定</span><span class="sxs-lookup"><span data-stu-id="4bd00-125">CAPS LOCK</span></span>|<span data-ttu-id="4bd00-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="4bd00-127">DEL 或 DELETE</span><span class="sxs-lookup"><span data-stu-id="4bd00-127">DEL or DELETE</span></span>|<span data-ttu-id="4bd00-128">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="4bd00-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="4bd00-129">向下键</span><span class="sxs-lookup"><span data-stu-id="4bd00-129">DOWN ARROW</span></span>|<span data-ttu-id="4bd00-130">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="4bd00-130">{DOWN}</span></span>|  
|<span data-ttu-id="4bd00-131">End</span><span class="sxs-lookup"><span data-stu-id="4bd00-131">END</span></span>|<span data-ttu-id="4bd00-132">端面</span><span class="sxs-lookup"><span data-stu-id="4bd00-132">{END}</span></span>|  
|<span data-ttu-id="4bd00-133">Enter</span><span class="sxs-lookup"><span data-stu-id="4bd00-133">ENTER</span></span>|<span data-ttu-id="4bd00-134">{ENTER} 或 ~</span><span class="sxs-lookup"><span data-stu-id="4bd00-134">{ENTER} or ~</span></span>|  
|<span data-ttu-id="4bd00-135">ESC</span><span class="sxs-lookup"><span data-stu-id="4bd00-135">ESC</span></span>|<span data-ttu-id="4bd00-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="4bd00-136">{ESC}</span></span>|  
|<span data-ttu-id="4bd00-137">帮助</span><span class="sxs-lookup"><span data-stu-id="4bd00-137">HELP</span></span>|<span data-ttu-id="4bd00-138">帮助</span><span class="sxs-lookup"><span data-stu-id="4bd00-138">{HELP}</span></span>|  
|<span data-ttu-id="4bd00-139">Home</span><span class="sxs-lookup"><span data-stu-id="4bd00-139">HOME</span></span>|<span data-ttu-id="4bd00-140">回家</span><span class="sxs-lookup"><span data-stu-id="4bd00-140">{HOME}</span></span>|  
|<span data-ttu-id="4bd00-141">INS 或 INSERT</span><span class="sxs-lookup"><span data-stu-id="4bd00-141">INS or INSERT</span></span>|<span data-ttu-id="4bd00-142">{INSERT} 或 {INS}</span><span class="sxs-lookup"><span data-stu-id="4bd00-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="4bd00-143">向左键</span><span class="sxs-lookup"><span data-stu-id="4bd00-143">LEFT ARROW</span></span>|<span data-ttu-id="4bd00-144">左中</span><span class="sxs-lookup"><span data-stu-id="4bd00-144">{LEFT}</span></span>|  
|<span data-ttu-id="4bd00-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="4bd00-145">NUM LOCK</span></span>|<span data-ttu-id="4bd00-146">加</span><span class="sxs-lookup"><span data-stu-id="4bd00-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="4bd00-147">Page Down</span><span class="sxs-lookup"><span data-stu-id="4bd00-147">PAGE DOWN</span></span>|<span data-ttu-id="4bd00-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="4bd00-148">{PGDN}</span></span>|  
|<span data-ttu-id="4bd00-149">Page Up</span><span class="sxs-lookup"><span data-stu-id="4bd00-149">PAGE UP</span></span>|<span data-ttu-id="4bd00-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-150">{PGUP}</span></span>|  
|<span data-ttu-id="4bd00-151">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="4bd00-151">PRINT SCREEN</span></span>|<span data-ttu-id="4bd00-152">{PRTSC}(保留以供将来使用)</span><span class="sxs-lookup"><span data-stu-id="4bd00-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="4bd00-153">向右键</span><span class="sxs-lookup"><span data-stu-id="4bd00-153">RIGHT ARROW</span></span>|<span data-ttu-id="4bd00-154">然后</span><span class="sxs-lookup"><span data-stu-id="4bd00-154">{RIGHT}</span></span>|  
|<span data-ttu-id="4bd00-155">滚动锁</span><span class="sxs-lookup"><span data-stu-id="4bd00-155">SCROLL LOCK</span></span>|<span data-ttu-id="4bd00-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="4bd00-157">Tab</span><span class="sxs-lookup"><span data-stu-id="4bd00-157">TAB</span></span>|<span data-ttu-id="4bd00-158">"选项卡</span><span class="sxs-lookup"><span data-stu-id="4bd00-158">{TAB}</span></span>|  
|<span data-ttu-id="4bd00-159">向上键</span><span class="sxs-lookup"><span data-stu-id="4bd00-159">UP ARROW</span></span>|<span data-ttu-id="4bd00-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-160">{UP}</span></span>|  
|<span data-ttu-id="4bd00-161">F1</span><span class="sxs-lookup"><span data-stu-id="4bd00-161">F1</span></span>|<span data-ttu-id="4bd00-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="4bd00-162">{F1}</span></span>|  
|<span data-ttu-id="4bd00-163">F2</span><span class="sxs-lookup"><span data-stu-id="4bd00-163">F2</span></span>|<span data-ttu-id="4bd00-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="4bd00-164">{F2}</span></span>|  
|<span data-ttu-id="4bd00-165">F3</span><span class="sxs-lookup"><span data-stu-id="4bd00-165">F3</span></span>|<span data-ttu-id="4bd00-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="4bd00-166">{F3}</span></span>|  
|<span data-ttu-id="4bd00-167">F4</span><span class="sxs-lookup"><span data-stu-id="4bd00-167">F4</span></span>|<span data-ttu-id="4bd00-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="4bd00-168">{F4}</span></span>|  
|<span data-ttu-id="4bd00-169">F5</span><span class="sxs-lookup"><span data-stu-id="4bd00-169">F5</span></span>|<span data-ttu-id="4bd00-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="4bd00-170">{F5}</span></span>|  
|<span data-ttu-id="4bd00-171">F6</span><span class="sxs-lookup"><span data-stu-id="4bd00-171">F6</span></span>|<span data-ttu-id="4bd00-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="4bd00-172">{F6}</span></span>|  
|<span data-ttu-id="4bd00-173">F7</span><span class="sxs-lookup"><span data-stu-id="4bd00-173">F7</span></span>|<span data-ttu-id="4bd00-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="4bd00-174">{F7}</span></span>|  
|<span data-ttu-id="4bd00-175">F8</span><span class="sxs-lookup"><span data-stu-id="4bd00-175">F8</span></span>|<span data-ttu-id="4bd00-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="4bd00-176">{F8}</span></span>|  
|<span data-ttu-id="4bd00-177">F9</span><span class="sxs-lookup"><span data-stu-id="4bd00-177">F9</span></span>|<span data-ttu-id="4bd00-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="4bd00-178">{F9}</span></span>|  
|<span data-ttu-id="4bd00-179">F10</span><span class="sxs-lookup"><span data-stu-id="4bd00-179">F10</span></span>|<span data-ttu-id="4bd00-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="4bd00-180">{F10}</span></span>|  
|<span data-ttu-id="4bd00-181">F11</span><span class="sxs-lookup"><span data-stu-id="4bd00-181">F11</span></span>|<span data-ttu-id="4bd00-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="4bd00-182">{F11}</span></span>|  
|<span data-ttu-id="4bd00-183">F12</span><span class="sxs-lookup"><span data-stu-id="4bd00-183">F12</span></span>|<span data-ttu-id="4bd00-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="4bd00-184">{F12}</span></span>|  
|<span data-ttu-id="4bd00-185">F13</span><span class="sxs-lookup"><span data-stu-id="4bd00-185">F13</span></span>|<span data-ttu-id="4bd00-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="4bd00-186">{F13}</span></span>|  
|<span data-ttu-id="4bd00-187">F14</span><span class="sxs-lookup"><span data-stu-id="4bd00-187">F14</span></span>|<span data-ttu-id="4bd00-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="4bd00-188">{F14}</span></span>|  
|<span data-ttu-id="4bd00-189">F15</span><span class="sxs-lookup"><span data-stu-id="4bd00-189">F15</span></span>|<span data-ttu-id="4bd00-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="4bd00-190">{F15}</span></span>|  
|<span data-ttu-id="4bd00-191">F16</span><span class="sxs-lookup"><span data-stu-id="4bd00-191">F16</span></span>|<span data-ttu-id="4bd00-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="4bd00-192">{F16}</span></span>|  
|<span data-ttu-id="4bd00-193">键盘添加</span><span class="sxs-lookup"><span data-stu-id="4bd00-193">Keypad add</span></span>|<span data-ttu-id="4bd00-194">{ADD}</span><span class="sxs-lookup"><span data-stu-id="4bd00-194">{ADD}</span></span>|  
|<span data-ttu-id="4bd00-195">键盘减</span><span class="sxs-lookup"><span data-stu-id="4bd00-195">Keypad subtract</span></span>|<span data-ttu-id="4bd00-196">减去</span><span class="sxs-lookup"><span data-stu-id="4bd00-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="4bd00-197">键盘乘法</span><span class="sxs-lookup"><span data-stu-id="4bd00-197">Keypad multiply</span></span>|<span data-ttu-id="4bd00-198">乘</span><span class="sxs-lookup"><span data-stu-id="4bd00-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="4bd00-199">小键盘分隔</span><span class="sxs-lookup"><span data-stu-id="4bd00-199">Keypad divide</span></span>|<span data-ttu-id="4bd00-200">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="4bd00-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="4bd00-201">若要指定与 SHIFT、CTRL 和 ALT 键的任意组合组合的键, 请在键代码前面加上一个或多个以下代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="4bd00-202">键</span><span class="sxs-lookup"><span data-stu-id="4bd00-202">Key</span></span>|<span data-ttu-id="4bd00-203">代码</span><span class="sxs-lookup"><span data-stu-id="4bd00-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="4bd00-204">格</span><span class="sxs-lookup"><span data-stu-id="4bd00-204">SHIFT</span></span>|+|  
|<span data-ttu-id="4bd00-205">CTRL</span><span class="sxs-lookup"><span data-stu-id="4bd00-205">CTRL</span></span>|^|  
|<span data-ttu-id="4bd00-206">替代</span><span class="sxs-lookup"><span data-stu-id="4bd00-206">ALT</span></span>|%|  
  
 <span data-ttu-id="4bd00-207">若要指定在按多个其他键的同时按下 SHIFT、CTRL 和 ALT 的任意组合, 请将这些键的代码括在括号中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="4bd00-208">例如, 若要指定在按 E 和 C 的同时按住 SHIFT, 请使用 "+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="4bd00-209">若要指定在按 E 的同时按住 SHIFT, 请在不带 SHIFT 的情况下使用 C, 并使用 "+ EC"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="4bd00-210">若要指定重复键, 请使用格式 {key number}。</span><span class="sxs-lookup"><span data-stu-id="4bd00-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="4bd00-211">必须在键和数字之间添加一个空格。</span><span class="sxs-lookup"><span data-stu-id="4bd00-211">You must put a space between key and number.</span></span> <span data-ttu-id="4bd00-212">例如, {LEFT 42} 表示按左箭头键42次;{h 10} 表示按 H 10 次。</span><span class="sxs-lookup"><span data-stu-id="4bd00-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-213">由于没有用于激活其他应用程序的托管方法, 您可以在当前应用程序中使用此类, 也可以使用本机 Windows 方法 ( `FindWindow`如`SetForegroundWindow`和) 强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-214"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="4bd00-215">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="4bd00-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="4bd00-216"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="4bd00-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="4bd00-217">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="4bd00-218"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="4bd00-219">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="4bd00-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="4bd00-220">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="4bd00-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="4bd00-221">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="4bd00-222">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="4bd00-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bd00-223">下面的代码示例演示如何使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="4bd00-224">若要运行该示例, 请将以下代码粘贴到一个名为 Form1 的窗体中, 其中包含一个名为 "Button1"</span><span class="sxs-lookup"><span data-stu-id="4bd00-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="4bd00-225">请确保单击事件与其在此示例中的事件处理方法相关联。</span><span class="sxs-lookup"><span data-stu-id="4bd00-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="4bd00-226">按钮控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为0。</span><span class="sxs-lookup"><span data-stu-id="4bd00-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="4bd00-227">当示例运行时, 双击窗体以触发按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="4bd00-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Windows.Forms.SendKeys.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bd00-228">处理消息队列中当前的所有 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="4bd00-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd00-229">使用<xref:System.Windows.Forms.SendKeys.Flush%2A>等待应用程序处理消息队列中的击键和其他操作系统消息。</span><span class="sxs-lookup"><span data-stu-id="4bd00-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="4bd00-230">这等效于调用<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> , 直到没有更多要处理的键。</span><span class="sxs-lookup"><span data-stu-id="4bd00-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-231">由于没有用于激活其他应用程序的托管方法, 您可以在当前应用程序中使用此类, 也可以使用本机 Windows 方法 ( `FindWindow`如`SetForegroundWindow`和) 强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member Send : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.Send keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="4bd00-232">要发送的击键字符串。</span><span class="sxs-lookup"><span data-stu-id="4bd00-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="4bd00-233">向活动应用程序发送击键。</span><span class="sxs-lookup"><span data-stu-id="4bd00-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd00-234">每个键由一个或多个字符表示。</span><span class="sxs-lookup"><span data-stu-id="4bd00-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="4bd00-235">若要指定单个键盘字符, 请使用字符本身。</span><span class="sxs-lookup"><span data-stu-id="4bd00-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="4bd00-236">例如, 若要表示字母 A, 请将字符串 "A" 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="4bd00-237">若要表示多个字符, 请将每个附加字符追加到其前面的字符。</span><span class="sxs-lookup"><span data-stu-id="4bd00-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="4bd00-238">若要表示字母 A、B 和 C, 请将参数指定为 "ABC"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="4bd00-239">加号 (+)、插入符号 (^)、百分号 (%)、颚化符 (~) 和括号 () 对<xref:System.Windows.Forms.SendKeys>具有特殊意义。</span><span class="sxs-lookup"><span data-stu-id="4bd00-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="4bd00-240">若要指定其中一个字符, 请将其括在{}大括号 () 中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="4bd00-241">例如, 若要指定加号, 请使用 "{+}"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="4bd00-242">若要指定大括号字符, 请{}使用 "{{}" 和 "}"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="4bd00-243">方括号 ([]) 对<xref:System.Windows.Forms.SendKeys>不具有特殊含义, 但必须将它们括在大括号中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="4bd00-244">在其他应用程序中, 括号确实具有在动态数据交换 (DDE) 出现时可能很重要的特殊含义。</span><span class="sxs-lookup"><span data-stu-id="4bd00-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4bd00-245">如果你的应用程序旨在用于全球各种键盘，使用 <xref:System.Windows.Forms.SendKeys.Send%2A> 可能会产生不可预知的结果，应当避免。</span><span class="sxs-lookup"><span data-stu-id="4bd00-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="4bd00-246">若要指定按下某个键时未显示的字符 (如 ENTER 或 TAB) 以及表示操作而不是字符的键, 请使用下表中的代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="4bd00-247">键</span><span class="sxs-lookup"><span data-stu-id="4bd00-247">Key</span></span>|<span data-ttu-id="4bd00-248">代码</span><span class="sxs-lookup"><span data-stu-id="4bd00-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="4bd00-249">符</span><span class="sxs-lookup"><span data-stu-id="4bd00-249">BACKSPACE</span></span>|<span data-ttu-id="4bd00-250">{BACKSPACE}、{BS.1770} 或 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="4bd00-251">分</span><span class="sxs-lookup"><span data-stu-id="4bd00-251">BREAK</span></span>|<span data-ttu-id="4bd00-252">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-252">{BREAK}</span></span>|  
|<span data-ttu-id="4bd00-253">大写锁定</span><span class="sxs-lookup"><span data-stu-id="4bd00-253">CAPS LOCK</span></span>|<span data-ttu-id="4bd00-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="4bd00-255">DEL 或 DELETE</span><span class="sxs-lookup"><span data-stu-id="4bd00-255">DEL or DELETE</span></span>|<span data-ttu-id="4bd00-256">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="4bd00-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="4bd00-257">向下键</span><span class="sxs-lookup"><span data-stu-id="4bd00-257">DOWN ARROW</span></span>|<span data-ttu-id="4bd00-258">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="4bd00-258">{DOWN}</span></span>|  
|<span data-ttu-id="4bd00-259">End</span><span class="sxs-lookup"><span data-stu-id="4bd00-259">END</span></span>|<span data-ttu-id="4bd00-260">端面</span><span class="sxs-lookup"><span data-stu-id="4bd00-260">{END}</span></span>|  
|<span data-ttu-id="4bd00-261">Enter</span><span class="sxs-lookup"><span data-stu-id="4bd00-261">ENTER</span></span>|<span data-ttu-id="4bd00-262">{ENTER} 或 ~</span><span class="sxs-lookup"><span data-stu-id="4bd00-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="4bd00-263">ESC</span><span class="sxs-lookup"><span data-stu-id="4bd00-263">ESC</span></span>|<span data-ttu-id="4bd00-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="4bd00-264">{ESC}</span></span>|  
|<span data-ttu-id="4bd00-265">帮助</span><span class="sxs-lookup"><span data-stu-id="4bd00-265">HELP</span></span>|<span data-ttu-id="4bd00-266">帮助</span><span class="sxs-lookup"><span data-stu-id="4bd00-266">{HELP}</span></span>|  
|<span data-ttu-id="4bd00-267">Home</span><span class="sxs-lookup"><span data-stu-id="4bd00-267">HOME</span></span>|<span data-ttu-id="4bd00-268">回家</span><span class="sxs-lookup"><span data-stu-id="4bd00-268">{HOME}</span></span>|  
|<span data-ttu-id="4bd00-269">INS 或 INSERT</span><span class="sxs-lookup"><span data-stu-id="4bd00-269">INS or INSERT</span></span>|<span data-ttu-id="4bd00-270">{INSERT} 或 {INS}</span><span class="sxs-lookup"><span data-stu-id="4bd00-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="4bd00-271">向左键</span><span class="sxs-lookup"><span data-stu-id="4bd00-271">LEFT ARROW</span></span>|<span data-ttu-id="4bd00-272">左中</span><span class="sxs-lookup"><span data-stu-id="4bd00-272">{LEFT}</span></span>|  
|<span data-ttu-id="4bd00-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="4bd00-273">NUM LOCK</span></span>|<span data-ttu-id="4bd00-274">加</span><span class="sxs-lookup"><span data-stu-id="4bd00-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="4bd00-275">Page Down</span><span class="sxs-lookup"><span data-stu-id="4bd00-275">PAGE DOWN</span></span>|<span data-ttu-id="4bd00-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="4bd00-276">{PGDN}</span></span>|  
|<span data-ttu-id="4bd00-277">Page Up</span><span class="sxs-lookup"><span data-stu-id="4bd00-277">PAGE UP</span></span>|<span data-ttu-id="4bd00-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-278">{PGUP}</span></span>|  
|<span data-ttu-id="4bd00-279">打印屏幕</span><span class="sxs-lookup"><span data-stu-id="4bd00-279">PRINT SCREEN</span></span>|<span data-ttu-id="4bd00-280">{PRTSC}(保留以供将来使用)</span><span class="sxs-lookup"><span data-stu-id="4bd00-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="4bd00-281">向右键</span><span class="sxs-lookup"><span data-stu-id="4bd00-281">RIGHT ARROW</span></span>|<span data-ttu-id="4bd00-282">然后</span><span class="sxs-lookup"><span data-stu-id="4bd00-282">{RIGHT}</span></span>|  
|<span data-ttu-id="4bd00-283">滚动锁</span><span class="sxs-lookup"><span data-stu-id="4bd00-283">SCROLL LOCK</span></span>|<span data-ttu-id="4bd00-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="4bd00-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="4bd00-285">Tab</span><span class="sxs-lookup"><span data-stu-id="4bd00-285">TAB</span></span>|<span data-ttu-id="4bd00-286">"选项卡</span><span class="sxs-lookup"><span data-stu-id="4bd00-286">{TAB}</span></span>|  
|<span data-ttu-id="4bd00-287">向上键</span><span class="sxs-lookup"><span data-stu-id="4bd00-287">UP ARROW</span></span>|<span data-ttu-id="4bd00-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="4bd00-288">{UP}</span></span>|  
|<span data-ttu-id="4bd00-289">F1</span><span class="sxs-lookup"><span data-stu-id="4bd00-289">F1</span></span>|<span data-ttu-id="4bd00-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="4bd00-290">{F1}</span></span>|  
|<span data-ttu-id="4bd00-291">F2</span><span class="sxs-lookup"><span data-stu-id="4bd00-291">F2</span></span>|<span data-ttu-id="4bd00-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="4bd00-292">{F2}</span></span>|  
|<span data-ttu-id="4bd00-293">F3</span><span class="sxs-lookup"><span data-stu-id="4bd00-293">F3</span></span>|<span data-ttu-id="4bd00-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="4bd00-294">{F3}</span></span>|  
|<span data-ttu-id="4bd00-295">F4</span><span class="sxs-lookup"><span data-stu-id="4bd00-295">F4</span></span>|<span data-ttu-id="4bd00-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="4bd00-296">{F4}</span></span>|  
|<span data-ttu-id="4bd00-297">F5</span><span class="sxs-lookup"><span data-stu-id="4bd00-297">F5</span></span>|<span data-ttu-id="4bd00-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="4bd00-298">{F5}</span></span>|  
|<span data-ttu-id="4bd00-299">F6</span><span class="sxs-lookup"><span data-stu-id="4bd00-299">F6</span></span>|<span data-ttu-id="4bd00-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="4bd00-300">{F6}</span></span>|  
|<span data-ttu-id="4bd00-301">F7</span><span class="sxs-lookup"><span data-stu-id="4bd00-301">F7</span></span>|<span data-ttu-id="4bd00-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="4bd00-302">{F7}</span></span>|  
|<span data-ttu-id="4bd00-303">F8</span><span class="sxs-lookup"><span data-stu-id="4bd00-303">F8</span></span>|<span data-ttu-id="4bd00-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="4bd00-304">{F8}</span></span>|  
|<span data-ttu-id="4bd00-305">F9</span><span class="sxs-lookup"><span data-stu-id="4bd00-305">F9</span></span>|<span data-ttu-id="4bd00-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="4bd00-306">{F9}</span></span>|  
|<span data-ttu-id="4bd00-307">F10</span><span class="sxs-lookup"><span data-stu-id="4bd00-307">F10</span></span>|<span data-ttu-id="4bd00-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="4bd00-308">{F10}</span></span>|  
|<span data-ttu-id="4bd00-309">F11</span><span class="sxs-lookup"><span data-stu-id="4bd00-309">F11</span></span>|<span data-ttu-id="4bd00-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="4bd00-310">{F11}</span></span>|  
|<span data-ttu-id="4bd00-311">F12</span><span class="sxs-lookup"><span data-stu-id="4bd00-311">F12</span></span>|<span data-ttu-id="4bd00-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="4bd00-312">{F12}</span></span>|  
|<span data-ttu-id="4bd00-313">F13</span><span class="sxs-lookup"><span data-stu-id="4bd00-313">F13</span></span>|<span data-ttu-id="4bd00-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="4bd00-314">{F13}</span></span>|  
|<span data-ttu-id="4bd00-315">F14</span><span class="sxs-lookup"><span data-stu-id="4bd00-315">F14</span></span>|<span data-ttu-id="4bd00-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="4bd00-316">{F14}</span></span>|  
|<span data-ttu-id="4bd00-317">F15</span><span class="sxs-lookup"><span data-stu-id="4bd00-317">F15</span></span>|<span data-ttu-id="4bd00-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="4bd00-318">{F15}</span></span>|  
|<span data-ttu-id="4bd00-319">F16</span><span class="sxs-lookup"><span data-stu-id="4bd00-319">F16</span></span>|<span data-ttu-id="4bd00-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="4bd00-320">{F16}</span></span>|  
|<span data-ttu-id="4bd00-321">键盘添加</span><span class="sxs-lookup"><span data-stu-id="4bd00-321">Keypad add</span></span>|<span data-ttu-id="4bd00-322">{ADD}</span><span class="sxs-lookup"><span data-stu-id="4bd00-322">{ADD}</span></span>|  
|<span data-ttu-id="4bd00-323">键盘减</span><span class="sxs-lookup"><span data-stu-id="4bd00-323">Keypad subtract</span></span>|<span data-ttu-id="4bd00-324">减去</span><span class="sxs-lookup"><span data-stu-id="4bd00-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="4bd00-325">键盘乘法</span><span class="sxs-lookup"><span data-stu-id="4bd00-325">Keypad multiply</span></span>|<span data-ttu-id="4bd00-326">乘</span><span class="sxs-lookup"><span data-stu-id="4bd00-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="4bd00-327">小键盘分隔</span><span class="sxs-lookup"><span data-stu-id="4bd00-327">Keypad divide</span></span>|<span data-ttu-id="4bd00-328">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="4bd00-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="4bd00-329">若要指定与 SHIFT、CTRL 和 ALT 键的任意组合组合的键, 请在键代码前面加上一个或多个以下代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="4bd00-330">键</span><span class="sxs-lookup"><span data-stu-id="4bd00-330">Key</span></span>|<span data-ttu-id="4bd00-331">代码</span><span class="sxs-lookup"><span data-stu-id="4bd00-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="4bd00-332">格</span><span class="sxs-lookup"><span data-stu-id="4bd00-332">SHIFT</span></span>|+|  
|<span data-ttu-id="4bd00-333">CTRL</span><span class="sxs-lookup"><span data-stu-id="4bd00-333">CTRL</span></span>|^|  
|<span data-ttu-id="4bd00-334">替代</span><span class="sxs-lookup"><span data-stu-id="4bd00-334">ALT</span></span>|%|  
  
 <span data-ttu-id="4bd00-335">若要指定在按多个其他键的同时按下 SHIFT、CTRL 和 ALT 的任意组合, 请将这些键的代码括在括号中。</span><span class="sxs-lookup"><span data-stu-id="4bd00-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="4bd00-336">例如, 若要指定在按 E 和 C 的同时按住 SHIFT, 请使用 "+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="4bd00-337">若要指定在按 E 的同时按住 SHIFT, 请在不带 SHIFT 的情况下使用 C, 并使用 "+ EC"。</span><span class="sxs-lookup"><span data-stu-id="4bd00-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="4bd00-338">若要指定重复键, 请使用格式 {key number}。</span><span class="sxs-lookup"><span data-stu-id="4bd00-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="4bd00-339">必须在键和数字之间添加一个空格。</span><span class="sxs-lookup"><span data-stu-id="4bd00-339">You must put a space between key and number.</span></span> <span data-ttu-id="4bd00-340">例如, {LEFT 42} 表示按左箭头键42次;{h 10} 表示按 H 10 次。</span><span class="sxs-lookup"><span data-stu-id="4bd00-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-341">由于没有用于激活其他应用程序的托管方法, 您可以在当前应用程序中使用此类, 也可以使用本机 Windows 方法 ( `FindWindow`如`SetForegroundWindow`和) 强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-342"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="4bd00-343">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="4bd00-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="4bd00-344"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="4bd00-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="4bd00-345">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="4bd00-346"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="4bd00-347">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="4bd00-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="4bd00-348">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="4bd00-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="4bd00-349">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="4bd00-350">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="4bd00-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bd00-351">下面的代码示例演示如何使用<xref:System.Windows.Forms.SendKeys.Send%2A>方法。若要运行该示例, 请将以下代码粘贴到一个名为 Form1 的窗体中, 其中包含一个名为 "Button1"</span><span class="sxs-lookup"><span data-stu-id="4bd00-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="4bd00-352">请确保单击事件与其在此示例中的事件处理方法相关联。</span><span class="sxs-lookup"><span data-stu-id="4bd00-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="4bd00-353">按钮控件的<xref:System.Windows.Forms.Control.TabIndex%2A>属性应设置为0。</span><span class="sxs-lookup"><span data-stu-id="4bd00-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="4bd00-354">当示例运行时, 双击窗体以触发按钮的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="4bd00-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4bd00-355">没有可向其发送击键的活动应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4bd00-356"><paramref name="keys" /> 并不表示有效击键</span><span class="sxs-lookup"><span data-stu-id="4bd00-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="4bd00-357">用于调用此方法的非托管代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="4bd00-358">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="4bd00-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member SendWait : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.SendWait keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="4bd00-359">要发送的击键字符串。</span><span class="sxs-lookup"><span data-stu-id="4bd00-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="4bd00-360">向活动应用程序发送给定的键，然后等待消息被处理。</span><span class="sxs-lookup"><span data-stu-id="4bd00-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd00-361">用于<xref:System.Windows.Forms.SendKeys.SendWait%2A>向活动应用程序发送击键或键组合, 并等待处理击键消息。</span><span class="sxs-lookup"><span data-stu-id="4bd00-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="4bd00-362">您可以使用此方法将键击发送到应用程序, 并等待由击键启动的任何进程完成。</span><span class="sxs-lookup"><span data-stu-id="4bd00-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="4bd00-363">如果其他应用程序必须先完成, 然后你的应用程序才能继续, 这一点可能很重要。</span><span class="sxs-lookup"><span data-stu-id="4bd00-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-364">由于没有用于激活其他应用程序的托管方法, 您可以在当前应用程序中使用此类, 也可以使用本机 Windows 方法 ( `FindWindow`如`SetForegroundWindow`和) 强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd00-365"><xref:System.Windows.Forms.SendKeys> 类已更新为 .NET Framework 3.0，从而可用于在 Windows Vista 上运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4bd00-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="4bd00-366">Windows Vista 增强的安全性（称为用户帐户控件或 UAC）可避免以前的实现按预期运行。</span><span class="sxs-lookup"><span data-stu-id="4bd00-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="4bd00-367"><xref:System.Windows.Forms.SendKeys> 类容易遭受某些开发人员不得不解决的计时问题。</span><span class="sxs-lookup"><span data-stu-id="4bd00-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="4bd00-368">更新后的实现仍然容易遇到计时问题，但速度稍微快一些，并且可能需要更改解决方法。</span><span class="sxs-lookup"><span data-stu-id="4bd00-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="4bd00-369"><xref:System.Windows.Forms.SendKeys> 类先尝试使用以前的实现，失败后再使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="4bd00-370">因此， <xref:System.Windows.Forms.SendKeys> 类在不同操作系统上的运行方式可能不同。</span><span class="sxs-lookup"><span data-stu-id="4bd00-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="4bd00-371">此外，当 <xref:System.Windows.Forms.SendKeys> 类使用新的实现时， <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法不会等到消息被处理后才将其发送至其他进程。</span><span class="sxs-lookup"><span data-stu-id="4bd00-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="4bd00-372">如果如论使用何种操作系统，你的应用程序均依赖于一致的行为，则可通过将以下应用程序设置添加至 app.config 文件强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用新的实现。</span><span class="sxs-lookup"><span data-stu-id="4bd00-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="4bd00-373">若要强制执行 <xref:System.Windows.Forms.SendKeys> 类以使用以前的实现，请改用 `"JournalHook"` 值。</span><span class="sxs-lookup"><span data-stu-id="4bd00-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="4bd00-374">用于调用此方法的非托管代码。</span><span class="sxs-lookup"><span data-stu-id="4bd00-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="4bd00-375">关联的枚举:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="4bd00-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
