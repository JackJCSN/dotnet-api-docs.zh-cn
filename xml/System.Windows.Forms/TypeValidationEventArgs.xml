<Type Name="TypeValidationEventArgs" FullName="System.Windows.Forms.TypeValidationEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa45ed34e6e357c43d7de71734d68f409e58e806" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70574758" /></Metadata><TypeSignature Language="C#" Value="public class TypeValidationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeValidationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TypeValidationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeValidationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeValidationEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TypeValidationEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当控件执行可选类型验证时发生此<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>事件。 <xref:System.Windows.Forms.MaskedTextBox> 仅当<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType>属性不`null`为，并且发生因果操作（如失去焦点的<xref:System.Windows.Forms.MaskedTextBox>控件）时，才会发生类型验证。 *类型验证*是将格式化输入字符串转换为<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>属性表示的类型的能力。 有关类型验证过程的详细信息，请参阅<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>事件。  
  
 如果为<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>实现了事件处理程序，则处理程序将接收类型<xref:System.Windows.Forms.TypeValidationEventArgs>为的参数。 此参数包含有关事件的信息，例如类型转换过程是否成功、验证类型等。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此类型。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
    <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
    <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
    <related type="Article" href="https://msdn.microsoft.com/library/df60565e-5447-4110-92a6-be1f6ff5faa3">演练：使用 MaskedTextBox 控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeValidationEventArgs (Type validatingType, bool isValidInput, object returnValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type validatingType, bool isValidInput, object returnValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TypeValidationEventArgs.#ctor(System.Type,System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validatingType As Type, isValidInput As Boolean, returnValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeValidationEventArgs(Type ^ validatingType, bool isValidInput, System::Object ^ returnValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TypeValidationEventArgs : Type * bool * obj * string -&gt; System.Windows.Forms.TypeValidationEventArgs" Usage="new System.Windows.Forms.TypeValidationEventArgs (validatingType, isValidInput, returnValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validatingType" Type="System.Type" />
        <Parameter Name="isValidInput" Type="System.Boolean" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validatingType"><see cref="T:System.Type" />，格式化输入字符串的验证目标类型。</param>
        <param name="isValidInput">一个 <see cref="T:System.Boolean" /> 值，指示格式化字符串是否成功转换为验证类型。</param>
        <param name="returnValue"><see cref="T:System.Object" />，是格式化字符串转换为目标类型的结果。</param>
        <param name="message">包含转换过程说明的 <see cref="T:System.String" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.TypeValidationEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TypeValidationEventArgs.%23ctor%2A>构造函数的参数用于初始化此类的对应的只读属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Property Cancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cancel : bool with get, set" Usage="System.Windows.Forms.TypeValidationEventArgs.Cancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示是否应取消事件的值。</summary>
        <value>如果事件应取消，并且 <see cref="T:System.Windows.Forms.MaskedTextBox" /> 控件应保留焦点，则为 <see langword="true" />；否则为 <see langword="false" />，以继续验证过程。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件恰好在<xref:System.Windows.Forms.Control.Validating>事件之前发生。 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>  
  
 `true` <xref:System.Windows.Forms.Control.Validating> <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType>在事件处理程序中<xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>将属性设置为将取消事件，使控件保持焦点，除非后续事件设置其属性的版本 <xref:System.Windows.Forms.MaskedTextBox> 到`false`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInput">
      <MemberSignature Language="C#" Value="public bool IsValidInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValidInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValidInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValidInput : bool" Usage="System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示格式化输入字符串是否成功转换为验证类型。</summary>
        <value>如果格式化输入字符串可以转换为 <see cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" /> 属性所指定的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性指示`Parse` <xref:System.Type>在由属性表示的中找到的方法是否成功。 <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A>  <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> 此类型必须包含`Parse`具有一个或两个以下签名的方法：  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
 `Parse`在<xref:System.Windows.Forms.MaskedTextBox> 控件 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> 引发事件前调用。 调用此方法时，将包含<xref:System.Windows.Forms.MaskedTextBox.Text%2A> <xref:System.Windows.Forms.MaskedTextBox>类的属性的内容，而不是提示字符。 如果成功，则返回转换后的对象;否则，它将`null`返回。  
  
 有关类型验证过程的详细信息，请参阅<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Windows.Forms.TypeValidationEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取描述转换过程的文本消息。</summary>
        <value>包含转换过程说明的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 验证过程需要将格式化的用户输入转换为<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>属性定义的类型。 <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A>属性包含转换过程的文本说明。 <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A>当转换失败时，主要非常有用，如<xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A>属性`false`值所示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取格式化输入字符串转换所生成的对象。</summary>
        <value>如果验证成功，则为 <see cref="T:System.Object" />，表示转换后的类型；否则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类型验证过程尝试将格式化输入字符串（不包括提示字符）转换为<xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A>属性指定的类型。 属性表示转换尝试的结果，它等效于<xref:System.Windows.Forms.MaskedTextBox>类的<xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A>方法返回的值。 <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A>  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValidatingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatingType : Type" Usage="System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取格式化输入字符串的验证目标类型。</summary>
        <value>转换过程的目标 <see cref="T:System.Type" />。 任何情况下，该值都不应是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当<xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.MaskedTextBox>类的属性不`null`为时，才会执行验证过程。 <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A>属性引用同一类型，该类型表示转换过程的目标类型。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件的发生。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>将<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>消息替换为多行或将<xref:System.Windows.Forms.TextBox>其追加到多行。  
  
 若要运行示例代码，请将其粘贴到包含名为<xref:System.Windows.Forms.MaskedTextBox> `MaskedTextBox1`的类型的实例的项目中。 然后，确保事件处理程序与<xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType>事件相关联。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      </Docs>
    </Member>
  </Members>
</Type>
