<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6563b7ff5fa530f4e8019a47d01f6cd53344c5d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70545908" /></Metadata><TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>为某控件提供功能，使其用作其他控件的父级。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例从<xref:System.Windows.Forms.ScrollableControl>类继承并<xref:System.Windows.Forms.IContainerControl>实现接口。 实现将添加到<xref:System.Windows.Forms.IContainerControl.ActiveControl%2A>属性<xref:System.Windows.Forms.IContainerControl.ActivateControl%2A>和方法。  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>在要为控件集合建立父级的类中实现此接口。 此接口的成员允许您激活子控件，或确定当前处于活动状态的控件。 在类中实现时， <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />将<see cref="T:System.Windows.Forms.Control" />作为参数，并激活指定的控件。 <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />属性激活或检索处于活动状态的控件。  
  
在大多数常见情况下，不需要直接实现此接口。 例如，如果您创建一个 Windows 控件库项目，则 Visual Studio 将为您生成一个初始类。 该类继承自<see cref="T:System.Windows.Forms.UserControl" />类，并<see cref="T:System.Windows.Forms.UserControl" />为你实现<see cref="T:System.Windows.Forms.IContainerControl" /> 。</para></block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active">被激活的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>激活指定的控件。</summary>
        <returns>如果成功激活了控件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例从<xref:System.Windows.Forms.ScrollableControl>类继承并<xref:System.Windows.Forms.IContainerControl>实现接口。 实现将添加到<xref:System.Windows.Forms.IContainerControl.ActiveControl%2A>属性<xref:System.Windows.Forms.IContainerControl.ActivateControl%2A>和方法。  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在类中实现时，此方法将激活指定<see cref="T:System.Windows.Forms.Control" />的。 控件必须为容器控件的子控件。</para></block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置该容器控件上的活动控件。</summary>
        <value><see cref="T:System.Windows.Forms.Control" />，当前在容器控件上为活动的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例从<xref:System.Windows.Forms.ScrollableControl>类继承并<xref:System.Windows.Forms.IContainerControl>实现接口。 实现将添加到<xref:System.Windows.Forms.IContainerControl.ActiveControl%2A>属性<xref:System.Windows.Forms.IContainerControl.ActivateControl%2A>和方法。  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在类中实现时，此属性将激活或检索容器控件上的活动控件。</para></block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>
