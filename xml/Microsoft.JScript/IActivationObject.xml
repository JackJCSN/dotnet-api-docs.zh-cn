<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73d1dbfaa2cdc6eb8168643f35b1b6f19b186426" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64434405" /></Metadata><TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <TypeSignature Language="F#" Value="type IActivationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2cfb3-101">定义用于解析范围的方法。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-101">Defines methods for resolving scope.</span></span> <span data-ttu-id="2cfb3-102">此接口由参与范围层次结构的所有对象实现。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-102">This interface is implemented by all objects that take part in a scope hierarchy.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj" Usage="iActivationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cfb3-103">在类中实现时，获取当前默认范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-103">When implemented in a class, gets the current default scope.</span></span> <span data-ttu-id="2cfb3-104"><see langword="with" /> 语句范围包含的对象，或全局范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="2cfb3-105">当前默认范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-105">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cfb3-106">要搜索的字段的名称。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-106">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="2cfb3-107">要搜索的词法级别。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-107">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="2cfb3-108">在类中实现时，通过搜索范围层次结构返回具有指定名称的字段。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="2cfb3-109">此方法只搜索由词法级别指定的范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-109">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="2cfb3-110">具有指定名称的 <see cref="T:System.Reflection.FieldInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cfb3-111">此方法适用于在编译时无法解析的字段。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="2cfb3-112">发生这种情况时`eval`表达式引用在外部作用域中的字段。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="2cfb3-113">因为`eval`表达式可以声明具有相同名称的本地字段，该字段不能为早期绑定到外部作用域字段。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="iActivationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cfb3-114">在类中实现时，通过以下方法来获取全局范围：搜索范围层次结构，直至找到一个包括静态变量的范围（例如模块范围）为止。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="2cfb3-115">全局范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-115">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cfb3-116">字段的名称。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-116">The name of the field.</span></span></param>
        <summary><span data-ttu-id="2cfb3-117">在类中实现时，获取具有指定名称的字段的局部声明。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="2cfb3-118">在编译时使用此声明来进行错误检查。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-118">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="2cfb3-119">字段的局部声明。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-119">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj" Usage="iActivationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cfb3-120">要搜索的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-120">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="2cfb3-121">要搜索的词法级别。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-121">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="2cfb3-122">在类中实现时，通过搜索范围层次结构来获取指定成员的值。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="2cfb3-123">此方法只搜索由词法级别指定的范围。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-123">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="2cfb3-124">成员 <paramref name="name" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-124">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cfb3-125">此方法适用于在编译时无法解析的成员。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="2cfb3-126">发生这种情况时`eval`表达式引用外部作用域中的成员。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="2cfb3-127">因为`eval`表达式可以声明具有相同名称的本地成员，该成员不能为早期绑定到外部作用域成员。</span><span class="sxs-lookup"><span data-stu-id="2cfb3-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>