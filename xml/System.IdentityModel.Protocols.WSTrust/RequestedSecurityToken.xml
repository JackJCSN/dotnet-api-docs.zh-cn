<Type Name="RequestedSecurityToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec428d390407f973ad0a14e322964435a005c055" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63985257" /></Metadata><TypeSignature Language="C#" Value="public class RequestedSecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestedSecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestedSecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestedSecurityToken" />
  <TypeSignature Language="F#" Value="type RequestedSecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示请求（发出）的安全标记。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 令牌的通常难以理解的标记请求者。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedSecurityToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedSecurityToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken token" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">一个 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示请求的安全令牌。</param>
        <summary>使用指定的发出标记初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 令牌颁发者通常使用此构造函数。  
  
 下表显示的属性的新实例。  
  
|Property|值|  
|--------------|-----------|  
|<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityToken%2A>|`token` 参数的值。|  
|<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityTokenXml%2A>|`null`。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="token" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedSecurityToken (System.Xml.XmlElement tokenAsXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement tokenAsXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenAsXml As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedSecurityToken(System::Xml::XmlElement ^ tokenAsXml);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken : System.Xml.XmlElement -&gt; System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken tokenAsXml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenAsXml" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="tokenAsXml">包含该请求的安全标志的 XML 表示形式的 <see cref="T:System.Xml.XmlElement" />。</param>
        <summary>使用标记 XML 初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接收方通常使用此构造函数。  
  
 下表显示的属性的新实例。  
  
|Property|值|  
|--------------|-----------|  
|<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityToken%2A>|`null`。|  
|<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityTokenXml%2A>|`tokenAsXml` 参数的值。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="tokenAsXml" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken SecurityToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken SecurityToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityToken As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ SecurityToken { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityToken : System.IdentityModel.Tokens.SecurityToken" Usage="System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 实例被创建时，获取相应的安全令牌。</summary>
        <value>一个 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，表示颁发的安全令牌。 如果用标记 XML 创建 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> ，则 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取已颁发的安全令牌时<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken>对象已通过使用令牌本身 (由<xref:System.IdentityModel.Tokens.SecurityToken>对象)。 属性的值是`null`如果使用标记 XML 创建实例。 在这种情况下，可以从访问令牌 XML<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityTokenXml%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement SecurityTokenXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement SecurityTokenXml" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityTokenXml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenXml As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ SecurityTokenXml { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenXml : System.Xml.XmlElement" Usage="System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityTokenXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当使用标记 XML 创建 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 实例时，获取相应的安全令牌 XML 表示形式。</summary>
        <value>包含该请求的安全标志的 XML 表示形式的 <see cref="T:System.Xml.XmlElement" />。 如果用 <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" /> 对象创建 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 实例，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取已颁发的安全令牌时<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken>令牌 XML。 属性的值是`null`如果使用令牌本身创建实例 (由<xref:System.IdentityModel.Tokens.SecurityToken>对象)。 在这种情况下，可以从访问令牌<xref:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken.SecurityToken%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>