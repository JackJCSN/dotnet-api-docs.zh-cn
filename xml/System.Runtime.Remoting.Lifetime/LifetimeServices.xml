<Type Name="LifetimeServices" FullName="System.Runtime.Remoting.Lifetime.LifetimeServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f858c701b8e91bb960afbce09b207fd4ec670897" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64113435" /></Metadata><TypeSignature Language="C#" Value="public sealed class LifetimeServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LifetimeServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeServices sealed" />
  <TypeSignature Language="F#" Value="type LifetimeServices = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="415f6-101">控制 .NET 远程处理生存期服务。</span><span class="sxs-lookup"><span data-stu-id="415f6-101">Controls the.NET remoting lifetime services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415f6-102">分布式的垃圾回收是负责控制的服务器应用程序的生存期，并为它们的生存期结束时将其删除。</span><span class="sxs-lookup"><span data-stu-id="415f6-102">Distributed garbage collection is responsible for controlling the lifetimes of server applications, and for deleting them when their lifetimes have expired.</span></span> <span data-ttu-id="415f6-103">传统上，分布式的垃圾回收使用引用计数和 ping 进行控制。</span><span class="sxs-lookup"><span data-stu-id="415f6-103">Traditionally, distributed garbage collection uses reference counts and pinging for control.</span></span> <span data-ttu-id="415f6-104">这适用于有几个客户端，每个对象，但也有成千上万的客户端每个每个对象时不起作用。</span><span class="sxs-lookup"><span data-stu-id="415f6-104">This works well when there are a few clients per object, but does not work well when there are thousands of clients per each object.</span></span> <span data-ttu-id="415f6-105">当客户端的数量增加时，生存期服务可采用传统分布式垃圾回收器和扩展的函数。</span><span class="sxs-lookup"><span data-stu-id="415f6-105">The lifetime service can assume the function of a traditional distributed garbage collector, and scales well when the number of clients increases.</span></span>  
  
 <span data-ttu-id="415f6-106">生存期服务将租约与每个远程激活的对象相关联。</span><span class="sxs-lookup"><span data-stu-id="415f6-106">The lifetime service associates a lease with each remotely activated object.</span></span> <span data-ttu-id="415f6-107">租约过期时，删除的对象。</span><span class="sxs-lookup"><span data-stu-id="415f6-107">When the lease expires, the object is removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="415f6-108">此类，可以链接要求。</span><span class="sxs-lookup"><span data-stu-id="415f6-108">This class makes a link demand.</span></span> <span data-ttu-id="415f6-109">如果直接调用方没有基础结构权限，将引发 SecurityException。</span><span class="sxs-lookup"><span data-stu-id="415f6-109">A SecurityException is thrown if the immediate caller does not have infrastructure permission.</span></span> <span data-ttu-id="415f6-110">请参阅[链接要求](~/docs/framework/misc/link-demands.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="415f6-110">See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CPP/server.cpp#2)]
 [!code-csharp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CS/server.cs#2)]
 [!code-vb[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/VB/server.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="415f6-111">用于操作的基础结构代码。</span><span class="sxs-lookup"><span data-stu-id="415f6-111">for operating with infrastructure code.</span></span> <span data-ttu-id="415f6-112">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="415f6-112">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission Value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LifetimeServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LifetimeServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Do not create instances of the LifetimeServices class.  Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="415f6-113">创建 <see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="415f6-113">Creates an instance of <see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseManagerPollTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseManagerPollTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseManagerPollTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseManagerPollTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseManagerPollTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseManagerPollTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415f6-114">获取或设置每次激活租约管理器以清除到期租约之间的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="415f6-114">Gets or sets the time interval between each activation of the lease manager to clean up expired leases.</span></span></summary>
        <value><span data-ttu-id="415f6-115">租约管理器检查到期租约后休眠的默认时间。</span><span class="sxs-lookup"><span data-stu-id="415f6-115">The default amount of time the lease manager sleeps after checking for expired leases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415f6-116">当前的属性定义的租约管理器将变为活动状态，以清除到期租约的频率。</span><span class="sxs-lookup"><span data-stu-id="415f6-116">The current property defines the frequency at which the lease manager becomes active to clean up expired leases.</span></span> <span data-ttu-id="415f6-117">例如，如果<xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A>设置为 100 秒租约列表检查其中是否存在清理和续订每隔 100 秒。</span><span class="sxs-lookup"><span data-stu-id="415f6-117">For example, if <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> is set to 100 seconds, the lease list is inspected for cleanups and renewals every 100 seconds.</span></span>  
  
 <span data-ttu-id="415f6-118">默认值<xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A>属性值为 10 秒。</span><span class="sxs-lookup"><span data-stu-id="415f6-118">The default value of the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> property is 10 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="415f6-119">在调用堆栈上部，至少有一个调用方没有配置远程处理类型和通道的权限。</span><span class="sxs-lookup"><span data-stu-id="415f6-119">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="415f6-120">仅在设置该属性值时才会引发此异常。</span><span class="sxs-lookup"><span data-stu-id="415f6-120">This exception is thrown only when setting the property value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="415f6-121">用于配置的远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="415f6-121">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="415f6-122">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="415f6-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LeaseTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415f6-123">获取或设置 <see cref="T:System.AppDomain" /> 的初始租约时间范围。</span><span class="sxs-lookup"><span data-stu-id="415f6-123">Gets or sets the initial lease time span for an <see cref="T:System.AppDomain" />.</span></span></summary>
        <value><span data-ttu-id="415f6-124">可以在 <see cref="T:System.TimeSpan" /> 中拥有租约的对象的初始租约 <see cref="T:System.AppDomain" />。</span><span class="sxs-lookup"><span data-stu-id="415f6-124">The initial lease <see cref="T:System.TimeSpan" /> for objects that can have leases in the <see cref="T:System.AppDomain" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415f6-125">默认租约时间跨度为 5 分钟。</span><span class="sxs-lookup"><span data-stu-id="415f6-125">The default lease time span is 5 minutes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="415f6-126">在调用堆栈上部，至少有一个调用方没有配置远程处理类型和通道的权限。</span><span class="sxs-lookup"><span data-stu-id="415f6-126">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="415f6-127">仅在设置该属性值时才会引发此异常。</span><span class="sxs-lookup"><span data-stu-id="415f6-127">This exception is thrown only when setting the property value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="415f6-128">用于配置的远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="415f6-128">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="415f6-129">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="415f6-129">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public static TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415f6-130">获取或设置每当调用到达服务器对象时延续租约的时间。</span><span class="sxs-lookup"><span data-stu-id="415f6-130">Gets or sets the amount of time by which the lease is extended every time a call comes in on the server object.</span></span></summary>
        <value><span data-ttu-id="415f6-131">每次调用后延续当前 <see cref="T:System.TimeSpan" /> 中的生存期租约的 <see cref="T:System.AppDomain" />。</span><span class="sxs-lookup"><span data-stu-id="415f6-131">The <see cref="T:System.TimeSpan" /> by which a lifetime lease in the current <see cref="T:System.AppDomain" /> is extended after each call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415f6-132">通过该扩展的生存期租约的默认值续订时间为 2 分钟。</span><span class="sxs-lookup"><span data-stu-id="415f6-132">The default renewal time by which a lifetime lease is extended is 2 minutes.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="415f6-133">在调用堆栈上部，至少有一个调用方没有配置远程处理类型和通道的权限。</span><span class="sxs-lookup"><span data-stu-id="415f6-133">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="415f6-134">仅在设置该属性值时才会引发此异常。</span><span class="sxs-lookup"><span data-stu-id="415f6-134">This exception is thrown only when setting the property value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="415f6-135">用于配置的远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="415f6-135">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="415f6-136">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="415f6-136">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415f6-137">获取或设置租约管理器等待主办方返回租约续订时间的时间。</span><span class="sxs-lookup"><span data-stu-id="415f6-137">Gets or sets the amount of time the lease manager waits for a sponsor to return with a lease renewal time.</span></span></summary>
        <value><span data-ttu-id="415f6-138">初始主办关系超时。</span><span class="sxs-lookup"><span data-stu-id="415f6-138">The initial sponsorship time-out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415f6-139">主办方调用已超时的默认时间为 2 分钟。</span><span class="sxs-lookup"><span data-stu-id="415f6-139">The default time until a call to a sponsor is timed out is 2 minutes.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="415f6-140">在调用堆栈上部，至少有一个调用方没有配置远程处理类型和通道的权限。</span><span class="sxs-lookup"><span data-stu-id="415f6-140">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="415f6-141">仅在设置该属性值时才会引发此异常。</span><span class="sxs-lookup"><span data-stu-id="415f6-141">This exception is thrown only when setting the property value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="415f6-142">用于配置的远程处理基础结构。</span><span class="sxs-lookup"><span data-stu-id="415f6-142">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="415f6-143">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="415f6-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>